// automatically generated by the FlatBuffers compiler, do not modify
// noinspection UnnecessaryLocalVariableJS,JSUnusedGlobalSymbols,ES6PreferShortImport,DuplicatedCode

import * as flatbuffers from 'flatbuffers';


export enum EVersion {
  None = 0,
  AppVersion = 84
}

export enum EMessageType {
  None = 0,
  CQ_UserAccountLogin = 1,
  SA_UserAccountLogin = 2,
  CQ_HeroChange = 3,
  SA_HeroChange = 4,
  CQ_Inventory = 5,
  SA_Inventory = 6,
  SN_Inventory = 7,
  SN_HeroExpire = 8,
  CQ_OpenItemBox = 11,
  SA_OpenItemBox = 12,
  CQ_TreasureBoxList = 13,
  SA_TreasureBoxList = 14,
  CQ_TreasureBoxOpen = 15,
  SA_TreasureBoxOpen = 16,
  CQ_CraftMake = 21,
  SA_CraftMake = 22,
  CQ_WonderStoreList = 23,
  SA_WonderStoreList = 24,
  CQ_WonderStoreBuy = 25,
  SA_WonderStoreBuy = 26,
  CQ_CollectionList = 33,
  SA_CollectionList = 34,
  SN_CollectionList = 35,
  CQ_CollectionReward = 36,
  SA_CollectionReward = 37,
  CQ_HeroList = 44,
  SA_HeroList = 45,
  CQ_HeroSkinEquipChange = 46,
  SA_HeroSkinEquipChange = 47,
  CQ_HeroSkinList = 48,
  SA_HeroSkinList = 49,
  CQ_HeroSkinColorChange = 50,
  SA_HeroSkinColorChange = 51,
  CQ_HeroSkinPresetList = 52,
  SA_HeroSkinPresetList = 53,
  CQ_HeroSkinPresetSave = 54,
  SA_HeroSkinPresetSave = 55,
  CQ_PetList = 56,
  SA_PetList = 57,
  CQ_PetFeed = 60,
  SA_PetFeed = 61,
  CQ_PetCombine = 62,
  SA_PetCombine = 63,
  CQ_PetEquip = 64,
  SA_PetEquip = 65,
  CQ_VehicleEquipSlot = 66,
  SA_VehicleEquipSlot = 67,
  CQ_RpgAttributeList = 68,
  SA_RpgAttributeList = 69,
  CQ_RpgAttributeLearn = 70,
  SA_RpgAttributeLearn = 71,
  CQ_ArtifactList = 72,
  SA_ArtifactList = 73,
  CQ_ArtifactEnhance = 74,
  SA_ArtifactEnhance = 75,
  CQ_InstantGuideList = 88,
  SA_InstantGuideList = 89,
  CQ_InstantGuideSave = 90,
  SA_InstantGuideSave = 91,
  CQ_RpgStart = 92,
  SA_RpgStart = 93,
  CQ_RpgRoomStart = 96,
  SA_RpgRoomStart = 97,
  CQ_RpgRoomEnd = 98,
  SA_RpgRoomEnd = 99,
  CQ_RpgOpenBox = 100,
  SA_RpgOpenBox = 101,
  CQ_RpgEnd = 102,
  SA_RpgEnd = 103,
  CQ_RpgStartChallenge = 104,
  SA_RpgStartChallenge = 105,
  CQ_PingLog = 106,
  SA_PingLog = 107,
  CQ_GetOpenWorldInfo = 108,
  SA_GetOpenWorldInfo = 109,
  SN_EnterMultiMode = 110,
  CQ_ArtifactDeckList = 111,
  SA_ArtifactDeckList = 112,
  CQ_ArtifactDeckSave = 113,
  SA_ArtifactDeckSave = 114,
  CQ_RankingList = 117,
  SA_RankingList = 118,
  CQ_MissionList = 119,
  SA_MissionList = 120,
  SN_MissionList = 121,
  CQ_MissionAddCount = 122,
  SA_MissionAddCount = 123,
  CQ_AssetList = 124,
  SA_AssetList = 125,
  SN_AssetList = 126,
  CQ_EntitlementList = 127,
  SA_EntitlementList = 128,
  CQ_EntitlementReward = 129,
  SA_EntitlementReward = 130,
  CQ_HeroBattleLevelReward = 133,
  SA_HeroBattleLevelReward = 134,
  CQ_GachaShop = 137,
  SA_GachaShop = 138,
  SN_NewMail = 139,
  CQ_MailList = 145,
  SA_MailList = 146,
  CQ_MailHistory = 147,
  SA_MailHistory = 148,
  CQ_MailReceive = 149,
  SA_MailReceive = 150,
  CQ_MailReceiveAll = 151,
  SA_MailReceiveAll = 152,
  CQ_SeasonPassList = 159,
  SA_SeasonPassList = 160,
  SN_SeasonPassExp = 161,
  CQ_SeasonPassRecvReward = 162,
  SA_SeasonPassRecvReward = 163,
  CQ_SeasonPassBuyExp = 164,
  SA_SeasonPassBuyExp = 165,
  CQ_GetOpenWorldInfoEditor = 170,
  SA_GetOpenWorldInfoEditor = 171,
  CQ_AttendanceList = 172,
  SA_AttendanceList = 173,
  CQ_AttendanceRecvReward = 174,
  SA_AttendanceRecvReward = 175,
  CQ_PartyInviteUser = 190,
  SA_PartyInviteUser = 191,
  SN_PartyInviteUser = 192,
  CQ_PartyInviteAnswer = 193,
  SA_PartyInviteAnswer = 194,
  SN_PartyInviteAnswer = 195,
  SN_PartyJoinAccept = 196,
  SN_PartyJoinReject = 197,
  SN_PartyWelcomeNewUser = 198,
  CQ_PartyLeaveMember = 199,
  SA_PartyLeaveMember = 200,
  SN_PartyLeaveMember = 201,
  CQ_PartyKickMember = 202,
  SA_PartyKickMember = 203,
  SN_PartyKickMember = 204,
  CQ_PartyChangeMaster = 205,
  SA_PartyChangeMaster = 206,
  SN_PartyChangeMaster = 207,
  CQ_CustomGameCreateRoom = 208,
  SA_CustomGameCreateRoom = 209,
  CQ_CustomGameInviteUser = 210,
  SA_CustomGameInviteUser = 211,
  SN_CustomGameInviteUser = 212,
  CQ_CustomGameInviteAnswer = 213,
  SA_CustomGameInviteAnswer = 214,
  SN_CustomGameInviteAnswer = 215,
  SN_CustomGameJoinAccept = 216,
  SN_CustomGameJoinReject = 217,
  SN_CustomGameWelcomeNewUser = 218,
  CQ_CustomGameLeaveMember = 219,
  SA_CustomGameLeaveMember = 220,
  SN_CustomGameLeaveMember = 221,
  CQ_CustomGameKickMember = 222,
  SA_CustomGameKickMember = 223,
  SN_CustomGameKickMember = 224,
  CQ_CustomGameChangeFollow = 225,
  SA_CustomGameChangeFollow = 226,
  CQ_CustomGameFollowMaster = 227,
  SA_CustomGameFollowMaster = 228,
  SN_CustomGameFollowMaster = 229,
  CQ_CustomGameChangeSlotNo = 230,
  SA_CustomGameChangeSlotNo = 231,
  SN_CustomGameChangeSlotNo = 232,
  CQ_CustomGameAddAI = 233,
  SA_CustomGameAddAI = 234,
  SN_CustomGameBrokenRoom = 235,
  CQ_GameStart = 239,
  SA_GameStart = 240,
  CQ_MatchingStartMatch = 241,
  SA_MatchingStartMatch = 242,
  SN_MatchingStartMatch = 243,
  CQ_MatchingCancelMatch = 244,
  SA_MatchingCancelMatch = 245,
  SN_MatchingCancelMatch = 246,
  CQ_MatchingStartCustomMatch = 247,
  SA_MatchingStartCustomMatch = 248,
  CQ_FriendChannelMove = 249,
  SA_FriendChannelMove = 250,
  CQ_VehicleRecall = 261,
  SA_VehicleRecall = 262,
  CQ_Logout = 265,
  SA_Logout = 266,
  CQ_BiskitLog = 267,
  SA_BiskitLog = 268,
  SN_UncheaterCookie = 269,
  CQ_UncheaterVerifyCookie = 270,
  SA_UncheaterVerifyCookie = 271,
  CQ_UncheaterHackDetect = 272,
  SA_UncheaterHackDetect = 273,
  CQ_FriendChatRoomList = 282,
  SA_FriendChatRoomList = 283,
  CQ_FriendChatMessageList = 284,
  SA_FriendChatMessageList = 285,
  CQ_FriendChatSend = 286,
  SA_FriendChatSend = 287,
  SN_FriendChatSend = 288,
  CQ_FriendChatDelete = 289,
  SA_FriendChatDelete = 290,
  SN_FriendChatDelete = 291,
  CQ_FriendList = 292,
  SA_FriendList = 293,
  CQ_FriendRequestList = 294,
  SA_FriendRequestList = 295,
  CQ_FriendRequest = 296,
  SA_FriendRequest = 297,
  SN_FriendRequest = 298,
  CQ_FriendAccept = 299,
  SA_FriendAccept = 300,
  SN_FriendAccept = 301,
  CQ_FriendReject = 302,
  SA_FriendReject = 303,
  CQ_FriendDelete = 304,
  SA_FriendDelete = 305,
  SN_FriendDelete = 306,
  SN_FriendState = 307,
  CQ_ProfileList = 308,
  SA_ProfileList = 309,
  CQ_ProfileChange = 312,
  SA_ProfileChange = 313,
  CQ_UserDeviceProviderChange = 314,
  SA_UserDeviceProviderChange = 315,
  CQ_AchievementList = 316,
  SA_AchievementList = 317,
  SN_AchievementList = 318,
  CQ_AchievementReward = 319,
  SA_AchievementReward = 320,
  CQ_WeaponCategoryList = 321,
  SA_WeaponCategoryList = 322,
  CQ_WeaponCategoryUpgrade = 323,
  SA_WeaponCategoryUpgrade = 324,
  CQ_NoticeBannerList = 327,
  SA_NoticeBannerList = 328,
  CQ_NoticeBannerMessage = 329,
  SA_NoticeBannerMessage = 330,
  CQ_LastPlayInfo = 332,
  SA_LastPlayInfo = 333,
  CQ_GlitchStoreHistory = 334,
  SA_GlitchStoreHistory = 335,
  SN_GlitchStoreHistory = 336,
  CQ_GlitchStoreBuy = 337,
  SA_GlitchStoreBuy = 338,
  CQ_PetLock = 341,
  SA_PetLock = 342,
  CQ_RankingMyInfo = 343,
  SA_RankingMyInfo = 344,
  CQ_RecommendUserList = 345,
  SA_RecommendUserList = 346,
  CQ_GoldClashTutorialComplete = 377,
  SA_GoldClashTutorialComplete = 378,
  CQ_GuideMissionList = 379,
  SA_GuideMissionList = 380,
  SN_GuideMissionList = 381,
  CQ_GuideMissionReward = 382,
  SA_GuideMissionReward = 383,
  CQ_GuideMissionStepReward = 384,
  SA_GuideMissionStepReward = 385,
  CQ_GuideMissionComplete = 386,
  SA_GuideMissionComplete = 387,
  CQ_ModifyNickName = 388,
  SA_ModifyNickName = 389,
  SN_ModifyNickName = 390,
  CQ_CharacterPassBuyHero = 391,
  SA_CharacterPassBuyHero = 392,
  CQ_OpenWorldPositionChange = 399,
  SA_OpenWorldPositionChange = 400,
  SN_MatchingRequireAcceptance = 401,
  CQ_MatchingAcceptance = 402,
  SA_MatchingAcceptance = 403,
  SN_MatchingAccepted = 404,
  SN_MatchingRejected = 405,
  SN_MatchingReMatched = 406,
  CQ_RpgTutorialComplete = 407,
  SA_RpgTutorialComplete = 408,
  CQ_HeroAccessoryChange = 411,
  SA_HeroAccessoryChange = 412,
  CQ_HeroEyeColorChange = 413,
  SA_HeroEyeColorChange = 414,
  CQ_HeroSkinPresetSlotBuy = 415,
  SA_HeroSkinPresetSlotBuy = 416,
  CQ_HeroSkinPresetLoad = 417,
  SA_HeroSkinPresetLoad = 418,
  CQ_HeroSkinPresetNameChange = 419,
  SA_HeroSkinPresetNameChange = 420,
  CQ_ArtifactDeckSlotBuy = 421,
  SA_ArtifactDeckSlotBuy = 422,
  CQ_SeasonPassDirectionOff = 425,
  SA_SeasonPassDirectionOff = 426,
  CQ_SilverMedalStoreList = 431,
  SA_SilverMedalStoreList = 432,
  CQ_SilverMedalStoreBuy = 433,
  SA_SilverMedalStoreBuy = 434,
  CQ_PenaltyList = 435,
  SA_PenaltyList = 436,
  CQ_PenaltyReport = 437,
  SA_PenaltyReport = 438,
  SN_PenaltyReport = 439,
  SN_MatchingDelayMatch = 440,
  CQ_NicePlayer = 442,
  SA_NicePlayer = 443,
  CQ_NicePlayerReport = 444,
  SA_NicePlayerReport = 445,
  CQ_ExpressionList = 446,
  SA_ExpressionList = 447,
  CQ_ExpressionPresetList = 448,
  SA_ExpressionPresetList = 449,
  CQ_ExpressionPresetSave = 450,
  SA_ExpressionPresetSave = 451,
  SN_HeroBattleLevelUp = 452,
  CQ_PlayRecordGoldClashList = 464,
  SA_PlayRecordGoldClashList = 465,
  CQ_PlayRecordGoldClashListOther = 466,
  SA_PlayRecordGoldClashListOther = 467,
  CQ_PlayRecordRpgList = 472,
  SA_PlayRecordRpgList = 473,
  CQ_PlayRecordRpgListOther = 474,
  SA_PlayRecordRpgListOther = 475,
  CQ_UserIntroduceChange = 480,
  SA_UserIntroduceChange = 481,
  CQ_UserAccountOther = 482,
  SA_UserAccountOther = 483,
  CQ_PenaltyListOther = 484,
  SA_PenaltyListOther = 485,
  CQ_NicePlayerOther = 486,
  SA_NicePlayerOther = 487,
  CQ_WonderCubeList = 488,
  SA_WonderCubeList = 489,
  CQ_WonderCubeReward = 490,
  SA_WonderCubeReward = 491,
  CQ_ADVList = 492,
  SA_ADVList = 493,
  CQ_ADVWatchingStart = 494,
  SA_ADVWatchingStart = 495,
  CQ_ADVWatchingEnd = 496,
  SA_ADVWatchingEnd = 497,
  CQ_ADVWatchingReward = 498,
  SA_ADVWatchingReward = 499,
  CQ_ADVExtraReward = 500,
  SA_ADVExtraReward = 501,
  CQ_EventStoreList = 502,
  SA_EventStoreList = 503,
  CQ_EventStoreBuy = 504,
  SA_EventStoreBuy = 505,
  CQ_IncubationList = 506,
  SA_IncubationList = 507,
  CQ_IncubationBuy = 508,
  SA_IncubationBuy = 509,
  CQ_IncubationStart = 510,
  SA_IncubationStart = 511,
  CQ_IncubationReduceTime = 512,
  SA_IncubationReduceTime = 513,
  CQ_IncubationEnd = 514,
  SA_IncubationEnd = 515,
  SN_TimeSync = 516,
  CQ_BillingCheck = 517,
  SA_BillingCheck = 518,
  SN_BillingComplete = 519,
  SN_SubscriptionStateChange = 520,
  SN_CouponComplete = 522,
  CQ_HeroExperienceTicketUse = 523,
  SA_HeroExperienceTicketUse = 524,
  CQ_HeroExperienceTicketExchange = 525,
  SA_HeroExperienceTicketExchange = 526,
  SN_ResetMissionList = 529,
  SN_WonderCubeNew = 530,
  CQ_EnterTrainingRoom = 531,
  SA_EnterTrainingRoom = 532,
  CQ_EnterRpgCamp = 533,
  SA_EnterRpgCamp = 534,
  CQ_EnterGoldClashTutorial = 535,
  SA_EnterGoldClashTutorial = 536,
  CQ_EnterRpgTutorial = 537,
  SA_EnterRpgTutorial = 538,
  CQ_WonderCubeDelete = 539,
  SA_WonderCubeDelete = 540,
  CQ_ChattingMessage = 50000,
  SA_ChattingMessage = 50001,
  SN_ChattingMessage = 50002,
  SN_Notice = 50003,
  CQ_ChattingChannelJoin = 50004,
  SA_ChattingChannelJoin = 50005,
  CQ_ChattingChannelLeave = 50006,
  SA_ChattingChannelLeave = 50007,
  CQ_CheatKey = 60000,
  SA_CheatKey = 60001,
  CQ_CheatSendSystemMail = 60002,
  SA_CheatSendSystemMail = 60003,
  CQ_CheatSendOpMail = 60004,
  SA_CheatSendOpMail = 60005,
  CQ_CheatSeasonPassBuy = 60006,
  SA_CheatSeasonPassBuy = 60007,
  CQ_CheatChangeUserState = 60008,
  SA_CheatChangeUserState = 60009,
  CQ_CheatPenaltySet = 60010,
  SA_CheatPenaltySet = 60011
}

export enum EResultType {
  Success = 0,
  InternalError = 1,
  StillBeingProcessed = 2,
  InvalidParameter = 3,
  NotExistAccount = 4,
  InvalidMessageID = 5,
  TableError = 6,
  NotExistAsset = 7,
  NotExistTargetUser = 9,
  DuplicateLogin = 10,
  NotActiveTargetUser = 11,
  Maintenance = 12,
  ContentBeingPrepared = 13,
  AccountHasBeenBlocked = 14,
  InvalidNickNameLength = 15,
  InvalidNickName = 16,
  DuplicateNickName = 17,
  NotEnoughWonderCoin = 18,
  NotEnoughCrystal = 19,
  NotEnoughGold = 20,
  NotEnoughGoldMedal = 21,
  NotEnoughSilverMedal = 22,
  NotEnoughCubeKey = 23,
  NotEnoughMemoryCard = 24,
  NotActivityTable = 26,
  StoveNotExistMemberNo = 27,
  StoveMemberIDDoesNotExist = 28,
  StoveNickNameAlreadyExist = 29,
  StoveMemberIsBan = 30,
  StoveFailToGetNickNameNumber = 31,
  StoveCharacterIDDoseNotExist = 32,
  StoveNickNameIsBlank = 33,
  StoveGameIDIsNotValid = 34,
  StoveArgumentIsWrong = 35,
  StoveAPIAccessTokenInvalid = 37,
  StoveInvalidUserToken = 38,
  StoveExpireToken = 39,
  StoveInvalidGameID = 40,
  NotExistBillingReceipt = 100,
  AlreadyProvidedBillingProduct = 101,
  NotExistCouponReceipt = 102,
  AlreadyReceiveAchievementReward = 150,
  NotEnoughAchievementCount = 151,
  UnReceiveAchievementRewardsRemain = 152,
  InvalidArtifactDeckCount = 200,
  InvalidArtifactDeckArtifactCount = 201,
  InvalidArtifactID = 202,
  ConflictArtifactSet = 203,
  ArtifactIsMaxEnhance = 204,
  NotEnoughArtifactCount = 205,
  ArtifactMaxStack = 206,
  NotAvailableArtifactDeckSlot = 207,
  NotExistHeroSkin = 250,
  NotExistHero = 251,
  AlreadyHasHero = 252,
  InvalidColor = 253,
  ColorNotChange = 254,
  InvalidHero = 255,
  NotIncludesWeaponList = 256,
  AlreadyMaxSkinPresetCount = 257,
  InvalidSkinPresetSlotID = 258,
  NotExistHeroSkinPresetData = 259,
  NotEnoughHeroBattleLevel = 260,
  AlreadyRewardedHeroBattleLevel = 261,
  ExpireHero = 262,
  NotExistPreviousHero = 263,
  ExperienceHeroUsageTimeIsLeft = 264,
  ThisItemCanNoLongerBePossessed = 265,
  NotExistItem = 300,
  InvalidItemAddCount = 311,
  InvalidItemSubCount = 312,
  InvalidItemType = 313,
  InvalidItemCategory = 314,
  InvalidItemGrade = 315,
  NotExistMission = 350,
  AlreadyReceiveMissionReward = 351,
  NotEnoughMissionCount = 352,
  HaveNotCompletedTheGuideMission = 353,
  AlreadyReceiveGuideMissionReward = 354,
  NotEnoughGuideMissionCompleteCount = 355,
  HaveNotReceivedPreviousMissionReward = 356,
  AlreadyCompletedTheGuideMission = 357,
  NotExistPet = 400,
  PetBagIsFull = 411,
  NoMoreFeedFood = 412,
  HaveEnoughFamiliarity = 413,
  WearingPetCannotDoThat = 414,
  NotEnoughPetLike = 415,
  InvalidPetGrade = 416,
  LockedPetCannotBeUsed = 417,
  SpecialLevelBoxIsFull = 450,
  InvalidRpgState = 451,
  InvalidRpgLevelID = 452,
  AlreadyRpgTutorialComplete = 453,
  NotExistParty = 500,
  IsFullPartyMember = 501,
  AlreadyHasParty = 502,
  NotExistPartyMember = 503,
  IsNotPartyMaster = 504,
  InvalidPartyID = 505,
  InviteCountLimit = 506,
  AlreadyInviteUser = 507,
  TooManyInviteSameUser = 508,
  InvalidInviteCode = 509,
  UserStateNotInvite = 510,
  UserStateNotPartyFunction = 511,
  AlreadyHasOtherParty = 512,
  NotExistAttendance = 550,
  InvalidAttendanceDay = 551,
  AlreadyReceiveAttendanceReward = 552,
  NotAvailableForPurchaseStoreItem = 601,
  NotAvailableForPurchaseWonderStoreItem = 602,
  NotExistWonderStoreInfo = 603,
  NotExistWonderStorePreviousGroupProduct = 604,
  InvalidWonderStoreBuyCount = 605,
  NeedWonderStoreRefresh = 606,
  WonderStoreProductBuyableTimeHasPassedNeedRefresh = 607,
  AlreadyHasSubscriptionProduct = 608,
  InvalidWonderStoreBillingProduct = 609,
  InvalidWonderStore = 610,
  DifferenceReceiptPurchaseProduct = 611,
  AlreadyHasSeasonPass = 650,
  NotExistSeasonPass = 651,
  NotEnoughSeasonPassPoint = 652,
  AlreadyReceiveSeasonPassReward = 653,
  NotAPurchaseableSeasonPassLevel = 654,
  NeedBuyPaidSeasonpass = 655,
  IsNotCraftPeriod = 700,
  NotEnoughCraftItem = 701,
  AlreadyHasVehicle = 702,
  InvalidSilverMedalStoreBuyCount = 750,
  NeedSilverMedalStoreRefresh = 751,
  NotExistEventStoreInfo = 752,
  InvalidEventStoreBuyCount = 753,
  NeedEventStoreRefresh = 754,
  AlreadyHasStoreProduct = 755,
  AlreadyHasEntitlement = 800,
  NotExistEntitlement = 801,
  AlreadyHasALotOfFriends = 900,
  TheOtherPersonAlreadyHasManyFriends = 901,
  NotExistFriend = 902,
  AlreadyToMeFriend = 903,
  YouAlreadyFriend = 904,
  FriendChannelMoveCantMove = 905,
  FriendChannelMoveFull = 906,
  FriendChannelMoveSame = 907,
  AlreadyOpenTreasureBox = 950,
  NotExistsTreasureBox = 951,
  InvalidAttributeLearnLevel = 1050,
  UnLearnableAttribute = 1051,
  AlreadyAttributeMaxLevel = 1052,
  NotExistMail = 1100,
  ExpireMail = 1101,
  InvalidMailState = 1102,
  MailRewardPossessionLimit = 1103,
  AlreadyMatchingStart = 1150,
  NotEnoughTeamMembers = 1151,
  LotofTeamMembers = 1152,
  InvalidTeamMemberCount = 1153,
  InvalidMatchingSessionState = 1154,
  InvalidMatchTicket = 1155,
  MatchCancelUnknown = 1156,
  MatchCancelMaster = 1157,
  MatchCancelUser = 1158,
  NotOpenGoldClash = 1159,
  InvalidUserState = 1160,
  InvalidUserStateOnGoing = 1161,
  InvalidUserStateChange = 1162,
  InvalidUserStateNotMathcing = 1163,
  MatchCancelTimeOut = 1164,
  InvalidProfileBGType = 1250,
  InvalidProfileIconType = 1251,
  NotExistProfileBG = 1252,
  NotExistProfileIcon = 1253,
  NotUnlockContents = 1307,
  NotExistWeaponCategory = 1350,
  AlreadyWeaponCategoryMaxLevel = 1351,
  AlreadyHasCustomGame = 1400,
  CustomGameFollowOff = 1401,
  IsNotCustomGameMaster = 1402,
  InvalidCustomGameID = 1403,
  IsFullCustomGameMember = 1404,
  NotExistCustomGameMember = 1405,
  ConflictSlotNo = 1406,
  NotExistsAI = 1407,
  AlreadyHasOtherCustomGame = 1408,
  AlreadyBuyGlitchStore = 1450,
  GlitchStoreCanOnlyBuyItAtTheCamp = 1451,
  NotYetAvailableForPurchase = 1452,
  ChatBan = 1500,
  MatchBan = 1501,
  MatchDelay = 1502,
  NotExistExpression = 1600,
  DuplicateExpressionPresetSlot = 1601,
  InvalidExpressionPresetSlot = 1602,
  IsEmptyWonderCubeSlotID = 1652,
  IsFullWonderCubeSlot = 1653,
  AlreadyChangedWonderCube = 1654,
  NotExistADV = 1700,
  AlreadyADVWatched = 1701,
  AlreadyADVRewarded = 1702,
  NeedADVReset = 1703,
  NotEnoughADVWatchingCount = 1704,
  NotReceivedPreviousADVCountReward = 1705,
  NotMatchedADVWatchingID = 1706,
  InvalidADVWatched = 1707,
  NotExistADVSubscription = 1708,
  AlreadyExistsIncubatorID = 1750,
  NotExistsIncubatorID = 1751,
  NotEnoughPetEgg = 1752,
  AlreadyExistsPetEgg = 1753,
  IncubateCountLimit = 1754,
  NotExistsPetEgg = 1755,
  NotYetIncubationEndTime = 1756,
  CommonErrorMax = 29999,
  NotAuthorized = 30000,
  InvalidAppVersion = 30001,
  IsNotLoaded_ArtifactDB = 30002,
  IsNotLoaded_ArtifactDeckDB = 30003,
  IsNotLoaded_AttributeDB = 30004,
  IsNotLoaded_WonderStoreDB = 30006,
  IsNotLoaded_HeroSkinPresetDB = 30007,
  IsNotLoaded_CollectionDB = 30008,
  IsNotLoaded_MissionDB = 30010,
  IsNotLoaded_HeroDB = 30011,
  IsNotLoaded_HeroSkinDB = 30012,
  IsNotLoaded_InstantGuideDB = 30013,
  IsNotLoaded_ItemDB = 30014,
  IsNotLoaded_PetDB = 30015,
  IsNotLoaded_RankingScoreDB = 30018,
  IsNotLoaded_UserAccountDB = 30020,
  IsNotLoaded_UserAssetDB = 30021,
  IsNotLoaded_EntitlementDB = 30022,
  IsNotLoaded_SpecialLevelDB = 30023,
  IsNotLoaded_MailDB = 30024,
  IsNotLoaded_SeasonPassDB = 30026,
  IsNotLoaded_AttendanceDB = 30027,
  IsNotLoaded_WeaponCategoryDB = 30029,
  IsNotLoaded_FriendDB = 30031,
  IsNotLoaded_ProfileDB = 30032,
  IsNotLoaded_AchievementDB = 30034,
  IsNotLoaded_TreasureBoxDB = 30035,
  IsNotLoaded_NoticeBannerDB = 30036,
  IsNotLoaded_GlitchStoreDB = 30038,
  IsNotLoaded_GuideMissionDB = 30039,
  IsNotLoaded_SilverMedalStoreDB = 30040,
  IsNotLoaded_PenaltyDB = 30041,
  IsNotLoaded_NicePlayerDB = 30042,
  IsNotLoaded_ExpressionDB = 30043,
  IsNotLoaded_ExpressionPresetDB = 30044,
  IsNotLoaded_PlayRecordGoldClash = 30045,
  IsNotLoaded_PlayRecordRpg = 30046,
  IsNotLoaded_WonderCubeDB = 30048,
  IsNotLoaded_ADVDB = 30049,
  IsNotLoaded_EventStoreDB = 30050,
  IsNotLoaded_Incubation = 30051,
  DBError = 50000,
  NotExistDediServer = 50003
}

export enum ECloseStatus {
  None = 0,
  NormalClosure = 1000,
  GoingAway = 1001,
  ProtocolError = 1002,
  UnsupportedData = 1003,
  AbnormalClosure = 1006,
  InvalidFramePayloadData = 1007,
  PolicyViolation = 1008,
  MessageTooBig = 1009,
  MandatoryExt = 1010,
  InternalError = 1011,
  ServiceRestart = 1012,
  TryAgainLater = 1013,
  TlsHandshake = 1015,
  Unauthorized = 3000,
  DuplicateLogin = 4000,
  MismatchAppVersion = 4001,
  NotExistAccount = 4002,
  InvalidMessageID = 4003,
  UserDataNotLoaded = 4004,
  ShutdownServer = 4005,
  UncheaterApiError = 4006,
  UncheaterUserBan = 4007,
  Maintenance = 4008,
  BlockAccount = 4009,
  DuplicateLoginB = 4010,
  BlockIPConnect = 4011,
  Reconnect = 4012,
  ForceCloseFromTool = 4100
}

export enum EUserState {
  None = 0,
  Login = 1,
  OpenWorld = 2,
  Rpg = 3,
  RpgChallenge = 4,
  GoldClash = 5,
  CustomGoldClash = 6
}

export enum EAccountType {
  Guest = 0,
  Stove = 1
}

export enum EUserAssetType {
  None = 0,
  WonderCoin = 800001,
  Crystal = 800002,
  FreeCrystal = 800003,
  Gold = 800004,
  GoldMedal = 800005,
  SilverMedal = 800006,
  CubeKey = 800007,
  MemoryCard = 800008
}

export enum EHeroType {
  None = 0,
  Gretel = 1,
  CaitSith = 2,
  Alibaba = 3,
  Robin = 4,
  Oz = 5,
  Alice = 6,
  RedHood = 7,
  Snow = 8,
  Odile = 9,
  Nutcracker = 10,
  Grace = 11,
  Dorothy = 12
}

export enum EMissionType {
  None = 0,
  Attendance = 1,
  Dyeing = 4,
  HeroGet = 10,
  OpenWorldCraftUse = 12,
  SeasonPassLevelUp = 22,
  VehicleRiding = 23,
  UseMemoryCard = 24,
  ArtifactEnchant = 25,
  MaterialGet = 26,
  MaterialBoxOpen = 27,
  BuySilverMedalStore = 28,
  UseSilverMedalCount = 29,
  CraftUseVehicle = 30,
  WonderCubeOpen = 31,
  TreasureBoxOpen = 32,
  MaterialUse = 33,
  RpgUseGoldGlitchStore = 201,
  RpgClear = 202,
  RpgClearRoom = 203,
  RpgGetArtifact = 204,
  RpgGetGold = 205,
  RpgGetGoldCount = 206,
  RpgGetItem = 207,
  RpgKillMonster = 209,
  RpgKillMonsterCount = 210,
  RpgPlay = 211,
  RpgPuzzleRoomClear = 212,
  RpgKillTargetMonster = 213,
  RpgGetMemoryCard = 214,
  RpgMemoryFragment = 215,
  RpgKillBossCount = 218,
  RpgKillMiddleBossCount = 219,
  RpgWeaponLevelUp = 220,
  RpgRestoreSpecialty = 221,
  RpgRestoreArtifact = 222,
  RpgRestorePet = 223,
  RpgLevelUp = 224,
  RpgLevelUpCount = 225,
  GoldClashKillHero = 401,
  GoldClashKillHeroCount = 402,
  GoldClashPlay = 403,
  GoldClashWin = 404,
  GoldClashMVPWinner = 405,
  GoldClashNicePoint = 406,
  GoldClashNotDieWin = 407,
  GoldClashDamage = 408,
  GoldClashDamageCount = 409,
  GoldClashGetGold = 410,
  GoldClashGetGoldCount = 411
}

export enum EItemType {
  None = 0,
  Weapon = 1,
  Misc = 2,
  ActiveItem = 3,
  Food = 4,
  PartyFood = 5,
  Artifact = 6,
  Gem = 7,
  Money = 8,
  Exp = 9,
  Orb = 10,
  Gift = 11,
  Housing = 12,
  Use = 13,
  BodySkin = 14,
  Dye = 15,
  Recipe = 16,
  PetEgg = 17,
  Accessory_Head = 18,
  Accessory_Face = 19,
  Accessory_Back = 20,
  Accessory_Pelvis = 21,
  Accessory_Weapon = 22,
  Vehicle = 23,
  Emotion = 24,
  Emotion_Victory = 25,
  Emoticon = 26,
  Asset = 27,
  Ticket = 28,
  Box = 29,
  PetLike = 30,
  Tool = 31,
  HairSkin = 32
}

export enum EItemGradeType {
  None = 0,
  Normal = 1,
  Uncommon = 2,
  Rare = 3,
  Hero = 4,
  Legendary = 5
}

export enum EItemCategory {
  None = 0,
  DoubleDagger = 1,
  Sword = 2,
  TwoHandSword = 3,
  Scythe = 4,
  Rapier = 5,
  Bow = 6,
  Gun = 7,
  Cannon = 8,
  Hammer = 9,
  Staff = 10,
  Claw = 11,
  HeadGear = 12,
  Belt = 13,
  Bracelet = 14,
  Ring = 15,
  Necklace = 16,
  Earring = 17,
  AttackRune = 18,
  DefenceRune = 19,
  HPRune = 20,
  CriticalDamageRune = 21,
  CriticalRateRune = 22,
  PetTicket = 23,
  NickNameTicket = 24,
  CostumeTicket = 25,
  CharacterTicket = 26,
  GoldBooster = 27,
  ExploreBooster = 28,
  AttackArtifact = 29,
  DefenceArtifact = 30,
  UtilityArtifact = 31,
  PVP = 32,
  PVE = 33,
  Public = 34,
  DarkArtifact = 35,
  Gold = 36,
  Crystal = 37,
  Essence = 38,
  Vision = 39,
  FreeCrystal = 40,
  RecipeFarm = 41,
  RecipeRanch = 42,
  RecipeFell = 43,
  RecipeMine = 44,
  RecipeMonster = 45,
  RecipeGather = 46,
  CraftItem = 47,
  CubePiece = 48,
  ArtifactRecipe = 49,
  CraftRecipe = 50,
  DropQuestItem = 51,
  Gift_Dessert = 52,
  Gift_Traning = 53,
  Gift_Doll = 54,
  Gift_Book = 55,
  Gift_Art = 56,
  Gift_Fish = 57,
  Gift_Fashion = 58,
  Gift_Machine = 59,
  Gift_Battle = 60,
  Gift_WeaponTool = 61,
  Vehicle_Grounding = 62,
  Vehicle_Flying = 63,
  Style_Monster = 64,
  Style_Natural = 65,
  Style_Interior = 66,
  Emotion_Win = 67,
  Emotion = 68,
  PetFood = 69,
  PetToy = 70,
  RecipeTrade = 71,
  RandomActiveItem = 72,
  RecipeFish = 73
}

export enum EElementalType {
  None = 0,
  Fire = 1,
  Water = 2,
  Wind = 3,
  Lightning = 4,
  Earth = 5
}

export enum EWeaponCategory {
  None = 0,
  TwohandedWeapon = 1,
  RangedWeapon = 2,
  DualWeapon = 3,
  ScatterWeapon = 4,
  OnehandedWeapon = 5
}

export enum ENpcType {
  None = 0,
  Normal = 1,
  Elite = 2,
  MiddleBoss = 3,
  Boss = 4,
  RaidBoss = 5,
  Summon = 6,
  Object_ = 7,
  NPC = 8,
  Pet = 9
}

export enum ECollectionType {
  None = 0,
  Accessory = 1,
  Costume = 2,
  Weapon = 3,
  Monster = 4,
  Vehicle = 5,
  Pet = 6
}

export enum EMissionGroup {
  None = 0,
  Daily = 1,
  Season = 2,
  Event = 3
}

export enum EContentsType {
  None = 0,
  GoldClash = 1,
  Raid = 2,
  Rpg = 3,
  RpgChallenge = 4,
  OpenWorld = 5,
  Community = 6,
  CustomGoldClash = 7
}

export enum EMailType {
  None = 0,
  SystemMail = 1,
  OpMail = 2
}

export enum EMailStateType {
  None = 0,
  Arrived = 1,
  Received = 2,
  Deleted = 3
}

export enum ENoticeType {
  None = 0,
  HoldType = 1,
  WaveType = 2,
  BubbleType = 3
}

export enum EPlatform {
  None = 0,
  PC = 1,
  AOS = 2,
  IOS = 3
}

export enum EProvider {
  Guest = 0,
  StoveEmail = 1,
  Facebook = 2,
  Twitter = 3,
  Naver = 6,
  Google = 9,
  Apple = 12
}

export enum EMarketCode {
  None = 0,
  StoveStore = 1,
  AppStore = 2,
  GooglePlayStore = 3
}

export enum EUncheaterReportType {
  None = 0,
  Ruby = 1,
  Solomon = 2,
  MacroMouse = 3,
  Tool = 4
}

export enum EProfileType {
  None = 0,
  Icon = 1,
  BG = 2
}

export enum EItemBoxType {
  None = 0,
  Fix = 1,
  Random = 2,
  Choose = 3,
  WonderCube = 4
}

export enum EStompMessageType {
  None = 0,
  LobbyToDedi_OpenWorldUserData = 10000,
  LobbyToDedi_GoldClashUserData = 10001,
  LobbyToDedi_RaidUserData = 10002,
  LobbyToDedi_SetGameSetting = 10003,
  LobbyToDedi_ExecCommand = 10004,
  LobbyToDedi_OpenWorldTime = 10005,
  LobbyToDedi_EntitlementAdd = 10006,
  LobbyToDedi_WaitRoomUserData = 10007,
  LobbyToDedi_WaitRoomFinish = 10008,
  LobbyToDedi_HeroData = 10009,
  LobbyToDedi_HeroSkinPresetData = 10010,
  DediToLobby_GoldClashStart = 15000,
  DediToLobby_GoldClashFinish = 15001,
  DediToLobby_RaidStart = 15002,
  DediToLobby_RaidFinish = 15003,
  DediToLobby_OpenWorldTime = 15004,
  DediToLobby_OpenWorldUserData_Req = 15005,
  DediToLobby_GoldClashUserData_Req = 15006,
  DediToLobby_WaitRoomUserData_Req = 15007,
  DediToLobby_WaitRoomFinish_Req = 15008,
  DediToLobby_HeroData_Req = 15009,
  DediToLobby_HeroSkinPresetData_Req = 15010,
  LobbyToLobby_DuplicateLoginDisconnect = 20000,
  LobbyToLobby_FriendDelete = 20001,
  LobbyToLobby_FriendAccept = 20002,
  LobbyToLobby_FriendRequest = 20003,
  LobbyToLobby_FriendChatSend = 20004,
  LobbyToLobby_FriendChatDelete = 20005,
  LobbyToLobby_FriendState = 20006,
  LobbyToLobby_PartyInviteUser = 20007,
  LobbyToLobby_PartyInviteAnswer = 20008,
  LobbyToLobby_PartyJoinAccept = 20009,
  LobbyToLobby_PartyJoinReject = 20010,
  LobbyToLobby_PartyWelcomeNewUser = 20011,
  LobbyToLobby_PartyLeaveMember = 20012,
  LobbyToLobby_PartyLeaveToMaster = 20013,
  LobbyToLobby_PartyKickMember = 20014,
  LobbyToLobby_PartyChangeMaster = 20015,
  LobbyToLobby_CustomGameInviteUser = 20016,
  LobbyToLobby_CustomGameInviteAnswer = 20017,
  LobbyToLobby_CustomGameJoinAccept = 20018,
  LobbyToLobby_CustomGameJoinReject = 20019,
  LobbyToLobby_CustomGameWelcomeNewUser = 20020,
  LobbyToLobby_CustomGameLeaveMember = 20021,
  LobbyToLobby_CustomGameBrokenRoom = 20022,
  LobbyToLobby_CustomGameLeaveToMaster = 20023,
  LobbyToLobby_CustomGameKickMember = 20024,
  LobbyToLobby_CustomGameFollowMaster = 20025,
  LobbyToLobby_CustomGameChangeSlotNo = 20026,
  LobbyToLobby_MatchingStartMatch = 20027,
  LobbyToLobby_MatchingStopMatchToMaster = 20028,
  LobbyToLobby_MatchingCancelMatch = 20029,
  LobbyToLobby_MatchingDelayMatch = 20030,
  LobbyToLobby_EnterMultiMode = 20031,
  LobbyToLobby_ModifyNickName = 20032,
  LobbyToLobby_PenaltyReport = 20033,
  LobbyToLobby_OptoolEventMail = 20034,
  LobbyToLobby_OptoolEventMailRemove = 20035,
  SnsToLobby_MatchmakingSucceeded = 25000,
  SnsToLobby_MatchmakingCancelled = 25001,
  SnsToLobby_PlacementFulfilled = 25002,
  SnsToLobby_PlacementCancelled = 25003,
  SnsToLobby_PotentialMatchCreated = 25004,
  SnsToLobby_AcceptMatch = 25005,
  SnsToLobby_AcceptMatchCompleted = 25006,
  SnsToLobby_BillingNotice = 25007,
  SnsToLobby_CouponNotice = 25008,
  SnsToLobby_CouponItemList = 25009,
  SnsToLobby_WebEventRewardNotice = 25010,
  SnsToLobby_WebEventRewardTableList = 25011,
  SnsToLobby_UserOpenWorldEnter = 25012,
  SnsToLobby_UserOpenWorldLeave = 25013,
  SnsToLobby_SeasonPassList = 25014,
  LobbyToOptool_GetSystemTime = 26000,
  LobbyToOptool_ChangeSystemTime = 26001,
  LobbyToOptool_SendMail = 26002,
  LobbyToOptool_InsertEventMail = 26003,
  LobbyToOptool_UpdateEventMail = 26004,
  LobbyToOptool_RemoveEventMail = 26005,
  OptoolToLobby_UserKick = 27000,
  OptoolToLobby_GetSystemTime = 27001,
  OptoolToLobby_ChangeSystemTime = 27002,
  OptoolToLobby_SystemNotice = 27003,
  OptoolToLobby_Maintenance = 27004,
  OptoolToLobby_AllUserKick = 27005,
  OptoolToLobby_SetOpenWorldTime = 27006,
  OptoolToLobby_AddBlockContents = 27007,
  OptoolToLobby_RemoveBlockContents = 27008,
  OptoolToLobby_NoticeBanner = 27009,
  OptoolToLobby_Add_BlockIP = 27010,
  OptoolToLobby_Remove_BlockIP = 27011,
  OptoolToLobby_Add_Slang = 27012,
  OptoolToLobby_Remove_Slang = 27013,
  OptoolToLobby_Add_WhiteList = 27014,
  OptoolToLobby_Remove_WhiteList = 27015,
  OptoolToLobby_SendMail = 27016,
  OptoolToLobby_InsertEventMail = 27017,
  OptoolToLobby_UpdateEventMail = 27018,
  OptoolToLobby_RemoveEventMail = 27019,
  DediToSns_ServerReady = 28000,
  DediToSns_ServerKill = 28001,
  DediToSns_UserEnter = 28002,
  DediToSns_UserLeave = 28003,
  LobbyToChat_NickNameChange = 29000
}

export enum EGuideMissionCategory {
  None = 0,
  GoldClash = 1,
  RPG = 2,
  Social = 3,
  ETC = 4
}

export enum EGuideMissionType {
  None = 0,
  GoldClashTutorial = 1,
  TrainingRoomEnter = 2,
  EnterBattleInfo = 3,
  GoldClashAmityCreate = 4,
  GoldClashPlay = 5,
  EnterArtifact = 6,
  TrainingRoomChangeChar = 7,
  GoldClashSelectLevelupBuff = 8,
  EnterBattleLevel = 9,
  TrainingRoomChangePet = 10,
  ArtifactSetPreset = 11,
  GoldClashKillHero = 12,
  GoldClashAmityEnter = 13,
  TrainingRoomCallDummy = 14,
  GoldClashReachMaxLevel = 15,
  GoldClashAmityEnd = 16,
  GoldClashWin = 17,
  TrainingRoomBuyArtifact = 18,
  GoldClashReachGoldCrown = 19,
  GoldClashAmityWin = 20,
  GoldClashpReachMVP = 21,
  RpgTutorial = 101,
  RpgPlay = 102,
  RpgPlaySelectLevelupBuff = 103,
  RpgPlayBuyShopItem = 104,
  EnterRpgCampWeaponUpgrade = 105,
  EnterRpgCampRestoreMemoryPet = 106,
  EnterRpgCampRestoreMemoryArtifact = 107,
  RpgKillBoss = 108,
  RpgKillMiddleBoss = 109,
  EnterRegisterMotion = 201,
  Achievement = 202,
  DressRoomEquipDeco = 203,
  RequestFriend = 204,
  UseSticker = 205,
  SetTitle = 207,
  UseChat = 208,
  SetIcon = 209,
  DressRoomDyeing = 210,
  SetProfile = 211,
  DressRoomSetPreset = 212,
  DressRoomEquipWeaponSkin = 213,
  AcceptFriend = 214,
  DressRoomSetCostume = 215,
  EnterAttendance = 301,
  EnterSeasonPass = 302,
  EnterVehicle = 303,
  VehicleEquip = 304,
  VehicleRiding = 305,
  EnterPet = 306,
  EnterCollection = 307,
  PetSummon = 308,
  PetLock = 309,
  PetFeedFood = 310,
  EnterMake = 311,
  MenuChangeChar = 312,
  EnterMail = 313,
  PetHatch = 314,
  MenuUseStorageItem = 315,
  MakeDye = 316,
  MakeDeco = 317,
  PetMaxIntimacy = 318,
  PetComposite = 319,
  EnterMakeVehicle = 320
}

export enum ERewardType {
  None = 0,
  Character = 1,
  Costume = 2,
  Item = 3,
  Asset = 4,
  Artifact = 5,
  Expression = 6,
  Accessory = 7,
  Vehicle = 8,
  Pet = 9,
  Profile = 10,
  Entitlement = 11
}

export enum ELimitTime {
  None = 0,
  Day = 1,
  Week = 2,
  Month = 3,
  Season = 4
}

export enum EPenaltyReportState {
  None = 0,
  Dodge = 1,
  Chat = 2,
  Troll = 3,
  Hack = 4,
  Nickname = 5,
  PretendGM = 6
}

export enum EPenaltyType {
  None = 0,
  Notice = 1,
  MatchDelay = 2,
  MatchBan = 3,
  AccountBan = 4,
  ChatBan = 5,
  ChangeNickname = 6
}

export enum EExpressionType {
  None = 0,
  Sticker = 1,
  Emotion = 2
}

export enum EExpressionCategory {
  None = 0,
  Normal = 1,
  Victory = 2
}

export enum EExpressionPresetIndex {
  None = 0,
  Sticker_1 = 1,
  Sticker_2 = 2,
  Sticker_3 = 3,
  Sticker_4 = 4,
  Emotion_1 = 5,
  Emotion_2 = 6,
  Emotion_3 = 7,
  Emotion_4 = 8,
  AutoPlay_Kill = 9,
  AutoPlay_Win = 10,
  AutoPlay_WinPose = 11
}

export enum EIncubationOpenType {
  None = 0,
  Asset = 1,
  SeasonPass = 2
}

export enum EChatType {
  None = 0,
  World = 1,
  Channel = 2,
  System = 10,
  DM = 11,
  Disconnect = 20,
  DisconnectAll = 21,
  Notice = 22
}

export enum EStoreGoodsType {
  None = 0,
  Single = 1,
  Package = 2,
  Subscribe = 3,
  SeasonPass = 4
}

export class Header implements flatbuffers.IUnpackableObject<HeaderT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Header {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

Message():EMessageType {
  return this.bb!.readUint16(this.bb_pos);
}

Result():EResultType {
  return this.bb!.readUint16(this.bb_pos + 2);
}

Timestamp():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.Header';
}

static sizeOf():number {
  return 8;
}

static createHeader(builder:flatbuffers.Builder, Message: EMessageType, Result: EResultType, Timestamp: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Timestamp);
  builder.writeInt16(Result);
  builder.writeInt16(Message);
  return builder.offset();
}


unpack(): HeaderT {
  return new HeaderT(
    this.Message(),
    this.Result(),
    this.Timestamp()
  );
}


unpackTo(_o: HeaderT): void {
  _o.Message = this.Message();
  _o.Result = this.Result();
  _o.Timestamp = this.Timestamp();
}
}

export class HeaderT implements flatbuffers.IGeneratedObject {
constructor(
  public Message: EMessageType = EMessageType.None,
  public Result: EResultType = EResultType.Success,
  public Timestamp: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Header.createHeader(builder,
    this.Message,
    this.Result,
    this.Timestamp
  );
}
}

export class LobbyErrorData implements flatbuffers.IUnpackableObject<LobbyErrorDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyErrorData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyErrorData(bb:flatbuffers.ByteBuffer, obj?:LobbyErrorData):LobbyErrorData {
  return (obj || new LobbyErrorData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyErrorData(bb:flatbuffers.ByteBuffer, obj?:LobbyErrorData):LobbyErrorData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyErrorData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Error():string|null
Error(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Error(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyErrorData';
}

static startLobbyErrorData(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Error(builder:flatbuffers.Builder, ErrorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ErrorOffset, 0);
}

static endLobbyErrorData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyErrorData(builder:flatbuffers.Builder, ErrorOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyErrorData.startLobbyErrorData(builder);
  LobbyErrorData.add_Error(builder, ErrorOffset);
  return LobbyErrorData.endLobbyErrorData(builder);
}

unpack(): LobbyErrorDataT {
  return new LobbyErrorDataT(
    this.Error()
  );
}


unpackTo(_o: LobbyErrorDataT): void {
  _o.Error = this.Error();
}
}

export class LobbyErrorDataT implements flatbuffers.IGeneratedObject {
constructor(
  public Error: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Error = (this.Error !== null ? builder.createString(this.Error!) : 0);

  return LobbyErrorData.createLobbyErrorData(builder,
    Error
  );
}
}

export class Vector3 implements flatbuffers.IUnpackableObject<Vector3T> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Vector3 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

X():number {
  return this.bb!.readFloat32(this.bb_pos);
}

Y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
}

Z():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
}

static getFullyQualifiedName():string {
  return 'Lobby.Vector3';
}

static sizeOf():number {
  return 12;
}

static createVector3(builder:flatbuffers.Builder, X: number, Y: number, Z: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeFloat32(Z);
  builder.writeFloat32(Y);
  builder.writeFloat32(X);
  return builder.offset();
}


unpack(): Vector3T {
  return new Vector3T(
    this.X(),
    this.Y(),
    this.Z()
  );
}


unpackTo(_o: Vector3T): void {
  _o.X = this.X();
  _o.Y = this.Y();
  _o.Z = this.Z();
}
}

export class Vector3T implements flatbuffers.IGeneratedObject {
constructor(
  public X: number = 0.0,
  public Y: number = 0.0,
  public Z: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Vector3.createVector3(builder,
    this.X,
    this.Y,
    this.Z
  );
}
}

export class UserAccountData implements flatbuffers.IUnpackableObject<UserAccountDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UserAccountData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUserAccountData(bb:flatbuffers.ByteBuffer, obj?:UserAccountData):UserAccountData {
  return (obj || new UserAccountData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUserAccountData(bb:flatbuffers.ByteBuffer, obj?:UserAccountData):UserAccountData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UserAccountData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

WUID():string|null
WUID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
WUID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

VehicleID():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LastClearChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsGlitchTutorialComplete():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

IsGoldClashTutorialComplete():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

LastPosition():string|null
LastPosition(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LastPosition(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

AddArtifactDeckCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PenaltyReportCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LastPenaltyReportAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IntroduceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.UserAccountData';
}

static startUserAccountData(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_WUID(builder:flatbuffers.Builder, WUIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, WUIDOffset, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, NickOffset, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(3, HeroID, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(4, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(5, ProfileBGID, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(6, EntitlementID, 0);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(7, BigInt(PetUniqueID), BigInt(0));
}

static add_VehicleID(builder:flatbuffers.Builder, VehicleID:number) {
  builder.addFieldInt32(8, VehicleID, 0);
}

static add_LastClearChapterID(builder:flatbuffers.Builder, LastClearChapterID:number) {
  builder.addFieldInt32(9, LastClearChapterID, 0);
}

static add_IsGlitchTutorialComplete(builder:flatbuffers.Builder, IsGlitchTutorialComplete:boolean) {
  builder.addFieldInt8(10, +IsGlitchTutorialComplete, +false);
}

static add_IsGoldClashTutorialComplete(builder:flatbuffers.Builder, IsGoldClashTutorialComplete:boolean) {
  builder.addFieldInt8(11, +IsGoldClashTutorialComplete, +false);
}

static add_LastPosition(builder:flatbuffers.Builder, LastPositionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, LastPositionOffset, 0);
}

static add_AddArtifactDeckCount(builder:flatbuffers.Builder, AddArtifactDeckCount:number) {
  builder.addFieldInt32(13, AddArtifactDeckCount, 0);
}

static add_PenaltyReportCount(builder:flatbuffers.Builder, PenaltyReportCount:number) {
  builder.addFieldInt32(14, PenaltyReportCount, 0);
}

static add_LastPenaltyReportAt(builder:flatbuffers.Builder, LastPenaltyReportAt:number) {
  builder.addFieldInt32(15, LastPenaltyReportAt, 0);
}

static add_IntroduceID(builder:flatbuffers.Builder, IntroduceID:number) {
  builder.addFieldInt32(16, IntroduceID, 0);
}

static endUserAccountData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUserAccountData(builder:flatbuffers.Builder, UID:number, WUIDOffset:flatbuffers.Offset, NickOffset:flatbuffers.Offset, HeroID:number, ProfileIconID:number, ProfileBGID:number, EntitlementID:number, PetUniqueID:number, VehicleID:number, LastClearChapterID:number, IsGlitchTutorialComplete:boolean, IsGoldClashTutorialComplete:boolean, LastPositionOffset:flatbuffers.Offset, AddArtifactDeckCount:number, PenaltyReportCount:number, LastPenaltyReportAt:number, IntroduceID:number):flatbuffers.Offset {
  UserAccountData.startUserAccountData(builder);
  UserAccountData.add_UID(builder, UID);
  UserAccountData.add_WUID(builder, WUIDOffset);
  UserAccountData.add_Nick(builder, NickOffset);
  UserAccountData.add_HeroID(builder, HeroID);
  UserAccountData.add_ProfileIconID(builder, ProfileIconID);
  UserAccountData.add_ProfileBGID(builder, ProfileBGID);
  UserAccountData.add_EntitlementID(builder, EntitlementID);
  UserAccountData.add_PetUniqueID(builder, PetUniqueID);
  UserAccountData.add_VehicleID(builder, VehicleID);
  UserAccountData.add_LastClearChapterID(builder, LastClearChapterID);
  UserAccountData.add_IsGlitchTutorialComplete(builder, IsGlitchTutorialComplete);
  UserAccountData.add_IsGoldClashTutorialComplete(builder, IsGoldClashTutorialComplete);
  UserAccountData.add_LastPosition(builder, LastPositionOffset);
  UserAccountData.add_AddArtifactDeckCount(builder, AddArtifactDeckCount);
  UserAccountData.add_PenaltyReportCount(builder, PenaltyReportCount);
  UserAccountData.add_LastPenaltyReportAt(builder, LastPenaltyReportAt);
  UserAccountData.add_IntroduceID(builder, IntroduceID);
  return UserAccountData.endUserAccountData(builder);
}

unpack(): UserAccountDataT {
  return new UserAccountDataT(
    this.UID(),
    this.WUID(),
    this.Nick(),
    this.HeroID(),
    this.ProfileIconID(),
    this.ProfileBGID(),
    this.EntitlementID(),
    this.PetUniqueID(),
    this.VehicleID(),
    this.LastClearChapterID(),
    this.IsGlitchTutorialComplete(),
    this.IsGoldClashTutorialComplete(),
    this.LastPosition(),
    this.AddArtifactDeckCount(),
    this.PenaltyReportCount(),
    this.LastPenaltyReportAt(),
    this.IntroduceID()
  );
}


unpackTo(_o: UserAccountDataT): void {
  _o.UID = this.UID();
  _o.WUID = this.WUID();
  _o.Nick = this.Nick();
  _o.HeroID = this.HeroID();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.EntitlementID = this.EntitlementID();
  _o.PetUniqueID = this.PetUniqueID();
  _o.VehicleID = this.VehicleID();
  _o.LastClearChapterID = this.LastClearChapterID();
  _o.IsGlitchTutorialComplete = this.IsGlitchTutorialComplete();
  _o.IsGoldClashTutorialComplete = this.IsGoldClashTutorialComplete();
  _o.LastPosition = this.LastPosition();
  _o.AddArtifactDeckCount = this.AddArtifactDeckCount();
  _o.PenaltyReportCount = this.PenaltyReportCount();
  _o.LastPenaltyReportAt = this.LastPenaltyReportAt();
  _o.IntroduceID = this.IntroduceID();
}
}

export class UserAccountDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public WUID: string|Uint8Array|null = null,
  public Nick: string|Uint8Array|null = null,
  public HeroID: number = 0,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0,
  public EntitlementID: number = 0,
  public PetUniqueID: number = 0,
  public VehicleID: number = 0,
  public LastClearChapterID: number = 0,
  public IsGlitchTutorialComplete: boolean = false,
  public IsGoldClashTutorialComplete: boolean = false,
  public LastPosition: string|Uint8Array|null = null,
  public AddArtifactDeckCount: number = 0,
  public PenaltyReportCount: number = 0,
  public LastPenaltyReportAt: number = 0,
  public IntroduceID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const WUID = (this.WUID !== null ? builder.createString(this.WUID!) : 0);
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const LastPosition = (this.LastPosition !== null ? builder.createString(this.LastPosition!) : 0);

  return UserAccountData.createUserAccountData(builder,
    this.UID,
    WUID,
    Nick,
    this.HeroID,
    this.ProfileIconID,
    this.ProfileBGID,
    this.EntitlementID,
    this.PetUniqueID,
    this.VehicleID,
    this.LastClearChapterID,
    this.IsGlitchTutorialComplete,
    this.IsGoldClashTutorialComplete,
    LastPosition,
    this.AddArtifactDeckCount,
    this.PenaltyReportCount,
    this.LastPenaltyReportAt,
    this.IntroduceID
  );
}
}

export class AssetData implements flatbuffers.IUnpackableObject<AssetDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AssetData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

AssetID():EUserAssetType {
  return this.bb!.readUint32(this.bb_pos);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

RecoverAt():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

static getFullyQualifiedName():string {
  return 'Lobby.AssetData';
}

static sizeOf():number {
  return 12;
}

static createAssetData(builder:flatbuffers.Builder, AssetID: EUserAssetType, Count: number, RecoverAt: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt32(RecoverAt);
  builder.writeInt32(Count);
  builder.writeInt32(AssetID);
  return builder.offset();
}


unpack(): AssetDataT {
  return new AssetDataT(
    this.AssetID(),
    this.Count(),
    this.RecoverAt()
  );
}


unpackTo(_o: AssetDataT): void {
  _o.AssetID = this.AssetID();
  _o.Count = this.Count();
  _o.RecoverAt = this.RecoverAt();
}
}

export class AssetDataT implements flatbuffers.IGeneratedObject {
constructor(
  public AssetID: EUserAssetType = EUserAssetType.None,
  public Count: number = 0,
  public RecoverAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return AssetData.createAssetData(builder,
    this.AssetID,
    this.Count,
    this.RecoverAt
  );
}
}

export class HeroData implements flatbuffers.IUnpackableObject<HeroDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HeroData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeroData(bb:flatbuffers.ByteBuffer, obj?:HeroData):HeroData {
  return (obj || new HeroData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeroData(bb:flatbuffers.ByteBuffer, obj?:HeroData):HeroData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeroData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BattleLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BattleExp():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardedLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LeftEyeHexColor():string|null
LeftEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LeftEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RightEyeHexColor():string|null
RightEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RightEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HairSkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BodySkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeadID():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeadOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FaceOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackID():number {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BackOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisID():number {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PelvisOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 82);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

WeaponID():number {
  const offset = this.bb!.__offset(this.bb_pos, 84);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

WinPoseID():number {
  const offset = this.bb!.__offset(this.bb_pos, 86);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AddPresetCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.HeroData';
}

static startHeroData(builder:flatbuffers.Builder) {
  builder.startObject(44);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_BattleLevel(builder:flatbuffers.Builder, BattleLevel:number) {
  builder.addFieldInt32(1, BattleLevel, 0);
}

static add_BattleExp(builder:flatbuffers.Builder, BattleExp:number) {
  builder.addFieldInt32(2, BattleExp, 0);
}

static add_RewardedLevel(builder:flatbuffers.Builder, RewardedLevel:number) {
  builder.addFieldInt32(3, RewardedLevel, 0);
}

static add_LeftEyeHexColor(builder:flatbuffers.Builder, LeftEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, LeftEyeHexColorOffset, 0);
}

static add_RightEyeHexColor(builder:flatbuffers.Builder, RightEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, RightEyeHexColorOffset, 0);
}

static add_HairSkinID(builder:flatbuffers.Builder, HairSkinID:number) {
  builder.addFieldInt32(6, HairSkinID, 0);
}

static add_BodySkinID(builder:flatbuffers.Builder, BodySkinID:number) {
  builder.addFieldInt32(7, BodySkinID, 0);
}

static add_HeadID(builder:flatbuffers.Builder, HeadID:number) {
  builder.addFieldInt32(8, HeadID, 0);
}

static add_HeadOffsetX(builder:flatbuffers.Builder, HeadOffsetX:number) {
  builder.addFieldFloat32(9, HeadOffsetX, 0.0);
}

static add_HeadOffsetY(builder:flatbuffers.Builder, HeadOffsetY:number) {
  builder.addFieldFloat32(10, HeadOffsetY, 0.0);
}

static add_HeadOffsetZ(builder:flatbuffers.Builder, HeadOffsetZ:number) {
  builder.addFieldFloat32(11, HeadOffsetZ, 0.0);
}

static add_HeadOffsetW(builder:flatbuffers.Builder, HeadOffsetW:number) {
  builder.addFieldFloat32(12, HeadOffsetW, 0.0);
}

static add_HeadRotateX(builder:flatbuffers.Builder, HeadRotateX:number) {
  builder.addFieldFloat32(13, HeadRotateX, 0.0);
}

static add_HeadRotateY(builder:flatbuffers.Builder, HeadRotateY:number) {
  builder.addFieldFloat32(14, HeadRotateY, 0.0);
}

static add_HeadRotateZ(builder:flatbuffers.Builder, HeadRotateZ:number) {
  builder.addFieldFloat32(15, HeadRotateZ, 0.0);
}

static add_FaceID(builder:flatbuffers.Builder, FaceID:number) {
  builder.addFieldInt32(16, FaceID, 0);
}

static add_FaceOffsetX(builder:flatbuffers.Builder, FaceOffsetX:number) {
  builder.addFieldFloat32(17, FaceOffsetX, 0.0);
}

static add_FaceOffsetY(builder:flatbuffers.Builder, FaceOffsetY:number) {
  builder.addFieldFloat32(18, FaceOffsetY, 0.0);
}

static add_FaceOffsetZ(builder:flatbuffers.Builder, FaceOffsetZ:number) {
  builder.addFieldFloat32(19, FaceOffsetZ, 0.0);
}

static add_FaceOffsetW(builder:flatbuffers.Builder, FaceOffsetW:number) {
  builder.addFieldFloat32(20, FaceOffsetW, 0.0);
}

static add_FaceRotateX(builder:flatbuffers.Builder, FaceRotateX:number) {
  builder.addFieldFloat32(21, FaceRotateX, 0.0);
}

static add_FaceRotateY(builder:flatbuffers.Builder, FaceRotateY:number) {
  builder.addFieldFloat32(22, FaceRotateY, 0.0);
}

static add_FaceRotateZ(builder:flatbuffers.Builder, FaceRotateZ:number) {
  builder.addFieldFloat32(23, FaceRotateZ, 0.0);
}

static add_BackID(builder:flatbuffers.Builder, BackID:number) {
  builder.addFieldInt32(24, BackID, 0);
}

static add_BackOffsetX(builder:flatbuffers.Builder, BackOffsetX:number) {
  builder.addFieldFloat32(25, BackOffsetX, 0.0);
}

static add_BackOffsetY(builder:flatbuffers.Builder, BackOffsetY:number) {
  builder.addFieldFloat32(26, BackOffsetY, 0.0);
}

static add_BackOffsetZ(builder:flatbuffers.Builder, BackOffsetZ:number) {
  builder.addFieldFloat32(27, BackOffsetZ, 0.0);
}

static add_BackOffsetW(builder:flatbuffers.Builder, BackOffsetW:number) {
  builder.addFieldFloat32(28, BackOffsetW, 0.0);
}

static add_BackRotateX(builder:flatbuffers.Builder, BackRotateX:number) {
  builder.addFieldFloat32(29, BackRotateX, 0.0);
}

static add_BackRotateY(builder:flatbuffers.Builder, BackRotateY:number) {
  builder.addFieldFloat32(30, BackRotateY, 0.0);
}

static add_BackRotateZ(builder:flatbuffers.Builder, BackRotateZ:number) {
  builder.addFieldFloat32(31, BackRotateZ, 0.0);
}

static add_PelvisID(builder:flatbuffers.Builder, PelvisID:number) {
  builder.addFieldInt32(32, PelvisID, 0);
}

static add_PelvisOffsetX(builder:flatbuffers.Builder, PelvisOffsetX:number) {
  builder.addFieldFloat32(33, PelvisOffsetX, 0.0);
}

static add_PelvisOffsetY(builder:flatbuffers.Builder, PelvisOffsetY:number) {
  builder.addFieldFloat32(34, PelvisOffsetY, 0.0);
}

static add_PelvisOffsetZ(builder:flatbuffers.Builder, PelvisOffsetZ:number) {
  builder.addFieldFloat32(35, PelvisOffsetZ, 0.0);
}

static add_PelvisOffsetW(builder:flatbuffers.Builder, PelvisOffsetW:number) {
  builder.addFieldFloat32(36, PelvisOffsetW, 0.0);
}

static add_PelvisRotateX(builder:flatbuffers.Builder, PelvisRotateX:number) {
  builder.addFieldFloat32(37, PelvisRotateX, 0.0);
}

static add_PelvisRotateY(builder:flatbuffers.Builder, PelvisRotateY:number) {
  builder.addFieldFloat32(38, PelvisRotateY, 0.0);
}

static add_PelvisRotateZ(builder:flatbuffers.Builder, PelvisRotateZ:number) {
  builder.addFieldFloat32(39, PelvisRotateZ, 0.0);
}

static add_WeaponID(builder:flatbuffers.Builder, WeaponID:number) {
  builder.addFieldInt32(40, WeaponID, 0);
}

static add_WinPoseID(builder:flatbuffers.Builder, WinPoseID:number) {
  builder.addFieldInt32(41, WinPoseID, 0);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(42, ExpireAt, 0);
}

static add_AddPresetCount(builder:flatbuffers.Builder, AddPresetCount:number) {
  builder.addFieldInt32(43, AddPresetCount, 0);
}

static endHeroData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHeroData(builder:flatbuffers.Builder, HeroID:number, BattleLevel:number, BattleExp:number, RewardedLevel:number, LeftEyeHexColorOffset:flatbuffers.Offset, RightEyeHexColorOffset:flatbuffers.Offset, HairSkinID:number, BodySkinID:number, HeadID:number, HeadOffsetX:number, HeadOffsetY:number, HeadOffsetZ:number, HeadOffsetW:number, HeadRotateX:number, HeadRotateY:number, HeadRotateZ:number, FaceID:number, FaceOffsetX:number, FaceOffsetY:number, FaceOffsetZ:number, FaceOffsetW:number, FaceRotateX:number, FaceRotateY:number, FaceRotateZ:number, BackID:number, BackOffsetX:number, BackOffsetY:number, BackOffsetZ:number, BackOffsetW:number, BackRotateX:number, BackRotateY:number, BackRotateZ:number, PelvisID:number, PelvisOffsetX:number, PelvisOffsetY:number, PelvisOffsetZ:number, PelvisOffsetW:number, PelvisRotateX:number, PelvisRotateY:number, PelvisRotateZ:number, WeaponID:number, WinPoseID:number, ExpireAt:number, AddPresetCount:number):flatbuffers.Offset {
  HeroData.startHeroData(builder);
  HeroData.add_HeroID(builder, HeroID);
  HeroData.add_BattleLevel(builder, BattleLevel);
  HeroData.add_BattleExp(builder, BattleExp);
  HeroData.add_RewardedLevel(builder, RewardedLevel);
  HeroData.add_LeftEyeHexColor(builder, LeftEyeHexColorOffset);
  HeroData.add_RightEyeHexColor(builder, RightEyeHexColorOffset);
  HeroData.add_HairSkinID(builder, HairSkinID);
  HeroData.add_BodySkinID(builder, BodySkinID);
  HeroData.add_HeadID(builder, HeadID);
  HeroData.add_HeadOffsetX(builder, HeadOffsetX);
  HeroData.add_HeadOffsetY(builder, HeadOffsetY);
  HeroData.add_HeadOffsetZ(builder, HeadOffsetZ);
  HeroData.add_HeadOffsetW(builder, HeadOffsetW);
  HeroData.add_HeadRotateX(builder, HeadRotateX);
  HeroData.add_HeadRotateY(builder, HeadRotateY);
  HeroData.add_HeadRotateZ(builder, HeadRotateZ);
  HeroData.add_FaceID(builder, FaceID);
  HeroData.add_FaceOffsetX(builder, FaceOffsetX);
  HeroData.add_FaceOffsetY(builder, FaceOffsetY);
  HeroData.add_FaceOffsetZ(builder, FaceOffsetZ);
  HeroData.add_FaceOffsetW(builder, FaceOffsetW);
  HeroData.add_FaceRotateX(builder, FaceRotateX);
  HeroData.add_FaceRotateY(builder, FaceRotateY);
  HeroData.add_FaceRotateZ(builder, FaceRotateZ);
  HeroData.add_BackID(builder, BackID);
  HeroData.add_BackOffsetX(builder, BackOffsetX);
  HeroData.add_BackOffsetY(builder, BackOffsetY);
  HeroData.add_BackOffsetZ(builder, BackOffsetZ);
  HeroData.add_BackOffsetW(builder, BackOffsetW);
  HeroData.add_BackRotateX(builder, BackRotateX);
  HeroData.add_BackRotateY(builder, BackRotateY);
  HeroData.add_BackRotateZ(builder, BackRotateZ);
  HeroData.add_PelvisID(builder, PelvisID);
  HeroData.add_PelvisOffsetX(builder, PelvisOffsetX);
  HeroData.add_PelvisOffsetY(builder, PelvisOffsetY);
  HeroData.add_PelvisOffsetZ(builder, PelvisOffsetZ);
  HeroData.add_PelvisOffsetW(builder, PelvisOffsetW);
  HeroData.add_PelvisRotateX(builder, PelvisRotateX);
  HeroData.add_PelvisRotateY(builder, PelvisRotateY);
  HeroData.add_PelvisRotateZ(builder, PelvisRotateZ);
  HeroData.add_WeaponID(builder, WeaponID);
  HeroData.add_WinPoseID(builder, WinPoseID);
  HeroData.add_ExpireAt(builder, ExpireAt);
  HeroData.add_AddPresetCount(builder, AddPresetCount);
  return HeroData.endHeroData(builder);
}

unpack(): HeroDataT {
  return new HeroDataT(
    this.HeroID(),
    this.BattleLevel(),
    this.BattleExp(),
    this.RewardedLevel(),
    this.LeftEyeHexColor(),
    this.RightEyeHexColor(),
    this.HairSkinID(),
    this.BodySkinID(),
    this.HeadID(),
    this.HeadOffsetX(),
    this.HeadOffsetY(),
    this.HeadOffsetZ(),
    this.HeadOffsetW(),
    this.HeadRotateX(),
    this.HeadRotateY(),
    this.HeadRotateZ(),
    this.FaceID(),
    this.FaceOffsetX(),
    this.FaceOffsetY(),
    this.FaceOffsetZ(),
    this.FaceOffsetW(),
    this.FaceRotateX(),
    this.FaceRotateY(),
    this.FaceRotateZ(),
    this.BackID(),
    this.BackOffsetX(),
    this.BackOffsetY(),
    this.BackOffsetZ(),
    this.BackOffsetW(),
    this.BackRotateX(),
    this.BackRotateY(),
    this.BackRotateZ(),
    this.PelvisID(),
    this.PelvisOffsetX(),
    this.PelvisOffsetY(),
    this.PelvisOffsetZ(),
    this.PelvisOffsetW(),
    this.PelvisRotateX(),
    this.PelvisRotateY(),
    this.PelvisRotateZ(),
    this.WeaponID(),
    this.WinPoseID(),
    this.ExpireAt(),
    this.AddPresetCount()
  );
}


unpackTo(_o: HeroDataT): void {
  _o.HeroID = this.HeroID();
  _o.BattleLevel = this.BattleLevel();
  _o.BattleExp = this.BattleExp();
  _o.RewardedLevel = this.RewardedLevel();
  _o.LeftEyeHexColor = this.LeftEyeHexColor();
  _o.RightEyeHexColor = this.RightEyeHexColor();
  _o.HairSkinID = this.HairSkinID();
  _o.BodySkinID = this.BodySkinID();
  _o.HeadID = this.HeadID();
  _o.HeadOffsetX = this.HeadOffsetX();
  _o.HeadOffsetY = this.HeadOffsetY();
  _o.HeadOffsetZ = this.HeadOffsetZ();
  _o.HeadOffsetW = this.HeadOffsetW();
  _o.HeadRotateX = this.HeadRotateX();
  _o.HeadRotateY = this.HeadRotateY();
  _o.HeadRotateZ = this.HeadRotateZ();
  _o.FaceID = this.FaceID();
  _o.FaceOffsetX = this.FaceOffsetX();
  _o.FaceOffsetY = this.FaceOffsetY();
  _o.FaceOffsetZ = this.FaceOffsetZ();
  _o.FaceOffsetW = this.FaceOffsetW();
  _o.FaceRotateX = this.FaceRotateX();
  _o.FaceRotateY = this.FaceRotateY();
  _o.FaceRotateZ = this.FaceRotateZ();
  _o.BackID = this.BackID();
  _o.BackOffsetX = this.BackOffsetX();
  _o.BackOffsetY = this.BackOffsetY();
  _o.BackOffsetZ = this.BackOffsetZ();
  _o.BackOffsetW = this.BackOffsetW();
  _o.BackRotateX = this.BackRotateX();
  _o.BackRotateY = this.BackRotateY();
  _o.BackRotateZ = this.BackRotateZ();
  _o.PelvisID = this.PelvisID();
  _o.PelvisOffsetX = this.PelvisOffsetX();
  _o.PelvisOffsetY = this.PelvisOffsetY();
  _o.PelvisOffsetZ = this.PelvisOffsetZ();
  _o.PelvisOffsetW = this.PelvisOffsetW();
  _o.PelvisRotateX = this.PelvisRotateX();
  _o.PelvisRotateY = this.PelvisRotateY();
  _o.PelvisRotateZ = this.PelvisRotateZ();
  _o.WeaponID = this.WeaponID();
  _o.WinPoseID = this.WinPoseID();
  _o.ExpireAt = this.ExpireAt();
  _o.AddPresetCount = this.AddPresetCount();
}
}

export class HeroDataT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public BattleLevel: number = 0,
  public BattleExp: number = 0,
  public RewardedLevel: number = 0,
  public LeftEyeHexColor: string|Uint8Array|null = null,
  public RightEyeHexColor: string|Uint8Array|null = null,
  public HairSkinID: number = 0,
  public BodySkinID: number = 0,
  public HeadID: number = 0,
  public HeadOffsetX: number = 0.0,
  public HeadOffsetY: number = 0.0,
  public HeadOffsetZ: number = 0.0,
  public HeadOffsetW: number = 0.0,
  public HeadRotateX: number = 0.0,
  public HeadRotateY: number = 0.0,
  public HeadRotateZ: number = 0.0,
  public FaceID: number = 0,
  public FaceOffsetX: number = 0.0,
  public FaceOffsetY: number = 0.0,
  public FaceOffsetZ: number = 0.0,
  public FaceOffsetW: number = 0.0,
  public FaceRotateX: number = 0.0,
  public FaceRotateY: number = 0.0,
  public FaceRotateZ: number = 0.0,
  public BackID: number = 0,
  public BackOffsetX: number = 0.0,
  public BackOffsetY: number = 0.0,
  public BackOffsetZ: number = 0.0,
  public BackOffsetW: number = 0.0,
  public BackRotateX: number = 0.0,
  public BackRotateY: number = 0.0,
  public BackRotateZ: number = 0.0,
  public PelvisID: number = 0,
  public PelvisOffsetX: number = 0.0,
  public PelvisOffsetY: number = 0.0,
  public PelvisOffsetZ: number = 0.0,
  public PelvisOffsetW: number = 0.0,
  public PelvisRotateX: number = 0.0,
  public PelvisRotateY: number = 0.0,
  public PelvisRotateZ: number = 0.0,
  public WeaponID: number = 0,
  public WinPoseID: number = 0,
  public ExpireAt: number = 0,
  public AddPresetCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const LeftEyeHexColor = (this.LeftEyeHexColor !== null ? builder.createString(this.LeftEyeHexColor!) : 0);
  const RightEyeHexColor = (this.RightEyeHexColor !== null ? builder.createString(this.RightEyeHexColor!) : 0);

  return HeroData.createHeroData(builder,
    this.HeroID,
    this.BattleLevel,
    this.BattleExp,
    this.RewardedLevel,
    LeftEyeHexColor,
    RightEyeHexColor,
    this.HairSkinID,
    this.BodySkinID,
    this.HeadID,
    this.HeadOffsetX,
    this.HeadOffsetY,
    this.HeadOffsetZ,
    this.HeadOffsetW,
    this.HeadRotateX,
    this.HeadRotateY,
    this.HeadRotateZ,
    this.FaceID,
    this.FaceOffsetX,
    this.FaceOffsetY,
    this.FaceOffsetZ,
    this.FaceOffsetW,
    this.FaceRotateX,
    this.FaceRotateY,
    this.FaceRotateZ,
    this.BackID,
    this.BackOffsetX,
    this.BackOffsetY,
    this.BackOffsetZ,
    this.BackOffsetW,
    this.BackRotateX,
    this.BackRotateY,
    this.BackRotateZ,
    this.PelvisID,
    this.PelvisOffsetX,
    this.PelvisOffsetY,
    this.PelvisOffsetZ,
    this.PelvisOffsetW,
    this.PelvisRotateX,
    this.PelvisRotateY,
    this.PelvisRotateZ,
    this.WeaponID,
    this.WinPoseID,
    this.ExpireAt,
    this.AddPresetCount
  );
}
}

export class HeroSkinData implements flatbuffers.IUnpackableObject<HeroSkinDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HeroSkinData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeroSkinData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinData):HeroSkinData {
  return (obj || new HeroSkinData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeroSkinData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinData):HeroSkinData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeroSkinData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HexColor1():string|null
HexColor1(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor1(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HexColor2():string|null
HexColor2(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor2(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HexColor3():string|null
HexColor3(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor3(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HexColor4():string|null
HexColor4(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor4(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.HeroSkinData';
}

static startHeroSkinData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_SkinID(builder:flatbuffers.Builder, SkinID:number) {
  builder.addFieldInt32(0, SkinID, 0);
}

static add_HexColor1(builder:flatbuffers.Builder, HexColor1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(1, HexColor1Offset, 0);
}

static add_HexColor2(builder:flatbuffers.Builder, HexColor2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(2, HexColor2Offset, 0);
}

static add_HexColor3(builder:flatbuffers.Builder, HexColor3Offset:flatbuffers.Offset) {
  builder.addFieldOffset(3, HexColor3Offset, 0);
}

static add_HexColor4(builder:flatbuffers.Builder, HexColor4Offset:flatbuffers.Offset) {
  builder.addFieldOffset(4, HexColor4Offset, 0);
}

static endHeroSkinData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHeroSkinData(builder:flatbuffers.Builder, SkinID:number, HexColor1Offset:flatbuffers.Offset, HexColor2Offset:flatbuffers.Offset, HexColor3Offset:flatbuffers.Offset, HexColor4Offset:flatbuffers.Offset):flatbuffers.Offset {
  HeroSkinData.startHeroSkinData(builder);
  HeroSkinData.add_SkinID(builder, SkinID);
  HeroSkinData.add_HexColor1(builder, HexColor1Offset);
  HeroSkinData.add_HexColor2(builder, HexColor2Offset);
  HeroSkinData.add_HexColor3(builder, HexColor3Offset);
  HeroSkinData.add_HexColor4(builder, HexColor4Offset);
  return HeroSkinData.endHeroSkinData(builder);
}

unpack(): HeroSkinDataT {
  return new HeroSkinDataT(
    this.SkinID(),
    this.HexColor1(),
    this.HexColor2(),
    this.HexColor3(),
    this.HexColor4()
  );
}


unpackTo(_o: HeroSkinDataT): void {
  _o.SkinID = this.SkinID();
  _o.HexColor1 = this.HexColor1();
  _o.HexColor2 = this.HexColor2();
  _o.HexColor3 = this.HexColor3();
  _o.HexColor4 = this.HexColor4();
}
}

export class HeroSkinDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SkinID: number = 0,
  public HexColor1: string|Uint8Array|null = null,
  public HexColor2: string|Uint8Array|null = null,
  public HexColor3: string|Uint8Array|null = null,
  public HexColor4: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const HexColor1 = (this.HexColor1 !== null ? builder.createString(this.HexColor1!) : 0);
  const HexColor2 = (this.HexColor2 !== null ? builder.createString(this.HexColor2!) : 0);
  const HexColor3 = (this.HexColor3 !== null ? builder.createString(this.HexColor3!) : 0);
  const HexColor4 = (this.HexColor4 !== null ? builder.createString(this.HexColor4!) : 0);

  return HeroSkinData.createHeroSkinData(builder,
    this.SkinID,
    HexColor1,
    HexColor2,
    HexColor3,
    HexColor4
  );
}
}

export class HeroSkinColorChangeData implements flatbuffers.IUnpackableObject<HeroSkinColorChangeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HeroSkinColorChangeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeroSkinColorChangeData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinColorChangeData):HeroSkinColorChangeData {
  return (obj || new HeroSkinColorChangeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeroSkinColorChangeData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinColorChangeData):HeroSkinColorChangeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeroSkinColorChangeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ColorReset1():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DyeID1():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HexColor1():string|null
HexColor1(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor1(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ColorReset2():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DyeID2():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HexColor2():string|null
HexColor2(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor2(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ColorReset3():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DyeID3():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HexColor3():string|null
HexColor3(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor3(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ColorReset4():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DyeID4():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HexColor4():string|null
HexColor4(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HexColor4(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.HeroSkinColorChangeData';
}

static startHeroSkinColorChangeData(builder:flatbuffers.Builder) {
  builder.startObject(13);
}

static add_SkinID(builder:flatbuffers.Builder, SkinID:number) {
  builder.addFieldInt32(0, SkinID, 0);
}

static add_ColorReset1(builder:flatbuffers.Builder, ColorReset1:boolean) {
  builder.addFieldInt8(1, +ColorReset1, +false);
}

static add_DyeID1(builder:flatbuffers.Builder, DyeID1:number) {
  builder.addFieldInt32(2, DyeID1, 0);
}

static add_HexColor1(builder:flatbuffers.Builder, HexColor1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(3, HexColor1Offset, 0);
}

static add_ColorReset2(builder:flatbuffers.Builder, ColorReset2:boolean) {
  builder.addFieldInt8(4, +ColorReset2, +false);
}

static add_DyeID2(builder:flatbuffers.Builder, DyeID2:number) {
  builder.addFieldInt32(5, DyeID2, 0);
}

static add_HexColor2(builder:flatbuffers.Builder, HexColor2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(6, HexColor2Offset, 0);
}

static add_ColorReset3(builder:flatbuffers.Builder, ColorReset3:boolean) {
  builder.addFieldInt8(7, +ColorReset3, +false);
}

static add_DyeID3(builder:flatbuffers.Builder, DyeID3:number) {
  builder.addFieldInt32(8, DyeID3, 0);
}

static add_HexColor3(builder:flatbuffers.Builder, HexColor3Offset:flatbuffers.Offset) {
  builder.addFieldOffset(9, HexColor3Offset, 0);
}

static add_ColorReset4(builder:flatbuffers.Builder, ColorReset4:boolean) {
  builder.addFieldInt8(10, +ColorReset4, +false);
}

static add_DyeID4(builder:flatbuffers.Builder, DyeID4:number) {
  builder.addFieldInt32(11, DyeID4, 0);
}

static add_HexColor4(builder:flatbuffers.Builder, HexColor4Offset:flatbuffers.Offset) {
  builder.addFieldOffset(12, HexColor4Offset, 0);
}

static endHeroSkinColorChangeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHeroSkinColorChangeData(builder:flatbuffers.Builder, SkinID:number, ColorReset1:boolean, DyeID1:number, HexColor1Offset:flatbuffers.Offset, ColorReset2:boolean, DyeID2:number, HexColor2Offset:flatbuffers.Offset, ColorReset3:boolean, DyeID3:number, HexColor3Offset:flatbuffers.Offset, ColorReset4:boolean, DyeID4:number, HexColor4Offset:flatbuffers.Offset):flatbuffers.Offset {
  HeroSkinColorChangeData.startHeroSkinColorChangeData(builder);
  HeroSkinColorChangeData.add_SkinID(builder, SkinID);
  HeroSkinColorChangeData.add_ColorReset1(builder, ColorReset1);
  HeroSkinColorChangeData.add_DyeID1(builder, DyeID1);
  HeroSkinColorChangeData.add_HexColor1(builder, HexColor1Offset);
  HeroSkinColorChangeData.add_ColorReset2(builder, ColorReset2);
  HeroSkinColorChangeData.add_DyeID2(builder, DyeID2);
  HeroSkinColorChangeData.add_HexColor2(builder, HexColor2Offset);
  HeroSkinColorChangeData.add_ColorReset3(builder, ColorReset3);
  HeroSkinColorChangeData.add_DyeID3(builder, DyeID3);
  HeroSkinColorChangeData.add_HexColor3(builder, HexColor3Offset);
  HeroSkinColorChangeData.add_ColorReset4(builder, ColorReset4);
  HeroSkinColorChangeData.add_DyeID4(builder, DyeID4);
  HeroSkinColorChangeData.add_HexColor4(builder, HexColor4Offset);
  return HeroSkinColorChangeData.endHeroSkinColorChangeData(builder);
}

unpack(): HeroSkinColorChangeDataT {
  return new HeroSkinColorChangeDataT(
    this.SkinID(),
    this.ColorReset1(),
    this.DyeID1(),
    this.HexColor1(),
    this.ColorReset2(),
    this.DyeID2(),
    this.HexColor2(),
    this.ColorReset3(),
    this.DyeID3(),
    this.HexColor3(),
    this.ColorReset4(),
    this.DyeID4(),
    this.HexColor4()
  );
}


unpackTo(_o: HeroSkinColorChangeDataT): void {
  _o.SkinID = this.SkinID();
  _o.ColorReset1 = this.ColorReset1();
  _o.DyeID1 = this.DyeID1();
  _o.HexColor1 = this.HexColor1();
  _o.ColorReset2 = this.ColorReset2();
  _o.DyeID2 = this.DyeID2();
  _o.HexColor2 = this.HexColor2();
  _o.ColorReset3 = this.ColorReset3();
  _o.DyeID3 = this.DyeID3();
  _o.HexColor3 = this.HexColor3();
  _o.ColorReset4 = this.ColorReset4();
  _o.DyeID4 = this.DyeID4();
  _o.HexColor4 = this.HexColor4();
}
}

export class HeroSkinColorChangeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SkinID: number = 0,
  public ColorReset1: boolean = false,
  public DyeID1: number = 0,
  public HexColor1: string|Uint8Array|null = null,
  public ColorReset2: boolean = false,
  public DyeID2: number = 0,
  public HexColor2: string|Uint8Array|null = null,
  public ColorReset3: boolean = false,
  public DyeID3: number = 0,
  public HexColor3: string|Uint8Array|null = null,
  public ColorReset4: boolean = false,
  public DyeID4: number = 0,
  public HexColor4: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const HexColor1 = (this.HexColor1 !== null ? builder.createString(this.HexColor1!) : 0);
  const HexColor2 = (this.HexColor2 !== null ? builder.createString(this.HexColor2!) : 0);
  const HexColor3 = (this.HexColor3 !== null ? builder.createString(this.HexColor3!) : 0);
  const HexColor4 = (this.HexColor4 !== null ? builder.createString(this.HexColor4!) : 0);

  return HeroSkinColorChangeData.createHeroSkinColorChangeData(builder,
    this.SkinID,
    this.ColorReset1,
    this.DyeID1,
    HexColor1,
    this.ColorReset2,
    this.DyeID2,
    HexColor2,
    this.ColorReset3,
    this.DyeID3,
    HexColor3,
    this.ColorReset4,
    this.DyeID4,
    HexColor4
  );
}
}

export class HeroSkinPresetSlotData implements flatbuffers.IUnpackableObject<HeroSkinPresetSlotDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HeroSkinPresetSlotData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeroSkinPresetSlotData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinPresetSlotData):HeroSkinPresetSlotData {
  return (obj || new HeroSkinPresetSlotData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeroSkinPresetSlotData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinPresetSlotData):HeroSkinPresetSlotData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeroSkinPresetSlotData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PresetName():string|null
PresetName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PresetName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LeftEyeHexColor():string|null
LeftEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LeftEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RightEyeHexColor():string|null
RightEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RightEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HairSkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HairHexColor1():string|null
HairHexColor1(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HairHexColor1(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HairHexColor2():string|null
HairHexColor2(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
HairHexColor2(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

BodySkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BodyHexColor1():string|null
BodyHexColor1(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
BodyHexColor1(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

BodyHexColor2():string|null
BodyHexColor2(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
BodyHexColor2(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

BodyHexColor3():string|null
BodyHexColor3(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
BodyHexColor3(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

BodyHexColor4():string|null
BodyHexColor4(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
BodyHexColor4(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HeadID():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeadOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

HeadRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FaceOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

FaceRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackID():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BackOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

BackRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisID():number {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PelvisOffsetX():number {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisOffsetZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisOffsetW():number {
  const offset = this.bb!.__offset(this.bb_pos, 82);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisRotateX():number {
  const offset = this.bb!.__offset(this.bb_pos, 84);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisRotateY():number {
  const offset = this.bb!.__offset(this.bb_pos, 86);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PelvisRotateZ():number {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

WeaponID():number {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

WinPoseID():number {
  const offset = this.bb!.__offset(this.bb_pos, 92);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.HeroSkinPresetSlotData';
}

static startHeroSkinPresetSlotData(builder:flatbuffers.Builder) {
  builder.startObject(45);
}

static add_PresetName(builder:flatbuffers.Builder, PresetNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PresetNameOffset, 0);
}

static add_LeftEyeHexColor(builder:flatbuffers.Builder, LeftEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, LeftEyeHexColorOffset, 0);
}

static add_RightEyeHexColor(builder:flatbuffers.Builder, RightEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RightEyeHexColorOffset, 0);
}

static add_HairSkinID(builder:flatbuffers.Builder, HairSkinID:number) {
  builder.addFieldInt32(3, HairSkinID, 0);
}

static add_HairHexColor1(builder:flatbuffers.Builder, HairHexColor1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(4, HairHexColor1Offset, 0);
}

static add_HairHexColor2(builder:flatbuffers.Builder, HairHexColor2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(5, HairHexColor2Offset, 0);
}

static add_BodySkinID(builder:flatbuffers.Builder, BodySkinID:number) {
  builder.addFieldInt32(6, BodySkinID, 0);
}

static add_BodyHexColor1(builder:flatbuffers.Builder, BodyHexColor1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(7, BodyHexColor1Offset, 0);
}

static add_BodyHexColor2(builder:flatbuffers.Builder, BodyHexColor2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(8, BodyHexColor2Offset, 0);
}

static add_BodyHexColor3(builder:flatbuffers.Builder, BodyHexColor3Offset:flatbuffers.Offset) {
  builder.addFieldOffset(9, BodyHexColor3Offset, 0);
}

static add_BodyHexColor4(builder:flatbuffers.Builder, BodyHexColor4Offset:flatbuffers.Offset) {
  builder.addFieldOffset(10, BodyHexColor4Offset, 0);
}

static add_HeadID(builder:flatbuffers.Builder, HeadID:number) {
  builder.addFieldInt32(11, HeadID, 0);
}

static add_HeadOffsetX(builder:flatbuffers.Builder, HeadOffsetX:number) {
  builder.addFieldFloat32(12, HeadOffsetX, 0.0);
}

static add_HeadOffsetY(builder:flatbuffers.Builder, HeadOffsetY:number) {
  builder.addFieldFloat32(13, HeadOffsetY, 0.0);
}

static add_HeadOffsetZ(builder:flatbuffers.Builder, HeadOffsetZ:number) {
  builder.addFieldFloat32(14, HeadOffsetZ, 0.0);
}

static add_HeadOffsetW(builder:flatbuffers.Builder, HeadOffsetW:number) {
  builder.addFieldFloat32(15, HeadOffsetW, 0.0);
}

static add_HeadRotateX(builder:flatbuffers.Builder, HeadRotateX:number) {
  builder.addFieldFloat32(16, HeadRotateX, 0.0);
}

static add_HeadRotateY(builder:flatbuffers.Builder, HeadRotateY:number) {
  builder.addFieldFloat32(17, HeadRotateY, 0.0);
}

static add_HeadRotateZ(builder:flatbuffers.Builder, HeadRotateZ:number) {
  builder.addFieldFloat32(18, HeadRotateZ, 0.0);
}

static add_FaceID(builder:flatbuffers.Builder, FaceID:number) {
  builder.addFieldInt32(19, FaceID, 0);
}

static add_FaceOffsetX(builder:flatbuffers.Builder, FaceOffsetX:number) {
  builder.addFieldFloat32(20, FaceOffsetX, 0.0);
}

static add_FaceOffsetY(builder:flatbuffers.Builder, FaceOffsetY:number) {
  builder.addFieldFloat32(21, FaceOffsetY, 0.0);
}

static add_FaceOffsetZ(builder:flatbuffers.Builder, FaceOffsetZ:number) {
  builder.addFieldFloat32(22, FaceOffsetZ, 0.0);
}

static add_FaceOffsetW(builder:flatbuffers.Builder, FaceOffsetW:number) {
  builder.addFieldFloat32(23, FaceOffsetW, 0.0);
}

static add_FaceRotateX(builder:flatbuffers.Builder, FaceRotateX:number) {
  builder.addFieldFloat32(24, FaceRotateX, 0.0);
}

static add_FaceRotateY(builder:flatbuffers.Builder, FaceRotateY:number) {
  builder.addFieldFloat32(25, FaceRotateY, 0.0);
}

static add_FaceRotateZ(builder:flatbuffers.Builder, FaceRotateZ:number) {
  builder.addFieldFloat32(26, FaceRotateZ, 0.0);
}

static add_BackID(builder:flatbuffers.Builder, BackID:number) {
  builder.addFieldInt32(27, BackID, 0);
}

static add_BackOffsetX(builder:flatbuffers.Builder, BackOffsetX:number) {
  builder.addFieldFloat32(28, BackOffsetX, 0.0);
}

static add_BackOffsetY(builder:flatbuffers.Builder, BackOffsetY:number) {
  builder.addFieldFloat32(29, BackOffsetY, 0.0);
}

static add_BackOffsetZ(builder:flatbuffers.Builder, BackOffsetZ:number) {
  builder.addFieldFloat32(30, BackOffsetZ, 0.0);
}

static add_BackOffsetW(builder:flatbuffers.Builder, BackOffsetW:number) {
  builder.addFieldFloat32(31, BackOffsetW, 0.0);
}

static add_BackRotateX(builder:flatbuffers.Builder, BackRotateX:number) {
  builder.addFieldFloat32(32, BackRotateX, 0.0);
}

static add_BackRotateY(builder:flatbuffers.Builder, BackRotateY:number) {
  builder.addFieldFloat32(33, BackRotateY, 0.0);
}

static add_BackRotateZ(builder:flatbuffers.Builder, BackRotateZ:number) {
  builder.addFieldFloat32(34, BackRotateZ, 0.0);
}

static add_PelvisID(builder:flatbuffers.Builder, PelvisID:number) {
  builder.addFieldInt32(35, PelvisID, 0);
}

static add_PelvisOffsetX(builder:flatbuffers.Builder, PelvisOffsetX:number) {
  builder.addFieldFloat32(36, PelvisOffsetX, 0.0);
}

static add_PelvisOffsetY(builder:flatbuffers.Builder, PelvisOffsetY:number) {
  builder.addFieldFloat32(37, PelvisOffsetY, 0.0);
}

static add_PelvisOffsetZ(builder:flatbuffers.Builder, PelvisOffsetZ:number) {
  builder.addFieldFloat32(38, PelvisOffsetZ, 0.0);
}

static add_PelvisOffsetW(builder:flatbuffers.Builder, PelvisOffsetW:number) {
  builder.addFieldFloat32(39, PelvisOffsetW, 0.0);
}

static add_PelvisRotateX(builder:flatbuffers.Builder, PelvisRotateX:number) {
  builder.addFieldFloat32(40, PelvisRotateX, 0.0);
}

static add_PelvisRotateY(builder:flatbuffers.Builder, PelvisRotateY:number) {
  builder.addFieldFloat32(41, PelvisRotateY, 0.0);
}

static add_PelvisRotateZ(builder:flatbuffers.Builder, PelvisRotateZ:number) {
  builder.addFieldFloat32(42, PelvisRotateZ, 0.0);
}

static add_WeaponID(builder:flatbuffers.Builder, WeaponID:number) {
  builder.addFieldInt32(43, WeaponID, 0);
}

static add_WinPoseID(builder:flatbuffers.Builder, WinPoseID:number) {
  builder.addFieldInt32(44, WinPoseID, 0);
}

static endHeroSkinPresetSlotData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHeroSkinPresetSlotData(builder:flatbuffers.Builder, PresetNameOffset:flatbuffers.Offset, LeftEyeHexColorOffset:flatbuffers.Offset, RightEyeHexColorOffset:flatbuffers.Offset, HairSkinID:number, HairHexColor1Offset:flatbuffers.Offset, HairHexColor2Offset:flatbuffers.Offset, BodySkinID:number, BodyHexColor1Offset:flatbuffers.Offset, BodyHexColor2Offset:flatbuffers.Offset, BodyHexColor3Offset:flatbuffers.Offset, BodyHexColor4Offset:flatbuffers.Offset, HeadID:number, HeadOffsetX:number, HeadOffsetY:number, HeadOffsetZ:number, HeadOffsetW:number, HeadRotateX:number, HeadRotateY:number, HeadRotateZ:number, FaceID:number, FaceOffsetX:number, FaceOffsetY:number, FaceOffsetZ:number, FaceOffsetW:number, FaceRotateX:number, FaceRotateY:number, FaceRotateZ:number, BackID:number, BackOffsetX:number, BackOffsetY:number, BackOffsetZ:number, BackOffsetW:number, BackRotateX:number, BackRotateY:number, BackRotateZ:number, PelvisID:number, PelvisOffsetX:number, PelvisOffsetY:number, PelvisOffsetZ:number, PelvisOffsetW:number, PelvisRotateX:number, PelvisRotateY:number, PelvisRotateZ:number, WeaponID:number, WinPoseID:number):flatbuffers.Offset {
  HeroSkinPresetSlotData.startHeroSkinPresetSlotData(builder);
  HeroSkinPresetSlotData.add_PresetName(builder, PresetNameOffset);
  HeroSkinPresetSlotData.add_LeftEyeHexColor(builder, LeftEyeHexColorOffset);
  HeroSkinPresetSlotData.add_RightEyeHexColor(builder, RightEyeHexColorOffset);
  HeroSkinPresetSlotData.add_HairSkinID(builder, HairSkinID);
  HeroSkinPresetSlotData.add_HairHexColor1(builder, HairHexColor1Offset);
  HeroSkinPresetSlotData.add_HairHexColor2(builder, HairHexColor2Offset);
  HeroSkinPresetSlotData.add_BodySkinID(builder, BodySkinID);
  HeroSkinPresetSlotData.add_BodyHexColor1(builder, BodyHexColor1Offset);
  HeroSkinPresetSlotData.add_BodyHexColor2(builder, BodyHexColor2Offset);
  HeroSkinPresetSlotData.add_BodyHexColor3(builder, BodyHexColor3Offset);
  HeroSkinPresetSlotData.add_BodyHexColor4(builder, BodyHexColor4Offset);
  HeroSkinPresetSlotData.add_HeadID(builder, HeadID);
  HeroSkinPresetSlotData.add_HeadOffsetX(builder, HeadOffsetX);
  HeroSkinPresetSlotData.add_HeadOffsetY(builder, HeadOffsetY);
  HeroSkinPresetSlotData.add_HeadOffsetZ(builder, HeadOffsetZ);
  HeroSkinPresetSlotData.add_HeadOffsetW(builder, HeadOffsetW);
  HeroSkinPresetSlotData.add_HeadRotateX(builder, HeadRotateX);
  HeroSkinPresetSlotData.add_HeadRotateY(builder, HeadRotateY);
  HeroSkinPresetSlotData.add_HeadRotateZ(builder, HeadRotateZ);
  HeroSkinPresetSlotData.add_FaceID(builder, FaceID);
  HeroSkinPresetSlotData.add_FaceOffsetX(builder, FaceOffsetX);
  HeroSkinPresetSlotData.add_FaceOffsetY(builder, FaceOffsetY);
  HeroSkinPresetSlotData.add_FaceOffsetZ(builder, FaceOffsetZ);
  HeroSkinPresetSlotData.add_FaceOffsetW(builder, FaceOffsetW);
  HeroSkinPresetSlotData.add_FaceRotateX(builder, FaceRotateX);
  HeroSkinPresetSlotData.add_FaceRotateY(builder, FaceRotateY);
  HeroSkinPresetSlotData.add_FaceRotateZ(builder, FaceRotateZ);
  HeroSkinPresetSlotData.add_BackID(builder, BackID);
  HeroSkinPresetSlotData.add_BackOffsetX(builder, BackOffsetX);
  HeroSkinPresetSlotData.add_BackOffsetY(builder, BackOffsetY);
  HeroSkinPresetSlotData.add_BackOffsetZ(builder, BackOffsetZ);
  HeroSkinPresetSlotData.add_BackOffsetW(builder, BackOffsetW);
  HeroSkinPresetSlotData.add_BackRotateX(builder, BackRotateX);
  HeroSkinPresetSlotData.add_BackRotateY(builder, BackRotateY);
  HeroSkinPresetSlotData.add_BackRotateZ(builder, BackRotateZ);
  HeroSkinPresetSlotData.add_PelvisID(builder, PelvisID);
  HeroSkinPresetSlotData.add_PelvisOffsetX(builder, PelvisOffsetX);
  HeroSkinPresetSlotData.add_PelvisOffsetY(builder, PelvisOffsetY);
  HeroSkinPresetSlotData.add_PelvisOffsetZ(builder, PelvisOffsetZ);
  HeroSkinPresetSlotData.add_PelvisOffsetW(builder, PelvisOffsetW);
  HeroSkinPresetSlotData.add_PelvisRotateX(builder, PelvisRotateX);
  HeroSkinPresetSlotData.add_PelvisRotateY(builder, PelvisRotateY);
  HeroSkinPresetSlotData.add_PelvisRotateZ(builder, PelvisRotateZ);
  HeroSkinPresetSlotData.add_WeaponID(builder, WeaponID);
  HeroSkinPresetSlotData.add_WinPoseID(builder, WinPoseID);
  return HeroSkinPresetSlotData.endHeroSkinPresetSlotData(builder);
}

unpack(): HeroSkinPresetSlotDataT {
  return new HeroSkinPresetSlotDataT(
    this.PresetName(),
    this.LeftEyeHexColor(),
    this.RightEyeHexColor(),
    this.HairSkinID(),
    this.HairHexColor1(),
    this.HairHexColor2(),
    this.BodySkinID(),
    this.BodyHexColor1(),
    this.BodyHexColor2(),
    this.BodyHexColor3(),
    this.BodyHexColor4(),
    this.HeadID(),
    this.HeadOffsetX(),
    this.HeadOffsetY(),
    this.HeadOffsetZ(),
    this.HeadOffsetW(),
    this.HeadRotateX(),
    this.HeadRotateY(),
    this.HeadRotateZ(),
    this.FaceID(),
    this.FaceOffsetX(),
    this.FaceOffsetY(),
    this.FaceOffsetZ(),
    this.FaceOffsetW(),
    this.FaceRotateX(),
    this.FaceRotateY(),
    this.FaceRotateZ(),
    this.BackID(),
    this.BackOffsetX(),
    this.BackOffsetY(),
    this.BackOffsetZ(),
    this.BackOffsetW(),
    this.BackRotateX(),
    this.BackRotateY(),
    this.BackRotateZ(),
    this.PelvisID(),
    this.PelvisOffsetX(),
    this.PelvisOffsetY(),
    this.PelvisOffsetZ(),
    this.PelvisOffsetW(),
    this.PelvisRotateX(),
    this.PelvisRotateY(),
    this.PelvisRotateZ(),
    this.WeaponID(),
    this.WinPoseID()
  );
}


unpackTo(_o: HeroSkinPresetSlotDataT): void {
  _o.PresetName = this.PresetName();
  _o.LeftEyeHexColor = this.LeftEyeHexColor();
  _o.RightEyeHexColor = this.RightEyeHexColor();
  _o.HairSkinID = this.HairSkinID();
  _o.HairHexColor1 = this.HairHexColor1();
  _o.HairHexColor2 = this.HairHexColor2();
  _o.BodySkinID = this.BodySkinID();
  _o.BodyHexColor1 = this.BodyHexColor1();
  _o.BodyHexColor2 = this.BodyHexColor2();
  _o.BodyHexColor3 = this.BodyHexColor3();
  _o.BodyHexColor4 = this.BodyHexColor4();
  _o.HeadID = this.HeadID();
  _o.HeadOffsetX = this.HeadOffsetX();
  _o.HeadOffsetY = this.HeadOffsetY();
  _o.HeadOffsetZ = this.HeadOffsetZ();
  _o.HeadOffsetW = this.HeadOffsetW();
  _o.HeadRotateX = this.HeadRotateX();
  _o.HeadRotateY = this.HeadRotateY();
  _o.HeadRotateZ = this.HeadRotateZ();
  _o.FaceID = this.FaceID();
  _o.FaceOffsetX = this.FaceOffsetX();
  _o.FaceOffsetY = this.FaceOffsetY();
  _o.FaceOffsetZ = this.FaceOffsetZ();
  _o.FaceOffsetW = this.FaceOffsetW();
  _o.FaceRotateX = this.FaceRotateX();
  _o.FaceRotateY = this.FaceRotateY();
  _o.FaceRotateZ = this.FaceRotateZ();
  _o.BackID = this.BackID();
  _o.BackOffsetX = this.BackOffsetX();
  _o.BackOffsetY = this.BackOffsetY();
  _o.BackOffsetZ = this.BackOffsetZ();
  _o.BackOffsetW = this.BackOffsetW();
  _o.BackRotateX = this.BackRotateX();
  _o.BackRotateY = this.BackRotateY();
  _o.BackRotateZ = this.BackRotateZ();
  _o.PelvisID = this.PelvisID();
  _o.PelvisOffsetX = this.PelvisOffsetX();
  _o.PelvisOffsetY = this.PelvisOffsetY();
  _o.PelvisOffsetZ = this.PelvisOffsetZ();
  _o.PelvisOffsetW = this.PelvisOffsetW();
  _o.PelvisRotateX = this.PelvisRotateX();
  _o.PelvisRotateY = this.PelvisRotateY();
  _o.PelvisRotateZ = this.PelvisRotateZ();
  _o.WeaponID = this.WeaponID();
  _o.WinPoseID = this.WinPoseID();
}
}

export class HeroSkinPresetSlotDataT implements flatbuffers.IGeneratedObject {
constructor(
  public PresetName: string|Uint8Array|null = null,
  public LeftEyeHexColor: string|Uint8Array|null = null,
  public RightEyeHexColor: string|Uint8Array|null = null,
  public HairSkinID: number = 0,
  public HairHexColor1: string|Uint8Array|null = null,
  public HairHexColor2: string|Uint8Array|null = null,
  public BodySkinID: number = 0,
  public BodyHexColor1: string|Uint8Array|null = null,
  public BodyHexColor2: string|Uint8Array|null = null,
  public BodyHexColor3: string|Uint8Array|null = null,
  public BodyHexColor4: string|Uint8Array|null = null,
  public HeadID: number = 0,
  public HeadOffsetX: number = 0.0,
  public HeadOffsetY: number = 0.0,
  public HeadOffsetZ: number = 0.0,
  public HeadOffsetW: number = 0.0,
  public HeadRotateX: number = 0.0,
  public HeadRotateY: number = 0.0,
  public HeadRotateZ: number = 0.0,
  public FaceID: number = 0,
  public FaceOffsetX: number = 0.0,
  public FaceOffsetY: number = 0.0,
  public FaceOffsetZ: number = 0.0,
  public FaceOffsetW: number = 0.0,
  public FaceRotateX: number = 0.0,
  public FaceRotateY: number = 0.0,
  public FaceRotateZ: number = 0.0,
  public BackID: number = 0,
  public BackOffsetX: number = 0.0,
  public BackOffsetY: number = 0.0,
  public BackOffsetZ: number = 0.0,
  public BackOffsetW: number = 0.0,
  public BackRotateX: number = 0.0,
  public BackRotateY: number = 0.0,
  public BackRotateZ: number = 0.0,
  public PelvisID: number = 0,
  public PelvisOffsetX: number = 0.0,
  public PelvisOffsetY: number = 0.0,
  public PelvisOffsetZ: number = 0.0,
  public PelvisOffsetW: number = 0.0,
  public PelvisRotateX: number = 0.0,
  public PelvisRotateY: number = 0.0,
  public PelvisRotateZ: number = 0.0,
  public WeaponID: number = 0,
  public WinPoseID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetName = (this.PresetName !== null ? builder.createString(this.PresetName!) : 0);
  const LeftEyeHexColor = (this.LeftEyeHexColor !== null ? builder.createString(this.LeftEyeHexColor!) : 0);
  const RightEyeHexColor = (this.RightEyeHexColor !== null ? builder.createString(this.RightEyeHexColor!) : 0);
  const HairHexColor1 = (this.HairHexColor1 !== null ? builder.createString(this.HairHexColor1!) : 0);
  const HairHexColor2 = (this.HairHexColor2 !== null ? builder.createString(this.HairHexColor2!) : 0);
  const BodyHexColor1 = (this.BodyHexColor1 !== null ? builder.createString(this.BodyHexColor1!) : 0);
  const BodyHexColor2 = (this.BodyHexColor2 !== null ? builder.createString(this.BodyHexColor2!) : 0);
  const BodyHexColor3 = (this.BodyHexColor3 !== null ? builder.createString(this.BodyHexColor3!) : 0);
  const BodyHexColor4 = (this.BodyHexColor4 !== null ? builder.createString(this.BodyHexColor4!) : 0);

  return HeroSkinPresetSlotData.createHeroSkinPresetSlotData(builder,
    PresetName,
    LeftEyeHexColor,
    RightEyeHexColor,
    this.HairSkinID,
    HairHexColor1,
    HairHexColor2,
    this.BodySkinID,
    BodyHexColor1,
    BodyHexColor2,
    BodyHexColor3,
    BodyHexColor4,
    this.HeadID,
    this.HeadOffsetX,
    this.HeadOffsetY,
    this.HeadOffsetZ,
    this.HeadOffsetW,
    this.HeadRotateX,
    this.HeadRotateY,
    this.HeadRotateZ,
    this.FaceID,
    this.FaceOffsetX,
    this.FaceOffsetY,
    this.FaceOffsetZ,
    this.FaceOffsetW,
    this.FaceRotateX,
    this.FaceRotateY,
    this.FaceRotateZ,
    this.BackID,
    this.BackOffsetX,
    this.BackOffsetY,
    this.BackOffsetZ,
    this.BackOffsetW,
    this.BackRotateX,
    this.BackRotateY,
    this.BackRotateZ,
    this.PelvisID,
    this.PelvisOffsetX,
    this.PelvisOffsetY,
    this.PelvisOffsetZ,
    this.PelvisOffsetW,
    this.PelvisRotateX,
    this.PelvisRotateY,
    this.PelvisRotateZ,
    this.WeaponID,
    this.WinPoseID
  );
}
}

export class HeroSkinPresetData implements flatbuffers.IUnpackableObject<HeroSkinPresetDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HeroSkinPresetData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeroSkinPresetData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinPresetData):HeroSkinPresetData {
  return (obj || new HeroSkinPresetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeroSkinPresetData(bb:flatbuffers.ByteBuffer, obj?:HeroSkinPresetData):HeroSkinPresetData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeroSkinPresetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

PresetData(obj?:HeroSkinPresetSlotData):HeroSkinPresetSlotData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new HeroSkinPresetSlotData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.HeroSkinPresetData';
}

static startHeroSkinPresetData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(1, SlotID, 0);
}

static add_PresetData(builder:flatbuffers.Builder, PresetDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, PresetDataOffset, 0);
}

static endHeroSkinPresetData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): HeroSkinPresetDataT {
  return new HeroSkinPresetDataT(
    this.HeroID(),
    this.SlotID(),
    (this.PresetData() !== null ? this.PresetData()!.unpack() : null)
  );
}


unpackTo(_o: HeroSkinPresetDataT): void {
  _o.HeroID = this.HeroID();
  _o.SlotID = this.SlotID();
  _o.PresetData = (this.PresetData() !== null ? this.PresetData()!.unpack() : null);
}
}

export class HeroSkinPresetDataT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public SlotID: number = 0,
  public PresetData: HeroSkinPresetSlotDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetData = (this.PresetData !== null ? this.PresetData!.pack(builder) : 0);

  HeroSkinPresetData.startHeroSkinPresetData(builder);
  HeroSkinPresetData.add_HeroID(builder, this.HeroID);
  HeroSkinPresetData.add_SlotID(builder, this.SlotID);
  HeroSkinPresetData.add_PresetData(builder, PresetData);

  return HeroSkinPresetData.endHeroSkinPresetData(builder);
}
}

export class ItemData implements flatbuffers.IUnpackableObject<ItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ItemID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.ItemData';
}

static sizeOf():number {
  return 8;
}

static createItemData(builder:flatbuffers.Builder, ItemID: number, Count: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Count);
  builder.writeInt32(ItemID);
  return builder.offset();
}


unpack(): ItemDataT {
  return new ItemDataT(
    this.ItemID(),
    this.Count()
  );
}


unpackTo(_o: ItemDataT): void {
  _o.ItemID = this.ItemID();
  _o.Count = this.Count();
}
}

export class ItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ItemID: number = 0,
  public Count: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ItemData.createItemData(builder,
    this.ItemID,
    this.Count
  );
}
}

export class MonsterData implements flatbuffers.IUnpackableObject<MonsterDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MonsterData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

MonsterID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.MonsterData';
}

static sizeOf():number {
  return 8;
}

static createMonsterData(builder:flatbuffers.Builder, MonsterID: number, Count: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Count);
  builder.writeInt32(MonsterID);
  return builder.offset();
}


unpack(): MonsterDataT {
  return new MonsterDataT(
    this.MonsterID(),
    this.Count()
  );
}


unpackTo(_o: MonsterDataT): void {
  _o.MonsterID = this.MonsterID();
  _o.Count = this.Count();
}
}

export class MonsterDataT implements flatbuffers.IGeneratedObject {
constructor(
  public MonsterID: number = 0,
  public Count: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MonsterData.createMonsterData(builder,
    this.MonsterID,
    this.Count
  );
}
}

export class CraftData implements flatbuffers.IUnpackableObject<CraftDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CraftData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

CraftID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.CraftData';
}

static sizeOf():number {
  return 8;
}

static createCraftData(builder:flatbuffers.Builder, CraftID: number, Count: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Count);
  builder.writeInt32(CraftID);
  return builder.offset();
}


unpack(): CraftDataT {
  return new CraftDataT(
    this.CraftID(),
    this.Count()
  );
}


unpackTo(_o: CraftDataT): void {
  _o.CraftID = this.CraftID();
  _o.Count = this.Count();
}
}

export class CraftDataT implements flatbuffers.IGeneratedObject {
constructor(
  public CraftID: number = 0,
  public Count: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CraftData.createCraftData(builder,
    this.CraftID,
    this.Count
  );
}
}

export class PetData implements flatbuffers.IUnpackableObject<PetDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PetData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPetData(bb:flatbuffers.ByteBuffer, obj?:PetData):PetData {
  return (obj || new PetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPetData(bb:flatbuffers.ByteBuffer, obj?:PetData):PetData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

PetID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Ability(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

Ability_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

Ability_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

Like():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsLocked():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.PetData';
}

static startPetData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_UniqueID(builder:flatbuffers.Builder, UniqueID:number) {
  builder.addFieldInt64(0, BigInt(UniqueID), BigInt(0));
}

static add_PetID(builder:flatbuffers.Builder, PetID:number) {
  builder.addFieldInt32(1, PetID, 0);
}

static add_Ability(builder:flatbuffers.Builder, AbilityOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, AbilityOffset, 0);
}

static create_Ability_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_Ability_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_Ability_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_Ability_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_Like(builder:flatbuffers.Builder, Like:number) {
  builder.addFieldInt32(3, Like, 0);
}

static add_IsLocked(builder:flatbuffers.Builder, IsLocked:boolean) {
  builder.addFieldInt8(4, +IsLocked, +false);
}

static endPetData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPetData(builder:flatbuffers.Builder, UniqueID:number, PetID:number, AbilityOffset:flatbuffers.Offset, Like:number, IsLocked:boolean):flatbuffers.Offset {
  PetData.startPetData(builder);
  PetData.add_UniqueID(builder, UniqueID);
  PetData.add_PetID(builder, PetID);
  PetData.add_Ability(builder, AbilityOffset);
  PetData.add_Like(builder, Like);
  PetData.add_IsLocked(builder, IsLocked);
  return PetData.endPetData(builder);
}

unpack(): PetDataT {
  return new PetDataT(
    this.UniqueID(),
    this.PetID(),
    this.bb!.createScalarList<number>(this.Ability.bind(this), this.Ability_Length()),
    this.Like(),
    this.IsLocked()
  );
}


unpackTo(_o: PetDataT): void {
  _o.UniqueID = this.UniqueID();
  _o.PetID = this.PetID();
  _o.Ability = this.bb!.createScalarList<number>(this.Ability.bind(this), this.Ability_Length());
  _o.Like = this.Like();
  _o.IsLocked = this.IsLocked();
}
}

export class PetDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UniqueID: number = 0,
  public PetID: number = 0,
  public Ability: (number)[] = [],
  public Like: number = 0,
  public IsLocked: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Ability = PetData.create_Ability_Vector(builder, this.Ability);

  return PetData.createPetData(builder,
    this.UniqueID,
    this.PetID,
    Ability,
    this.Like,
    this.IsLocked
  );
}
}

export class AttributeData implements flatbuffers.IUnpackableObject<AttributeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AttributeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Level():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.AttributeData';
}

static sizeOf():number {
  return 8;
}

static createAttributeData(builder:flatbuffers.Builder, ID: number, Level: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Level);
  builder.writeInt32(ID);
  return builder.offset();
}


unpack(): AttributeDataT {
  return new AttributeDataT(
    this.ID(),
    this.Level()
  );
}


unpackTo(_o: AttributeDataT): void {
  _o.ID = this.ID();
  _o.Level = this.Level();
}
}

export class AttributeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ID: number = 0,
  public Level: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return AttributeData.createAttributeData(builder,
    this.ID,
    this.Level
  );
}
}

export class ArtifactData implements flatbuffers.IUnpackableObject<ArtifactDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ArtifactData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ArtifactID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Enhance():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

AcquiredAt():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

static getFullyQualifiedName():string {
  return 'Lobby.ArtifactData';
}

static sizeOf():number {
  return 16;
}

static createArtifactData(builder:flatbuffers.Builder, ArtifactID: number, Enhance: number, Count: number, AcquiredAt: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(AcquiredAt);
  builder.writeInt32(Count);
  builder.writeInt32(Enhance);
  builder.writeInt32(ArtifactID);
  return builder.offset();
}


unpack(): ArtifactDataT {
  return new ArtifactDataT(
    this.ArtifactID(),
    this.Enhance(),
    this.Count(),
    this.AcquiredAt()
  );
}


unpackTo(_o: ArtifactDataT): void {
  _o.ArtifactID = this.ArtifactID();
  _o.Enhance = this.Enhance();
  _o.Count = this.Count();
  _o.AcquiredAt = this.AcquiredAt();
}
}

export class ArtifactDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ArtifactID: number = 0,
  public Enhance: number = 0,
  public Count: number = 0,
  public AcquiredAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ArtifactData.createArtifactData(builder,
    this.ArtifactID,
    this.Enhance,
    this.Count,
    this.AcquiredAt
  );
}
}

export class MatchingTeamInfo implements flatbuffers.IUnpackableObject<MatchingTeamInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MatchingTeamInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMatchingTeamInfo(bb:flatbuffers.ByteBuffer, obj?:MatchingTeamInfo):MatchingTeamInfo {
  return (obj || new MatchingTeamInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMatchingTeamInfo(bb:flatbuffers.ByteBuffer, obj?:MatchingTeamInfo):MatchingTeamInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MatchingTeamInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LobbyID():string|null
LobbyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LobbyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.MatchingTeamInfo';
}

static startMatchingTeamInfo(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TeamIDOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, NickOffset, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(3, ProfileIconID, 0);
}

static add_LobbyID(builder:flatbuffers.Builder, LobbyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, LobbyIDOffset, 0);
}

static endMatchingTeamInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMatchingTeamInfo(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset, UID:number, NickOffset:flatbuffers.Offset, ProfileIconID:number, LobbyIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  MatchingTeamInfo.startMatchingTeamInfo(builder);
  MatchingTeamInfo.add_TeamID(builder, TeamIDOffset);
  MatchingTeamInfo.add_UID(builder, UID);
  MatchingTeamInfo.add_Nick(builder, NickOffset);
  MatchingTeamInfo.add_ProfileIconID(builder, ProfileIconID);
  MatchingTeamInfo.add_LobbyID(builder, LobbyIDOffset);
  return MatchingTeamInfo.endMatchingTeamInfo(builder);
}

unpack(): MatchingTeamInfoT {
  return new MatchingTeamInfoT(
    this.TeamID(),
    this.UID(),
    this.Nick(),
    this.ProfileIconID(),
    this.LobbyID()
  );
}


unpackTo(_o: MatchingTeamInfoT): void {
  _o.TeamID = this.TeamID();
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.ProfileIconID = this.ProfileIconID();
  _o.LobbyID = this.LobbyID();
}
}

export class MatchingTeamInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public TeamID: string|Uint8Array|null = null,
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public ProfileIconID: number = 0,
  public LobbyID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const LobbyID = (this.LobbyID !== null ? builder.createString(this.LobbyID!) : 0);

  return MatchingTeamInfo.createMatchingTeamInfo(builder,
    TeamID,
    this.UID,
    Nick,
    this.ProfileIconID,
    LobbyID
  );
}
}

export class MatchingAcceptanceUser implements flatbuffers.IUnpackableObject<MatchingAcceptanceUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MatchingAcceptanceUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

UID():number {
  return this.bb!.readInt32(this.bb_pos);
}

ProfileIconID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.MatchingAcceptanceUser';
}

static sizeOf():number {
  return 8;
}

static createMatchingAcceptanceUser(builder:flatbuffers.Builder, UID: number, ProfileIconID: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(ProfileIconID);
  builder.writeInt32(UID);
  return builder.offset();
}


unpack(): MatchingAcceptanceUserT {
  return new MatchingAcceptanceUserT(
    this.UID(),
    this.ProfileIconID()
  );
}


unpackTo(_o: MatchingAcceptanceUserT): void {
  _o.UID = this.UID();
  _o.ProfileIconID = this.ProfileIconID();
}
}

export class MatchingAcceptanceUserT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public ProfileIconID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MatchingAcceptanceUser.createMatchingAcceptanceUser(builder,
    this.UID,
    this.ProfileIconID
  );
}
}

export class MultiArtifactInfo implements flatbuffers.IUnpackableObject<MultiArtifactInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MultiArtifactInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ArtifactID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Enhance():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.MultiArtifactInfo';
}

static sizeOf():number {
  return 8;
}

static createMultiArtifactInfo(builder:flatbuffers.Builder, ArtifactID: number, Enhance: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Enhance);
  builder.writeInt32(ArtifactID);
  return builder.offset();
}


unpack(): MultiArtifactInfoT {
  return new MultiArtifactInfoT(
    this.ArtifactID(),
    this.Enhance()
  );
}


unpackTo(_o: MultiArtifactInfoT): void {
  _o.ArtifactID = this.ArtifactID();
  _o.Enhance = this.Enhance();
}
}

export class MultiArtifactInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public ArtifactID: number = 0,
  public Enhance: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MultiArtifactInfo.createMultiArtifactInfo(builder,
    this.ArtifactID,
    this.Enhance
  );
}
}

export class MatchingSuccessInfo implements flatbuffers.IUnpackableObject<MatchingSuccessInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MatchingSuccessInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMatchingSuccessInfo(bb:flatbuffers.ByteBuffer, obj?:MatchingSuccessInfo):MatchingSuccessInfo {
  return (obj || new MatchingSuccessInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMatchingSuccessInfo(bb:flatbuffers.ByteBuffer, obj?:MatchingSuccessInfo):MatchingSuccessInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MatchingSuccessInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HeroSkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ArtifactList(index: number, obj?:MultiArtifactInfo):MultiArtifactInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new MultiArtifactInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.MatchingSuccessInfo';
}

static startMatchingSuccessInfo(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TeamIDOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, NickOffset, 0);
}

static add_HeroSkinID(builder:flatbuffers.Builder, HeroSkinID:number) {
  builder.addFieldInt32(3, HeroSkinID, 0);
}

static add_ArtifactList(builder:flatbuffers.Builder, ArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ArtifactListOffset, 0);
}

static start_ArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endMatchingSuccessInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMatchingSuccessInfo(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset, UID:number, NickOffset:flatbuffers.Offset, HeroSkinID:number, ArtifactListOffset:flatbuffers.Offset):flatbuffers.Offset {
  MatchingSuccessInfo.startMatchingSuccessInfo(builder);
  MatchingSuccessInfo.add_TeamID(builder, TeamIDOffset);
  MatchingSuccessInfo.add_UID(builder, UID);
  MatchingSuccessInfo.add_Nick(builder, NickOffset);
  MatchingSuccessInfo.add_HeroSkinID(builder, HeroSkinID);
  MatchingSuccessInfo.add_ArtifactList(builder, ArtifactListOffset);
  return MatchingSuccessInfo.endMatchingSuccessInfo(builder);
}

unpack(): MatchingSuccessInfoT {
  return new MatchingSuccessInfoT(
    this.TeamID(),
    this.UID(),
    this.Nick(),
    this.HeroSkinID(),
    this.bb!.createObjList<MultiArtifactInfo, MultiArtifactInfoT>(this.ArtifactList.bind(this), this.ArtifactList_Length())
  );
}


unpackTo(_o: MatchingSuccessInfoT): void {
  _o.TeamID = this.TeamID();
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.HeroSkinID = this.HeroSkinID();
  _o.ArtifactList = this.bb!.createObjList<MultiArtifactInfo, MultiArtifactInfoT>(this.ArtifactList.bind(this), this.ArtifactList_Length());
}
}

export class MatchingSuccessInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public TeamID: string|Uint8Array|null = null,
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public HeroSkinID: number = 0,
  public ArtifactList: (MultiArtifactInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const ArtifactList = builder.createStructOffsetList(this.ArtifactList, MatchingSuccessInfo.start_ArtifactList_Vector);

  return MatchingSuccessInfo.createMatchingSuccessInfo(builder,
    TeamID,
    this.UID,
    Nick,
    this.HeroSkinID,
    ArtifactList
  );
}
}

export class ArtifactDeckData implements flatbuffers.IUnpackableObject<ArtifactDeckDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ArtifactDeckData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsArtifactDeckData(bb:flatbuffers.ByteBuffer, obj?:ArtifactDeckData):ArtifactDeckData {
  return (obj || new ArtifactDeckData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsArtifactDeckData(bb:flatbuffers.ByteBuffer, obj?:ArtifactDeckData):ArtifactDeckData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ArtifactDeckData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

DeckName():string|null
DeckName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DeckName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ArtifactIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

ArtifactIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ArtifactIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.ArtifactDeckData';
}

static startArtifactDeckData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(0, SlotID, 0);
}

static add_DeckName(builder:flatbuffers.Builder, DeckNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, DeckNameOffset, 0);
}

static add_ArtifactIDList(builder:flatbuffers.Builder, ArtifactIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ArtifactIDListOffset, 0);
}

static create_ArtifactIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ArtifactIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ArtifactIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_ArtifactIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endArtifactDeckData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createArtifactDeckData(builder:flatbuffers.Builder, SlotID:number, DeckNameOffset:flatbuffers.Offset, ArtifactIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  ArtifactDeckData.startArtifactDeckData(builder);
  ArtifactDeckData.add_SlotID(builder, SlotID);
  ArtifactDeckData.add_DeckName(builder, DeckNameOffset);
  ArtifactDeckData.add_ArtifactIDList(builder, ArtifactIDListOffset);
  return ArtifactDeckData.endArtifactDeckData(builder);
}

unpack(): ArtifactDeckDataT {
  return new ArtifactDeckDataT(
    this.SlotID(),
    this.DeckName(),
    this.bb!.createScalarList<number>(this.ArtifactIDList.bind(this), this.ArtifactIDList_Length())
  );
}


unpackTo(_o: ArtifactDeckDataT): void {
  _o.SlotID = this.SlotID();
  _o.DeckName = this.DeckName();
  _o.ArtifactIDList = this.bb!.createScalarList<number>(this.ArtifactIDList.bind(this), this.ArtifactIDList_Length());
}
}

export class ArtifactDeckDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotID: number = 0,
  public DeckName: string|Uint8Array|null = null,
  public ArtifactIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DeckName = (this.DeckName !== null ? builder.createString(this.DeckName!) : 0);
  const ArtifactIDList = ArtifactDeckData.create_ArtifactIDList_Vector(builder, this.ArtifactIDList);

  return ArtifactDeckData.createArtifactDeckData(builder,
    this.SlotID,
    DeckName,
    ArtifactIDList
  );
}
}

export class RankingScoreData implements flatbuffers.IUnpackableObject<RankingScoreDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RankingScoreData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRankingScoreData(bb:flatbuffers.ByteBuffer, obj?:RankingScoreData):RankingScoreData {
  return (obj || new RankingScoreData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRankingScoreData(bb:flatbuffers.ByteBuffer, obj?:RankingScoreData):RankingScoreData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RankingScoreData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Score():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

ExtraValue():string|null
ExtraValue(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ExtraValue(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Ranking():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.RankingScoreData';
}

static startRankingScoreData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(2, ProfileIconID, 0);
}

static add_Score(builder:flatbuffers.Builder, Score:number) {
  builder.addFieldFloat32(3, Score, 0.0);
}

static add_ExtraValue(builder:flatbuffers.Builder, ExtraValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ExtraValueOffset, 0);
}

static add_Ranking(builder:flatbuffers.Builder, Ranking:number) {
  builder.addFieldInt32(5, Ranking, 0);
}

static endRankingScoreData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRankingScoreData(builder:flatbuffers.Builder, UID:number, NickOffset:flatbuffers.Offset, ProfileIconID:number, Score:number, ExtraValueOffset:flatbuffers.Offset, Ranking:number):flatbuffers.Offset {
  RankingScoreData.startRankingScoreData(builder);
  RankingScoreData.add_UID(builder, UID);
  RankingScoreData.add_Nick(builder, NickOffset);
  RankingScoreData.add_ProfileIconID(builder, ProfileIconID);
  RankingScoreData.add_Score(builder, Score);
  RankingScoreData.add_ExtraValue(builder, ExtraValueOffset);
  RankingScoreData.add_Ranking(builder, Ranking);
  return RankingScoreData.endRankingScoreData(builder);
}

unpack(): RankingScoreDataT {
  return new RankingScoreDataT(
    this.UID(),
    this.Nick(),
    this.ProfileIconID(),
    this.Score(),
    this.ExtraValue(),
    this.Ranking()
  );
}


unpackTo(_o: RankingScoreDataT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.ProfileIconID = this.ProfileIconID();
  _o.Score = this.Score();
  _o.ExtraValue = this.ExtraValue();
  _o.Ranking = this.Ranking();
}
}

export class RankingScoreDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public ProfileIconID: number = 0,
  public Score: number = 0.0,
  public ExtraValue: string|Uint8Array|null = null,
  public Ranking: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const ExtraValue = (this.ExtraValue !== null ? builder.createString(this.ExtraValue!) : 0);

  return RankingScoreData.createRankingScoreData(builder,
    this.UID,
    Nick,
    this.ProfileIconID,
    this.Score,
    ExtraValue,
    this.Ranking
  );
}
}

export class MissionData implements flatbuffers.IUnpackableObject<MissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

SeasonPassID():number {
  return this.bb!.readInt32(this.bb_pos);
}

MissionGroup():EMissionGroup {
  return this.bb!.readUint8(this.bb_pos + 4);
}

MissionID():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

IsComplete():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 16);
}

static getFullyQualifiedName():string {
  return 'Lobby.MissionData';
}

static sizeOf():number {
  return 20;
}

static createMissionData(builder:flatbuffers.Builder, SeasonPassID: number, MissionGroup: EMissionGroup, MissionID: number, Count: number, IsComplete: boolean):flatbuffers.Offset {
  builder.prep(4, 20);
  builder.pad(3);
  builder.writeInt8(Number(Boolean(IsComplete)));
  builder.writeInt32(Count);
  builder.writeInt32(MissionID);
  builder.pad(3);
  builder.writeInt8(MissionGroup);
  builder.writeInt32(SeasonPassID);
  return builder.offset();
}


unpack(): MissionDataT {
  return new MissionDataT(
    this.SeasonPassID(),
    this.MissionGroup(),
    this.MissionID(),
    this.Count(),
    this.IsComplete()
  );
}


unpackTo(_o: MissionDataT): void {
  _o.SeasonPassID = this.SeasonPassID();
  _o.MissionGroup = this.MissionGroup();
  _o.MissionID = this.MissionID();
  _o.Count = this.Count();
  _o.IsComplete = this.IsComplete();
}
}

export class MissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPassID: number = 0,
  public MissionGroup: EMissionGroup = EMissionGroup.None,
  public MissionID: number = 0,
  public Count: number = 0,
  public IsComplete: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MissionData.createMissionData(builder,
    this.SeasonPassID,
    this.MissionGroup,
    this.MissionID,
    this.Count,
    this.IsComplete
  );
}
}

export class MissionAddCountData implements flatbuffers.IUnpackableObject<MissionAddCountDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MissionAddCountData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

MissionType():EMissionType {
  return this.bb!.readUint16(this.bb_pos);
}

MissionValue():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

static getFullyQualifiedName():string {
  return 'Lobby.MissionAddCountData';
}

static sizeOf():number {
  return 12;
}

static createMissionAddCountData(builder:flatbuffers.Builder, MissionType: EMissionType, MissionValue: number, Count: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt32(Count);
  builder.writeInt32(MissionValue);
  builder.pad(2);
  builder.writeInt16(MissionType);
  return builder.offset();
}


unpack(): MissionAddCountDataT {
  return new MissionAddCountDataT(
    this.MissionType(),
    this.MissionValue(),
    this.Count()
  );
}


unpackTo(_o: MissionAddCountDataT): void {
  _o.MissionType = this.MissionType();
  _o.MissionValue = this.MissionValue();
  _o.Count = this.Count();
}
}

export class MissionAddCountDataT implements flatbuffers.IGeneratedObject {
constructor(
  public MissionType: EMissionType = EMissionType.None,
  public MissionValue: number = 0,
  public Count: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MissionAddCountData.createMissionAddCountData(builder,
    this.MissionType,
    this.MissionValue,
    this.Count
  );
}
}

export class TableVersionData implements flatbuffers.IUnpackableObject<TableVersionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TableVersionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTableVersionData(bb:flatbuffers.ByteBuffer, obj?:TableVersionData):TableVersionData {
  return (obj || new TableVersionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTableVersionData(bb:flatbuffers.ByteBuffer, obj?:TableVersionData):TableVersionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TableVersionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TableName():string|null
TableName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TableName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Version():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static getFullyQualifiedName():string {
  return 'Lobby.TableVersionData';
}

static startTableVersionData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TableName(builder:flatbuffers.Builder, TableNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TableNameOffset, 0);
}

static add_Version(builder:flatbuffers.Builder, Version:number) {
  builder.addFieldFloat32(1, Version, 0.0);
}

static endTableVersionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTableVersionData(builder:flatbuffers.Builder, TableNameOffset:flatbuffers.Offset, Version:number):flatbuffers.Offset {
  TableVersionData.startTableVersionData(builder);
  TableVersionData.add_TableName(builder, TableNameOffset);
  TableVersionData.add_Version(builder, Version);
  return TableVersionData.endTableVersionData(builder);
}

unpack(): TableVersionDataT {
  return new TableVersionDataT(
    this.TableName(),
    this.Version()
  );
}


unpackTo(_o: TableVersionDataT): void {
  _o.TableName = this.TableName();
  _o.Version = this.Version();
}
}

export class TableVersionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public TableName: string|Uint8Array|null = null,
  public Version: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TableName = (this.TableName !== null ? builder.createString(this.TableName!) : 0);

  return TableVersionData.createTableVersionData(builder,
    TableName,
    this.Version
  );
}
}

export class RpgChallengeParameter implements flatbuffers.IUnpackableObject<RpgChallengeParameterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RpgChallengeParameter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Index():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.RpgChallengeParameter';
}

static sizeOf():number {
  return 8;
}

static createRpgChallengeParameter(builder:flatbuffers.Builder, ID: number, Index: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Index);
  builder.writeInt32(ID);
  return builder.offset();
}


unpack(): RpgChallengeParameterT {
  return new RpgChallengeParameterT(
    this.ID(),
    this.Index()
  );
}


unpackTo(_o: RpgChallengeParameterT): void {
  _o.ID = this.ID();
  _o.Index = this.Index();
}
}

export class RpgChallengeParameterT implements flatbuffers.IGeneratedObject {
constructor(
  public ID: number = 0,
  public Index: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return RpgChallengeParameter.createRpgChallengeParameter(builder,
    this.ID,
    this.Index
  );
}
}

export class MailRewardInfo implements flatbuffers.IUnpackableObject<MailRewardInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MailRewardInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

RewardType():ERewardType {
  return this.bb!.readUint8(this.bb_pos);
}

RewardID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

RewardCount():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

static getFullyQualifiedName():string {
  return 'Lobby.MailRewardInfo';
}

static sizeOf():number {
  return 12;
}

static createMailRewardInfo(builder:flatbuffers.Builder, RewardType: ERewardType, RewardID: number, RewardCount: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt32(RewardCount);
  builder.writeInt32(RewardID);
  builder.pad(3);
  builder.writeInt8(RewardType);
  return builder.offset();
}


unpack(): MailRewardInfoT {
  return new MailRewardInfoT(
    this.RewardType(),
    this.RewardID(),
    this.RewardCount()
  );
}


unpackTo(_o: MailRewardInfoT): void {
  _o.RewardType = this.RewardType();
  _o.RewardID = this.RewardID();
  _o.RewardCount = this.RewardCount();
}
}

export class MailRewardInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public RewardType: ERewardType = ERewardType.None,
  public RewardID: number = 0,
  public RewardCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MailRewardInfo.createMailRewardInfo(builder,
    this.RewardType,
    this.RewardID,
    this.RewardCount
  );
}
}

export class MailInfo implements flatbuffers.IUnpackableObject<MailInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MailInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMailInfo(bb:flatbuffers.ByteBuffer, obj?:MailInfo):MailInfo {
  return (obj || new MailInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMailInfo(bb:flatbuffers.ByteBuffer, obj?:MailInfo):MailInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MailInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MailID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

MailType():EMailType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EMailType.None;
}

State():EMailStateType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EMailStateType.None;
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Title():string|null
Title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RewardList(index: number, obj?:MailRewardInfo):MailRewardInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new MailRewardInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

RewardList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ArriveAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ReceiveAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.MailInfo';
}

static startMailInfo(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static add_MailID(builder:flatbuffers.Builder, MailID:number) {
  builder.addFieldInt64(0, BigInt(MailID), BigInt(0));
}

static add_MailType(builder:flatbuffers.Builder, MailType:EMailType) {
  builder.addFieldInt8(1, MailType, EMailType.None);
}

static add_State(builder:flatbuffers.Builder, State:EMailStateType) {
  builder.addFieldInt8(2, State, EMailStateType.None);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(3, +IsBM, +false);
}

static add_Title(builder:flatbuffers.Builder, TitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, TitleOffset, 0);
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, MessageOffset, 0);
}

static add_RewardList(builder:flatbuffers.Builder, RewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, RewardListOffset, 0);
}

static start_RewardList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(7, ExpireAt, 0);
}

static add_ArriveAt(builder:flatbuffers.Builder, ArriveAt:number) {
  builder.addFieldInt32(8, ArriveAt, 0);
}

static add_ReceiveAt(builder:flatbuffers.Builder, ReceiveAt:number) {
  builder.addFieldInt32(9, ReceiveAt, 0);
}

static endMailInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMailInfo(builder:flatbuffers.Builder, MailID:number, MailType:EMailType, State:EMailStateType, IsBM:boolean, TitleOffset:flatbuffers.Offset, MessageOffset:flatbuffers.Offset, RewardListOffset:flatbuffers.Offset, ExpireAt:number, ArriveAt:number, ReceiveAt:number):flatbuffers.Offset {
  MailInfo.startMailInfo(builder);
  MailInfo.add_MailID(builder, MailID);
  MailInfo.add_MailType(builder, MailType);
  MailInfo.add_State(builder, State);
  MailInfo.add_IsBM(builder, IsBM);
  MailInfo.add_Title(builder, TitleOffset);
  MailInfo.add_Message(builder, MessageOffset);
  MailInfo.add_RewardList(builder, RewardListOffset);
  MailInfo.add_ExpireAt(builder, ExpireAt);
  MailInfo.add_ArriveAt(builder, ArriveAt);
  MailInfo.add_ReceiveAt(builder, ReceiveAt);
  return MailInfo.endMailInfo(builder);
}

unpack(): MailInfoT {
  return new MailInfoT(
    this.MailID(),
    this.MailType(),
    this.State(),
    this.IsBM(),
    this.Title(),
    this.Message(),
    this.bb!.createObjList<MailRewardInfo, MailRewardInfoT>(this.RewardList.bind(this), this.RewardList_Length()),
    this.ExpireAt(),
    this.ArriveAt(),
    this.ReceiveAt()
  );
}


unpackTo(_o: MailInfoT): void {
  _o.MailID = this.MailID();
  _o.MailType = this.MailType();
  _o.State = this.State();
  _o.IsBM = this.IsBM();
  _o.Title = this.Title();
  _o.Message = this.Message();
  _o.RewardList = this.bb!.createObjList<MailRewardInfo, MailRewardInfoT>(this.RewardList.bind(this), this.RewardList_Length());
  _o.ExpireAt = this.ExpireAt();
  _o.ArriveAt = this.ArriveAt();
  _o.ReceiveAt = this.ReceiveAt();
}
}

export class MailInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public MailID: number = 0,
  public MailType: EMailType = EMailType.None,
  public State: EMailStateType = EMailStateType.None,
  public IsBM: boolean = false,
  public Title: string|Uint8Array|null = null,
  public Message: string|Uint8Array|null = null,
  public RewardList: (MailRewardInfoT)[] = [],
  public ExpireAt: number = 0,
  public ArriveAt: number = 0,
  public ReceiveAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Title = (this.Title !== null ? builder.createString(this.Title!) : 0);
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);
  const RewardList = builder.createStructOffsetList(this.RewardList, MailInfo.start_RewardList_Vector);

  return MailInfo.createMailInfo(builder,
    this.MailID,
    this.MailType,
    this.State,
    this.IsBM,
    Title,
    Message,
    RewardList,
    this.ExpireAt,
    this.ArriveAt,
    this.ReceiveAt
  );
}
}

export class WonderStoreData implements flatbuffers.IUnpackableObject<WonderStoreDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):WonderStoreData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsWonderStoreData(bb:flatbuffers.ByteBuffer, obj?:WonderStoreData):WonderStoreData {
  return (obj || new WonderStoreData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsWonderStoreData(bb:flatbuffers.ByteBuffer, obj?:WonderStoreData):WonderStoreData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new WonderStoreData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BuyCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonPassID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsSubscription():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

SubscriptionExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BuyAbleStartAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BuyAbleEndAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NextResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.WonderStoreData';
}

static startWonderStoreData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static add_BuyCount(builder:flatbuffers.Builder, BuyCount:number) {
  builder.addFieldInt32(1, BuyCount, 0);
}

static add_SeasonPassID(builder:flatbuffers.Builder, SeasonPassID:number) {
  builder.addFieldInt32(2, SeasonPassID, 0);
}

static add_IsSubscription(builder:flatbuffers.Builder, IsSubscription:boolean) {
  builder.addFieldInt8(3, +IsSubscription, +false);
}

static add_SubscriptionExpireAt(builder:flatbuffers.Builder, SubscriptionExpireAt:number) {
  builder.addFieldInt32(4, SubscriptionExpireAt, 0);
}

static add_BuyAbleStartAt(builder:flatbuffers.Builder, BuyAbleStartAt:number) {
  builder.addFieldInt32(5, BuyAbleStartAt, 0);
}

static add_BuyAbleEndAt(builder:flatbuffers.Builder, BuyAbleEndAt:number) {
  builder.addFieldInt32(6, BuyAbleEndAt, 0);
}

static add_NextResetAt(builder:flatbuffers.Builder, NextResetAt:number) {
  builder.addFieldInt32(7, NextResetAt, 0);
}

static endWonderStoreData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createWonderStoreData(builder:flatbuffers.Builder, StoreID:number, BuyCount:number, SeasonPassID:number, IsSubscription:boolean, SubscriptionExpireAt:number, BuyAbleStartAt:number, BuyAbleEndAt:number, NextResetAt:number):flatbuffers.Offset {
  WonderStoreData.startWonderStoreData(builder);
  WonderStoreData.add_StoreID(builder, StoreID);
  WonderStoreData.add_BuyCount(builder, BuyCount);
  WonderStoreData.add_SeasonPassID(builder, SeasonPassID);
  WonderStoreData.add_IsSubscription(builder, IsSubscription);
  WonderStoreData.add_SubscriptionExpireAt(builder, SubscriptionExpireAt);
  WonderStoreData.add_BuyAbleStartAt(builder, BuyAbleStartAt);
  WonderStoreData.add_BuyAbleEndAt(builder, BuyAbleEndAt);
  WonderStoreData.add_NextResetAt(builder, NextResetAt);
  return WonderStoreData.endWonderStoreData(builder);
}

unpack(): WonderStoreDataT {
  return new WonderStoreDataT(
    this.StoreID(),
    this.BuyCount(),
    this.SeasonPassID(),
    this.IsSubscription(),
    this.SubscriptionExpireAt(),
    this.BuyAbleStartAt(),
    this.BuyAbleEndAt(),
    this.NextResetAt()
  );
}


unpackTo(_o: WonderStoreDataT): void {
  _o.StoreID = this.StoreID();
  _o.BuyCount = this.BuyCount();
  _o.SeasonPassID = this.SeasonPassID();
  _o.IsSubscription = this.IsSubscription();
  _o.SubscriptionExpireAt = this.SubscriptionExpireAt();
  _o.BuyAbleStartAt = this.BuyAbleStartAt();
  _o.BuyAbleEndAt = this.BuyAbleEndAt();
  _o.NextResetAt = this.NextResetAt();
}
}

export class WonderStoreDataT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public BuyCount: number = 0,
  public SeasonPassID: number = 0,
  public IsSubscription: boolean = false,
  public SubscriptionExpireAt: number = 0,
  public BuyAbleStartAt: number = 0,
  public BuyAbleEndAt: number = 0,
  public NextResetAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return WonderStoreData.createWonderStoreData(builder,
    this.StoreID,
    this.BuyCount,
    this.SeasonPassID,
    this.IsSubscription,
    this.SubscriptionExpireAt,
    this.BuyAbleStartAt,
    this.BuyAbleEndAt,
    this.NextResetAt
  );
}
}

export class SilverMedalStoreData implements flatbuffers.IUnpackableObject<SilverMedalStoreDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SilverMedalStoreData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

StoreID():number {
  return this.bb!.readInt32(this.bb_pos);
}

BuyCount():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.SilverMedalStoreData';
}

static sizeOf():number {
  return 8;
}

static createSilverMedalStoreData(builder:flatbuffers.Builder, StoreID: number, BuyCount: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(BuyCount);
  builder.writeInt32(StoreID);
  return builder.offset();
}


unpack(): SilverMedalStoreDataT {
  return new SilverMedalStoreDataT(
    this.StoreID(),
    this.BuyCount()
  );
}


unpackTo(_o: SilverMedalStoreDataT): void {
  _o.StoreID = this.StoreID();
  _o.BuyCount = this.BuyCount();
}
}

export class SilverMedalStoreDataT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public BuyCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SilverMedalStoreData.createSilverMedalStoreData(builder,
    this.StoreID,
    this.BuyCount
  );
}
}

export class EventStoreData implements flatbuffers.IUnpackableObject<EventStoreDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EventStoreData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

StoreID():number {
  return this.bb!.readInt32(this.bb_pos);
}

BuyCount():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

NextResetAt():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

ExpireAt():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

static getFullyQualifiedName():string {
  return 'Lobby.EventStoreData';
}

static sizeOf():number {
  return 16;
}

static createEventStoreData(builder:flatbuffers.Builder, StoreID: number, BuyCount: number, NextResetAt: number, ExpireAt: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(ExpireAt);
  builder.writeInt32(NextResetAt);
  builder.writeInt32(BuyCount);
  builder.writeInt32(StoreID);
  return builder.offset();
}


unpack(): EventStoreDataT {
  return new EventStoreDataT(
    this.StoreID(),
    this.BuyCount(),
    this.NextResetAt(),
    this.ExpireAt()
  );
}


unpackTo(_o: EventStoreDataT): void {
  _o.StoreID = this.StoreID();
  _o.BuyCount = this.BuyCount();
  _o.NextResetAt = this.NextResetAt();
  _o.ExpireAt = this.ExpireAt();
}
}

export class EventStoreDataT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public BuyCount: number = 0,
  public NextResetAt: number = 0,
  public ExpireAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return EventStoreData.createEventStoreData(builder,
    this.StoreID,
    this.BuyCount,
    this.NextResetAt,
    this.ExpireAt
  );
}
}

export class SeasonPassData implements flatbuffers.IUnpackableObject<SeasonPassDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SeasonPassData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSeasonPassData(bb:flatbuffers.ByteBuffer, obj?:SeasonPassData):SeasonPassData {
  return (obj || new SeasonPassData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSeasonPassData(bb:flatbuffers.ByteBuffer, obj?:SeasonPassData):SeasonPassData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SeasonPassData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPassID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsPaid():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Level():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Exp():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardState(index: number):boolean|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : false;
}

RewardState_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

RewardState_Array():Int8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SeasonPassData';
}

static startSeasonPassData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_SeasonPassID(builder:flatbuffers.Builder, SeasonPassID:number) {
  builder.addFieldInt32(0, SeasonPassID, 0);
}

static add_SeasonNum(builder:flatbuffers.Builder, SeasonNum:number) {
  builder.addFieldInt32(1, SeasonNum, 0);
}

static add_IsPaid(builder:flatbuffers.Builder, IsPaid:boolean) {
  builder.addFieldInt8(2, +IsPaid, +false);
}

static add_Level(builder:flatbuffers.Builder, Level:number) {
  builder.addFieldInt32(3, Level, 0);
}

static add_Exp(builder:flatbuffers.Builder, Exp:number) {
  builder.addFieldInt32(4, Exp, 0);
}

static add_RewardState(builder:flatbuffers.Builder, RewardStateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, RewardStateOffset, 0);
}

static create_RewardState_Vector(builder:flatbuffers.Builder, data:boolean[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(+data[i]!);
  }
  return builder.endVector();
}

static start_RewardState_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static endSeasonPassData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSeasonPassData(builder:flatbuffers.Builder, SeasonPassID:number, SeasonNum:number, IsPaid:boolean, Level:number, Exp:number, RewardStateOffset:flatbuffers.Offset):flatbuffers.Offset {
  SeasonPassData.startSeasonPassData(builder);
  SeasonPassData.add_SeasonPassID(builder, SeasonPassID);
  SeasonPassData.add_SeasonNum(builder, SeasonNum);
  SeasonPassData.add_IsPaid(builder, IsPaid);
  SeasonPassData.add_Level(builder, Level);
  SeasonPassData.add_Exp(builder, Exp);
  SeasonPassData.add_RewardState(builder, RewardStateOffset);
  return SeasonPassData.endSeasonPassData(builder);
}

unpack(): SeasonPassDataT {
  return new SeasonPassDataT(
    this.SeasonPassID(),
    this.SeasonNum(),
    this.IsPaid(),
    this.Level(),
    this.Exp(),
    this.bb!.createScalarList<boolean>(this.RewardState.bind(this), this.RewardState_Length())
  );
}


unpackTo(_o: SeasonPassDataT): void {
  _o.SeasonPassID = this.SeasonPassID();
  _o.SeasonNum = this.SeasonNum();
  _o.IsPaid = this.IsPaid();
  _o.Level = this.Level();
  _o.Exp = this.Exp();
  _o.RewardState = this.bb!.createScalarList<boolean>(this.RewardState.bind(this), this.RewardState_Length());
}
}

export class SeasonPassDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPassID: number = 0,
  public SeasonNum: number = 0,
  public IsPaid: boolean = false,
  public Level: number = 0,
  public Exp: number = 0,
  public RewardState: (boolean)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardState = SeasonPassData.create_RewardState_Vector(builder, this.RewardState);

  return SeasonPassData.createSeasonPassData(builder,
    this.SeasonPassID,
    this.SeasonNum,
    this.IsPaid,
    this.Level,
    this.Exp,
    RewardState
  );
}
}

export class AttendanceData implements flatbuffers.IUnpackableObject<AttendanceDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AttendanceData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAttendanceData(bb:flatbuffers.ByteBuffer, obj?:AttendanceData):AttendanceData {
  return (obj || new AttendanceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAttendanceData(bb:flatbuffers.ByteBuffer, obj?:AttendanceData):AttendanceData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AttendanceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AttendanceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AttendanceDay():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardState(index: number):boolean|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : false;
}

RewardState_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

RewardState_Array():Int8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

LastAttendanceAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.AttendanceData';
}

static startAttendanceData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_AttendanceID(builder:flatbuffers.Builder, AttendanceID:number) {
  builder.addFieldInt32(0, AttendanceID, 0);
}

static add_AttendanceDay(builder:flatbuffers.Builder, AttendanceDay:number) {
  builder.addFieldInt32(1, AttendanceDay, 0);
}

static add_RewardState(builder:flatbuffers.Builder, RewardStateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RewardStateOffset, 0);
}

static create_RewardState_Vector(builder:flatbuffers.Builder, data:boolean[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(+data[i]!);
  }
  return builder.endVector();
}

static start_RewardState_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static add_LastAttendanceAt(builder:flatbuffers.Builder, LastAttendanceAt:number) {
  builder.addFieldInt32(3, LastAttendanceAt, 0);
}

static endAttendanceData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAttendanceData(builder:flatbuffers.Builder, AttendanceID:number, AttendanceDay:number, RewardStateOffset:flatbuffers.Offset, LastAttendanceAt:number):flatbuffers.Offset {
  AttendanceData.startAttendanceData(builder);
  AttendanceData.add_AttendanceID(builder, AttendanceID);
  AttendanceData.add_AttendanceDay(builder, AttendanceDay);
  AttendanceData.add_RewardState(builder, RewardStateOffset);
  AttendanceData.add_LastAttendanceAt(builder, LastAttendanceAt);
  return AttendanceData.endAttendanceData(builder);
}

unpack(): AttendanceDataT {
  return new AttendanceDataT(
    this.AttendanceID(),
    this.AttendanceDay(),
    this.bb!.createScalarList<boolean>(this.RewardState.bind(this), this.RewardState_Length()),
    this.LastAttendanceAt()
  );
}


unpackTo(_o: AttendanceDataT): void {
  _o.AttendanceID = this.AttendanceID();
  _o.AttendanceDay = this.AttendanceDay();
  _o.RewardState = this.bb!.createScalarList<boolean>(this.RewardState.bind(this), this.RewardState_Length());
  _o.LastAttendanceAt = this.LastAttendanceAt();
}
}

export class AttendanceDataT implements flatbuffers.IGeneratedObject {
constructor(
  public AttendanceID: number = 0,
  public AttendanceDay: number = 0,
  public RewardState: (boolean)[] = [],
  public LastAttendanceAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardState = AttendanceData.create_RewardState_Vector(builder, this.RewardState);

  return AttendanceData.createAttendanceData(builder,
    this.AttendanceID,
    this.AttendanceDay,
    RewardState,
    this.LastAttendanceAt
  );
}
}

export class BiskitLog implements flatbuffers.IUnpackableObject<BiskitLogT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BiskitLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBiskitLog(bb:flatbuffers.ByteBuffer, obj?:BiskitLog):BiskitLog {
  return (obj || new BiskitLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBiskitLog(bb:flatbuffers.ByteBuffer, obj?:BiskitLog):BiskitLog {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BiskitLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

EventID():string|null
EventID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
EventID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LogData(index: number):string
LogData(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
LogData(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

LogData_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.BiskitLog';
}

static startBiskitLog(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_EventID(builder:flatbuffers.Builder, EventIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, EventIDOffset, 0);
}

static add_LogData(builder:flatbuffers.Builder, LogDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, LogDataOffset, 0);
}

static create_LogData_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_LogData_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endBiskitLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBiskitLog(builder:flatbuffers.Builder, EventIDOffset:flatbuffers.Offset, LogDataOffset:flatbuffers.Offset):flatbuffers.Offset {
  BiskitLog.startBiskitLog(builder);
  BiskitLog.add_EventID(builder, EventIDOffset);
  BiskitLog.add_LogData(builder, LogDataOffset);
  return BiskitLog.endBiskitLog(builder);
}

unpack(): BiskitLogT {
  return new BiskitLogT(
    this.EventID(),
    this.bb!.createScalarList<string>(this.LogData.bind(this), this.LogData_Length())
  );
}


unpackTo(_o: BiskitLogT): void {
  _o.EventID = this.EventID();
  _o.LogData = this.bb!.createScalarList<string>(this.LogData.bind(this), this.LogData_Length());
}
}

export class BiskitLogT implements flatbuffers.IGeneratedObject {
constructor(
  public EventID: string|Uint8Array|null = null,
  public LogData: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const EventID = (this.EventID !== null ? builder.createString(this.EventID!) : 0);
  const LogData = BiskitLog.create_LogData_Vector(builder, builder.createObjectOffsetList(this.LogData));

  return BiskitLog.createBiskitLog(builder,
    EventID,
    LogData
  );
}
}

export class WeaponCategoryData implements flatbuffers.IUnpackableObject<WeaponCategoryDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):WeaponCategoryData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

WeaponCategoryID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Exp():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.WeaponCategoryData';
}

static sizeOf():number {
  return 8;
}

static createWeaponCategoryData(builder:flatbuffers.Builder, WeaponCategoryID: number, Exp: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(Exp);
  builder.writeInt32(WeaponCategoryID);
  return builder.offset();
}


unpack(): WeaponCategoryDataT {
  return new WeaponCategoryDataT(
    this.WeaponCategoryID(),
    this.Exp()
  );
}


unpackTo(_o: WeaponCategoryDataT): void {
  _o.WeaponCategoryID = this.WeaponCategoryID();
  _o.Exp = this.Exp();
}
}

export class WeaponCategoryDataT implements flatbuffers.IGeneratedObject {
constructor(
  public WeaponCategoryID: number = 0,
  public Exp: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return WeaponCategoryData.createWeaponCategoryData(builder,
    this.WeaponCategoryID,
    this.Exp
  );
}
}

export class FriendChatRoomData implements flatbuffers.IUnpackableObject<FriendChatRoomDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FriendChatRoomData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFriendChatRoomData(bb:flatbuffers.ByteBuffer, obj?:FriendChatRoomData):FriendChatRoomData {
  return (obj || new FriendChatRoomData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFriendChatRoomData(bb:flatbuffers.ByteBuffer, obj?:FriendChatRoomData):FriendChatRoomData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FriendChatRoomData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LastChatAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.FriendChatRoomData';
}

static startFriendChatRoomData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_LastChatAt(builder:flatbuffers.Builder, LastChatAt:number) {
  builder.addFieldInt32(1, LastChatAt, 0);
}

static endFriendChatRoomData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFriendChatRoomData(builder:flatbuffers.Builder, UID:number, LastChatAt:number):flatbuffers.Offset {
  FriendChatRoomData.startFriendChatRoomData(builder);
  FriendChatRoomData.add_UID(builder, UID);
  FriendChatRoomData.add_LastChatAt(builder, LastChatAt);
  return FriendChatRoomData.endFriendChatRoomData(builder);
}

unpack(): FriendChatRoomDataT {
  return new FriendChatRoomDataT(
    this.UID(),
    this.LastChatAt()
  );
}


unpackTo(_o: FriendChatRoomDataT): void {
  _o.UID = this.UID();
  _o.LastChatAt = this.LastChatAt();
}
}

export class FriendChatRoomDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public LastChatAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return FriendChatRoomData.createFriendChatRoomData(builder,
    this.UID,
    this.LastChatAt
  );
}
}

export class FriendChatData implements flatbuffers.IUnpackableObject<FriendChatDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FriendChatData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFriendChatData(bb:flatbuffers.ByteBuffer, obj?:FriendChatData):FriendChatData {
  return (obj || new FriendChatData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFriendChatData(bb:flatbuffers.ByteBuffer, obj?:FriendChatData):FriendChatData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FriendChatData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Serial():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChatAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.FriendChatData';
}

static startFriendChatData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(1, FriendUID, 0);
}

static add_Serial(builder:flatbuffers.Builder, Serial:number) {
  builder.addFieldInt64(2, BigInt(Serial), BigInt(0));
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, MessageOffset, 0);
}

static add_ChatAt(builder:flatbuffers.Builder, ChatAt:number) {
  builder.addFieldInt32(4, ChatAt, 0);
}

static endFriendChatData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFriendChatData(builder:flatbuffers.Builder, UID:number, FriendUID:number, Serial:number, MessageOffset:flatbuffers.Offset, ChatAt:number):flatbuffers.Offset {
  FriendChatData.startFriendChatData(builder);
  FriendChatData.add_UID(builder, UID);
  FriendChatData.add_FriendUID(builder, FriendUID);
  FriendChatData.add_Serial(builder, Serial);
  FriendChatData.add_Message(builder, MessageOffset);
  FriendChatData.add_ChatAt(builder, ChatAt);
  return FriendChatData.endFriendChatData(builder);
}

unpack(): FriendChatDataT {
  return new FriendChatDataT(
    this.UID(),
    this.FriendUID(),
    this.Serial(),
    this.Message(),
    this.ChatAt()
  );
}


unpackTo(_o: FriendChatDataT): void {
  _o.UID = this.UID();
  _o.FriendUID = this.FriendUID();
  _o.Serial = this.Serial();
  _o.Message = this.Message();
  _o.ChatAt = this.ChatAt();
}
}

export class FriendChatDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public FriendUID: number = 0,
  public Serial: number = 0,
  public Message: string|Uint8Array|null = null,
  public ChatAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);

  return FriendChatData.createFriendChatData(builder,
    this.UID,
    this.FriendUID,
    this.Serial,
    Message,
    this.ChatAt
  );
}
}

export class SNFriendChatData implements flatbuffers.IUnpackableObject<SNFriendChatDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SNFriendChatData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSNFriendChatData(bb:flatbuffers.ByteBuffer, obj?:SNFriendChatData):SNFriendChatData {
  return (obj || new SNFriendChatData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSNFriendChatData(bb:flatbuffers.ByteBuffer, obj?:SNFriendChatData):SNFriendChatData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SNFriendChatData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Serial():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChatAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SNFriendChatData';
}

static startSNFriendChatData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(1, FriendUID, 0);
}

static add_Serial(builder:flatbuffers.Builder, Serial:number) {
  builder.addFieldInt64(2, BigInt(Serial), BigInt(0));
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, MessageOffset, 0);
}

static add_ChatAt(builder:flatbuffers.Builder, ChatAt:number) {
  builder.addFieldInt32(4, ChatAt, 0);
}

static endSNFriendChatData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSNFriendChatData(builder:flatbuffers.Builder, UID:number, FriendUID:number, Serial:number, MessageOffset:flatbuffers.Offset, ChatAt:number):flatbuffers.Offset {
  SNFriendChatData.startSNFriendChatData(builder);
  SNFriendChatData.add_UID(builder, UID);
  SNFriendChatData.add_FriendUID(builder, FriendUID);
  SNFriendChatData.add_Serial(builder, Serial);
  SNFriendChatData.add_Message(builder, MessageOffset);
  SNFriendChatData.add_ChatAt(builder, ChatAt);
  return SNFriendChatData.endSNFriendChatData(builder);
}

unpack(): SNFriendChatDataT {
  return new SNFriendChatDataT(
    this.UID(),
    this.FriendUID(),
    this.Serial(),
    this.Message(),
    this.ChatAt()
  );
}


unpackTo(_o: SNFriendChatDataT): void {
  _o.UID = this.UID();
  _o.FriendUID = this.FriendUID();
  _o.Serial = this.Serial();
  _o.Message = this.Message();
  _o.ChatAt = this.ChatAt();
}
}

export class SNFriendChatDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public FriendUID: number = 0,
  public Serial: number = 0,
  public Message: string|Uint8Array|null = null,
  public ChatAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);

  return SNFriendChatData.createSNFriendChatData(builder,
    this.UID,
    this.FriendUID,
    this.Serial,
    Message,
    this.ChatAt
  );
}
}

export class FriendData implements flatbuffers.IUnpackableObject<FriendDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FriendData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFriendData(bb:flatbuffers.ByteBuffer, obj?:FriendData):FriendData {
  return (obj || new FriendData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFriendData(bb:flatbuffers.ByteBuffer, obj?:FriendData):FriendData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FriendData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NickName():string|null
NickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

UserState():EUserState {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EUserState.None;
}

IsActive():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

LogoutAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.FriendData';
}

static startFriendData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_NickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickNameOffset, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(2, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(3, ProfileBGID, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(4, EntitlementID, 0);
}

static add_UserState(builder:flatbuffers.Builder, UserState:EUserState) {
  builder.addFieldInt8(5, UserState, EUserState.None);
}

static add_IsActive(builder:flatbuffers.Builder, IsActive:boolean) {
  builder.addFieldInt8(6, +IsActive, +false);
}

static add_LogoutAt(builder:flatbuffers.Builder, LogoutAt:number) {
  builder.addFieldInt32(7, LogoutAt, 0);
}

static endFriendData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFriendData(builder:flatbuffers.Builder, UID:number, NickNameOffset:flatbuffers.Offset, ProfileIconID:number, ProfileBGID:number, EntitlementID:number, UserState:EUserState, IsActive:boolean, LogoutAt:number):flatbuffers.Offset {
  FriendData.startFriendData(builder);
  FriendData.add_UID(builder, UID);
  FriendData.add_NickName(builder, NickNameOffset);
  FriendData.add_ProfileIconID(builder, ProfileIconID);
  FriendData.add_ProfileBGID(builder, ProfileBGID);
  FriendData.add_EntitlementID(builder, EntitlementID);
  FriendData.add_UserState(builder, UserState);
  FriendData.add_IsActive(builder, IsActive);
  FriendData.add_LogoutAt(builder, LogoutAt);
  return FriendData.endFriendData(builder);
}

unpack(): FriendDataT {
  return new FriendDataT(
    this.UID(),
    this.NickName(),
    this.ProfileIconID(),
    this.ProfileBGID(),
    this.EntitlementID(),
    this.UserState(),
    this.IsActive(),
    this.LogoutAt()
  );
}


unpackTo(_o: FriendDataT): void {
  _o.UID = this.UID();
  _o.NickName = this.NickName();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.EntitlementID = this.EntitlementID();
  _o.UserState = this.UserState();
  _o.IsActive = this.IsActive();
  _o.LogoutAt = this.LogoutAt();
}
}

export class FriendDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public NickName: string|Uint8Array|null = null,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0,
  public EntitlementID: number = 0,
  public UserState: EUserState = EUserState.None,
  public IsActive: boolean = false,
  public LogoutAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NickName = (this.NickName !== null ? builder.createString(this.NickName!) : 0);

  return FriendData.createFriendData(builder,
    this.UID,
    NickName,
    this.ProfileIconID,
    this.ProfileBGID,
    this.EntitlementID,
    this.UserState,
    this.IsActive,
    this.LogoutAt
  );
}
}

export class FriendRequestData implements flatbuffers.IUnpackableObject<FriendRequestDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FriendRequestData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFriendRequestData(bb:flatbuffers.ByteBuffer, obj?:FriendRequestData):FriendRequestData {
  return (obj || new FriendRequestData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFriendRequestData(bb:flatbuffers.ByteBuffer, obj?:FriendRequestData):FriendRequestData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FriendRequestData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NickName():string|null
NickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RequestAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.FriendRequestData';
}

static startFriendRequestData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_NickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickNameOffset, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(2, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(3, ProfileBGID, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(4, EntitlementID, 0);
}

static add_RequestAt(builder:flatbuffers.Builder, RequestAt:number) {
  builder.addFieldInt32(5, RequestAt, 0);
}

static endFriendRequestData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFriendRequestData(builder:flatbuffers.Builder, UID:number, NickNameOffset:flatbuffers.Offset, ProfileIconID:number, ProfileBGID:number, EntitlementID:number, RequestAt:number):flatbuffers.Offset {
  FriendRequestData.startFriendRequestData(builder);
  FriendRequestData.add_UID(builder, UID);
  FriendRequestData.add_NickName(builder, NickNameOffset);
  FriendRequestData.add_ProfileIconID(builder, ProfileIconID);
  FriendRequestData.add_ProfileBGID(builder, ProfileBGID);
  FriendRequestData.add_EntitlementID(builder, EntitlementID);
  FriendRequestData.add_RequestAt(builder, RequestAt);
  return FriendRequestData.endFriendRequestData(builder);
}

unpack(): FriendRequestDataT {
  return new FriendRequestDataT(
    this.UID(),
    this.NickName(),
    this.ProfileIconID(),
    this.ProfileBGID(),
    this.EntitlementID(),
    this.RequestAt()
  );
}


unpackTo(_o: FriendRequestDataT): void {
  _o.UID = this.UID();
  _o.NickName = this.NickName();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.EntitlementID = this.EntitlementID();
  _o.RequestAt = this.RequestAt();
}
}

export class FriendRequestDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public NickName: string|Uint8Array|null = null,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0,
  public EntitlementID: number = 0,
  public RequestAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NickName = (this.NickName !== null ? builder.createString(this.NickName!) : 0);

  return FriendRequestData.createFriendRequestData(builder,
    this.UID,
    NickName,
    this.ProfileIconID,
    this.ProfileBGID,
    this.EntitlementID,
    this.RequestAt
  );
}
}

export class AchievementData implements flatbuffers.IUnpackableObject<AchievementDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AchievementData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

AchievementID():number {
  return this.bb!.readInt32(this.bb_pos);
}

Count():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

CompleteAt():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

static getFullyQualifiedName():string {
  return 'Lobby.AchievementData';
}

static sizeOf():number {
  return 12;
}

static createAchievementData(builder:flatbuffers.Builder, AchievementID: number, Count: number, CompleteAt: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt32(CompleteAt);
  builder.writeInt32(Count);
  builder.writeInt32(AchievementID);
  return builder.offset();
}


unpack(): AchievementDataT {
  return new AchievementDataT(
    this.AchievementID(),
    this.Count(),
    this.CompleteAt()
  );
}


unpackTo(_o: AchievementDataT): void {
  _o.AchievementID = this.AchievementID();
  _o.Count = this.Count();
  _o.CompleteAt = this.CompleteAt();
}
}

export class AchievementDataT implements flatbuffers.IGeneratedObject {
constructor(
  public AchievementID: number = 0,
  public Count: number = 0,
  public CompleteAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return AchievementData.createAchievementData(builder,
    this.AchievementID,
    this.Count,
    this.CompleteAt
  );
}
}

export class SpecialLevelData implements flatbuffers.IUnpackableObject<SpecialLevelDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SpecialLevelData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSpecialLevelData(bb:flatbuffers.ByteBuffer, obj?:SpecialLevelData):SpecialLevelData {
  return (obj || new SpecialLevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSpecialLevelData(bb:flatbuffers.ByteBuffer, obj?:SpecialLevelData):SpecialLevelData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SpecialLevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

LevelID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

CompletedAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BoxIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

BoxIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

BoxIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SpecialLevelData';
}

static startSpecialLevelData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_LevelID(builder:flatbuffers.Builder, LevelID:number) {
  builder.addFieldInt32(0, LevelID, 0);
}

static add_CompletedAt(builder:flatbuffers.Builder, CompletedAt:number) {
  builder.addFieldInt32(1, CompletedAt, 0);
}

static add_BoxIDList(builder:flatbuffers.Builder, BoxIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, BoxIDListOffset, 0);
}

static create_BoxIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_BoxIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_BoxIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_BoxIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSpecialLevelData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSpecialLevelData(builder:flatbuffers.Builder, LevelID:number, CompletedAt:number, BoxIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SpecialLevelData.startSpecialLevelData(builder);
  SpecialLevelData.add_LevelID(builder, LevelID);
  SpecialLevelData.add_CompletedAt(builder, CompletedAt);
  SpecialLevelData.add_BoxIDList(builder, BoxIDListOffset);
  return SpecialLevelData.endSpecialLevelData(builder);
}

unpack(): SpecialLevelDataT {
  return new SpecialLevelDataT(
    this.LevelID(),
    this.CompletedAt(),
    this.bb!.createScalarList<number>(this.BoxIDList.bind(this), this.BoxIDList_Length())
  );
}


unpackTo(_o: SpecialLevelDataT): void {
  _o.LevelID = this.LevelID();
  _o.CompletedAt = this.CompletedAt();
  _o.BoxIDList = this.bb!.createScalarList<number>(this.BoxIDList.bind(this), this.BoxIDList_Length());
}
}

export class SpecialLevelDataT implements flatbuffers.IGeneratedObject {
constructor(
  public LevelID: number = 0,
  public CompletedAt: number = 0,
  public BoxIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const BoxIDList = SpecialLevelData.create_BoxIDList_Vector(builder, this.BoxIDList);

  return SpecialLevelData.createSpecialLevelData(builder,
    this.LevelID,
    this.CompletedAt,
    BoxIDList
  );
}
}

export class CollectionData implements flatbuffers.IUnpackableObject<CollectionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CollectionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

CollectionID():number {
  return this.bb!.readInt32(this.bb_pos);
}

IsRewarded():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.CollectionData';
}

static sizeOf():number {
  return 8;
}

static createCollectionData(builder:flatbuffers.Builder, CollectionID: number, IsRewarded: boolean):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.pad(3);
  builder.writeInt8(Number(Boolean(IsRewarded)));
  builder.writeInt32(CollectionID);
  return builder.offset();
}


unpack(): CollectionDataT {
  return new CollectionDataT(
    this.CollectionID(),
    this.IsRewarded()
  );
}


unpackTo(_o: CollectionDataT): void {
  _o.CollectionID = this.CollectionID();
  _o.IsRewarded = this.IsRewarded();
}
}

export class CollectionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public CollectionID: number = 0,
  public IsRewarded: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CollectionData.createCollectionData(builder,
    this.CollectionID,
    this.IsRewarded
  );
}
}

export class EachRewardData implements flatbuffers.IUnpackableObject<EachRewardDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EachRewardData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

RewardType():ERewardType {
  return this.bb!.readUint8(this.bb_pos);
}

RewardID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

RewardCount():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

RefundAssetType():EUserAssetType {
  return this.bb!.readUint32(this.bb_pos + 12);
}

RefundAssetCount():number {
  return this.bb!.readInt32(this.bb_pos + 16);
}

static getFullyQualifiedName():string {
  return 'Lobby.EachRewardData';
}

static sizeOf():number {
  return 20;
}

static createEachRewardData(builder:flatbuffers.Builder, RewardType: ERewardType, RewardID: number, RewardCount: number, RefundAssetType: EUserAssetType, RefundAssetCount: number):flatbuffers.Offset {
  builder.prep(4, 20);
  builder.writeInt32(RefundAssetCount);
  builder.writeInt32(RefundAssetType);
  builder.writeInt32(RewardCount);
  builder.writeInt32(RewardID);
  builder.pad(3);
  builder.writeInt8(RewardType);
  return builder.offset();
}


unpack(): EachRewardDataT {
  return new EachRewardDataT(
    this.RewardType(),
    this.RewardID(),
    this.RewardCount(),
    this.RefundAssetType(),
    this.RefundAssetCount()
  );
}


unpackTo(_o: EachRewardDataT): void {
  _o.RewardType = this.RewardType();
  _o.RewardID = this.RewardID();
  _o.RewardCount = this.RewardCount();
  _o.RefundAssetType = this.RefundAssetType();
  _o.RefundAssetCount = this.RefundAssetCount();
}
}

export class EachRewardDataT implements flatbuffers.IGeneratedObject {
constructor(
  public RewardType: ERewardType = ERewardType.None,
  public RewardID: number = 0,
  public RewardCount: number = 0,
  public RefundAssetType: EUserAssetType = EUserAssetType.None,
  public RefundAssetCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return EachRewardData.createEachRewardData(builder,
    this.RewardType,
    this.RewardID,
    this.RewardCount,
    this.RefundAssetType,
    this.RefundAssetCount
  );
}
}

export class NewHeroData implements flatbuffers.IUnpackableObject<NewHeroDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NewHeroData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNewHeroData(bb:flatbuffers.ByteBuffer, obj?:NewHeroData):NewHeroData {
  return (obj || new NewHeroData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNewHeroData(bb:flatbuffers.ByteBuffer, obj?:NewHeroData):NewHeroData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NewHeroData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ProfileList(index: number, obj?:ProfileData):ProfileData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ProfileData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ProfileList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

AccessoryList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

AccessoryList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

WinPose(obj?:ExpressionData):ExpressionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new ExpressionData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ExpressionPreset(obj?:ExpressionPresetData):ExpressionPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new ExpressionPresetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.NewHeroData';
}

static startNewHeroData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, BodySkinOffset, 0);
}

static add_ProfileList(builder:flatbuffers.Builder, ProfileListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ProfileListOffset, 0);
}

static start_ProfileList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_AccessoryList(builder:flatbuffers.Builder, AccessoryListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, AccessoryListOffset, 0);
}

static start_AccessoryList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_WinPose(builder:flatbuffers.Builder, WinPoseOffset:flatbuffers.Offset) {
  builder.addFieldStruct(5, WinPoseOffset, 0);
}

static add_ExpressionPreset(builder:flatbuffers.Builder, ExpressionPresetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ExpressionPresetOffset, 0);
}

static endNewHeroData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): NewHeroDataT {
  return new NewHeroDataT(
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null),
    this.bb!.createObjList<ProfileData, ProfileDataT>(this.ProfileList.bind(this), this.ProfileList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.AccessoryList.bind(this), this.AccessoryList_Length()),
    (this.WinPose() !== null ? this.WinPose()!.unpack() : null),
    (this.ExpressionPreset() !== null ? this.ExpressionPreset()!.unpack() : null)
  );
}


unpackTo(_o: NewHeroDataT): void {
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
  _o.ProfileList = this.bb!.createObjList<ProfileData, ProfileDataT>(this.ProfileList.bind(this), this.ProfileList_Length());
  _o.AccessoryList = this.bb!.createObjList<ItemData, ItemDataT>(this.AccessoryList.bind(this), this.AccessoryList_Length());
  _o.WinPose = (this.WinPose() !== null ? this.WinPose()!.unpack() : null);
  _o.ExpressionPreset = (this.ExpressionPreset() !== null ? this.ExpressionPreset()!.unpack() : null);
}
}

export class NewHeroDataT implements flatbuffers.IGeneratedObject {
constructor(
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null,
  public ProfileList: (ProfileDataT)[] = [],
  public AccessoryList: (ItemDataT)[] = [],
  public WinPose: ExpressionDataT|null = null,
  public ExpressionPreset: ExpressionPresetDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);
  const ProfileList = builder.createStructOffsetList(this.ProfileList, NewHeroData.start_ProfileList_Vector);
  const AccessoryList = builder.createStructOffsetList(this.AccessoryList, NewHeroData.start_AccessoryList_Vector);
  const ExpressionPreset = (this.ExpressionPreset !== null ? this.ExpressionPreset!.pack(builder) : 0);

  NewHeroData.startNewHeroData(builder);
  NewHeroData.add_Hero(builder, Hero);
  NewHeroData.add_HairSkin(builder, HairSkin);
  NewHeroData.add_BodySkin(builder, BodySkin);
  NewHeroData.add_ProfileList(builder, ProfileList);
  NewHeroData.add_AccessoryList(builder, AccessoryList);
  NewHeroData.add_WinPose(builder, (this.WinPose !== null ? this.WinPose!.pack(builder) : 0));
  NewHeroData.add_ExpressionPreset(builder, ExpressionPreset);

  return NewHeroData.endNewHeroData(builder);
}
}

export class RewardData implements flatbuffers.IUnpackableObject<RewardDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RewardData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRewardData(bb:flatbuffers.ByteBuffer, obj?:RewardData):RewardData {
  return (obj || new RewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRewardData(bb:flatbuffers.ByteBuffer, obj?:RewardData):RewardData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NewHero(obj?:NewHeroData):NewHeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NewHeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeHeroSkinList(index: number, obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeHeroSkinList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

ChangeArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeExpressionList(index: number, obj?:ExpressionData):ExpressionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new ExpressionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeExpressionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeProfileList(index: number, obj?:ProfileData):ProfileData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new ProfileData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeProfileList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

AllRewardList(index: number, obj?:EachRewardData):EachRewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new EachRewardData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;
}

AllRewardList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.RewardData';
}

static startRewardData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_NewHero(builder:flatbuffers.Builder, NewHeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, NewHeroOffset, 0);
}

static add_ChangeHeroSkinList(builder:flatbuffers.Builder, ChangeHeroSkinListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeHeroSkinListOffset, 0);
}

static create_ChangeHeroSkinList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeHeroSkinList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeArtifactList(builder:flatbuffers.Builder, ChangeArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ChangeArtifactListOffset, 0);
}

static start_ChangeArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static add_ChangeExpressionList(builder:flatbuffers.Builder, ChangeExpressionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, ChangeExpressionListOffset, 0);
}

static start_ChangeExpressionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeProfileList(builder:flatbuffers.Builder, ChangeProfileListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ChangeProfileListOffset, 0);
}

static start_ChangeProfileList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_AllRewardList(builder:flatbuffers.Builder, AllRewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, AllRewardListOffset, 0);
}

static start_AllRewardList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(20, numElems, 4);
}

static endRewardData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRewardData(builder:flatbuffers.Builder, NewHeroOffset:flatbuffers.Offset, ChangeHeroSkinListOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset, ChangeArtifactListOffset:flatbuffers.Offset, ChangeExpressionListOffset:flatbuffers.Offset, ChangeProfileListOffset:flatbuffers.Offset, AllRewardListOffset:flatbuffers.Offset):flatbuffers.Offset {
  RewardData.startRewardData(builder);
  RewardData.add_NewHero(builder, NewHeroOffset);
  RewardData.add_ChangeHeroSkinList(builder, ChangeHeroSkinListOffset);
  RewardData.add_ChangeAssetList(builder, ChangeAssetListOffset);
  RewardData.add_ChangeItemList(builder, ChangeItemListOffset);
  RewardData.add_ChangeArtifactList(builder, ChangeArtifactListOffset);
  RewardData.add_ChangeExpressionList(builder, ChangeExpressionListOffset);
  RewardData.add_ChangeProfileList(builder, ChangeProfileListOffset);
  RewardData.add_AllRewardList(builder, AllRewardListOffset);
  return RewardData.endRewardData(builder);
}

unpack(): RewardDataT {
  return new RewardDataT(
    (this.NewHero() !== null ? this.NewHero()!.unpack() : null),
    this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinList.bind(this), this.ChangeHeroSkinList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length()),
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ChangeArtifactList.bind(this), this.ChangeArtifactList_Length()),
    this.bb!.createObjList<ExpressionData, ExpressionDataT>(this.ChangeExpressionList.bind(this), this.ChangeExpressionList_Length()),
    this.bb!.createObjList<ProfileData, ProfileDataT>(this.ChangeProfileList.bind(this), this.ChangeProfileList_Length()),
    this.bb!.createObjList<EachRewardData, EachRewardDataT>(this.AllRewardList.bind(this), this.AllRewardList_Length())
  );
}


unpackTo(_o: RewardDataT): void {
  _o.NewHero = (this.NewHero() !== null ? this.NewHero()!.unpack() : null);
  _o.ChangeHeroSkinList = this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinList.bind(this), this.ChangeHeroSkinList_Length());
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
  _o.ChangeArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ChangeArtifactList.bind(this), this.ChangeArtifactList_Length());
  _o.ChangeExpressionList = this.bb!.createObjList<ExpressionData, ExpressionDataT>(this.ChangeExpressionList.bind(this), this.ChangeExpressionList_Length());
  _o.ChangeProfileList = this.bb!.createObjList<ProfileData, ProfileDataT>(this.ChangeProfileList.bind(this), this.ChangeProfileList_Length());
  _o.AllRewardList = this.bb!.createObjList<EachRewardData, EachRewardDataT>(this.AllRewardList.bind(this), this.AllRewardList_Length());
}
}

export class RewardDataT implements flatbuffers.IGeneratedObject {
constructor(
  public NewHero: NewHeroDataT|null = null,
  public ChangeHeroSkinList: (HeroSkinDataT)[] = [],
  public ChangeAssetList: (AssetDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = [],
  public ChangeArtifactList: (ArtifactDataT)[] = [],
  public ChangeExpressionList: (ExpressionDataT)[] = [],
  public ChangeProfileList: (ProfileDataT)[] = [],
  public AllRewardList: (EachRewardDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NewHero = (this.NewHero !== null ? this.NewHero!.pack(builder) : 0);
  const ChangeHeroSkinList = RewardData.create_ChangeHeroSkinList_Vector(builder, builder.createObjectOffsetList(this.ChangeHeroSkinList));
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, RewardData.start_ChangeAssetList_Vector);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, RewardData.start_ChangeItemList_Vector);
  const ChangeArtifactList = builder.createStructOffsetList(this.ChangeArtifactList, RewardData.start_ChangeArtifactList_Vector);
  const ChangeExpressionList = builder.createStructOffsetList(this.ChangeExpressionList, RewardData.start_ChangeExpressionList_Vector);
  const ChangeProfileList = builder.createStructOffsetList(this.ChangeProfileList, RewardData.start_ChangeProfileList_Vector);
  const AllRewardList = builder.createStructOffsetList(this.AllRewardList, RewardData.start_AllRewardList_Vector);

  return RewardData.createRewardData(builder,
    NewHero,
    ChangeHeroSkinList,
    ChangeAssetList,
    ChangeItemList,
    ChangeArtifactList,
    ChangeExpressionList,
    ChangeProfileList,
    AllRewardList
  );
}
}

export class RecommendUserInfo implements flatbuffers.IUnpackableObject<RecommendUserInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RecommendUserInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRecommendUserInfo(bb:flatbuffers.ByteBuffer, obj?:RecommendUserInfo):RecommendUserInfo {
  return (obj || new RecommendUserInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRecommendUserInfo(bb:flatbuffers.ByteBuffer, obj?:RecommendUserInfo):RecommendUserInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RecommendUserInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.RecommendUserInfo';
}

static startRecommendUserInfo(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(2, EntitlementID, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(3, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(4, ProfileBGID, 0);
}

static endRecommendUserInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRecommendUserInfo(builder:flatbuffers.Builder, UID:number, NickOffset:flatbuffers.Offset, EntitlementID:number, ProfileIconID:number, ProfileBGID:number):flatbuffers.Offset {
  RecommendUserInfo.startRecommendUserInfo(builder);
  RecommendUserInfo.add_UID(builder, UID);
  RecommendUserInfo.add_Nick(builder, NickOffset);
  RecommendUserInfo.add_EntitlementID(builder, EntitlementID);
  RecommendUserInfo.add_ProfileIconID(builder, ProfileIconID);
  RecommendUserInfo.add_ProfileBGID(builder, ProfileBGID);
  return RecommendUserInfo.endRecommendUserInfo(builder);
}

unpack(): RecommendUserInfoT {
  return new RecommendUserInfoT(
    this.UID(),
    this.Nick(),
    this.EntitlementID(),
    this.ProfileIconID(),
    this.ProfileBGID()
  );
}


unpackTo(_o: RecommendUserInfoT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.EntitlementID = this.EntitlementID();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
}
}

export class RecommendUserInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public EntitlementID: number = 0,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);

  return RecommendUserInfo.createRecommendUserInfo(builder,
    this.UID,
    Nick,
    this.EntitlementID,
    this.ProfileIconID,
    this.ProfileBGID
  );
}
}

export class GuideMissionData implements flatbuffers.IUnpackableObject<GuideMissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GuideMissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

GuideMissionCategory():EGuideMissionCategory {
  return this.bb!.readUint8(this.bb_pos);
}

MissionID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

IsCompleted():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 8);
}

IsRewarded():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 9);
}

static getFullyQualifiedName():string {
  return 'Lobby.GuideMissionData';
}

static sizeOf():number {
  return 12;
}

static createGuideMissionData(builder:flatbuffers.Builder, GuideMissionCategory: EGuideMissionCategory, MissionID: number, IsCompleted: boolean, IsRewarded: boolean):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.pad(2);
  builder.writeInt8(Number(Boolean(IsRewarded)));
  builder.writeInt8(Number(Boolean(IsCompleted)));
  builder.writeInt32(MissionID);
  builder.pad(3);
  builder.writeInt8(GuideMissionCategory);
  return builder.offset();
}


unpack(): GuideMissionDataT {
  return new GuideMissionDataT(
    this.GuideMissionCategory(),
    this.MissionID(),
    this.IsCompleted(),
    this.IsRewarded()
  );
}


unpackTo(_o: GuideMissionDataT): void {
  _o.GuideMissionCategory = this.GuideMissionCategory();
  _o.MissionID = this.MissionID();
  _o.IsCompleted = this.IsCompleted();
  _o.IsRewarded = this.IsRewarded();
}
}

export class GuideMissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public GuideMissionCategory: EGuideMissionCategory = EGuideMissionCategory.None,
  public MissionID: number = 0,
  public IsCompleted: boolean = false,
  public IsRewarded: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return GuideMissionData.createGuideMissionData(builder,
    this.GuideMissionCategory,
    this.MissionID,
    this.IsCompleted,
    this.IsRewarded
  );
}
}

export class ProfileData implements flatbuffers.IUnpackableObject<ProfileDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ProfileData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ProfileType():EProfileType {
  return this.bb!.readUint8(this.bb_pos);
}

ProfileID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.ProfileData';
}

static sizeOf():number {
  return 8;
}

static createProfileData(builder:flatbuffers.Builder, ProfileType: EProfileType, ProfileID: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(ProfileID);
  builder.pad(3);
  builder.writeInt8(ProfileType);
  return builder.offset();
}


unpack(): ProfileDataT {
  return new ProfileDataT(
    this.ProfileType(),
    this.ProfileID()
  );
}


unpackTo(_o: ProfileDataT): void {
  _o.ProfileType = this.ProfileType();
  _o.ProfileID = this.ProfileID();
}
}

export class ProfileDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ProfileType: EProfileType = EProfileType.None,
  public ProfileID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ProfileData.createProfileData(builder,
    this.ProfileType,
    this.ProfileID
  );
}
}

export class PenaltyInfo implements flatbuffers.IUnpackableObject<PenaltyInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PenaltyInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ReportState():EPenaltyReportState {
  return this.bb!.readUint8(this.bb_pos);
}

IsActive():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 1);
}

PenaltyGrade():number {
  return this.bb!.readInt8(this.bb_pos + 2);
}

PenaltyPoint():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

PenaltyCount():number {
  return this.bb!.readInt8(this.bb_pos + 8);
}

PenaltyEndAt():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

ClearPenaltyAt():number {
  return this.bb!.readInt32(this.bb_pos + 16);
}

ID():number {
  return this.bb!.readInt32(this.bb_pos + 20);
}

static getFullyQualifiedName():string {
  return 'Lobby.PenaltyInfo';
}

static sizeOf():number {
  return 24;
}

static createPenaltyInfo(builder:flatbuffers.Builder, ReportState: EPenaltyReportState, IsActive: boolean, PenaltyGrade: number, PenaltyPoint: number, PenaltyCount: number, PenaltyEndAt: number, ClearPenaltyAt: number, ID: number):flatbuffers.Offset {
  builder.prep(4, 24);
  builder.writeInt32(ID);
  builder.writeInt32(ClearPenaltyAt);
  builder.writeInt32(PenaltyEndAt);
  builder.pad(3);
  builder.writeInt8(PenaltyCount);
  builder.writeInt32(PenaltyPoint);
  builder.pad(1);
  builder.writeInt8(PenaltyGrade);
  builder.writeInt8(Number(Boolean(IsActive)));
  builder.writeInt8(ReportState);
  return builder.offset();
}


unpack(): PenaltyInfoT {
  return new PenaltyInfoT(
    this.ReportState(),
    this.IsActive(),
    this.PenaltyGrade(),
    this.PenaltyPoint(),
    this.PenaltyCount(),
    this.PenaltyEndAt(),
    this.ClearPenaltyAt(),
    this.ID()
  );
}


unpackTo(_o: PenaltyInfoT): void {
  _o.ReportState = this.ReportState();
  _o.IsActive = this.IsActive();
  _o.PenaltyGrade = this.PenaltyGrade();
  _o.PenaltyPoint = this.PenaltyPoint();
  _o.PenaltyCount = this.PenaltyCount();
  _o.PenaltyEndAt = this.PenaltyEndAt();
  _o.ClearPenaltyAt = this.ClearPenaltyAt();
  _o.ID = this.ID();
}
}

export class PenaltyInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public ReportState: EPenaltyReportState = EPenaltyReportState.None,
  public IsActive: boolean = false,
  public PenaltyGrade: number = 0,
  public PenaltyPoint: number = 0,
  public PenaltyCount: number = 0,
  public PenaltyEndAt: number = 0,
  public ClearPenaltyAt: number = 0,
  public ID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PenaltyInfo.createPenaltyInfo(builder,
    this.ReportState,
    this.IsActive,
    this.PenaltyGrade,
    this.PenaltyPoint,
    this.PenaltyCount,
    this.PenaltyEndAt,
    this.ClearPenaltyAt,
    this.ID
  );
}
}

export class ExpressionData implements flatbuffers.IUnpackableObject<ExpressionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ExpressionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ExpressionType():EExpressionType {
  return this.bb!.readUint8(this.bb_pos);
}

ExpressionID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.ExpressionData';
}

static sizeOf():number {
  return 8;
}

static createExpressionData(builder:flatbuffers.Builder, ExpressionType: EExpressionType, ExpressionID: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(ExpressionID);
  builder.pad(3);
  builder.writeInt8(ExpressionType);
  return builder.offset();
}


unpack(): ExpressionDataT {
  return new ExpressionDataT(
    this.ExpressionType(),
    this.ExpressionID()
  );
}


unpackTo(_o: ExpressionDataT): void {
  _o.ExpressionType = this.ExpressionType();
  _o.ExpressionID = this.ExpressionID();
}
}

export class ExpressionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ExpressionType: EExpressionType = EExpressionType.None,
  public ExpressionID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ExpressionData.createExpressionData(builder,
    this.ExpressionType,
    this.ExpressionID
  );
}
}

export class ExpressionPresetData implements flatbuffers.IUnpackableObject<ExpressionPresetDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ExpressionPresetData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsExpressionPresetData(bb:flatbuffers.ByteBuffer, obj?:ExpressionPresetData):ExpressionPresetData {
  return (obj || new ExpressionPresetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsExpressionPresetData(bb:flatbuffers.ByteBuffer, obj?:ExpressionPresetData):ExpressionPresetData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ExpressionPresetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Preset(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

Preset_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

Preset_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.ExpressionPresetData';
}

static startExpressionPresetData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_Preset(builder:flatbuffers.Builder, PresetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, PresetOffset, 0);
}

static create_Preset_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_Preset_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_Preset_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_Preset_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endExpressionPresetData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createExpressionPresetData(builder:flatbuffers.Builder, HeroID:number, PresetOffset:flatbuffers.Offset):flatbuffers.Offset {
  ExpressionPresetData.startExpressionPresetData(builder);
  ExpressionPresetData.add_HeroID(builder, HeroID);
  ExpressionPresetData.add_Preset(builder, PresetOffset);
  return ExpressionPresetData.endExpressionPresetData(builder);
}

unpack(): ExpressionPresetDataT {
  return new ExpressionPresetDataT(
    this.HeroID(),
    this.bb!.createScalarList<number>(this.Preset.bind(this), this.Preset_Length())
  );
}


unpackTo(_o: ExpressionPresetDataT): void {
  _o.HeroID = this.HeroID();
  _o.Preset = this.bb!.createScalarList<number>(this.Preset.bind(this), this.Preset_Length());
}
}

export class ExpressionPresetDataT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public Preset: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Preset = ExpressionPresetData.create_Preset_Vector(builder, this.Preset);

  return ExpressionPresetData.createExpressionPresetData(builder,
    this.HeroID,
    Preset
  );
}
}

export class PlayRecordGoldClashData implements flatbuffers.IUnpackableObject<PlayRecordGoldClashDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayRecordGoldClashData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

SeasonID():number {
  return this.bb!.readInt32(this.bb_pos);
}

HeroID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

Win():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

Lose():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

Kill():number {
  return this.bb!.readInt32(this.bb_pos + 16);
}

Death():number {
  return this.bb!.readInt32(this.bb_pos + 20);
}

Mvp():number {
  return this.bb!.readInt32(this.bb_pos + 24);
}

AvgGold():number {
  return this.bb!.readInt32(this.bb_pos + 28);
}

AvgDamage():number {
  return this.bb!.readInt32(this.bb_pos + 32);
}

AvgHeal():number {
  return this.bb!.readInt32(this.bb_pos + 36);
}

AvgDamageBlock():number {
  return this.bb!.readInt32(this.bb_pos + 40);
}

static getFullyQualifiedName():string {
  return 'Lobby.PlayRecordGoldClashData';
}

static sizeOf():number {
  return 44;
}

static createPlayRecordGoldClashData(builder:flatbuffers.Builder, SeasonID: number, HeroID: number, Win: number, Lose: number, Kill: number, Death: number, Mvp: number, AvgGold: number, AvgDamage: number, AvgHeal: number, AvgDamageBlock: number):flatbuffers.Offset {
  builder.prep(4, 44);
  builder.writeInt32(AvgDamageBlock);
  builder.writeInt32(AvgHeal);
  builder.writeInt32(AvgDamage);
  builder.writeInt32(AvgGold);
  builder.writeInt32(Mvp);
  builder.writeInt32(Death);
  builder.writeInt32(Kill);
  builder.writeInt32(Lose);
  builder.writeInt32(Win);
  builder.writeInt32(HeroID);
  builder.writeInt32(SeasonID);
  return builder.offset();
}


unpack(): PlayRecordGoldClashDataT {
  return new PlayRecordGoldClashDataT(
    this.SeasonID(),
    this.HeroID(),
    this.Win(),
    this.Lose(),
    this.Kill(),
    this.Death(),
    this.Mvp(),
    this.AvgGold(),
    this.AvgDamage(),
    this.AvgHeal(),
    this.AvgDamageBlock()
  );
}


unpackTo(_o: PlayRecordGoldClashDataT): void {
  _o.SeasonID = this.SeasonID();
  _o.HeroID = this.HeroID();
  _o.Win = this.Win();
  _o.Lose = this.Lose();
  _o.Kill = this.Kill();
  _o.Death = this.Death();
  _o.Mvp = this.Mvp();
  _o.AvgGold = this.AvgGold();
  _o.AvgDamage = this.AvgDamage();
  _o.AvgHeal = this.AvgHeal();
  _o.AvgDamageBlock = this.AvgDamageBlock();
}
}

export class PlayRecordGoldClashDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonID: number = 0,
  public HeroID: number = 0,
  public Win: number = 0,
  public Lose: number = 0,
  public Kill: number = 0,
  public Death: number = 0,
  public Mvp: number = 0,
  public AvgGold: number = 0,
  public AvgDamage: number = 0,
  public AvgHeal: number = 0,
  public AvgDamageBlock: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PlayRecordGoldClashData.createPlayRecordGoldClashData(builder,
    this.SeasonID,
    this.HeroID,
    this.Win,
    this.Lose,
    this.Kill,
    this.Death,
    this.Mvp,
    this.AvgGold,
    this.AvgDamage,
    this.AvgHeal,
    this.AvgDamageBlock
  );
}
}

export class PlayRecordRpgData implements flatbuffers.IUnpackableObject<PlayRecordRpgDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayRecordRpgData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ChapterID():number {
  return this.bb!.readInt32(this.bb_pos);
}

HeroID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

BossClear():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

TopPoint():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

ShortestPlayTime():number {
  return this.bb!.readInt32(this.bb_pos + 16);
}

AvgFragment():number {
  return this.bb!.readInt32(this.bb_pos + 20);
}

AvgArtifact():number {
  return this.bb!.readInt32(this.bb_pos + 24);
}

AvgLevel():number {
  return this.bb!.readInt32(this.bb_pos + 28);
}

static getFullyQualifiedName():string {
  return 'Lobby.PlayRecordRpgData';
}

static sizeOf():number {
  return 32;
}

static createPlayRecordRpgData(builder:flatbuffers.Builder, ChapterID: number, HeroID: number, BossClear: number, TopPoint: number, ShortestPlayTime: number, AvgFragment: number, AvgArtifact: number, AvgLevel: number):flatbuffers.Offset {
  builder.prep(4, 32);
  builder.writeInt32(AvgLevel);
  builder.writeInt32(AvgArtifact);
  builder.writeInt32(AvgFragment);
  builder.writeInt32(ShortestPlayTime);
  builder.writeInt32(TopPoint);
  builder.writeInt32(BossClear);
  builder.writeInt32(HeroID);
  builder.writeInt32(ChapterID);
  return builder.offset();
}


unpack(): PlayRecordRpgDataT {
  return new PlayRecordRpgDataT(
    this.ChapterID(),
    this.HeroID(),
    this.BossClear(),
    this.TopPoint(),
    this.ShortestPlayTime(),
    this.AvgFragment(),
    this.AvgArtifact(),
    this.AvgLevel()
  );
}


unpackTo(_o: PlayRecordRpgDataT): void {
  _o.ChapterID = this.ChapterID();
  _o.HeroID = this.HeroID();
  _o.BossClear = this.BossClear();
  _o.TopPoint = this.TopPoint();
  _o.ShortestPlayTime = this.ShortestPlayTime();
  _o.AvgFragment = this.AvgFragment();
  _o.AvgArtifact = this.AvgArtifact();
  _o.AvgLevel = this.AvgLevel();
}
}

export class PlayRecordRpgDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ChapterID: number = 0,
  public HeroID: number = 0,
  public BossClear: number = 0,
  public TopPoint: number = 0,
  public ShortestPlayTime: number = 0,
  public AvgFragment: number = 0,
  public AvgArtifact: number = 0,
  public AvgLevel: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PlayRecordRpgData.createPlayRecordRpgData(builder,
    this.ChapterID,
    this.HeroID,
    this.BossClear,
    this.TopPoint,
    this.ShortestPlayTime,
    this.AvgFragment,
    this.AvgArtifact,
    this.AvgLevel
  );
}
}

export class UserInfo implements flatbuffers.IUnpackableObject<UserInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UserInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUserInfo(bb:flatbuffers.ByteBuffer, obj?:UserInfo):UserInfo {
  return (obj || new UserInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUserInfo(bb:flatbuffers.ByteBuffer, obj?:UserInfo):UserInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UserInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MemberNo():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LogoutAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuideClass():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IntroduceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AchievementCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

CollectionCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.UserInfo';
}

static startUserInfo(builder:flatbuffers.Builder) {
  builder.startObject(12);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(2, HeroID, 0);
}

static add_MemberNo(builder:flatbuffers.Builder, MemberNo:number) {
  builder.addFieldInt32(3, MemberNo, 0);
}

static add_LogoutAt(builder:flatbuffers.Builder, LogoutAt:number) {
  builder.addFieldInt32(4, LogoutAt, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(5, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(6, ProfileBGID, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(7, EntitlementID, 0);
}

static add_GuideClass(builder:flatbuffers.Builder, GuideClass:number) {
  builder.addFieldInt32(8, GuideClass, 0);
}

static add_IntroduceID(builder:flatbuffers.Builder, IntroduceID:number) {
  builder.addFieldInt32(9, IntroduceID, 0);
}

static add_AchievementCount(builder:flatbuffers.Builder, AchievementCount:number) {
  builder.addFieldInt32(10, AchievementCount, 0);
}

static add_CollectionCount(builder:flatbuffers.Builder, CollectionCount:number) {
  builder.addFieldInt32(11, CollectionCount, 0);
}

static endUserInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUserInfo(builder:flatbuffers.Builder, UID:number, NickOffset:flatbuffers.Offset, HeroID:number, MemberNo:number, LogoutAt:number, ProfileIconID:number, ProfileBGID:number, EntitlementID:number, GuideClass:number, IntroduceID:number, AchievementCount:number, CollectionCount:number):flatbuffers.Offset {
  UserInfo.startUserInfo(builder);
  UserInfo.add_UID(builder, UID);
  UserInfo.add_Nick(builder, NickOffset);
  UserInfo.add_HeroID(builder, HeroID);
  UserInfo.add_MemberNo(builder, MemberNo);
  UserInfo.add_LogoutAt(builder, LogoutAt);
  UserInfo.add_ProfileIconID(builder, ProfileIconID);
  UserInfo.add_ProfileBGID(builder, ProfileBGID);
  UserInfo.add_EntitlementID(builder, EntitlementID);
  UserInfo.add_GuideClass(builder, GuideClass);
  UserInfo.add_IntroduceID(builder, IntroduceID);
  UserInfo.add_AchievementCount(builder, AchievementCount);
  UserInfo.add_CollectionCount(builder, CollectionCount);
  return UserInfo.endUserInfo(builder);
}

unpack(): UserInfoT {
  return new UserInfoT(
    this.UID(),
    this.Nick(),
    this.HeroID(),
    this.MemberNo(),
    this.LogoutAt(),
    this.ProfileIconID(),
    this.ProfileBGID(),
    this.EntitlementID(),
    this.GuideClass(),
    this.IntroduceID(),
    this.AchievementCount(),
    this.CollectionCount()
  );
}


unpackTo(_o: UserInfoT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.HeroID = this.HeroID();
  _o.MemberNo = this.MemberNo();
  _o.LogoutAt = this.LogoutAt();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.EntitlementID = this.EntitlementID();
  _o.GuideClass = this.GuideClass();
  _o.IntroduceID = this.IntroduceID();
  _o.AchievementCount = this.AchievementCount();
  _o.CollectionCount = this.CollectionCount();
}
}

export class UserInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public HeroID: number = 0,
  public MemberNo: number = 0,
  public LogoutAt: number = 0,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0,
  public EntitlementID: number = 0,
  public GuideClass: number = 0,
  public IntroduceID: number = 0,
  public AchievementCount: number = 0,
  public CollectionCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);

  return UserInfo.createUserInfo(builder,
    this.UID,
    Nick,
    this.HeroID,
    this.MemberNo,
    this.LogoutAt,
    this.ProfileIconID,
    this.ProfileBGID,
    this.EntitlementID,
    this.GuideClass,
    this.IntroduceID,
    this.AchievementCount,
    this.CollectionCount
  );
}
}

export class WonderCubeData implements flatbuffers.IUnpackableObject<WonderCubeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):WonderCubeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

SlotID():number {
  return this.bb!.readUint8(this.bb_pos);
}

WonderCubeID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.WonderCubeData';
}

static sizeOf():number {
  return 8;
}

static createWonderCubeData(builder:flatbuffers.Builder, SlotID: number, WonderCubeID: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(WonderCubeID);
  builder.pad(3);
  builder.writeInt8(SlotID);
  return builder.offset();
}


unpack(): WonderCubeDataT {
  return new WonderCubeDataT(
    this.SlotID(),
    this.WonderCubeID()
  );
}


unpackTo(_o: WonderCubeDataT): void {
  _o.SlotID = this.SlotID();
  _o.WonderCubeID = this.WonderCubeID();
}
}

export class WonderCubeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotID: number = 0,
  public WonderCubeID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return WonderCubeData.createWonderCubeData(builder,
    this.SlotID,
    this.WonderCubeID
  );
}
}

export class AdvertisementData implements flatbuffers.IUnpackableObject<AdvertisementDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AdvertisementData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ADVID():number {
  return this.bb!.readInt32(this.bb_pos);
}

IsWatched():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 4);
}

IsRewarded():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 5);
}

static getFullyQualifiedName():string {
  return 'Lobby.AdvertisementData';
}

static sizeOf():number {
  return 8;
}

static createAdvertisementData(builder:flatbuffers.Builder, ADVID: number, IsWatched: boolean, IsRewarded: boolean):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.pad(2);
  builder.writeInt8(Number(Boolean(IsRewarded)));
  builder.writeInt8(Number(Boolean(IsWatched)));
  builder.writeInt32(ADVID);
  return builder.offset();
}


unpack(): AdvertisementDataT {
  return new AdvertisementDataT(
    this.ADVID(),
    this.IsWatched(),
    this.IsRewarded()
  );
}


unpackTo(_o: AdvertisementDataT): void {
  _o.ADVID = this.ADVID();
  _o.IsWatched = this.IsWatched();
  _o.IsRewarded = this.IsRewarded();
}
}

export class AdvertisementDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVID: number = 0,
  public IsWatched: boolean = false,
  public IsRewarded: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return AdvertisementData.createAdvertisementData(builder,
    this.ADVID,
    this.IsWatched,
    this.IsRewarded
  );
}
}

export class IncubationData implements flatbuffers.IUnpackableObject<IncubationDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):IncubationData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

IncubatorID():number {
  return this.bb!.readInt32(this.bb_pos);
}

IncubateCount():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

PetEggID():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

IncubationEndAt():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

static getFullyQualifiedName():string {
  return 'Lobby.IncubationData';
}

static sizeOf():number {
  return 16;
}

static createIncubationData(builder:flatbuffers.Builder, IncubatorID: number, IncubateCount: number, PetEggID: number, IncubationEndAt: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(IncubationEndAt);
  builder.writeInt32(PetEggID);
  builder.writeInt32(IncubateCount);
  builder.writeInt32(IncubatorID);
  return builder.offset();
}


unpack(): IncubationDataT {
  return new IncubationDataT(
    this.IncubatorID(),
    this.IncubateCount(),
    this.PetEggID(),
    this.IncubationEndAt()
  );
}


unpackTo(_o: IncubationDataT): void {
  _o.IncubatorID = this.IncubatorID();
  _o.IncubateCount = this.IncubateCount();
  _o.PetEggID = this.PetEggID();
  _o.IncubationEndAt = this.IncubationEndAt();
}
}

export class IncubationDataT implements flatbuffers.IGeneratedObject {
constructor(
  public IncubatorID: number = 0,
  public IncubateCount: number = 0,
  public PetEggID: number = 0,
  public IncubationEndAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return IncubationData.createIncubationData(builder,
    this.IncubatorID,
    this.IncubateCount,
    this.PetEggID,
    this.IncubationEndAt
  );
}
}

export class TreasureBoxData implements flatbuffers.IUnpackableObject<TreasureBoxDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TreasureBoxData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

BoxID():number {
  return this.bb!.readInt32(this.bb_pos);
}

IsOpened():boolean {
  return !!this.bb!.readInt8(this.bb_pos + 4);
}

Location(obj?:Vector3):Vector3|null {
  return (obj || new Vector3()).__init(this.bb_pos + 8, this.bb!);
}

Rotation(obj?:Vector3):Vector3|null {
  return (obj || new Vector3()).__init(this.bb_pos + 20, this.bb!);
}

Scale(obj?:Vector3):Vector3|null {
  return (obj || new Vector3()).__init(this.bb_pos + 32, this.bb!);
}

static getFullyQualifiedName():string {
  return 'Lobby.TreasureBoxData';
}

static sizeOf():number {
  return 44;
}

static createTreasureBoxData(builder:flatbuffers.Builder, BoxID: number, IsOpened: boolean, Location_X: number, Location_Y: number, Location_Z: number, Rotation_X: number, Rotation_Y: number, Rotation_Z: number, Scale_X: number, Scale_Y: number, Scale_Z: number):flatbuffers.Offset {
  builder.prep(4, 44);
  builder.prep(4, 12);
  builder.writeFloat32(Scale_Z);
  builder.writeFloat32(Scale_Y);
  builder.writeFloat32(Scale_X);
  builder.prep(4, 12);
  builder.writeFloat32(Rotation_Z);
  builder.writeFloat32(Rotation_Y);
  builder.writeFloat32(Rotation_X);
  builder.prep(4, 12);
  builder.writeFloat32(Location_Z);
  builder.writeFloat32(Location_Y);
  builder.writeFloat32(Location_X);
  builder.pad(3);
  builder.writeInt8(Number(Boolean(IsOpened)));
  builder.writeInt32(BoxID);
  return builder.offset();
}


unpack(): TreasureBoxDataT {
  return new TreasureBoxDataT(
    this.BoxID(),
    this.IsOpened(),
    (this.Location() !== null ? this.Location()!.unpack() : null),
    (this.Rotation() !== null ? this.Rotation()!.unpack() : null),
    (this.Scale() !== null ? this.Scale()!.unpack() : null)
  );
}


unpackTo(_o: TreasureBoxDataT): void {
  _o.BoxID = this.BoxID();
  _o.IsOpened = this.IsOpened();
  _o.Location = (this.Location() !== null ? this.Location()!.unpack() : null);
  _o.Rotation = (this.Rotation() !== null ? this.Rotation()!.unpack() : null);
  _o.Scale = (this.Scale() !== null ? this.Scale()!.unpack() : null);
}
}

export class TreasureBoxDataT implements flatbuffers.IGeneratedObject {
constructor(
  public BoxID: number = 0,
  public IsOpened: boolean = false,
  public Location: Vector3T|null = null,
  public Rotation: Vector3T|null = null,
  public Scale: Vector3T|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return TreasureBoxData.createTreasureBoxData(builder,
    this.BoxID,
    this.IsOpened,
    (this.Location?.X ?? 0),
    (this.Location?.Y ?? 0),
    (this.Location?.Z ?? 0),
    (this.Rotation?.X ?? 0),
    (this.Rotation?.Y ?? 0),
    (this.Rotation?.Z ?? 0),
    (this.Scale?.X ?? 0),
    (this.Scale?.Y ?? 0),
    (this.Scale?.Z ?? 0)
  );
}
}

export class CQ_UserAccountLogin implements flatbuffers.IUnpackableObject<CQ_UserAccountLoginT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_UserAccountLogin {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_UserAccountLogin(bb:flatbuffers.ByteBuffer, obj?:CQ_UserAccountLogin):CQ_UserAccountLogin {
  return (obj || new CQ_UserAccountLogin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_UserAccountLogin(bb:flatbuffers.ByteBuffer, obj?:CQ_UserAccountLogin):CQ_UserAccountLogin {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_UserAccountLogin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nickNameNo():string|null
nickNameNo(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nickNameNo(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

marketCode():EMarketCode {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EMarketCode.None;
}

deviceId():string|null
deviceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

deviceType():string|null
deviceType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

deviceModel():string|null
deviceModel(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceModel(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

os():string|null
os(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
os(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

providerList(index: number):EProvider|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
}

providerList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

providerList_Array():Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

platform():EPlatform {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EPlatform.None;
}

GAID():string|null
GAID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GAID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IDFA():string|null
IDFA(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
IDFA(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IDFV():string|null
IDFV(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
IDFV(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

packageName():string|null
packageName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
packageName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gameVersion():string|null
gameVersion(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gameVersion(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

checksumData():string|null
checksumData(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
checksumData(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_UserAccountLogin';
}

static startCQ_UserAccountLogin(builder:flatbuffers.Builder) {
  builder.startObject(14);
}

static add_nickNameNo(builder:flatbuffers.Builder, nickNameNoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nickNameNoOffset, 0);
}

static add_marketCode(builder:flatbuffers.Builder, marketCode:EMarketCode) {
  builder.addFieldInt8(1, marketCode, EMarketCode.None);
}

static add_deviceId(builder:flatbuffers.Builder, deviceIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, deviceIdOffset, 0);
}

static add_deviceType(builder:flatbuffers.Builder, deviceTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, deviceTypeOffset, 0);
}

static add_deviceModel(builder:flatbuffers.Builder, deviceModelOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, deviceModelOffset, 0);
}

static add_os(builder:flatbuffers.Builder, osOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, osOffset, 0);
}

static add_providerList(builder:flatbuffers.Builder, providerListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, providerListOffset, 0);
}

static create_providerList_Vector(builder:flatbuffers.Builder, data:EProvider[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]!);
  }
  return builder.endVector();
}

static start_providerList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static add_platform(builder:flatbuffers.Builder, platform:EPlatform) {
  builder.addFieldInt8(7, platform, EPlatform.None);
}

static add_GAID(builder:flatbuffers.Builder, GAIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, GAIDOffset, 0);
}

static add_IDFA(builder:flatbuffers.Builder, IDFAOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, IDFAOffset, 0);
}

static add_IDFV(builder:flatbuffers.Builder, IDFVOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, IDFVOffset, 0);
}

static add_packageName(builder:flatbuffers.Builder, packageNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, packageNameOffset, 0);
}

static add_gameVersion(builder:flatbuffers.Builder, gameVersionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, gameVersionOffset, 0);
}

static add_checksumData(builder:flatbuffers.Builder, checksumDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, checksumDataOffset, 0);
}

static endCQ_UserAccountLogin(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_UserAccountLogin(builder:flatbuffers.Builder, nickNameNoOffset:flatbuffers.Offset, marketCode:EMarketCode, deviceIdOffset:flatbuffers.Offset, deviceTypeOffset:flatbuffers.Offset, deviceModelOffset:flatbuffers.Offset, osOffset:flatbuffers.Offset, providerListOffset:flatbuffers.Offset, platform:EPlatform, GAIDOffset:flatbuffers.Offset, IDFAOffset:flatbuffers.Offset, IDFVOffset:flatbuffers.Offset, packageNameOffset:flatbuffers.Offset, gameVersionOffset:flatbuffers.Offset, checksumDataOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_UserAccountLogin.startCQ_UserAccountLogin(builder);
  CQ_UserAccountLogin.add_nickNameNo(builder, nickNameNoOffset);
  CQ_UserAccountLogin.add_marketCode(builder, marketCode);
  CQ_UserAccountLogin.add_deviceId(builder, deviceIdOffset);
  CQ_UserAccountLogin.add_deviceType(builder, deviceTypeOffset);
  CQ_UserAccountLogin.add_deviceModel(builder, deviceModelOffset);
  CQ_UserAccountLogin.add_os(builder, osOffset);
  CQ_UserAccountLogin.add_providerList(builder, providerListOffset);
  CQ_UserAccountLogin.add_platform(builder, platform);
  CQ_UserAccountLogin.add_GAID(builder, GAIDOffset);
  CQ_UserAccountLogin.add_IDFA(builder, IDFAOffset);
  CQ_UserAccountLogin.add_IDFV(builder, IDFVOffset);
  CQ_UserAccountLogin.add_packageName(builder, packageNameOffset);
  CQ_UserAccountLogin.add_gameVersion(builder, gameVersionOffset);
  CQ_UserAccountLogin.add_checksumData(builder, checksumDataOffset);
  return CQ_UserAccountLogin.endCQ_UserAccountLogin(builder);
}

unpack(): CQ_UserAccountLoginT {
  return new CQ_UserAccountLoginT(
    this.nickNameNo(),
    this.marketCode(),
    this.deviceId(),
    this.deviceType(),
    this.deviceModel(),
    this.os(),
    this.bb!.createScalarList<EProvider>(this.providerList.bind(this), this.providerList_Length()),
    this.platform(),
    this.GAID(),
    this.IDFA(),
    this.IDFV(),
    this.packageName(),
    this.gameVersion(),
    this.checksumData()
  );
}


unpackTo(_o: CQ_UserAccountLoginT): void {
  _o.nickNameNo = this.nickNameNo();
  _o.marketCode = this.marketCode();
  _o.deviceId = this.deviceId();
  _o.deviceType = this.deviceType();
  _o.deviceModel = this.deviceModel();
  _o.os = this.os();
  _o.providerList = this.bb!.createScalarList<EProvider>(this.providerList.bind(this), this.providerList_Length());
  _o.platform = this.platform();
  _o.GAID = this.GAID();
  _o.IDFA = this.IDFA();
  _o.IDFV = this.IDFV();
  _o.packageName = this.packageName();
  _o.gameVersion = this.gameVersion();
  _o.checksumData = this.checksumData();
}
}

export class CQ_UserAccountLoginT implements flatbuffers.IGeneratedObject {
constructor(
  public nickNameNo: string|Uint8Array|null = null,
  public marketCode: EMarketCode = EMarketCode.None,
  public deviceId: string|Uint8Array|null = null,
  public deviceType: string|Uint8Array|null = null,
  public deviceModel: string|Uint8Array|null = null,
  public os: string|Uint8Array|null = null,
  public providerList: (EProvider)[] = [],
  public platform: EPlatform = EPlatform.None,
  public GAID: string|Uint8Array|null = null,
  public IDFA: string|Uint8Array|null = null,
  public IDFV: string|Uint8Array|null = null,
  public packageName: string|Uint8Array|null = null,
  public gameVersion: string|Uint8Array|null = null,
  public checksumData: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const nickNameNo = (this.nickNameNo !== null ? builder.createString(this.nickNameNo!) : 0);
  const deviceId = (this.deviceId !== null ? builder.createString(this.deviceId!) : 0);
  const deviceType = (this.deviceType !== null ? builder.createString(this.deviceType!) : 0);
  const deviceModel = (this.deviceModel !== null ? builder.createString(this.deviceModel!) : 0);
  const os = (this.os !== null ? builder.createString(this.os!) : 0);
  const providerList = CQ_UserAccountLogin.create_providerList_Vector(builder, this.providerList);
  const GAID = (this.GAID !== null ? builder.createString(this.GAID!) : 0);
  const IDFA = (this.IDFA !== null ? builder.createString(this.IDFA!) : 0);
  const IDFV = (this.IDFV !== null ? builder.createString(this.IDFV!) : 0);
  const packageName = (this.packageName !== null ? builder.createString(this.packageName!) : 0);
  const gameVersion = (this.gameVersion !== null ? builder.createString(this.gameVersion!) : 0);
  const checksumData = (this.checksumData !== null ? builder.createString(this.checksumData!) : 0);

  return CQ_UserAccountLogin.createCQ_UserAccountLogin(builder,
    nickNameNo,
    this.marketCode,
    deviceId,
    deviceType,
    deviceModel,
    os,
    providerList,
    this.platform,
    GAID,
    IDFA,
    IDFV,
    packageName,
    gameVersion,
    checksumData
  );
}
}

export class SA_UserAccountLogin implements flatbuffers.IUnpackableObject<SA_UserAccountLoginT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_UserAccountLogin {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_UserAccountLogin(bb:flatbuffers.ByteBuffer, obj?:SA_UserAccountLogin):SA_UserAccountLogin {
  return (obj || new SA_UserAccountLogin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_UserAccountLogin(bb:flatbuffers.ByteBuffer, obj?:SA_UserAccountLogin):SA_UserAccountLogin {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_UserAccountLogin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UserAccount(obj?:UserAccountData):UserAccountData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new UserAccountData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

TableVersionList(index: number, obj?:TableVersionData):TableVersionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new TableVersionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

TableVersionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

LobbyID():string|null
LobbyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LobbyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

AccountID():string|null
AccountID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
AccountID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_UserAccountLogin';
}

static startSA_UserAccountLogin(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_UserAccount(builder:flatbuffers.Builder, UserAccountOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, UserAccountOffset, 0);
}

static add_TableVersionList(builder:flatbuffers.Builder, TableVersionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TableVersionListOffset, 0);
}

static create_TableVersionList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_TableVersionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_LobbyID(builder:flatbuffers.Builder, LobbyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, LobbyIDOffset, 0);
}

static add_AccountID(builder:flatbuffers.Builder, AccountIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, AccountIDOffset, 0);
}

static endSA_UserAccountLogin(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_UserAccountLogin(builder:flatbuffers.Builder, UserAccountOffset:flatbuffers.Offset, TableVersionListOffset:flatbuffers.Offset, LobbyIDOffset:flatbuffers.Offset, AccountIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_UserAccountLogin.startSA_UserAccountLogin(builder);
  SA_UserAccountLogin.add_UserAccount(builder, UserAccountOffset);
  SA_UserAccountLogin.add_TableVersionList(builder, TableVersionListOffset);
  SA_UserAccountLogin.add_LobbyID(builder, LobbyIDOffset);
  SA_UserAccountLogin.add_AccountID(builder, AccountIDOffset);
  return SA_UserAccountLogin.endSA_UserAccountLogin(builder);
}

unpack(): SA_UserAccountLoginT {
  return new SA_UserAccountLoginT(
    (this.UserAccount() !== null ? this.UserAccount()!.unpack() : null),
    this.bb!.createObjList<TableVersionData, TableVersionDataT>(this.TableVersionList.bind(this), this.TableVersionList_Length()),
    this.LobbyID(),
    this.AccountID()
  );
}


unpackTo(_o: SA_UserAccountLoginT): void {
  _o.UserAccount = (this.UserAccount() !== null ? this.UserAccount()!.unpack() : null);
  _o.TableVersionList = this.bb!.createObjList<TableVersionData, TableVersionDataT>(this.TableVersionList.bind(this), this.TableVersionList_Length());
  _o.LobbyID = this.LobbyID();
  _o.AccountID = this.AccountID();
}
}

export class SA_UserAccountLoginT implements flatbuffers.IGeneratedObject {
constructor(
  public UserAccount: UserAccountDataT|null = null,
  public TableVersionList: (TableVersionDataT)[] = [],
  public LobbyID: string|Uint8Array|null = null,
  public AccountID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const UserAccount = (this.UserAccount !== null ? this.UserAccount!.pack(builder) : 0);
  const TableVersionList = SA_UserAccountLogin.create_TableVersionList_Vector(builder, builder.createObjectOffsetList(this.TableVersionList));
  const LobbyID = (this.LobbyID !== null ? builder.createString(this.LobbyID!) : 0);
  const AccountID = (this.AccountID !== null ? builder.createString(this.AccountID!) : 0);

  return SA_UserAccountLogin.createSA_UserAccountLogin(builder,
    UserAccount,
    TableVersionList,
    LobbyID,
    AccountID
  );
}
}

export class CQ_AssetList implements flatbuffers.IUnpackableObject<CQ_AssetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_AssetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_AssetList(bb:flatbuffers.ByteBuffer, obj?:CQ_AssetList):CQ_AssetList {
  return (obj || new CQ_AssetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_AssetList(bb:flatbuffers.ByteBuffer, obj?:CQ_AssetList):CQ_AssetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_AssetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_AssetList';
}

static startCQ_AssetList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_AssetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_AssetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_AssetList.startCQ_AssetList(builder);
  return CQ_AssetList.endCQ_AssetList(builder);
}

unpack(): CQ_AssetListT {
  return new CQ_AssetListT();
}


unpackTo(_o: CQ_AssetListT): void {}
}

export class CQ_AssetListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_AssetList.createCQ_AssetList(builder);
}
}

export class SA_AssetList implements flatbuffers.IUnpackableObject<SA_AssetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_AssetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_AssetList(bb:flatbuffers.ByteBuffer, obj?:SA_AssetList):SA_AssetList {
  return (obj || new SA_AssetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_AssetList(bb:flatbuffers.ByteBuffer, obj?:SA_AssetList):SA_AssetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_AssetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

AssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_AssetList';
}

static startSA_AssetList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AssetList(builder:flatbuffers.Builder, AssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AssetListOffset, 0);
}

static start_AssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_AssetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_AssetList(builder:flatbuffers.Builder, AssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_AssetList.startSA_AssetList(builder);
  SA_AssetList.add_AssetList(builder, AssetListOffset);
  return SA_AssetList.endSA_AssetList(builder);
}

unpack(): SA_AssetListT {
  return new SA_AssetListT(
    this.bb!.createObjList<AssetData, AssetDataT>(this.AssetList.bind(this), this.AssetList_Length())
  );
}


unpackTo(_o: SA_AssetListT): void {
  _o.AssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.AssetList.bind(this), this.AssetList_Length());
}
}

export class SA_AssetListT implements flatbuffers.IGeneratedObject {
constructor(
  public AssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AssetList = builder.createStructOffsetList(this.AssetList, SA_AssetList.start_AssetList_Vector);

  return SA_AssetList.createSA_AssetList(builder,
    AssetList
  );
}
}

export class SN_AssetList implements flatbuffers.IUnpackableObject<SN_AssetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_AssetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_AssetList(bb:flatbuffers.ByteBuffer, obj?:SN_AssetList):SN_AssetList {
  return (obj || new SN_AssetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_AssetList(bb:flatbuffers.ByteBuffer, obj?:SN_AssetList):SN_AssetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_AssetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

AssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_AssetList';
}

static startSN_AssetList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AssetList(builder:flatbuffers.Builder, AssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AssetListOffset, 0);
}

static start_AssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSN_AssetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_AssetList(builder:flatbuffers.Builder, AssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_AssetList.startSN_AssetList(builder);
  SN_AssetList.add_AssetList(builder, AssetListOffset);
  return SN_AssetList.endSN_AssetList(builder);
}

unpack(): SN_AssetListT {
  return new SN_AssetListT(
    this.bb!.createObjList<AssetData, AssetDataT>(this.AssetList.bind(this), this.AssetList_Length())
  );
}


unpackTo(_o: SN_AssetListT): void {
  _o.AssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.AssetList.bind(this), this.AssetList_Length());
}
}

export class SN_AssetListT implements flatbuffers.IGeneratedObject {
constructor(
  public AssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AssetList = builder.createStructOffsetList(this.AssetList, SN_AssetList.start_AssetList_Vector);

  return SN_AssetList.createSN_AssetList(builder,
    AssetList
  );
}
}

export class CQ_Logout implements flatbuffers.IUnpackableObject<CQ_LogoutT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_Logout {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_Logout(bb:flatbuffers.ByteBuffer, obj?:CQ_Logout):CQ_Logout {
  return (obj || new CQ_Logout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_Logout(bb:flatbuffers.ByteBuffer, obj?:CQ_Logout):CQ_Logout {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_Logout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_Logout';
}

static startCQ_Logout(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_Logout(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_Logout(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_Logout.startCQ_Logout(builder);
  return CQ_Logout.endCQ_Logout(builder);
}

unpack(): CQ_LogoutT {
  return new CQ_LogoutT();
}


unpackTo(_o: CQ_LogoutT): void {}
}

export class CQ_LogoutT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_Logout.createCQ_Logout(builder);
}
}

export class SA_Logout implements flatbuffers.IUnpackableObject<SA_LogoutT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_Logout {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_Logout(bb:flatbuffers.ByteBuffer, obj?:SA_Logout):SA_Logout {
  return (obj || new SA_Logout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_Logout(bb:flatbuffers.ByteBuffer, obj?:SA_Logout):SA_Logout {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_Logout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_Logout';
}

static startSA_Logout(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_Logout(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_Logout(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_Logout.startSA_Logout(builder);
  return SA_Logout.endSA_Logout(builder);
}

unpack(): SA_LogoutT {
  return new SA_LogoutT();
}


unpackTo(_o: SA_LogoutT): void {}
}

export class SA_LogoutT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_Logout.createSA_Logout(builder);
}
}

export class CQ_Inventory implements flatbuffers.IUnpackableObject<CQ_InventoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_Inventory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_Inventory(bb:flatbuffers.ByteBuffer, obj?:CQ_Inventory):CQ_Inventory {
  return (obj || new CQ_Inventory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_Inventory(bb:flatbuffers.ByteBuffer, obj?:CQ_Inventory):CQ_Inventory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_Inventory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_Inventory';
}

static startCQ_Inventory(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_Inventory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_Inventory(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_Inventory.startCQ_Inventory(builder);
  return CQ_Inventory.endCQ_Inventory(builder);
}

unpack(): CQ_InventoryT {
  return new CQ_InventoryT();
}


unpackTo(_o: CQ_InventoryT): void {}
}

export class CQ_InventoryT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_Inventory.createCQ_Inventory(builder);
}
}

export class SA_Inventory implements flatbuffers.IUnpackableObject<SA_InventoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_Inventory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_Inventory(bb:flatbuffers.ByteBuffer, obj?:SA_Inventory):SA_Inventory {
  return (obj || new SA_Inventory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_Inventory(bb:flatbuffers.ByteBuffer, obj?:SA_Inventory):SA_Inventory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_Inventory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_Inventory';
}

static startSA_Inventory(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ItemList(builder:flatbuffers.Builder, ItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ItemListOffset, 0);
}

static start_ItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_Inventory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_Inventory(builder:flatbuffers.Builder, ItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_Inventory.startSA_Inventory(builder);
  SA_Inventory.add_ItemList(builder, ItemListOffset);
  return SA_Inventory.endSA_Inventory(builder);
}

unpack(): SA_InventoryT {
  return new SA_InventoryT(
    this.bb!.createObjList<ItemData, ItemDataT>(this.ItemList.bind(this), this.ItemList_Length())
  );
}


unpackTo(_o: SA_InventoryT): void {
  _o.ItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ItemList.bind(this), this.ItemList_Length());
}
}

export class SA_InventoryT implements flatbuffers.IGeneratedObject {
constructor(
  public ItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ItemList = builder.createStructOffsetList(this.ItemList, SA_Inventory.start_ItemList_Vector);

  return SA_Inventory.createSA_Inventory(builder,
    ItemList
  );
}
}

export class SN_Inventory implements flatbuffers.IUnpackableObject<SN_InventoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_Inventory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_Inventory(bb:flatbuffers.ByteBuffer, obj?:SN_Inventory):SN_Inventory {
  return (obj || new SN_Inventory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_Inventory(bb:flatbuffers.ByteBuffer, obj?:SN_Inventory):SN_Inventory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_Inventory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_Inventory';
}

static startSN_Inventory(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSN_Inventory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_Inventory(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_Inventory.startSN_Inventory(builder);
  SN_Inventory.add_ChangeItemList(builder, ChangeItemListOffset);
  return SN_Inventory.endSN_Inventory(builder);
}

unpack(): SN_InventoryT {
  return new SN_InventoryT(
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SN_InventoryT): void {
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SN_InventoryT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SN_Inventory.start_ChangeItemList_Vector);

  return SN_Inventory.createSN_Inventory(builder,
    ChangeItemList
  );
}
}

export class CQ_OpenItemBox implements flatbuffers.IUnpackableObject<CQ_OpenItemBoxT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_OpenItemBox {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_OpenItemBox(bb:flatbuffers.ByteBuffer, obj?:CQ_OpenItemBox):CQ_OpenItemBox {
  return (obj || new CQ_OpenItemBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_OpenItemBox(bb:flatbuffers.ByteBuffer, obj?:CQ_OpenItemBox):CQ_OpenItemBox {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_OpenItemBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ItemBoxID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ItemIndexList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

ItemIndexList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ItemIndexList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

Count():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_OpenItemBox';
}

static startCQ_OpenItemBox(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_ItemBoxID(builder:flatbuffers.Builder, ItemBoxID:number) {
  builder.addFieldInt32(0, ItemBoxID, 0);
}

static add_ItemIndexList(builder:flatbuffers.Builder, ItemIndexListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ItemIndexListOffset, 0);
}

static create_ItemIndexList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ItemIndexList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ItemIndexList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_ItemIndexList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_Count(builder:flatbuffers.Builder, Count:number) {
  builder.addFieldInt32(2, Count, 0);
}

static endCQ_OpenItemBox(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_OpenItemBox(builder:flatbuffers.Builder, ItemBoxID:number, ItemIndexListOffset:flatbuffers.Offset, Count:number):flatbuffers.Offset {
  CQ_OpenItemBox.startCQ_OpenItemBox(builder);
  CQ_OpenItemBox.add_ItemBoxID(builder, ItemBoxID);
  CQ_OpenItemBox.add_ItemIndexList(builder, ItemIndexListOffset);
  CQ_OpenItemBox.add_Count(builder, Count);
  return CQ_OpenItemBox.endCQ_OpenItemBox(builder);
}

unpack(): CQ_OpenItemBoxT {
  return new CQ_OpenItemBoxT(
    this.ItemBoxID(),
    this.bb!.createScalarList<number>(this.ItemIndexList.bind(this), this.ItemIndexList_Length()),
    this.Count()
  );
}


unpackTo(_o: CQ_OpenItemBoxT): void {
  _o.ItemBoxID = this.ItemBoxID();
  _o.ItemIndexList = this.bb!.createScalarList<number>(this.ItemIndexList.bind(this), this.ItemIndexList_Length());
  _o.Count = this.Count();
}
}

export class CQ_OpenItemBoxT implements flatbuffers.IGeneratedObject {
constructor(
  public ItemBoxID: number = 0,
  public ItemIndexList: (number)[] = [],
  public Count: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ItemIndexList = CQ_OpenItemBox.create_ItemIndexList_Vector(builder, this.ItemIndexList);

  return CQ_OpenItemBox.createCQ_OpenItemBox(builder,
    this.ItemBoxID,
    ItemIndexList,
    this.Count
  );
}
}

export class SA_OpenItemBox implements flatbuffers.IUnpackableObject<SA_OpenItemBoxT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_OpenItemBox {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_OpenItemBox(bb:flatbuffers.ByteBuffer, obj?:SA_OpenItemBox):SA_OpenItemBox {
  return (obj || new SA_OpenItemBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_OpenItemBox(bb:flatbuffers.ByteBuffer, obj?:SA_OpenItemBox):SA_OpenItemBox {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_OpenItemBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ItemBoxType():EItemBoxType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EItemBoxType.None;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_OpenItemBox';
}

static startSA_OpenItemBox(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ItemBoxType(builder:flatbuffers.Builder, ItemBoxType:EItemBoxType) {
  builder.addFieldInt8(0, ItemBoxType, EItemBoxType.None);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static endSA_OpenItemBox(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_OpenItemBoxT {
  return new SA_OpenItemBoxT(
    this.ItemBoxType(),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_OpenItemBoxT): void {
  _o.ItemBoxType = this.ItemBoxType();
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_OpenItemBoxT implements flatbuffers.IGeneratedObject {
constructor(
  public ItemBoxType: EItemBoxType = EItemBoxType.None,
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_OpenItemBox.startSA_OpenItemBox(builder);
  SA_OpenItemBox.add_ItemBoxType(builder, this.ItemBoxType);
  SA_OpenItemBox.add_RewardInfo(builder, RewardInfo);

  return SA_OpenItemBox.endSA_OpenItemBox(builder);
}
}

export class CQ_TreasureBoxList implements flatbuffers.IUnpackableObject<CQ_TreasureBoxListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_TreasureBoxList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_TreasureBoxList(bb:flatbuffers.ByteBuffer, obj?:CQ_TreasureBoxList):CQ_TreasureBoxList {
  return (obj || new CQ_TreasureBoxList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_TreasureBoxList(bb:flatbuffers.ByteBuffer, obj?:CQ_TreasureBoxList):CQ_TreasureBoxList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_TreasureBoxList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_TreasureBoxList';
}

static startCQ_TreasureBoxList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_TreasureBoxList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_TreasureBoxList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_TreasureBoxList.startCQ_TreasureBoxList(builder);
  return CQ_TreasureBoxList.endCQ_TreasureBoxList(builder);
}

unpack(): CQ_TreasureBoxListT {
  return new CQ_TreasureBoxListT();
}


unpackTo(_o: CQ_TreasureBoxListT): void {}
}

export class CQ_TreasureBoxListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_TreasureBoxList.createCQ_TreasureBoxList(builder);
}
}

export class SA_TreasureBoxList implements flatbuffers.IUnpackableObject<SA_TreasureBoxListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_TreasureBoxList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_TreasureBoxList(bb:flatbuffers.ByteBuffer, obj?:SA_TreasureBoxList):SA_TreasureBoxList {
  return (obj || new SA_TreasureBoxList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_TreasureBoxList(bb:flatbuffers.ByteBuffer, obj?:SA_TreasureBoxList):SA_TreasureBoxList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_TreasureBoxList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TreasureBoxList(index: number, obj?:TreasureBoxData):TreasureBoxData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new TreasureBoxData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;
}

TreasureBoxList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_TreasureBoxList';
}

static startSA_TreasureBoxList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TreasureBoxList(builder:flatbuffers.Builder, TreasureBoxListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TreasureBoxListOffset, 0);
}

static start_TreasureBoxList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(44, numElems, 4);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(1, ExpireAt, 0);
}

static endSA_TreasureBoxList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_TreasureBoxList(builder:flatbuffers.Builder, TreasureBoxListOffset:flatbuffers.Offset, ExpireAt:number):flatbuffers.Offset {
  SA_TreasureBoxList.startSA_TreasureBoxList(builder);
  SA_TreasureBoxList.add_TreasureBoxList(builder, TreasureBoxListOffset);
  SA_TreasureBoxList.add_ExpireAt(builder, ExpireAt);
  return SA_TreasureBoxList.endSA_TreasureBoxList(builder);
}

unpack(): SA_TreasureBoxListT {
  return new SA_TreasureBoxListT(
    this.bb!.createObjList<TreasureBoxData, TreasureBoxDataT>(this.TreasureBoxList.bind(this), this.TreasureBoxList_Length()),
    this.ExpireAt()
  );
}


unpackTo(_o: SA_TreasureBoxListT): void {
  _o.TreasureBoxList = this.bb!.createObjList<TreasureBoxData, TreasureBoxDataT>(this.TreasureBoxList.bind(this), this.TreasureBoxList_Length());
  _o.ExpireAt = this.ExpireAt();
}
}

export class SA_TreasureBoxListT implements flatbuffers.IGeneratedObject {
constructor(
  public TreasureBoxList: (TreasureBoxDataT)[] = [],
  public ExpireAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TreasureBoxList = builder.createStructOffsetList(this.TreasureBoxList, SA_TreasureBoxList.start_TreasureBoxList_Vector);

  return SA_TreasureBoxList.createSA_TreasureBoxList(builder,
    TreasureBoxList,
    this.ExpireAt
  );
}
}

export class CQ_TreasureBoxOpen implements flatbuffers.IUnpackableObject<CQ_TreasureBoxOpenT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_TreasureBoxOpen {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_TreasureBoxOpen(bb:flatbuffers.ByteBuffer, obj?:CQ_TreasureBoxOpen):CQ_TreasureBoxOpen {
  return (obj || new CQ_TreasureBoxOpen()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_TreasureBoxOpen(bb:flatbuffers.ByteBuffer, obj?:CQ_TreasureBoxOpen):CQ_TreasureBoxOpen {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_TreasureBoxOpen()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BoxID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_TreasureBoxOpen';
}

static startCQ_TreasureBoxOpen(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_BoxID(builder:flatbuffers.Builder, BoxID:number) {
  builder.addFieldInt32(0, BoxID, 0);
}

static endCQ_TreasureBoxOpen(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_TreasureBoxOpen(builder:flatbuffers.Builder, BoxID:number):flatbuffers.Offset {
  CQ_TreasureBoxOpen.startCQ_TreasureBoxOpen(builder);
  CQ_TreasureBoxOpen.add_BoxID(builder, BoxID);
  return CQ_TreasureBoxOpen.endCQ_TreasureBoxOpen(builder);
}

unpack(): CQ_TreasureBoxOpenT {
  return new CQ_TreasureBoxOpenT(
    this.BoxID()
  );
}


unpackTo(_o: CQ_TreasureBoxOpenT): void {
  _o.BoxID = this.BoxID();
}
}

export class CQ_TreasureBoxOpenT implements flatbuffers.IGeneratedObject {
constructor(
  public BoxID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_TreasureBoxOpen.createCQ_TreasureBoxOpen(builder,
    this.BoxID
  );
}
}

export class SA_TreasureBoxOpen implements flatbuffers.IUnpackableObject<SA_TreasureBoxOpenT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_TreasureBoxOpen {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_TreasureBoxOpen(bb:flatbuffers.ByteBuffer, obj?:SA_TreasureBoxOpen):SA_TreasureBoxOpen {
  return (obj || new SA_TreasureBoxOpen()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_TreasureBoxOpen(bb:flatbuffers.ByteBuffer, obj?:SA_TreasureBoxOpen):SA_TreasureBoxOpen {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_TreasureBoxOpen()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BoxID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_TreasureBoxOpen';
}

static startSA_TreasureBoxOpen(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_BoxID(builder:flatbuffers.Builder, BoxID:number) {
  builder.addFieldInt32(0, BoxID, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_TreasureBoxOpen(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_TreasureBoxOpen(builder:flatbuffers.Builder, BoxID:number, ChangeAssetListOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_TreasureBoxOpen.startSA_TreasureBoxOpen(builder);
  SA_TreasureBoxOpen.add_BoxID(builder, BoxID);
  SA_TreasureBoxOpen.add_ChangeAssetList(builder, ChangeAssetListOffset);
  SA_TreasureBoxOpen.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_TreasureBoxOpen.endSA_TreasureBoxOpen(builder);
}

unpack(): SA_TreasureBoxOpenT {
  return new SA_TreasureBoxOpenT(
    this.BoxID(),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_TreasureBoxOpenT): void {
  _o.BoxID = this.BoxID();
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_TreasureBoxOpenT implements flatbuffers.IGeneratedObject {
constructor(
  public BoxID: number = 0,
  public ChangeAssetList: (AssetDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_TreasureBoxOpen.start_ChangeAssetList_Vector);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_TreasureBoxOpen.start_ChangeItemList_Vector);

  return SA_TreasureBoxOpen.createSA_TreasureBoxOpen(builder,
    this.BoxID,
    ChangeAssetList,
    ChangeItemList
  );
}
}

export class CQ_CraftMake implements flatbuffers.IUnpackableObject<CQ_CraftMakeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CraftMake {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CraftMake(bb:flatbuffers.ByteBuffer, obj?:CQ_CraftMake):CQ_CraftMake {
  return (obj || new CQ_CraftMake()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CraftMake(bb:flatbuffers.ByteBuffer, obj?:CQ_CraftMake):CQ_CraftMake {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CraftMake()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CraftID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

CraftCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 1;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CraftMake';
}

static startCQ_CraftMake(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_CraftID(builder:flatbuffers.Builder, CraftID:number) {
  builder.addFieldInt32(0, CraftID, 0);
}

static add_CraftCount(builder:flatbuffers.Builder, CraftCount:number) {
  builder.addFieldInt32(1, CraftCount, 1);
}

static endCQ_CraftMake(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CraftMake(builder:flatbuffers.Builder, CraftID:number, CraftCount:number):flatbuffers.Offset {
  CQ_CraftMake.startCQ_CraftMake(builder);
  CQ_CraftMake.add_CraftID(builder, CraftID);
  CQ_CraftMake.add_CraftCount(builder, CraftCount);
  return CQ_CraftMake.endCQ_CraftMake(builder);
}

unpack(): CQ_CraftMakeT {
  return new CQ_CraftMakeT(
    this.CraftID(),
    this.CraftCount()
  );
}


unpackTo(_o: CQ_CraftMakeT): void {
  _o.CraftID = this.CraftID();
  _o.CraftCount = this.CraftCount();
}
}

export class CQ_CraftMakeT implements flatbuffers.IGeneratedObject {
constructor(
  public CraftID: number = 0,
  public CraftCount: number = 1
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CraftMake.createCQ_CraftMake(builder,
    this.CraftID,
    this.CraftCount
  );
}
}

export class SA_CraftMake implements flatbuffers.IUnpackableObject<SA_CraftMakeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CraftMake {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CraftMake(bb:flatbuffers.ByteBuffer, obj?:SA_CraftMake):SA_CraftMake {
  return (obj || new SA_CraftMake()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CraftMake(bb:flatbuffers.ByteBuffer, obj?:SA_CraftMake):SA_CraftMake {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CraftMake()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CraftMake';
}

static startSA_CraftMake(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RewardInfoOffset, 0);
}

static endSA_CraftMake(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CraftMake(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CraftMake.startSA_CraftMake(builder);
  SA_CraftMake.add_RewardInfo(builder, RewardInfoOffset);
  return SA_CraftMake.endSA_CraftMake(builder);
}

unpack(): SA_CraftMakeT {
  return new SA_CraftMakeT(
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_CraftMakeT): void {
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_CraftMakeT implements flatbuffers.IGeneratedObject {
constructor(
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  return SA_CraftMake.createSA_CraftMake(builder,
    RewardInfo
  );
}
}

export class CQ_WonderStoreList implements flatbuffers.IUnpackableObject<CQ_WonderStoreListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WonderStoreList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WonderStoreList(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderStoreList):CQ_WonderStoreList {
  return (obj || new CQ_WonderStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WonderStoreList(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderStoreList):CQ_WonderStoreList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WonderStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WonderStoreList';
}

static startCQ_WonderStoreList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_WonderStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WonderStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_WonderStoreList.startCQ_WonderStoreList(builder);
  return CQ_WonderStoreList.endCQ_WonderStoreList(builder);
}

unpack(): CQ_WonderStoreListT {
  return new CQ_WonderStoreListT();
}


unpackTo(_o: CQ_WonderStoreListT): void {}
}

export class CQ_WonderStoreListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_WonderStoreList.createCQ_WonderStoreList(builder);
}
}

export class SA_WonderStoreList implements flatbuffers.IUnpackableObject<SA_WonderStoreListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WonderStoreList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WonderStoreList(bb:flatbuffers.ByteBuffer, obj?:SA_WonderStoreList):SA_WonderStoreList {
  return (obj || new SA_WonderStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WonderStoreList(bb:flatbuffers.ByteBuffer, obj?:SA_WonderStoreList):SA_WonderStoreList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WonderStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

WonderStoreList(index: number, obj?:WonderStoreData):WonderStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new WonderStoreData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

WonderStoreList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WonderStoreList';
}

static startSA_WonderStoreList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_WonderStoreList(builder:flatbuffers.Builder, WonderStoreListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, WonderStoreListOffset, 0);
}

static create_WonderStoreList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_WonderStoreList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_WonderStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_WonderStoreList(builder:flatbuffers.Builder, WonderStoreListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_WonderStoreList.startSA_WonderStoreList(builder);
  SA_WonderStoreList.add_WonderStoreList(builder, WonderStoreListOffset);
  return SA_WonderStoreList.endSA_WonderStoreList(builder);
}

unpack(): SA_WonderStoreListT {
  return new SA_WonderStoreListT(
    this.bb!.createObjList<WonderStoreData, WonderStoreDataT>(this.WonderStoreList.bind(this), this.WonderStoreList_Length())
  );
}


unpackTo(_o: SA_WonderStoreListT): void {
  _o.WonderStoreList = this.bb!.createObjList<WonderStoreData, WonderStoreDataT>(this.WonderStoreList.bind(this), this.WonderStoreList_Length());
}
}

export class SA_WonderStoreListT implements flatbuffers.IGeneratedObject {
constructor(
  public WonderStoreList: (WonderStoreDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const WonderStoreList = SA_WonderStoreList.create_WonderStoreList_Vector(builder, builder.createObjectOffsetList(this.WonderStoreList));

  return SA_WonderStoreList.createSA_WonderStoreList(builder,
    WonderStoreList
  );
}
}

export class CQ_WonderStoreBuy implements flatbuffers.IUnpackableObject<CQ_WonderStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WonderStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WonderStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderStoreBuy):CQ_WonderStoreBuy {
  return (obj || new CQ_WonderStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WonderStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderStoreBuy):CQ_WonderStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WonderStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WonderStoreBuy';
}

static startCQ_WonderStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static endCQ_WonderStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WonderStoreBuy(builder:flatbuffers.Builder, StoreID:number):flatbuffers.Offset {
  CQ_WonderStoreBuy.startCQ_WonderStoreBuy(builder);
  CQ_WonderStoreBuy.add_StoreID(builder, StoreID);
  return CQ_WonderStoreBuy.endCQ_WonderStoreBuy(builder);
}

unpack(): CQ_WonderStoreBuyT {
  return new CQ_WonderStoreBuyT(
    this.StoreID()
  );
}


unpackTo(_o: CQ_WonderStoreBuyT): void {
  _o.StoreID = this.StoreID();
}
}

export class CQ_WonderStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_WonderStoreBuy.createCQ_WonderStoreBuy(builder,
    this.StoreID
  );
}
}

export class SA_WonderStoreBuy implements flatbuffers.IUnpackableObject<SA_WonderStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WonderStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WonderStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_WonderStoreBuy):SA_WonderStoreBuy {
  return (obj || new SA_WonderStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WonderStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_WonderStoreBuy):SA_WonderStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WonderStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeWonderStoreList(index: number, obj?:WonderStoreData):WonderStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new WonderStoreData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeWonderStoreList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BuyStoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WonderStoreBuy';
}

static startSA_WonderStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_ChangeWonderStoreList(builder:flatbuffers.Builder, ChangeWonderStoreListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChangeWonderStoreListOffset, 0);
}

static create_ChangeWonderStoreList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeWonderStoreList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static add_BuyStoreID(builder:flatbuffers.Builder, BuyStoreID:number) {
  builder.addFieldInt32(2, BuyStoreID, 0);
}

static endSA_WonderStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_WonderStoreBuyT {
  return new SA_WonderStoreBuyT(
    this.bb!.createObjList<WonderStoreData, WonderStoreDataT>(this.ChangeWonderStoreList.bind(this), this.ChangeWonderStoreList_Length()),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null),
    this.BuyStoreID()
  );
}


unpackTo(_o: SA_WonderStoreBuyT): void {
  _o.ChangeWonderStoreList = this.bb!.createObjList<WonderStoreData, WonderStoreDataT>(this.ChangeWonderStoreList.bind(this), this.ChangeWonderStoreList_Length());
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
  _o.BuyStoreID = this.BuyStoreID();
}
}

export class SA_WonderStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeWonderStoreList: (WonderStoreDataT)[] = [],
  public RewardInfo: RewardDataT|null = null,
  public BuyStoreID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeWonderStoreList = SA_WonderStoreBuy.create_ChangeWonderStoreList_Vector(builder, builder.createObjectOffsetList(this.ChangeWonderStoreList));
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_WonderStoreBuy.startSA_WonderStoreBuy(builder);
  SA_WonderStoreBuy.add_ChangeWonderStoreList(builder, ChangeWonderStoreList);
  SA_WonderStoreBuy.add_RewardInfo(builder, RewardInfo);
  SA_WonderStoreBuy.add_BuyStoreID(builder, this.BuyStoreID);

  return SA_WonderStoreBuy.endSA_WonderStoreBuy(builder);
}
}

export class CQ_GachaShop implements flatbuffers.IUnpackableObject<CQ_GachaShopT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GachaShop {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GachaShop(bb:flatbuffers.ByteBuffer, obj?:CQ_GachaShop):CQ_GachaShop {
  return (obj || new CQ_GachaShop()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GachaShop(bb:flatbuffers.ByteBuffer, obj?:CQ_GachaShop):CQ_GachaShop {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GachaShop()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

GachaProbID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GachaShop';
}

static startCQ_GachaShop(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_GachaProbID(builder:flatbuffers.Builder, GachaProbID:number) {
  builder.addFieldInt32(0, GachaProbID, 0);
}

static endCQ_GachaShop(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GachaShop(builder:flatbuffers.Builder, GachaProbID:number):flatbuffers.Offset {
  CQ_GachaShop.startCQ_GachaShop(builder);
  CQ_GachaShop.add_GachaProbID(builder, GachaProbID);
  return CQ_GachaShop.endCQ_GachaShop(builder);
}

unpack(): CQ_GachaShopT {
  return new CQ_GachaShopT(
    this.GachaProbID()
  );
}


unpackTo(_o: CQ_GachaShopT): void {
  _o.GachaProbID = this.GachaProbID();
}
}

export class CQ_GachaShopT implements flatbuffers.IGeneratedObject {
constructor(
  public GachaProbID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GachaShop.createCQ_GachaShop(builder,
    this.GachaProbID
  );
}
}

export class SA_GachaShop implements flatbuffers.IUnpackableObject<SA_GachaShopT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GachaShop {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GachaShop(bb:flatbuffers.ByteBuffer, obj?:SA_GachaShop):SA_GachaShop {
  return (obj || new SA_GachaShop()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GachaShop(bb:flatbuffers.ByteBuffer, obj?:SA_GachaShop):SA_GachaShop {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GachaShop()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangePetList(index: number, obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangePetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GachaShop';
}

static startSA_GachaShop(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RewardInfoOffset, 0);
}

static add_ChangePetList(builder:flatbuffers.Builder, ChangePetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangePetListOffset, 0);
}

static create_ChangePetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangePetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_GachaShop(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GachaShop(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset, ChangePetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_GachaShop.startSA_GachaShop(builder);
  SA_GachaShop.add_RewardInfo(builder, RewardInfoOffset);
  SA_GachaShop.add_ChangePetList(builder, ChangePetListOffset);
  return SA_GachaShop.endSA_GachaShop(builder);
}

unpack(): SA_GachaShopT {
  return new SA_GachaShopT(
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null),
    this.bb!.createObjList<PetData, PetDataT>(this.ChangePetList.bind(this), this.ChangePetList_Length())
  );
}


unpackTo(_o: SA_GachaShopT): void {
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
  _o.ChangePetList = this.bb!.createObjList<PetData, PetDataT>(this.ChangePetList.bind(this), this.ChangePetList_Length());
}
}

export class SA_GachaShopT implements flatbuffers.IGeneratedObject {
constructor(
  public RewardInfo: RewardDataT|null = null,
  public ChangePetList: (PetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);
  const ChangePetList = SA_GachaShop.create_ChangePetList_Vector(builder, builder.createObjectOffsetList(this.ChangePetList));

  return SA_GachaShop.createSA_GachaShop(builder,
    RewardInfo,
    ChangePetList
  );
}
}

export class CQ_SilverMedalStoreList implements flatbuffers.IUnpackableObject<CQ_SilverMedalStoreListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_SilverMedalStoreList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_SilverMedalStoreList(bb:flatbuffers.ByteBuffer, obj?:CQ_SilverMedalStoreList):CQ_SilverMedalStoreList {
  return (obj || new CQ_SilverMedalStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_SilverMedalStoreList(bb:flatbuffers.ByteBuffer, obj?:CQ_SilverMedalStoreList):CQ_SilverMedalStoreList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_SilverMedalStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_SilverMedalStoreList';
}

static startCQ_SilverMedalStoreList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_SilverMedalStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_SilverMedalStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_SilverMedalStoreList.startCQ_SilverMedalStoreList(builder);
  return CQ_SilverMedalStoreList.endCQ_SilverMedalStoreList(builder);
}

unpack(): CQ_SilverMedalStoreListT {
  return new CQ_SilverMedalStoreListT();
}


unpackTo(_o: CQ_SilverMedalStoreListT): void {}
}

export class CQ_SilverMedalStoreListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_SilverMedalStoreList.createCQ_SilverMedalStoreList(builder);
}
}

export class SA_SilverMedalStoreList implements flatbuffers.IUnpackableObject<SA_SilverMedalStoreListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_SilverMedalStoreList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_SilverMedalStoreList(bb:flatbuffers.ByteBuffer, obj?:SA_SilverMedalStoreList):SA_SilverMedalStoreList {
  return (obj || new SA_SilverMedalStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_SilverMedalStoreList(bb:flatbuffers.ByteBuffer, obj?:SA_SilverMedalStoreList):SA_SilverMedalStoreList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_SilverMedalStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SilverMedalStoreList(index: number, obj?:SilverMedalStoreData):SilverMedalStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SilverMedalStoreData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

SilverMedalStoreList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_SilverMedalStoreList';
}

static startSA_SilverMedalStoreList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SilverMedalStoreList(builder:flatbuffers.Builder, SilverMedalStoreListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SilverMedalStoreListOffset, 0);
}

static start_SilverMedalStoreList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_SilverMedalStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_SilverMedalStoreList(builder:flatbuffers.Builder, SilverMedalStoreListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_SilverMedalStoreList.startSA_SilverMedalStoreList(builder);
  SA_SilverMedalStoreList.add_SilverMedalStoreList(builder, SilverMedalStoreListOffset);
  return SA_SilverMedalStoreList.endSA_SilverMedalStoreList(builder);
}

unpack(): SA_SilverMedalStoreListT {
  return new SA_SilverMedalStoreListT(
    this.bb!.createObjList<SilverMedalStoreData, SilverMedalStoreDataT>(this.SilverMedalStoreList.bind(this), this.SilverMedalStoreList_Length())
  );
}


unpackTo(_o: SA_SilverMedalStoreListT): void {
  _o.SilverMedalStoreList = this.bb!.createObjList<SilverMedalStoreData, SilverMedalStoreDataT>(this.SilverMedalStoreList.bind(this), this.SilverMedalStoreList_Length());
}
}

export class SA_SilverMedalStoreListT implements flatbuffers.IGeneratedObject {
constructor(
  public SilverMedalStoreList: (SilverMedalStoreDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SilverMedalStoreList = builder.createStructOffsetList(this.SilverMedalStoreList, SA_SilverMedalStoreList.start_SilverMedalStoreList_Vector);

  return SA_SilverMedalStoreList.createSA_SilverMedalStoreList(builder,
    SilverMedalStoreList
  );
}
}

export class CQ_SilverMedalStoreBuy implements flatbuffers.IUnpackableObject<CQ_SilverMedalStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_SilverMedalStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_SilverMedalStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_SilverMedalStoreBuy):CQ_SilverMedalStoreBuy {
  return (obj || new CQ_SilverMedalStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_SilverMedalStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_SilverMedalStoreBuy):CQ_SilverMedalStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_SilverMedalStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BuyCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_SilverMedalStoreBuy';
}

static startCQ_SilverMedalStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static add_BuyCount(builder:flatbuffers.Builder, BuyCount:number) {
  builder.addFieldInt32(1, BuyCount, 0);
}

static endCQ_SilverMedalStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_SilverMedalStoreBuy(builder:flatbuffers.Builder, StoreID:number, BuyCount:number):flatbuffers.Offset {
  CQ_SilverMedalStoreBuy.startCQ_SilverMedalStoreBuy(builder);
  CQ_SilverMedalStoreBuy.add_StoreID(builder, StoreID);
  CQ_SilverMedalStoreBuy.add_BuyCount(builder, BuyCount);
  return CQ_SilverMedalStoreBuy.endCQ_SilverMedalStoreBuy(builder);
}

unpack(): CQ_SilverMedalStoreBuyT {
  return new CQ_SilverMedalStoreBuyT(
    this.StoreID(),
    this.BuyCount()
  );
}


unpackTo(_o: CQ_SilverMedalStoreBuyT): void {
  _o.StoreID = this.StoreID();
  _o.BuyCount = this.BuyCount();
}
}

export class CQ_SilverMedalStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public BuyCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_SilverMedalStoreBuy.createCQ_SilverMedalStoreBuy(builder,
    this.StoreID,
    this.BuyCount
  );
}
}

export class SA_SilverMedalStoreBuy implements flatbuffers.IUnpackableObject<SA_SilverMedalStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_SilverMedalStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_SilverMedalStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_SilverMedalStoreBuy):SA_SilverMedalStoreBuy {
  return (obj || new SA_SilverMedalStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_SilverMedalStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_SilverMedalStoreBuy):SA_SilverMedalStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_SilverMedalStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreData(obj?:SilverMedalStoreData):SilverMedalStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SilverMedalStoreData()).__init(this.bb_pos + offset, this.bb!) : null;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_SilverMedalStoreBuy';
}

static startSA_SilverMedalStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_StoreData(builder:flatbuffers.Builder, StoreDataOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, StoreDataOffset, 0);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static endSA_SilverMedalStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_SilverMedalStoreBuyT {
  return new SA_SilverMedalStoreBuyT(
    (this.StoreData() !== null ? this.StoreData()!.unpack() : null),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_SilverMedalStoreBuyT): void {
  _o.StoreData = (this.StoreData() !== null ? this.StoreData()!.unpack() : null);
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_SilverMedalStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreData: SilverMedalStoreDataT|null = null,
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_SilverMedalStoreBuy.startSA_SilverMedalStoreBuy(builder);
  SA_SilverMedalStoreBuy.add_StoreData(builder, (this.StoreData !== null ? this.StoreData!.pack(builder) : 0));
  SA_SilverMedalStoreBuy.add_RewardInfo(builder, RewardInfo);

  return SA_SilverMedalStoreBuy.endSA_SilverMedalStoreBuy(builder);
}
}

export class CQ_EventStoreList implements flatbuffers.IUnpackableObject<CQ_EventStoreListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EventStoreList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EventStoreList(bb:flatbuffers.ByteBuffer, obj?:CQ_EventStoreList):CQ_EventStoreList {
  return (obj || new CQ_EventStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EventStoreList(bb:flatbuffers.ByteBuffer, obj?:CQ_EventStoreList):CQ_EventStoreList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EventStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EventStoreList';
}

static startCQ_EventStoreList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_EventStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EventStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_EventStoreList.startCQ_EventStoreList(builder);
  return CQ_EventStoreList.endCQ_EventStoreList(builder);
}

unpack(): CQ_EventStoreListT {
  return new CQ_EventStoreListT();
}


unpackTo(_o: CQ_EventStoreListT): void {}
}

export class CQ_EventStoreListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EventStoreList.createCQ_EventStoreList(builder);
}
}

export class SA_EventStoreList implements flatbuffers.IUnpackableObject<SA_EventStoreListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EventStoreList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EventStoreList(bb:flatbuffers.ByteBuffer, obj?:SA_EventStoreList):SA_EventStoreList {
  return (obj || new SA_EventStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EventStoreList(bb:flatbuffers.ByteBuffer, obj?:SA_EventStoreList):SA_EventStoreList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EventStoreList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreNextResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EventStoreList(index: number, obj?:EventStoreData):EventStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new EventStoreData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

EventStoreList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EventStoreList';
}

static startSA_EventStoreList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_StoreNextResetAt(builder:flatbuffers.Builder, StoreNextResetAt:number) {
  builder.addFieldInt32(0, StoreNextResetAt, 0);
}

static add_EventStoreList(builder:flatbuffers.Builder, EventStoreListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, EventStoreListOffset, 0);
}

static start_EventStoreList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static endSA_EventStoreList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EventStoreList(builder:flatbuffers.Builder, StoreNextResetAt:number, EventStoreListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_EventStoreList.startSA_EventStoreList(builder);
  SA_EventStoreList.add_StoreNextResetAt(builder, StoreNextResetAt);
  SA_EventStoreList.add_EventStoreList(builder, EventStoreListOffset);
  return SA_EventStoreList.endSA_EventStoreList(builder);
}

unpack(): SA_EventStoreListT {
  return new SA_EventStoreListT(
    this.StoreNextResetAt(),
    this.bb!.createObjList<EventStoreData, EventStoreDataT>(this.EventStoreList.bind(this), this.EventStoreList_Length())
  );
}


unpackTo(_o: SA_EventStoreListT): void {
  _o.StoreNextResetAt = this.StoreNextResetAt();
  _o.EventStoreList = this.bb!.createObjList<EventStoreData, EventStoreDataT>(this.EventStoreList.bind(this), this.EventStoreList_Length());
}
}

export class SA_EventStoreListT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreNextResetAt: number = 0,
  public EventStoreList: (EventStoreDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const EventStoreList = builder.createStructOffsetList(this.EventStoreList, SA_EventStoreList.start_EventStoreList_Vector);

  return SA_EventStoreList.createSA_EventStoreList(builder,
    this.StoreNextResetAt,
    EventStoreList
  );
}
}

export class CQ_EventStoreBuy implements flatbuffers.IUnpackableObject<CQ_EventStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EventStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EventStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_EventStoreBuy):CQ_EventStoreBuy {
  return (obj || new CQ_EventStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EventStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_EventStoreBuy):CQ_EventStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EventStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BuyCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EventStoreBuy';
}

static startCQ_EventStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static add_BuyCount(builder:flatbuffers.Builder, BuyCount:number) {
  builder.addFieldInt32(1, BuyCount, 0);
}

static endCQ_EventStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EventStoreBuy(builder:flatbuffers.Builder, StoreID:number, BuyCount:number):flatbuffers.Offset {
  CQ_EventStoreBuy.startCQ_EventStoreBuy(builder);
  CQ_EventStoreBuy.add_StoreID(builder, StoreID);
  CQ_EventStoreBuy.add_BuyCount(builder, BuyCount);
  return CQ_EventStoreBuy.endCQ_EventStoreBuy(builder);
}

unpack(): CQ_EventStoreBuyT {
  return new CQ_EventStoreBuyT(
    this.StoreID(),
    this.BuyCount()
  );
}


unpackTo(_o: CQ_EventStoreBuyT): void {
  _o.StoreID = this.StoreID();
  _o.BuyCount = this.BuyCount();
}
}

export class CQ_EventStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public BuyCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EventStoreBuy.createCQ_EventStoreBuy(builder,
    this.StoreID,
    this.BuyCount
  );
}
}

export class SA_EventStoreBuy implements flatbuffers.IUnpackableObject<SA_EventStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EventStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EventStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_EventStoreBuy):SA_EventStoreBuy {
  return (obj || new SA_EventStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EventStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_EventStoreBuy):SA_EventStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EventStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

EventStoreInfo(obj?:EventStoreData):EventStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new EventStoreData()).__init(this.bb_pos + offset, this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EventStoreBuy';
}

static startSA_EventStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RewardInfoOffset, 0);
}

static add_EventStoreInfo(builder:flatbuffers.Builder, EventStoreInfoOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, EventStoreInfoOffset, 0);
}

static endSA_EventStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_EventStoreBuyT {
  return new SA_EventStoreBuyT(
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null),
    (this.EventStoreInfo() !== null ? this.EventStoreInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_EventStoreBuyT): void {
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
  _o.EventStoreInfo = (this.EventStoreInfo() !== null ? this.EventStoreInfo()!.unpack() : null);
}
}

export class SA_EventStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public RewardInfo: RewardDataT|null = null,
  public EventStoreInfo: EventStoreDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_EventStoreBuy.startSA_EventStoreBuy(builder);
  SA_EventStoreBuy.add_RewardInfo(builder, RewardInfo);
  SA_EventStoreBuy.add_EventStoreInfo(builder, (this.EventStoreInfo !== null ? this.EventStoreInfo!.pack(builder) : 0));

  return SA_EventStoreBuy.endSA_EventStoreBuy(builder);
}
}

export class CQ_CollectionList implements flatbuffers.IUnpackableObject<CQ_CollectionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CollectionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CollectionList(bb:flatbuffers.ByteBuffer, obj?:CQ_CollectionList):CQ_CollectionList {
  return (obj || new CQ_CollectionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CollectionList(bb:flatbuffers.ByteBuffer, obj?:CQ_CollectionList):CQ_CollectionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CollectionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CollectionType():ECollectionType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ECollectionType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CollectionList';
}

static startCQ_CollectionList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_CollectionType(builder:flatbuffers.Builder, CollectionType:ECollectionType) {
  builder.addFieldInt8(0, CollectionType, ECollectionType.None);
}

static endCQ_CollectionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CollectionList(builder:flatbuffers.Builder, CollectionType:ECollectionType):flatbuffers.Offset {
  CQ_CollectionList.startCQ_CollectionList(builder);
  CQ_CollectionList.add_CollectionType(builder, CollectionType);
  return CQ_CollectionList.endCQ_CollectionList(builder);
}

unpack(): CQ_CollectionListT {
  return new CQ_CollectionListT(
    this.CollectionType()
  );
}


unpackTo(_o: CQ_CollectionListT): void {
  _o.CollectionType = this.CollectionType();
}
}

export class CQ_CollectionListT implements flatbuffers.IGeneratedObject {
constructor(
  public CollectionType: ECollectionType = ECollectionType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CollectionList.createCQ_CollectionList(builder,
    this.CollectionType
  );
}
}

export class SA_CollectionList implements flatbuffers.IUnpackableObject<SA_CollectionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CollectionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CollectionList(bb:flatbuffers.ByteBuffer, obj?:SA_CollectionList):SA_CollectionList {
  return (obj || new SA_CollectionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CollectionList(bb:flatbuffers.ByteBuffer, obj?:SA_CollectionList):SA_CollectionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CollectionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CollectionList(index: number, obj?:CollectionData):CollectionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new CollectionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

CollectionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CollectionList';
}

static startSA_CollectionList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_CollectionList(builder:flatbuffers.Builder, CollectionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, CollectionListOffset, 0);
}

static start_CollectionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_CollectionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CollectionList(builder:flatbuffers.Builder, CollectionListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CollectionList.startSA_CollectionList(builder);
  SA_CollectionList.add_CollectionList(builder, CollectionListOffset);
  return SA_CollectionList.endSA_CollectionList(builder);
}

unpack(): SA_CollectionListT {
  return new SA_CollectionListT(
    this.bb!.createObjList<CollectionData, CollectionDataT>(this.CollectionList.bind(this), this.CollectionList_Length())
  );
}


unpackTo(_o: SA_CollectionListT): void {
  _o.CollectionList = this.bb!.createObjList<CollectionData, CollectionDataT>(this.CollectionList.bind(this), this.CollectionList_Length());
}
}

export class SA_CollectionListT implements flatbuffers.IGeneratedObject {
constructor(
  public CollectionList: (CollectionDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const CollectionList = builder.createStructOffsetList(this.CollectionList, SA_CollectionList.start_CollectionList_Vector);

  return SA_CollectionList.createSA_CollectionList(builder,
    CollectionList
  );
}
}

export class SN_CollectionList implements flatbuffers.IUnpackableObject<SN_CollectionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CollectionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CollectionList(bb:flatbuffers.ByteBuffer, obj?:SN_CollectionList):SN_CollectionList {
  return (obj || new SN_CollectionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CollectionList(bb:flatbuffers.ByteBuffer, obj?:SN_CollectionList):SN_CollectionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CollectionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CollectionList(index: number, obj?:CollectionData):CollectionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new CollectionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

CollectionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CollectionList';
}

static startSN_CollectionList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_CollectionList(builder:flatbuffers.Builder, CollectionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, CollectionListOffset, 0);
}

static start_CollectionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSN_CollectionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CollectionList(builder:flatbuffers.Builder, CollectionListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_CollectionList.startSN_CollectionList(builder);
  SN_CollectionList.add_CollectionList(builder, CollectionListOffset);
  return SN_CollectionList.endSN_CollectionList(builder);
}

unpack(): SN_CollectionListT {
  return new SN_CollectionListT(
    this.bb!.createObjList<CollectionData, CollectionDataT>(this.CollectionList.bind(this), this.CollectionList_Length())
  );
}


unpackTo(_o: SN_CollectionListT): void {
  _o.CollectionList = this.bb!.createObjList<CollectionData, CollectionDataT>(this.CollectionList.bind(this), this.CollectionList_Length());
}
}

export class SN_CollectionListT implements flatbuffers.IGeneratedObject {
constructor(
  public CollectionList: (CollectionDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const CollectionList = builder.createStructOffsetList(this.CollectionList, SN_CollectionList.start_CollectionList_Vector);

  return SN_CollectionList.createSN_CollectionList(builder,
    CollectionList
  );
}
}

export class CQ_CollectionReward implements flatbuffers.IUnpackableObject<CQ_CollectionRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CollectionReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CollectionReward(bb:flatbuffers.ByteBuffer, obj?:CQ_CollectionReward):CQ_CollectionReward {
  return (obj || new CQ_CollectionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CollectionReward(bb:flatbuffers.ByteBuffer, obj?:CQ_CollectionReward):CQ_CollectionReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CollectionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CollectionType():ECollectionType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ECollectionType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CollectionReward';
}

static startCQ_CollectionReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_CollectionType(builder:flatbuffers.Builder, CollectionType:ECollectionType) {
  builder.addFieldInt8(0, CollectionType, ECollectionType.None);
}

static endCQ_CollectionReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CollectionReward(builder:flatbuffers.Builder, CollectionType:ECollectionType):flatbuffers.Offset {
  CQ_CollectionReward.startCQ_CollectionReward(builder);
  CQ_CollectionReward.add_CollectionType(builder, CollectionType);
  return CQ_CollectionReward.endCQ_CollectionReward(builder);
}

unpack(): CQ_CollectionRewardT {
  return new CQ_CollectionRewardT(
    this.CollectionType()
  );
}


unpackTo(_o: CQ_CollectionRewardT): void {
  _o.CollectionType = this.CollectionType();
}
}

export class CQ_CollectionRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public CollectionType: ECollectionType = ECollectionType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CollectionReward.createCQ_CollectionReward(builder,
    this.CollectionType
  );
}
}

export class SA_CollectionReward implements flatbuffers.IUnpackableObject<SA_CollectionRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CollectionReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CollectionReward(bb:flatbuffers.ByteBuffer, obj?:SA_CollectionReward):SA_CollectionReward {
  return (obj || new SA_CollectionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CollectionReward(bb:flatbuffers.ByteBuffer, obj?:SA_CollectionReward):SA_CollectionReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CollectionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CollectionType():ECollectionType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ECollectionType.None;
}

CollectionList(index: number, obj?:CollectionData):CollectionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new CollectionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

CollectionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CollectionReward';
}

static startSA_CollectionReward(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_CollectionType(builder:flatbuffers.Builder, CollectionType:ECollectionType) {
  builder.addFieldInt8(0, CollectionType, ECollectionType.None);
}

static add_CollectionList(builder:flatbuffers.Builder, CollectionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, CollectionListOffset, 0);
}

static start_CollectionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_CollectionReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CollectionReward(builder:flatbuffers.Builder, CollectionType:ECollectionType, CollectionListOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CollectionReward.startSA_CollectionReward(builder);
  SA_CollectionReward.add_CollectionType(builder, CollectionType);
  SA_CollectionReward.add_CollectionList(builder, CollectionListOffset);
  SA_CollectionReward.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_CollectionReward.endSA_CollectionReward(builder);
}

unpack(): SA_CollectionRewardT {
  return new SA_CollectionRewardT(
    this.CollectionType(),
    this.bb!.createObjList<CollectionData, CollectionDataT>(this.CollectionList.bind(this), this.CollectionList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_CollectionRewardT): void {
  _o.CollectionType = this.CollectionType();
  _o.CollectionList = this.bb!.createObjList<CollectionData, CollectionDataT>(this.CollectionList.bind(this), this.CollectionList_Length());
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_CollectionRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public CollectionType: ECollectionType = ECollectionType.None,
  public CollectionList: (CollectionDataT)[] = [],
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const CollectionList = builder.createStructOffsetList(this.CollectionList, SA_CollectionReward.start_CollectionList_Vector);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_CollectionReward.start_ChangeAssetList_Vector);

  return SA_CollectionReward.createSA_CollectionReward(builder,
    this.CollectionType,
    CollectionList,
    ChangeAssetList
  );
}
}

export class CQ_HeroList implements flatbuffers.IUnpackableObject<CQ_HeroListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroList(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroList):CQ_HeroList {
  return (obj || new CQ_HeroList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroList(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroList):CQ_HeroList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroList';
}

static startCQ_HeroList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_HeroList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_HeroList.startCQ_HeroList(builder);
  return CQ_HeroList.endCQ_HeroList(builder);
}

unpack(): CQ_HeroListT {
  return new CQ_HeroListT();
}


unpackTo(_o: CQ_HeroListT): void {}
}

export class CQ_HeroListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroList.createCQ_HeroList(builder);
}
}

export class SA_HeroList implements flatbuffers.IUnpackableObject<SA_HeroListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroList(bb:flatbuffers.ByteBuffer, obj?:SA_HeroList):SA_HeroList {
  return (obj || new SA_HeroList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroList(bb:flatbuffers.ByteBuffer, obj?:SA_HeroList):SA_HeroList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroList(index: number, obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

HeroList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroList';
}

static startSA_HeroList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroList(builder:flatbuffers.Builder, HeroListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroListOffset, 0);
}

static create_HeroList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_HeroList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_HeroList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroList(builder:flatbuffers.Builder, HeroListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroList.startSA_HeroList(builder);
  SA_HeroList.add_HeroList(builder, HeroListOffset);
  return SA_HeroList.endSA_HeroList(builder);
}

unpack(): SA_HeroListT {
  return new SA_HeroListT(
    this.bb!.createObjList<HeroData, HeroDataT>(this.HeroList.bind(this), this.HeroList_Length())
  );
}


unpackTo(_o: SA_HeroListT): void {
  _o.HeroList = this.bb!.createObjList<HeroData, HeroDataT>(this.HeroList.bind(this), this.HeroList_Length());
}
}

export class SA_HeroListT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroList: (HeroDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const HeroList = SA_HeroList.create_HeroList_Vector(builder, builder.createObjectOffsetList(this.HeroList));

  return SA_HeroList.createSA_HeroList(builder,
    HeroList
  );
}
}

export class CQ_HeroChange implements flatbuffers.IUnpackableObject<CQ_HeroChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroChange):CQ_HeroChange {
  return (obj || new CQ_HeroChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroChange):CQ_HeroChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroChange';
}

static startCQ_HeroChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static endCQ_HeroChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroChange(builder:flatbuffers.Builder, HeroID:number):flatbuffers.Offset {
  CQ_HeroChange.startCQ_HeroChange(builder);
  CQ_HeroChange.add_HeroID(builder, HeroID);
  return CQ_HeroChange.endCQ_HeroChange(builder);
}

unpack(): CQ_HeroChangeT {
  return new CQ_HeroChangeT(
    this.HeroID()
  );
}


unpackTo(_o: CQ_HeroChangeT): void {
  _o.HeroID = this.HeroID();
}
}

export class CQ_HeroChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroChange.createCQ_HeroChange(builder,
    this.HeroID
  );
}
}

export class SA_HeroChange implements flatbuffers.IUnpackableObject<SA_HeroChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroChange):SA_HeroChange {
  return (obj || new SA_HeroChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroChange):SA_HeroChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroChange';
}

static startSA_HeroChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static endSA_HeroChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroChange(builder:flatbuffers.Builder, HeroID:number):flatbuffers.Offset {
  SA_HeroChange.startSA_HeroChange(builder);
  SA_HeroChange.add_HeroID(builder, HeroID);
  return SA_HeroChange.endSA_HeroChange(builder);
}

unpack(): SA_HeroChangeT {
  return new SA_HeroChangeT(
    this.HeroID()
  );
}


unpackTo(_o: SA_HeroChangeT): void {
  _o.HeroID = this.HeroID();
}
}

export class SA_HeroChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_HeroChange.createSA_HeroChange(builder,
    this.HeroID
  );
}
}

export class SN_HeroBattleLevelUp implements flatbuffers.IUnpackableObject<SN_HeroBattleLevelUpT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_HeroBattleLevelUp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_HeroBattleLevelUp(bb:flatbuffers.ByteBuffer, obj?:SN_HeroBattleLevelUp):SN_HeroBattleLevelUp {
  return (obj || new SN_HeroBattleLevelUp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_HeroBattleLevelUp(bb:flatbuffers.ByteBuffer, obj?:SN_HeroBattleLevelUp):SN_HeroBattleLevelUp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_HeroBattleLevelUp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BattleLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Exp():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_HeroBattleLevelUp';
}

static startSN_HeroBattleLevelUp(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_BattleLevel(builder:flatbuffers.Builder, BattleLevel:number) {
  builder.addFieldInt32(1, BattleLevel, 0);
}

static add_Exp(builder:flatbuffers.Builder, Exp:number) {
  builder.addFieldInt32(2, Exp, 0);
}

static endSN_HeroBattleLevelUp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_HeroBattleLevelUp(builder:flatbuffers.Builder, HeroID:number, BattleLevel:number, Exp:number):flatbuffers.Offset {
  SN_HeroBattleLevelUp.startSN_HeroBattleLevelUp(builder);
  SN_HeroBattleLevelUp.add_HeroID(builder, HeroID);
  SN_HeroBattleLevelUp.add_BattleLevel(builder, BattleLevel);
  SN_HeroBattleLevelUp.add_Exp(builder, Exp);
  return SN_HeroBattleLevelUp.endSN_HeroBattleLevelUp(builder);
}

unpack(): SN_HeroBattleLevelUpT {
  return new SN_HeroBattleLevelUpT(
    this.HeroID(),
    this.BattleLevel(),
    this.Exp()
  );
}


unpackTo(_o: SN_HeroBattleLevelUpT): void {
  _o.HeroID = this.HeroID();
  _o.BattleLevel = this.BattleLevel();
  _o.Exp = this.Exp();
}
}

export class SN_HeroBattleLevelUpT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public BattleLevel: number = 0,
  public Exp: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_HeroBattleLevelUp.createSN_HeroBattleLevelUp(builder,
    this.HeroID,
    this.BattleLevel,
    this.Exp
  );
}
}

export class CQ_HeroBattleLevelReward implements flatbuffers.IUnpackableObject<CQ_HeroBattleLevelRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroBattleLevelReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroBattleLevelReward(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroBattleLevelReward):CQ_HeroBattleLevelReward {
  return (obj || new CQ_HeroBattleLevelReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroBattleLevelReward(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroBattleLevelReward):CQ_HeroBattleLevelReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroBattleLevelReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BattleLevelRewardID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroBattleLevelReward';
}

static startCQ_HeroBattleLevelReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_BattleLevelRewardID(builder:flatbuffers.Builder, BattleLevelRewardID:number) {
  builder.addFieldInt32(0, BattleLevelRewardID, 0);
}

static endCQ_HeroBattleLevelReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroBattleLevelReward(builder:flatbuffers.Builder, BattleLevelRewardID:number):flatbuffers.Offset {
  CQ_HeroBattleLevelReward.startCQ_HeroBattleLevelReward(builder);
  CQ_HeroBattleLevelReward.add_BattleLevelRewardID(builder, BattleLevelRewardID);
  return CQ_HeroBattleLevelReward.endCQ_HeroBattleLevelReward(builder);
}

unpack(): CQ_HeroBattleLevelRewardT {
  return new CQ_HeroBattleLevelRewardT(
    this.BattleLevelRewardID()
  );
}


unpackTo(_o: CQ_HeroBattleLevelRewardT): void {
  _o.BattleLevelRewardID = this.BattleLevelRewardID();
}
}

export class CQ_HeroBattleLevelRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public BattleLevelRewardID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroBattleLevelReward.createCQ_HeroBattleLevelReward(builder,
    this.BattleLevelRewardID
  );
}
}

export class SA_HeroBattleLevelReward implements flatbuffers.IUnpackableObject<SA_HeroBattleLevelRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroBattleLevelReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroBattleLevelReward(bb:flatbuffers.ByteBuffer, obj?:SA_HeroBattleLevelReward):SA_HeroBattleLevelReward {
  return (obj || new SA_HeroBattleLevelReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroBattleLevelReward(bb:flatbuffers.ByteBuffer, obj?:SA_HeroBattleLevelReward):SA_HeroBattleLevelReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroBattleLevelReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardedLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BattleLevelReward(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroBattleLevelReward';
}

static startSA_HeroBattleLevelReward(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_RewardedLevel(builder:flatbuffers.Builder, RewardedLevel:number) {
  builder.addFieldInt32(1, RewardedLevel, 0);
}

static add_BattleLevelReward(builder:flatbuffers.Builder, BattleLevelRewardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, BattleLevelRewardOffset, 0);
}

static endSA_HeroBattleLevelReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_HeroBattleLevelRewardT {
  return new SA_HeroBattleLevelRewardT(
    this.HeroID(),
    this.RewardedLevel(),
    (this.BattleLevelReward() !== null ? this.BattleLevelReward()!.unpack() : null)
  );
}


unpackTo(_o: SA_HeroBattleLevelRewardT): void {
  _o.HeroID = this.HeroID();
  _o.RewardedLevel = this.RewardedLevel();
  _o.BattleLevelReward = (this.BattleLevelReward() !== null ? this.BattleLevelReward()!.unpack() : null);
}
}

export class SA_HeroBattleLevelRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public RewardedLevel: number = 0,
  public BattleLevelReward: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const BattleLevelReward = (this.BattleLevelReward !== null ? this.BattleLevelReward!.pack(builder) : 0);

  SA_HeroBattleLevelReward.startSA_HeroBattleLevelReward(builder);
  SA_HeroBattleLevelReward.add_HeroID(builder, this.HeroID);
  SA_HeroBattleLevelReward.add_RewardedLevel(builder, this.RewardedLevel);
  SA_HeroBattleLevelReward.add_BattleLevelReward(builder, BattleLevelReward);

  return SA_HeroBattleLevelReward.endSA_HeroBattleLevelReward(builder);
}
}

export class CQ_HeroEyeColorChange implements flatbuffers.IUnpackableObject<CQ_HeroEyeColorChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroEyeColorChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroEyeColorChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroEyeColorChange):CQ_HeroEyeColorChange {
  return (obj || new CQ_HeroEyeColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroEyeColorChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroEyeColorChange):CQ_HeroEyeColorChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroEyeColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LeftEyeColorReset():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

LeftEyeDyeID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LeftEyeHexColor():string|null
LeftEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LeftEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RightEyeColorReset():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

RightEyeDyeID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RightEyeHexColor():string|null
RightEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RightEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroEyeColorChange';
}

static startCQ_HeroEyeColorChange(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_LeftEyeColorReset(builder:flatbuffers.Builder, LeftEyeColorReset:boolean) {
  builder.addFieldInt8(1, +LeftEyeColorReset, +false);
}

static add_LeftEyeDyeID(builder:flatbuffers.Builder, LeftEyeDyeID:number) {
  builder.addFieldInt32(2, LeftEyeDyeID, 0);
}

static add_LeftEyeHexColor(builder:flatbuffers.Builder, LeftEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, LeftEyeHexColorOffset, 0);
}

static add_RightEyeColorReset(builder:flatbuffers.Builder, RightEyeColorReset:boolean) {
  builder.addFieldInt8(4, +RightEyeColorReset, +false);
}

static add_RightEyeDyeID(builder:flatbuffers.Builder, RightEyeDyeID:number) {
  builder.addFieldInt32(5, RightEyeDyeID, 0);
}

static add_RightEyeHexColor(builder:flatbuffers.Builder, RightEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, RightEyeHexColorOffset, 0);
}

static endCQ_HeroEyeColorChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroEyeColorChange(builder:flatbuffers.Builder, HeroID:number, LeftEyeColorReset:boolean, LeftEyeDyeID:number, LeftEyeHexColorOffset:flatbuffers.Offset, RightEyeColorReset:boolean, RightEyeDyeID:number, RightEyeHexColorOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_HeroEyeColorChange.startCQ_HeroEyeColorChange(builder);
  CQ_HeroEyeColorChange.add_HeroID(builder, HeroID);
  CQ_HeroEyeColorChange.add_LeftEyeColorReset(builder, LeftEyeColorReset);
  CQ_HeroEyeColorChange.add_LeftEyeDyeID(builder, LeftEyeDyeID);
  CQ_HeroEyeColorChange.add_LeftEyeHexColor(builder, LeftEyeHexColorOffset);
  CQ_HeroEyeColorChange.add_RightEyeColorReset(builder, RightEyeColorReset);
  CQ_HeroEyeColorChange.add_RightEyeDyeID(builder, RightEyeDyeID);
  CQ_HeroEyeColorChange.add_RightEyeHexColor(builder, RightEyeHexColorOffset);
  return CQ_HeroEyeColorChange.endCQ_HeroEyeColorChange(builder);
}

unpack(): CQ_HeroEyeColorChangeT {
  return new CQ_HeroEyeColorChangeT(
    this.HeroID(),
    this.LeftEyeColorReset(),
    this.LeftEyeDyeID(),
    this.LeftEyeHexColor(),
    this.RightEyeColorReset(),
    this.RightEyeDyeID(),
    this.RightEyeHexColor()
  );
}


unpackTo(_o: CQ_HeroEyeColorChangeT): void {
  _o.HeroID = this.HeroID();
  _o.LeftEyeColorReset = this.LeftEyeColorReset();
  _o.LeftEyeDyeID = this.LeftEyeDyeID();
  _o.LeftEyeHexColor = this.LeftEyeHexColor();
  _o.RightEyeColorReset = this.RightEyeColorReset();
  _o.RightEyeDyeID = this.RightEyeDyeID();
  _o.RightEyeHexColor = this.RightEyeHexColor();
}
}

export class CQ_HeroEyeColorChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public LeftEyeColorReset: boolean = false,
  public LeftEyeDyeID: number = 0,
  public LeftEyeHexColor: string|Uint8Array|null = null,
  public RightEyeColorReset: boolean = false,
  public RightEyeDyeID: number = 0,
  public RightEyeHexColor: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const LeftEyeHexColor = (this.LeftEyeHexColor !== null ? builder.createString(this.LeftEyeHexColor!) : 0);
  const RightEyeHexColor = (this.RightEyeHexColor !== null ? builder.createString(this.RightEyeHexColor!) : 0);

  return CQ_HeroEyeColorChange.createCQ_HeroEyeColorChange(builder,
    this.HeroID,
    this.LeftEyeColorReset,
    this.LeftEyeDyeID,
    LeftEyeHexColor,
    this.RightEyeColorReset,
    this.RightEyeDyeID,
    RightEyeHexColor
  );
}
}

export class SA_HeroEyeColorChange implements flatbuffers.IUnpackableObject<SA_HeroEyeColorChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroEyeColorChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroEyeColorChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroEyeColorChange):SA_HeroEyeColorChange {
  return (obj || new SA_HeroEyeColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroEyeColorChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroEyeColorChange):SA_HeroEyeColorChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroEyeColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LeftEyeHexColor():string|null
LeftEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LeftEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RightEyeHexColor():string|null
RightEyeHexColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RightEyeHexColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroEyeColorChange';
}

static startSA_HeroEyeColorChange(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_LeftEyeHexColor(builder:flatbuffers.Builder, LeftEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, LeftEyeHexColorOffset, 0);
}

static add_RightEyeHexColor(builder:flatbuffers.Builder, RightEyeHexColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RightEyeHexColorOffset, 0);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_HeroEyeColorChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroEyeColorChange(builder:flatbuffers.Builder, HeroID:number, LeftEyeHexColorOffset:flatbuffers.Offset, RightEyeHexColorOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroEyeColorChange.startSA_HeroEyeColorChange(builder);
  SA_HeroEyeColorChange.add_HeroID(builder, HeroID);
  SA_HeroEyeColorChange.add_LeftEyeHexColor(builder, LeftEyeHexColorOffset);
  SA_HeroEyeColorChange.add_RightEyeHexColor(builder, RightEyeHexColorOffset);
  SA_HeroEyeColorChange.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_HeroEyeColorChange.endSA_HeroEyeColorChange(builder);
}

unpack(): SA_HeroEyeColorChangeT {
  return new SA_HeroEyeColorChangeT(
    this.HeroID(),
    this.LeftEyeHexColor(),
    this.RightEyeHexColor(),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_HeroEyeColorChangeT): void {
  _o.HeroID = this.HeroID();
  _o.LeftEyeHexColor = this.LeftEyeHexColor();
  _o.RightEyeHexColor = this.RightEyeHexColor();
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_HeroEyeColorChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public LeftEyeHexColor: string|Uint8Array|null = null,
  public RightEyeHexColor: string|Uint8Array|null = null,
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const LeftEyeHexColor = (this.LeftEyeHexColor !== null ? builder.createString(this.LeftEyeHexColor!) : 0);
  const RightEyeHexColor = (this.RightEyeHexColor !== null ? builder.createString(this.RightEyeHexColor!) : 0);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_HeroEyeColorChange.start_ChangeItemList_Vector);

  return SA_HeroEyeColorChange.createSA_HeroEyeColorChange(builder,
    this.HeroID,
    LeftEyeHexColor,
    RightEyeHexColor,
    ChangeItemList
  );
}
}

export class CQ_HeroSkinList implements flatbuffers.IUnpackableObject<CQ_HeroSkinListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinList(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinList):CQ_HeroSkinList {
  return (obj || new CQ_HeroSkinList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinList(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinList):CQ_HeroSkinList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinList';
}

static startCQ_HeroSkinList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_HeroSkinList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_HeroSkinList.startCQ_HeroSkinList(builder);
  return CQ_HeroSkinList.endCQ_HeroSkinList(builder);
}

unpack(): CQ_HeroSkinListT {
  return new CQ_HeroSkinListT();
}


unpackTo(_o: CQ_HeroSkinListT): void {}
}

export class CQ_HeroSkinListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroSkinList.createCQ_HeroSkinList(builder);
}
}

export class SA_HeroSkinList implements flatbuffers.IUnpackableObject<SA_HeroSkinListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinList(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinList):SA_HeroSkinList {
  return (obj || new SA_HeroSkinList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinList(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinList):SA_HeroSkinList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroSkinList(index: number, obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

HeroSkinList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinList';
}

static startSA_HeroSkinList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroSkinList(builder:flatbuffers.Builder, HeroSkinListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroSkinListOffset, 0);
}

static create_HeroSkinList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_HeroSkinList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_HeroSkinList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinList(builder:flatbuffers.Builder, HeroSkinListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroSkinList.startSA_HeroSkinList(builder);
  SA_HeroSkinList.add_HeroSkinList(builder, HeroSkinListOffset);
  return SA_HeroSkinList.endSA_HeroSkinList(builder);
}

unpack(): SA_HeroSkinListT {
  return new SA_HeroSkinListT(
    this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.HeroSkinList.bind(this), this.HeroSkinList_Length())
  );
}


unpackTo(_o: SA_HeroSkinListT): void {
  _o.HeroSkinList = this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.HeroSkinList.bind(this), this.HeroSkinList_Length());
}
}

export class SA_HeroSkinListT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroSkinList: (HeroSkinDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const HeroSkinList = SA_HeroSkinList.create_HeroSkinList_Vector(builder, builder.createObjectOffsetList(this.HeroSkinList));

  return SA_HeroSkinList.createSA_HeroSkinList(builder,
    HeroSkinList
  );
}
}

export class CQ_HeroSkinEquipChange implements flatbuffers.IUnpackableObject<CQ_HeroSkinEquipChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinEquipChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinEquipChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinEquipChange):CQ_HeroSkinEquipChange {
  return (obj || new CQ_HeroSkinEquipChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinEquipChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinEquipChange):CQ_HeroSkinEquipChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinEquipChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HairSkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BodySkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

WeaponID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinEquipChange';
}

static startCQ_HeroSkinEquipChange(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_HairSkinID(builder:flatbuffers.Builder, HairSkinID:number) {
  builder.addFieldInt32(1, HairSkinID, 0);
}

static add_BodySkinID(builder:flatbuffers.Builder, BodySkinID:number) {
  builder.addFieldInt32(2, BodySkinID, 0);
}

static add_WeaponID(builder:flatbuffers.Builder, WeaponID:number) {
  builder.addFieldInt32(3, WeaponID, 0);
}

static endCQ_HeroSkinEquipChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinEquipChange(builder:flatbuffers.Builder, HeroID:number, HairSkinID:number, BodySkinID:number, WeaponID:number):flatbuffers.Offset {
  CQ_HeroSkinEquipChange.startCQ_HeroSkinEquipChange(builder);
  CQ_HeroSkinEquipChange.add_HeroID(builder, HeroID);
  CQ_HeroSkinEquipChange.add_HairSkinID(builder, HairSkinID);
  CQ_HeroSkinEquipChange.add_BodySkinID(builder, BodySkinID);
  CQ_HeroSkinEquipChange.add_WeaponID(builder, WeaponID);
  return CQ_HeroSkinEquipChange.endCQ_HeroSkinEquipChange(builder);
}

unpack(): CQ_HeroSkinEquipChangeT {
  return new CQ_HeroSkinEquipChangeT(
    this.HeroID(),
    this.HairSkinID(),
    this.BodySkinID(),
    this.WeaponID()
  );
}


unpackTo(_o: CQ_HeroSkinEquipChangeT): void {
  _o.HeroID = this.HeroID();
  _o.HairSkinID = this.HairSkinID();
  _o.BodySkinID = this.BodySkinID();
  _o.WeaponID = this.WeaponID();
}
}

export class CQ_HeroSkinEquipChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public HairSkinID: number = 0,
  public BodySkinID: number = 0,
  public WeaponID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroSkinEquipChange.createCQ_HeroSkinEquipChange(builder,
    this.HeroID,
    this.HairSkinID,
    this.BodySkinID,
    this.WeaponID
  );
}
}

export class SA_HeroSkinEquipChange implements flatbuffers.IUnpackableObject<SA_HeroSkinEquipChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinEquipChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinEquipChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinEquipChange):SA_HeroSkinEquipChange {
  return (obj || new SA_HeroSkinEquipChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinEquipChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinEquipChange):SA_HeroSkinEquipChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinEquipChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HairSkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

BodySkinID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

WeaponID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinEquipChange';
}

static startSA_HeroSkinEquipChange(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_HairSkinID(builder:flatbuffers.Builder, HairSkinID:number) {
  builder.addFieldInt32(1, HairSkinID, 0);
}

static add_BodySkinID(builder:flatbuffers.Builder, BodySkinID:number) {
  builder.addFieldInt32(2, BodySkinID, 0);
}

static add_WeaponID(builder:flatbuffers.Builder, WeaponID:number) {
  builder.addFieldInt32(3, WeaponID, 0);
}

static endSA_HeroSkinEquipChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinEquipChange(builder:flatbuffers.Builder, HeroID:number, HairSkinID:number, BodySkinID:number, WeaponID:number):flatbuffers.Offset {
  SA_HeroSkinEquipChange.startSA_HeroSkinEquipChange(builder);
  SA_HeroSkinEquipChange.add_HeroID(builder, HeroID);
  SA_HeroSkinEquipChange.add_HairSkinID(builder, HairSkinID);
  SA_HeroSkinEquipChange.add_BodySkinID(builder, BodySkinID);
  SA_HeroSkinEquipChange.add_WeaponID(builder, WeaponID);
  return SA_HeroSkinEquipChange.endSA_HeroSkinEquipChange(builder);
}

unpack(): SA_HeroSkinEquipChangeT {
  return new SA_HeroSkinEquipChangeT(
    this.HeroID(),
    this.HairSkinID(),
    this.BodySkinID(),
    this.WeaponID()
  );
}


unpackTo(_o: SA_HeroSkinEquipChangeT): void {
  _o.HeroID = this.HeroID();
  _o.HairSkinID = this.HairSkinID();
  _o.BodySkinID = this.BodySkinID();
  _o.WeaponID = this.WeaponID();
}
}

export class SA_HeroSkinEquipChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public HairSkinID: number = 0,
  public BodySkinID: number = 0,
  public WeaponID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_HeroSkinEquipChange.createSA_HeroSkinEquipChange(builder,
    this.HeroID,
    this.HairSkinID,
    this.BodySkinID,
    this.WeaponID
  );
}
}

export class CQ_HeroSkinColorChange implements flatbuffers.IUnpackableObject<CQ_HeroSkinColorChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinColorChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinColorChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinColorChange):CQ_HeroSkinColorChange {
  return (obj || new CQ_HeroSkinColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinColorChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinColorChange):CQ_HeroSkinColorChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ColorChangeSkinList(index: number, obj?:HeroSkinColorChangeData):HeroSkinColorChangeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroSkinColorChangeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ColorChangeSkinList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinColorChange';
}

static startCQ_HeroSkinColorChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ColorChangeSkinList(builder:flatbuffers.Builder, ColorChangeSkinListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ColorChangeSkinListOffset, 0);
}

static create_ColorChangeSkinList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ColorChangeSkinList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_HeroSkinColorChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinColorChange(builder:flatbuffers.Builder, ColorChangeSkinListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_HeroSkinColorChange.startCQ_HeroSkinColorChange(builder);
  CQ_HeroSkinColorChange.add_ColorChangeSkinList(builder, ColorChangeSkinListOffset);
  return CQ_HeroSkinColorChange.endCQ_HeroSkinColorChange(builder);
}

unpack(): CQ_HeroSkinColorChangeT {
  return new CQ_HeroSkinColorChangeT(
    this.bb!.createObjList<HeroSkinColorChangeData, HeroSkinColorChangeDataT>(this.ColorChangeSkinList.bind(this), this.ColorChangeSkinList_Length())
  );
}


unpackTo(_o: CQ_HeroSkinColorChangeT): void {
  _o.ColorChangeSkinList = this.bb!.createObjList<HeroSkinColorChangeData, HeroSkinColorChangeDataT>(this.ColorChangeSkinList.bind(this), this.ColorChangeSkinList_Length());
}
}

export class CQ_HeroSkinColorChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public ColorChangeSkinList: (HeroSkinColorChangeDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ColorChangeSkinList = CQ_HeroSkinColorChange.create_ColorChangeSkinList_Vector(builder, builder.createObjectOffsetList(this.ColorChangeSkinList));

  return CQ_HeroSkinColorChange.createCQ_HeroSkinColorChange(builder,
    ColorChangeSkinList
  );
}
}

export class SA_HeroSkinColorChange implements flatbuffers.IUnpackableObject<SA_HeroSkinColorChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinColorChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinColorChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinColorChange):SA_HeroSkinColorChange {
  return (obj || new SA_HeroSkinColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinColorChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinColorChange):SA_HeroSkinColorChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinColorChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeHeroSkinData(index: number, obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeHeroSkinData_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinColorChange';
}

static startSA_HeroSkinColorChange(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChangeHeroSkinData(builder:flatbuffers.Builder, ChangeHeroSkinDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChangeHeroSkinDataOffset, 0);
}

static create_ChangeHeroSkinData_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeHeroSkinData_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_HeroSkinColorChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinColorChange(builder:flatbuffers.Builder, ChangeHeroSkinDataOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroSkinColorChange.startSA_HeroSkinColorChange(builder);
  SA_HeroSkinColorChange.add_ChangeHeroSkinData(builder, ChangeHeroSkinDataOffset);
  SA_HeroSkinColorChange.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_HeroSkinColorChange.endSA_HeroSkinColorChange(builder);
}

unpack(): SA_HeroSkinColorChangeT {
  return new SA_HeroSkinColorChangeT(
    this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinData.bind(this), this.ChangeHeroSkinData_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_HeroSkinColorChangeT): void {
  _o.ChangeHeroSkinData = this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinData.bind(this), this.ChangeHeroSkinData_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_HeroSkinColorChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeHeroSkinData: (HeroSkinDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeHeroSkinData = SA_HeroSkinColorChange.create_ChangeHeroSkinData_Vector(builder, builder.createObjectOffsetList(this.ChangeHeroSkinData));
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_HeroSkinColorChange.start_ChangeItemList_Vector);

  return SA_HeroSkinColorChange.createSA_HeroSkinColorChange(builder,
    ChangeHeroSkinData,
    ChangeItemList
  );
}
}

export class CQ_HeroSkinPresetList implements flatbuffers.IUnpackableObject<CQ_HeroSkinPresetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinPresetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinPresetList(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetList):CQ_HeroSkinPresetList {
  return (obj || new CQ_HeroSkinPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinPresetList(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetList):CQ_HeroSkinPresetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinPresetList';
}

static startCQ_HeroSkinPresetList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_HeroSkinPresetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinPresetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_HeroSkinPresetList.startCQ_HeroSkinPresetList(builder);
  return CQ_HeroSkinPresetList.endCQ_HeroSkinPresetList(builder);
}

unpack(): CQ_HeroSkinPresetListT {
  return new CQ_HeroSkinPresetListT();
}


unpackTo(_o: CQ_HeroSkinPresetListT): void {}
}

export class CQ_HeroSkinPresetListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroSkinPresetList.createCQ_HeroSkinPresetList(builder);
}
}

export class SA_HeroSkinPresetList implements flatbuffers.IUnpackableObject<SA_HeroSkinPresetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinPresetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinPresetList(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetList):SA_HeroSkinPresetList {
  return (obj || new SA_HeroSkinPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinPresetList(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetList):SA_HeroSkinPresetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroSkinPresetList(index: number, obj?:HeroSkinPresetData):HeroSkinPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroSkinPresetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

HeroSkinPresetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinPresetList';
}

static startSA_HeroSkinPresetList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroSkinPresetList(builder:flatbuffers.Builder, HeroSkinPresetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroSkinPresetListOffset, 0);
}

static create_HeroSkinPresetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_HeroSkinPresetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_HeroSkinPresetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinPresetList(builder:flatbuffers.Builder, HeroSkinPresetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroSkinPresetList.startSA_HeroSkinPresetList(builder);
  SA_HeroSkinPresetList.add_HeroSkinPresetList(builder, HeroSkinPresetListOffset);
  return SA_HeroSkinPresetList.endSA_HeroSkinPresetList(builder);
}

unpack(): SA_HeroSkinPresetListT {
  return new SA_HeroSkinPresetListT(
    this.bb!.createObjList<HeroSkinPresetData, HeroSkinPresetDataT>(this.HeroSkinPresetList.bind(this), this.HeroSkinPresetList_Length())
  );
}


unpackTo(_o: SA_HeroSkinPresetListT): void {
  _o.HeroSkinPresetList = this.bb!.createObjList<HeroSkinPresetData, HeroSkinPresetDataT>(this.HeroSkinPresetList.bind(this), this.HeroSkinPresetList_Length());
}
}

export class SA_HeroSkinPresetListT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroSkinPresetList: (HeroSkinPresetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const HeroSkinPresetList = SA_HeroSkinPresetList.create_HeroSkinPresetList_Vector(builder, builder.createObjectOffsetList(this.HeroSkinPresetList));

  return SA_HeroSkinPresetList.createSA_HeroSkinPresetList(builder,
    HeroSkinPresetList
  );
}
}

export class CQ_HeroSkinPresetSave implements flatbuffers.IUnpackableObject<CQ_HeroSkinPresetSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinPresetSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinPresetSave(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetSave):CQ_HeroSkinPresetSave {
  return (obj || new CQ_HeroSkinPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinPresetSave(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetSave):CQ_HeroSkinPresetSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

PresetName():string|null
PresetName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PresetName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinPresetSave';
}

static startCQ_HeroSkinPresetSave(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(1, SlotID, 0);
}

static add_PresetName(builder:flatbuffers.Builder, PresetNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, PresetNameOffset, 0);
}

static endCQ_HeroSkinPresetSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinPresetSave(builder:flatbuffers.Builder, HeroID:number, SlotID:number, PresetNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_HeroSkinPresetSave.startCQ_HeroSkinPresetSave(builder);
  CQ_HeroSkinPresetSave.add_HeroID(builder, HeroID);
  CQ_HeroSkinPresetSave.add_SlotID(builder, SlotID);
  CQ_HeroSkinPresetSave.add_PresetName(builder, PresetNameOffset);
  return CQ_HeroSkinPresetSave.endCQ_HeroSkinPresetSave(builder);
}

unpack(): CQ_HeroSkinPresetSaveT {
  return new CQ_HeroSkinPresetSaveT(
    this.HeroID(),
    this.SlotID(),
    this.PresetName()
  );
}


unpackTo(_o: CQ_HeroSkinPresetSaveT): void {
  _o.HeroID = this.HeroID();
  _o.SlotID = this.SlotID();
  _o.PresetName = this.PresetName();
}
}

export class CQ_HeroSkinPresetSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public SlotID: number = 0,
  public PresetName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetName = (this.PresetName !== null ? builder.createString(this.PresetName!) : 0);

  return CQ_HeroSkinPresetSave.createCQ_HeroSkinPresetSave(builder,
    this.HeroID,
    this.SlotID,
    PresetName
  );
}
}

export class SA_HeroSkinPresetSave implements flatbuffers.IUnpackableObject<SA_HeroSkinPresetSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinPresetSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinPresetSave(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetSave):SA_HeroSkinPresetSave {
  return (obj || new SA_HeroSkinPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinPresetSave(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetSave):SA_HeroSkinPresetSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroSkinPreset(obj?:HeroSkinPresetData):HeroSkinPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroSkinPresetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinPresetSave';
}

static startSA_HeroSkinPresetSave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroSkinPreset(builder:flatbuffers.Builder, HeroSkinPresetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroSkinPresetOffset, 0);
}

static endSA_HeroSkinPresetSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinPresetSave(builder:flatbuffers.Builder, HeroSkinPresetOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroSkinPresetSave.startSA_HeroSkinPresetSave(builder);
  SA_HeroSkinPresetSave.add_HeroSkinPreset(builder, HeroSkinPresetOffset);
  return SA_HeroSkinPresetSave.endSA_HeroSkinPresetSave(builder);
}

unpack(): SA_HeroSkinPresetSaveT {
  return new SA_HeroSkinPresetSaveT(
    (this.HeroSkinPreset() !== null ? this.HeroSkinPreset()!.unpack() : null)
  );
}


unpackTo(_o: SA_HeroSkinPresetSaveT): void {
  _o.HeroSkinPreset = (this.HeroSkinPreset() !== null ? this.HeroSkinPreset()!.unpack() : null);
}
}

export class SA_HeroSkinPresetSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroSkinPreset: HeroSkinPresetDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const HeroSkinPreset = (this.HeroSkinPreset !== null ? this.HeroSkinPreset!.pack(builder) : 0);

  return SA_HeroSkinPresetSave.createSA_HeroSkinPresetSave(builder,
    HeroSkinPreset
  );
}
}

export class CQ_HeroSkinPresetLoad implements flatbuffers.IUnpackableObject<CQ_HeroSkinPresetLoadT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinPresetLoad {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinPresetLoad(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetLoad):CQ_HeroSkinPresetLoad {
  return (obj || new CQ_HeroSkinPresetLoad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinPresetLoad(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetLoad):CQ_HeroSkinPresetLoad {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinPresetLoad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinPresetLoad';
}

static startCQ_HeroSkinPresetLoad(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(1, SlotID, 0);
}

static endCQ_HeroSkinPresetLoad(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinPresetLoad(builder:flatbuffers.Builder, HeroID:number, SlotID:number):flatbuffers.Offset {
  CQ_HeroSkinPresetLoad.startCQ_HeroSkinPresetLoad(builder);
  CQ_HeroSkinPresetLoad.add_HeroID(builder, HeroID);
  CQ_HeroSkinPresetLoad.add_SlotID(builder, SlotID);
  return CQ_HeroSkinPresetLoad.endCQ_HeroSkinPresetLoad(builder);
}

unpack(): CQ_HeroSkinPresetLoadT {
  return new CQ_HeroSkinPresetLoadT(
    this.HeroID(),
    this.SlotID()
  );
}


unpackTo(_o: CQ_HeroSkinPresetLoadT): void {
  _o.HeroID = this.HeroID();
  _o.SlotID = this.SlotID();
}
}

export class CQ_HeroSkinPresetLoadT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public SlotID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroSkinPresetLoad.createCQ_HeroSkinPresetLoad(builder,
    this.HeroID,
    this.SlotID
  );
}
}

export class SA_HeroSkinPresetLoad implements flatbuffers.IUnpackableObject<SA_HeroSkinPresetLoadT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinPresetLoad {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinPresetLoad(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetLoad):SA_HeroSkinPresetLoad {
  return (obj || new SA_HeroSkinPresetLoad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinPresetLoad(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetLoad):SA_HeroSkinPresetLoad {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinPresetLoad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinPresetLoad';
}

static startSA_HeroSkinPresetLoad(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, BodySkinOffset, 0);
}

static endSA_HeroSkinPresetLoad(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_HeroSkinPresetLoadT {
  return new SA_HeroSkinPresetLoadT(
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null)
  );
}


unpackTo(_o: SA_HeroSkinPresetLoadT): void {
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
}
}

export class SA_HeroSkinPresetLoadT implements flatbuffers.IGeneratedObject {
constructor(
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);

  SA_HeroSkinPresetLoad.startSA_HeroSkinPresetLoad(builder);
  SA_HeroSkinPresetLoad.add_Hero(builder, Hero);
  SA_HeroSkinPresetLoad.add_HairSkin(builder, HairSkin);
  SA_HeroSkinPresetLoad.add_BodySkin(builder, BodySkin);

  return SA_HeroSkinPresetLoad.endSA_HeroSkinPresetLoad(builder);
}
}

export class CQ_HeroSkinPresetSlotBuy implements flatbuffers.IUnpackableObject<CQ_HeroSkinPresetSlotBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinPresetSlotBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinPresetSlotBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetSlotBuy):CQ_HeroSkinPresetSlotBuy {
  return (obj || new CQ_HeroSkinPresetSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinPresetSlotBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetSlotBuy):CQ_HeroSkinPresetSlotBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinPresetSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinPresetSlotBuy';
}

static startCQ_HeroSkinPresetSlotBuy(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static endCQ_HeroSkinPresetSlotBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinPresetSlotBuy(builder:flatbuffers.Builder, HeroID:number):flatbuffers.Offset {
  CQ_HeroSkinPresetSlotBuy.startCQ_HeroSkinPresetSlotBuy(builder);
  CQ_HeroSkinPresetSlotBuy.add_HeroID(builder, HeroID);
  return CQ_HeroSkinPresetSlotBuy.endCQ_HeroSkinPresetSlotBuy(builder);
}

unpack(): CQ_HeroSkinPresetSlotBuyT {
  return new CQ_HeroSkinPresetSlotBuyT(
    this.HeroID()
  );
}


unpackTo(_o: CQ_HeroSkinPresetSlotBuyT): void {
  _o.HeroID = this.HeroID();
}
}

export class CQ_HeroSkinPresetSlotBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroSkinPresetSlotBuy.createCQ_HeroSkinPresetSlotBuy(builder,
    this.HeroID
  );
}
}

export class SA_HeroSkinPresetSlotBuy implements flatbuffers.IUnpackableObject<SA_HeroSkinPresetSlotBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinPresetSlotBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinPresetSlotBuy(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetSlotBuy):SA_HeroSkinPresetSlotBuy {
  return (obj || new SA_HeroSkinPresetSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinPresetSlotBuy(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetSlotBuy):SA_HeroSkinPresetSlotBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinPresetSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AddPresetCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinPresetSlotBuy';
}

static startSA_HeroSkinPresetSlotBuy(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_AddPresetCount(builder:flatbuffers.Builder, AddPresetCount:number) {
  builder.addFieldInt32(1, AddPresetCount, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_HeroSkinPresetSlotBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinPresetSlotBuy(builder:flatbuffers.Builder, HeroID:number, AddPresetCount:number, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroSkinPresetSlotBuy.startSA_HeroSkinPresetSlotBuy(builder);
  SA_HeroSkinPresetSlotBuy.add_HeroID(builder, HeroID);
  SA_HeroSkinPresetSlotBuy.add_AddPresetCount(builder, AddPresetCount);
  SA_HeroSkinPresetSlotBuy.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_HeroSkinPresetSlotBuy.endSA_HeroSkinPresetSlotBuy(builder);
}

unpack(): SA_HeroSkinPresetSlotBuyT {
  return new SA_HeroSkinPresetSlotBuyT(
    this.HeroID(),
    this.AddPresetCount(),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_HeroSkinPresetSlotBuyT): void {
  _o.HeroID = this.HeroID();
  _o.AddPresetCount = this.AddPresetCount();
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_HeroSkinPresetSlotBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public AddPresetCount: number = 0,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_HeroSkinPresetSlotBuy.start_ChangeAssetList_Vector);

  return SA_HeroSkinPresetSlotBuy.createSA_HeroSkinPresetSlotBuy(builder,
    this.HeroID,
    this.AddPresetCount,
    ChangeAssetList
  );
}
}

export class CQ_HeroSkinPresetNameChange implements flatbuffers.IUnpackableObject<CQ_HeroSkinPresetNameChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroSkinPresetNameChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroSkinPresetNameChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetNameChange):CQ_HeroSkinPresetNameChange {
  return (obj || new CQ_HeroSkinPresetNameChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroSkinPresetNameChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroSkinPresetNameChange):CQ_HeroSkinPresetNameChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroSkinPresetNameChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

PresetName():string|null
PresetName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PresetName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroSkinPresetNameChange';
}

static startCQ_HeroSkinPresetNameChange(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(1, SlotID, 0);
}

static add_PresetName(builder:flatbuffers.Builder, PresetNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, PresetNameOffset, 0);
}

static endCQ_HeroSkinPresetNameChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroSkinPresetNameChange(builder:flatbuffers.Builder, HeroID:number, SlotID:number, PresetNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_HeroSkinPresetNameChange.startCQ_HeroSkinPresetNameChange(builder);
  CQ_HeroSkinPresetNameChange.add_HeroID(builder, HeroID);
  CQ_HeroSkinPresetNameChange.add_SlotID(builder, SlotID);
  CQ_HeroSkinPresetNameChange.add_PresetName(builder, PresetNameOffset);
  return CQ_HeroSkinPresetNameChange.endCQ_HeroSkinPresetNameChange(builder);
}

unpack(): CQ_HeroSkinPresetNameChangeT {
  return new CQ_HeroSkinPresetNameChangeT(
    this.HeroID(),
    this.SlotID(),
    this.PresetName()
  );
}


unpackTo(_o: CQ_HeroSkinPresetNameChangeT): void {
  _o.HeroID = this.HeroID();
  _o.SlotID = this.SlotID();
  _o.PresetName = this.PresetName();
}
}

export class CQ_HeroSkinPresetNameChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public SlotID: number = 0,
  public PresetName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetName = (this.PresetName !== null ? builder.createString(this.PresetName!) : 0);

  return CQ_HeroSkinPresetNameChange.createCQ_HeroSkinPresetNameChange(builder,
    this.HeroID,
    this.SlotID,
    PresetName
  );
}
}

export class SA_HeroSkinPresetNameChange implements flatbuffers.IUnpackableObject<SA_HeroSkinPresetNameChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroSkinPresetNameChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroSkinPresetNameChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetNameChange):SA_HeroSkinPresetNameChange {
  return (obj || new SA_HeroSkinPresetNameChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroSkinPresetNameChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroSkinPresetNameChange):SA_HeroSkinPresetNameChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroSkinPresetNameChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

PresetName():string|null
PresetName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PresetName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroSkinPresetNameChange';
}

static startSA_HeroSkinPresetNameChange(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(1, SlotID, 0);
}

static add_PresetName(builder:flatbuffers.Builder, PresetNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, PresetNameOffset, 0);
}

static endSA_HeroSkinPresetNameChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroSkinPresetNameChange(builder:flatbuffers.Builder, HeroID:number, SlotID:number, PresetNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroSkinPresetNameChange.startSA_HeroSkinPresetNameChange(builder);
  SA_HeroSkinPresetNameChange.add_HeroID(builder, HeroID);
  SA_HeroSkinPresetNameChange.add_SlotID(builder, SlotID);
  SA_HeroSkinPresetNameChange.add_PresetName(builder, PresetNameOffset);
  return SA_HeroSkinPresetNameChange.endSA_HeroSkinPresetNameChange(builder);
}

unpack(): SA_HeroSkinPresetNameChangeT {
  return new SA_HeroSkinPresetNameChangeT(
    this.HeroID(),
    this.SlotID(),
    this.PresetName()
  );
}


unpackTo(_o: SA_HeroSkinPresetNameChangeT): void {
  _o.HeroID = this.HeroID();
  _o.SlotID = this.SlotID();
  _o.PresetName = this.PresetName();
}
}

export class SA_HeroSkinPresetNameChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0,
  public SlotID: number = 0,
  public PresetName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetName = (this.PresetName !== null ? builder.createString(this.PresetName!) : 0);

  return SA_HeroSkinPresetNameChange.createSA_HeroSkinPresetNameChange(builder,
    this.HeroID,
    this.SlotID,
    PresetName
  );
}
}

export class CQ_HeroAccessoryChange implements flatbuffers.IUnpackableObject<CQ_HeroAccessoryChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroAccessoryChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroAccessoryChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroAccessoryChange):CQ_HeroAccessoryChange {
  return (obj || new CQ_HeroAccessoryChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroAccessoryChange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroAccessoryChange):CQ_HeroAccessoryChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroAccessoryChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeHero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroAccessoryChange';
}

static startCQ_HeroAccessoryChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChangeHero(builder:flatbuffers.Builder, ChangeHeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChangeHeroOffset, 0);
}

static endCQ_HeroAccessoryChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroAccessoryChange(builder:flatbuffers.Builder, ChangeHeroOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_HeroAccessoryChange.startCQ_HeroAccessoryChange(builder);
  CQ_HeroAccessoryChange.add_ChangeHero(builder, ChangeHeroOffset);
  return CQ_HeroAccessoryChange.endCQ_HeroAccessoryChange(builder);
}

unpack(): CQ_HeroAccessoryChangeT {
  return new CQ_HeroAccessoryChangeT(
    (this.ChangeHero() !== null ? this.ChangeHero()!.unpack() : null)
  );
}


unpackTo(_o: CQ_HeroAccessoryChangeT): void {
  _o.ChangeHero = (this.ChangeHero() !== null ? this.ChangeHero()!.unpack() : null);
}
}

export class CQ_HeroAccessoryChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeHero: HeroDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeHero = (this.ChangeHero !== null ? this.ChangeHero!.pack(builder) : 0);

  return CQ_HeroAccessoryChange.createCQ_HeroAccessoryChange(builder,
    ChangeHero
  );
}
}

export class SA_HeroAccessoryChange implements flatbuffers.IUnpackableObject<SA_HeroAccessoryChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroAccessoryChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroAccessoryChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroAccessoryChange):SA_HeroAccessoryChange {
  return (obj || new SA_HeroAccessoryChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroAccessoryChange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroAccessoryChange):SA_HeroAccessoryChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroAccessoryChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroAccessoryChange';
}

static startSA_HeroAccessoryChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, HeroOffset, 0);
}

static endSA_HeroAccessoryChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroAccessoryChange(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroAccessoryChange.startSA_HeroAccessoryChange(builder);
  SA_HeroAccessoryChange.add_Hero(builder, HeroOffset);
  return SA_HeroAccessoryChange.endSA_HeroAccessoryChange(builder);
}

unpack(): SA_HeroAccessoryChangeT {
  return new SA_HeroAccessoryChangeT(
    (this.Hero() !== null ? this.Hero()!.unpack() : null)
  );
}


unpackTo(_o: SA_HeroAccessoryChangeT): void {
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
}
}

export class SA_HeroAccessoryChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public Hero: HeroDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);

  return SA_HeroAccessoryChange.createSA_HeroAccessoryChange(builder,
    Hero
  );
}
}

export class SN_HeroExpire implements flatbuffers.IUnpackableObject<SN_HeroExpireT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_HeroExpire {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_HeroExpire(bb:flatbuffers.ByteBuffer, obj?:SN_HeroExpire):SN_HeroExpire {
  return (obj || new SN_HeroExpire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_HeroExpire(bb:flatbuffers.ByteBuffer, obj?:SN_HeroExpire):SN_HeroExpire {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_HeroExpire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_HeroExpire';
}

static startSN_HeroExpire(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(0, HeroID, 0);
}

static endSN_HeroExpire(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_HeroExpire(builder:flatbuffers.Builder, HeroID:number):flatbuffers.Offset {
  SN_HeroExpire.startSN_HeroExpire(builder);
  SN_HeroExpire.add_HeroID(builder, HeroID);
  return SN_HeroExpire.endSN_HeroExpire(builder);
}

unpack(): SN_HeroExpireT {
  return new SN_HeroExpireT(
    this.HeroID()
  );
}


unpackTo(_o: SN_HeroExpireT): void {
  _o.HeroID = this.HeroID();
}
}

export class SN_HeroExpireT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_HeroExpire.createSN_HeroExpire(builder,
    this.HeroID
  );
}
}

export class CQ_HeroExperienceTicketUse implements flatbuffers.IUnpackableObject<CQ_HeroExperienceTicketUseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroExperienceTicketUse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroExperienceTicketUse(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroExperienceTicketUse):CQ_HeroExperienceTicketUse {
  return (obj || new CQ_HeroExperienceTicketUse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroExperienceTicketUse(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroExperienceTicketUse):CQ_HeroExperienceTicketUse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroExperienceTicketUse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():EHeroType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EHeroType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroExperienceTicketUse';
}

static startCQ_HeroExperienceTicketUse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:EHeroType) {
  builder.addFieldInt8(0, HeroID, EHeroType.None);
}

static endCQ_HeroExperienceTicketUse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroExperienceTicketUse(builder:flatbuffers.Builder, HeroID:EHeroType):flatbuffers.Offset {
  CQ_HeroExperienceTicketUse.startCQ_HeroExperienceTicketUse(builder);
  CQ_HeroExperienceTicketUse.add_HeroID(builder, HeroID);
  return CQ_HeroExperienceTicketUse.endCQ_HeroExperienceTicketUse(builder);
}

unpack(): CQ_HeroExperienceTicketUseT {
  return new CQ_HeroExperienceTicketUseT(
    this.HeroID()
  );
}


unpackTo(_o: CQ_HeroExperienceTicketUseT): void {
  _o.HeroID = this.HeroID();
}
}

export class CQ_HeroExperienceTicketUseT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: EHeroType = EHeroType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroExperienceTicketUse.createCQ_HeroExperienceTicketUse(builder,
    this.HeroID
  );
}
}

export class SA_HeroExperienceTicketUse implements flatbuffers.IUnpackableObject<SA_HeroExperienceTicketUseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroExperienceTicketUse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroExperienceTicketUse(bb:flatbuffers.ByteBuffer, obj?:SA_HeroExperienceTicketUse):SA_HeroExperienceTicketUse {
  return (obj || new SA_HeroExperienceTicketUse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroExperienceTicketUse(bb:flatbuffers.ByteBuffer, obj?:SA_HeroExperienceTicketUse):SA_HeroExperienceTicketUse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroExperienceTicketUse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

newHero(obj?:NewHeroData):NewHeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NewHeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroExperienceTicketUse';
}

static startSA_HeroExperienceTicketUse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_newHero(builder:flatbuffers.Builder, newHeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, newHeroOffset, 0);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_HeroExperienceTicketUse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroExperienceTicketUse(builder:flatbuffers.Builder, newHeroOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroExperienceTicketUse.startSA_HeroExperienceTicketUse(builder);
  SA_HeroExperienceTicketUse.add_newHero(builder, newHeroOffset);
  SA_HeroExperienceTicketUse.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_HeroExperienceTicketUse.endSA_HeroExperienceTicketUse(builder);
}

unpack(): SA_HeroExperienceTicketUseT {
  return new SA_HeroExperienceTicketUseT(
    (this.newHero() !== null ? this.newHero()!.unpack() : null),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_HeroExperienceTicketUseT): void {
  _o.newHero = (this.newHero() !== null ? this.newHero()!.unpack() : null);
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_HeroExperienceTicketUseT implements flatbuffers.IGeneratedObject {
constructor(
  public newHero: NewHeroDataT|null = null,
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const newHero = (this.newHero !== null ? this.newHero!.pack(builder) : 0);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_HeroExperienceTicketUse.start_ChangeItemList_Vector);

  return SA_HeroExperienceTicketUse.createSA_HeroExperienceTicketUse(builder,
    newHero,
    ChangeItemList
  );
}
}

export class CQ_HeroExperienceTicketExchange implements flatbuffers.IUnpackableObject<CQ_HeroExperienceTicketExchangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_HeroExperienceTicketExchange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_HeroExperienceTicketExchange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroExperienceTicketExchange):CQ_HeroExperienceTicketExchange {
  return (obj || new CQ_HeroExperienceTicketExchange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_HeroExperienceTicketExchange(bb:flatbuffers.ByteBuffer, obj?:CQ_HeroExperienceTicketExchange):CQ_HeroExperienceTicketExchange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_HeroExperienceTicketExchange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

HeroID():EHeroType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EHeroType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_HeroExperienceTicketExchange';
}

static startCQ_HeroExperienceTicketExchange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:EHeroType) {
  builder.addFieldInt8(0, HeroID, EHeroType.None);
}

static endCQ_HeroExperienceTicketExchange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_HeroExperienceTicketExchange(builder:flatbuffers.Builder, HeroID:EHeroType):flatbuffers.Offset {
  CQ_HeroExperienceTicketExchange.startCQ_HeroExperienceTicketExchange(builder);
  CQ_HeroExperienceTicketExchange.add_HeroID(builder, HeroID);
  return CQ_HeroExperienceTicketExchange.endCQ_HeroExperienceTicketExchange(builder);
}

unpack(): CQ_HeroExperienceTicketExchangeT {
  return new CQ_HeroExperienceTicketExchangeT(
    this.HeroID()
  );
}


unpackTo(_o: CQ_HeroExperienceTicketExchangeT): void {
  _o.HeroID = this.HeroID();
}
}

export class CQ_HeroExperienceTicketExchangeT implements flatbuffers.IGeneratedObject {
constructor(
  public HeroID: EHeroType = EHeroType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_HeroExperienceTicketExchange.createCQ_HeroExperienceTicketExchange(builder,
    this.HeroID
  );
}
}

export class SA_HeroExperienceTicketExchange implements flatbuffers.IUnpackableObject<SA_HeroExperienceTicketExchangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_HeroExperienceTicketExchange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_HeroExperienceTicketExchange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroExperienceTicketExchange):SA_HeroExperienceTicketExchange {
  return (obj || new SA_HeroExperienceTicketExchange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_HeroExperienceTicketExchange(bb:flatbuffers.ByteBuffer, obj?:SA_HeroExperienceTicketExchange):SA_HeroExperienceTicketExchange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_HeroExperienceTicketExchange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_HeroExperienceTicketExchange';
}

static startSA_HeroExperienceTicketExchange(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_HeroExperienceTicketExchange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_HeroExperienceTicketExchange(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_HeroExperienceTicketExchange.startSA_HeroExperienceTicketExchange(builder);
  SA_HeroExperienceTicketExchange.add_ChangeItemList(builder, ChangeItemListOffset);
  SA_HeroExperienceTicketExchange.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_HeroExperienceTicketExchange.endSA_HeroExperienceTicketExchange(builder);
}

unpack(): SA_HeroExperienceTicketExchangeT {
  return new SA_HeroExperienceTicketExchangeT(
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_HeroExperienceTicketExchangeT): void {
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_HeroExperienceTicketExchangeT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeItemList: (ItemDataT)[] = [],
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_HeroExperienceTicketExchange.start_ChangeItemList_Vector);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_HeroExperienceTicketExchange.start_ChangeAssetList_Vector);

  return SA_HeroExperienceTicketExchange.createSA_HeroExperienceTicketExchange(builder,
    ChangeItemList,
    ChangeAssetList
  );
}
}

export class CQ_PetList implements flatbuffers.IUnpackableObject<CQ_PetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PetList(bb:flatbuffers.ByteBuffer, obj?:CQ_PetList):CQ_PetList {
  return (obj || new CQ_PetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PetList(bb:flatbuffers.ByteBuffer, obj?:CQ_PetList):CQ_PetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PetList';
}

static startCQ_PetList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_PetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_PetList.startCQ_PetList(builder);
  return CQ_PetList.endCQ_PetList(builder);
}

unpack(): CQ_PetListT {
  return new CQ_PetListT();
}


unpackTo(_o: CQ_PetListT): void {}
}

export class CQ_PetListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PetList.createCQ_PetList(builder);
}
}

export class SA_PetList implements flatbuffers.IUnpackableObject<SA_PetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PetList(bb:flatbuffers.ByteBuffer, obj?:SA_PetList):SA_PetList {
  return (obj || new SA_PetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PetList(bb:flatbuffers.ByteBuffer, obj?:SA_PetList):SA_PetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PetList(index: number, obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

PetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PetList';
}

static startSA_PetList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PetList(builder:flatbuffers.Builder, PetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PetListOffset, 0);
}

static create_PetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_PetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_PetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PetList(builder:flatbuffers.Builder, PetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PetList.startSA_PetList(builder);
  SA_PetList.add_PetList(builder, PetListOffset);
  return SA_PetList.endSA_PetList(builder);
}

unpack(): SA_PetListT {
  return new SA_PetListT(
    this.bb!.createObjList<PetData, PetDataT>(this.PetList.bind(this), this.PetList_Length())
  );
}


unpackTo(_o: SA_PetListT): void {
  _o.PetList = this.bb!.createObjList<PetData, PetDataT>(this.PetList.bind(this), this.PetList_Length());
}
}

export class SA_PetListT implements flatbuffers.IGeneratedObject {
constructor(
  public PetList: (PetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PetList = SA_PetList.create_PetList_Vector(builder, builder.createObjectOffsetList(this.PetList));

  return SA_PetList.createSA_PetList(builder,
    PetList
  );
}
}

export class CQ_PetFeed implements flatbuffers.IUnpackableObject<CQ_PetFeedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PetFeed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PetFeed(bb:flatbuffers.ByteBuffer, obj?:CQ_PetFeed):CQ_PetFeed {
  return (obj || new CQ_PetFeed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PetFeed(bb:flatbuffers.ByteBuffer, obj?:CQ_PetFeed):CQ_PetFeed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PetFeed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

FoodItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

FoodItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PetFeed';
}

static startCQ_PetFeed(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(0, BigInt(PetUniqueID), BigInt(0));
}

static add_FoodItemList(builder:flatbuffers.Builder, FoodItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, FoodItemListOffset, 0);
}

static start_FoodItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endCQ_PetFeed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PetFeed(builder:flatbuffers.Builder, PetUniqueID:number, FoodItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_PetFeed.startCQ_PetFeed(builder);
  CQ_PetFeed.add_PetUniqueID(builder, PetUniqueID);
  CQ_PetFeed.add_FoodItemList(builder, FoodItemListOffset);
  return CQ_PetFeed.endCQ_PetFeed(builder);
}

unpack(): CQ_PetFeedT {
  return new CQ_PetFeedT(
    this.PetUniqueID(),
    this.bb!.createObjList<ItemData, ItemDataT>(this.FoodItemList.bind(this), this.FoodItemList_Length())
  );
}


unpackTo(_o: CQ_PetFeedT): void {
  _o.PetUniqueID = this.PetUniqueID();
  _o.FoodItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.FoodItemList.bind(this), this.FoodItemList_Length());
}
}

export class CQ_PetFeedT implements flatbuffers.IGeneratedObject {
constructor(
  public PetUniqueID: number = 0,
  public FoodItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FoodItemList = builder.createStructOffsetList(this.FoodItemList, CQ_PetFeed.start_FoodItemList_Vector);

  return CQ_PetFeed.createCQ_PetFeed(builder,
    this.PetUniqueID,
    FoodItemList
  );
}
}

export class SA_PetFeed implements flatbuffers.IUnpackableObject<SA_PetFeedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PetFeed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PetFeed(bb:flatbuffers.ByteBuffer, obj?:SA_PetFeed):SA_PetFeed {
  return (obj || new SA_PetFeed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PetFeed(bb:flatbuffers.ByteBuffer, obj?:SA_PetFeed):SA_PetFeed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PetFeed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Pet(obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PetFeed';
}

static startSA_PetFeed(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Pet(builder:flatbuffers.Builder, PetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PetOffset, 0);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_PetFeed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PetFeed(builder:flatbuffers.Builder, PetOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PetFeed.startSA_PetFeed(builder);
  SA_PetFeed.add_Pet(builder, PetOffset);
  SA_PetFeed.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_PetFeed.endSA_PetFeed(builder);
}

unpack(): SA_PetFeedT {
  return new SA_PetFeedT(
    (this.Pet() !== null ? this.Pet()!.unpack() : null),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_PetFeedT): void {
  _o.Pet = (this.Pet() !== null ? this.Pet()!.unpack() : null);
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_PetFeedT implements flatbuffers.IGeneratedObject {
constructor(
  public Pet: PetDataT|null = null,
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Pet = (this.Pet !== null ? this.Pet!.pack(builder) : 0);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_PetFeed.start_ChangeItemList_Vector);

  return SA_PetFeed.createSA_PetFeed(builder,
    Pet,
    ChangeItemList
  );
}
}

export class CQ_PetCombine implements flatbuffers.IUnpackableObject<CQ_PetCombineT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PetCombine {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PetCombine(bb:flatbuffers.ByteBuffer, obj?:CQ_PetCombine):CQ_PetCombine {
  return (obj || new CQ_PetCombine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PetCombine(bb:flatbuffers.ByteBuffer, obj?:CQ_PetCombine):CQ_PetCombine {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PetCombine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MainUniqueIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

MainUniqueIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

SubUniqueIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

SubUniqueIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PetCombine';
}

static startCQ_PetCombine(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MainUniqueIDList(builder:flatbuffers.Builder, MainUniqueIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MainUniqueIDListOffset, 0);
}

static create_MainUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_MainUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_MainUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_MainUniqueIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_SubUniqueIDList(builder:flatbuffers.Builder, SubUniqueIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, SubUniqueIDListOffset, 0);
}

static create_SubUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_SubUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_SubUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_SubUniqueIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static endCQ_PetCombine(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PetCombine(builder:flatbuffers.Builder, MainUniqueIDListOffset:flatbuffers.Offset, SubUniqueIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_PetCombine.startCQ_PetCombine(builder);
  CQ_PetCombine.add_MainUniqueIDList(builder, MainUniqueIDListOffset);
  CQ_PetCombine.add_SubUniqueIDList(builder, SubUniqueIDListOffset);
  return CQ_PetCombine.endCQ_PetCombine(builder);
}

unpack(): CQ_PetCombineT {
  return new CQ_PetCombineT(
    this.bb!.createScalarList<number>(this.MainUniqueIDList.bind(this), this.MainUniqueIDList_Length()),
    this.bb!.createScalarList<number>(this.SubUniqueIDList.bind(this), this.SubUniqueIDList_Length())
  );
}


unpackTo(_o: CQ_PetCombineT): void {
  _o.MainUniqueIDList = this.bb!.createScalarList<number>(this.MainUniqueIDList.bind(this), this.MainUniqueIDList_Length());
  _o.SubUniqueIDList = this.bb!.createScalarList<number>(this.SubUniqueIDList.bind(this), this.SubUniqueIDList_Length());
}
}

export class CQ_PetCombineT implements flatbuffers.IGeneratedObject {
constructor(
  public MainUniqueIDList: (number)[] = [],
  public SubUniqueIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MainUniqueIDList = CQ_PetCombine.create_MainUniqueIDList_Vector(builder, this.MainUniqueIDList);
  const SubUniqueIDList = CQ_PetCombine.create_SubUniqueIDList_Vector(builder, this.SubUniqueIDList);

  return CQ_PetCombine.createCQ_PetCombine(builder,
    MainUniqueIDList,
    SubUniqueIDList
  );
}
}

export class SA_PetCombine implements flatbuffers.IUnpackableObject<SA_PetCombineT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PetCombine {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PetCombine(bb:flatbuffers.ByteBuffer, obj?:SA_PetCombine):SA_PetCombine {
  return (obj || new SA_PetCombine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PetCombine(bb:flatbuffers.ByteBuffer, obj?:SA_PetCombine):SA_PetCombine {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PetCombine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

DelPetUniqueIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DelPetUniqueIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

NewPetList(index: number, obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

NewPetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PetCombine';
}

static startSA_PetCombine(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_DelPetUniqueIDList(builder:flatbuffers.Builder, DelPetUniqueIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DelPetUniqueIDListOffset, 0);
}

static create_DelPetUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DelPetUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DelPetUniqueIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DelPetUniqueIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_NewPetList(builder:flatbuffers.Builder, NewPetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewPetListOffset, 0);
}

static create_NewPetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_NewPetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_PetCombine(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PetCombine(builder:flatbuffers.Builder, DelPetUniqueIDListOffset:flatbuffers.Offset, NewPetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PetCombine.startSA_PetCombine(builder);
  SA_PetCombine.add_DelPetUniqueIDList(builder, DelPetUniqueIDListOffset);
  SA_PetCombine.add_NewPetList(builder, NewPetListOffset);
  return SA_PetCombine.endSA_PetCombine(builder);
}

unpack(): SA_PetCombineT {
  return new SA_PetCombineT(
    this.bb!.createScalarList<number>(this.DelPetUniqueIDList.bind(this), this.DelPetUniqueIDList_Length()),
    this.bb!.createObjList<PetData, PetDataT>(this.NewPetList.bind(this), this.NewPetList_Length())
  );
}


unpackTo(_o: SA_PetCombineT): void {
  _o.DelPetUniqueIDList = this.bb!.createScalarList<number>(this.DelPetUniqueIDList.bind(this), this.DelPetUniqueIDList_Length());
  _o.NewPetList = this.bb!.createObjList<PetData, PetDataT>(this.NewPetList.bind(this), this.NewPetList_Length());
}
}

export class SA_PetCombineT implements flatbuffers.IGeneratedObject {
constructor(
  public DelPetUniqueIDList: (number)[] = [],
  public NewPetList: (PetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DelPetUniqueIDList = SA_PetCombine.create_DelPetUniqueIDList_Vector(builder, this.DelPetUniqueIDList);
  const NewPetList = SA_PetCombine.create_NewPetList_Vector(builder, builder.createObjectOffsetList(this.NewPetList));

  return SA_PetCombine.createSA_PetCombine(builder,
    DelPetUniqueIDList,
    NewPetList
  );
}
}

export class CQ_PetEquip implements flatbuffers.IUnpackableObject<CQ_PetEquipT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PetEquip {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PetEquip(bb:flatbuffers.ByteBuffer, obj?:CQ_PetEquip):CQ_PetEquip {
  return (obj || new CQ_PetEquip()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PetEquip(bb:flatbuffers.ByteBuffer, obj?:CQ_PetEquip):CQ_PetEquip {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PetEquip()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PetEquip';
}

static startCQ_PetEquip(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(0, BigInt(PetUniqueID), BigInt(0));
}

static endCQ_PetEquip(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PetEquip(builder:flatbuffers.Builder, PetUniqueID:number):flatbuffers.Offset {
  CQ_PetEquip.startCQ_PetEquip(builder);
  CQ_PetEquip.add_PetUniqueID(builder, PetUniqueID);
  return CQ_PetEquip.endCQ_PetEquip(builder);
}

unpack(): CQ_PetEquipT {
  return new CQ_PetEquipT(
    this.PetUniqueID()
  );
}


unpackTo(_o: CQ_PetEquipT): void {
  _o.PetUniqueID = this.PetUniqueID();
}
}

export class CQ_PetEquipT implements flatbuffers.IGeneratedObject {
constructor(
  public PetUniqueID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PetEquip.createCQ_PetEquip(builder,
    this.PetUniqueID
  );
}
}

export class SA_PetEquip implements flatbuffers.IUnpackableObject<SA_PetEquipT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PetEquip {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PetEquip(bb:flatbuffers.ByteBuffer, obj?:SA_PetEquip):SA_PetEquip {
  return (obj || new SA_PetEquip()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PetEquip(bb:flatbuffers.ByteBuffer, obj?:SA_PetEquip):SA_PetEquip {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PetEquip()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PetEquip';
}

static startSA_PetEquip(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(0, BigInt(PetUniqueID), BigInt(0));
}

static endSA_PetEquip(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PetEquip(builder:flatbuffers.Builder, PetUniqueID:number):flatbuffers.Offset {
  SA_PetEquip.startSA_PetEquip(builder);
  SA_PetEquip.add_PetUniqueID(builder, PetUniqueID);
  return SA_PetEquip.endSA_PetEquip(builder);
}

unpack(): SA_PetEquipT {
  return new SA_PetEquipT(
    this.PetUniqueID()
  );
}


unpackTo(_o: SA_PetEquipT): void {
  _o.PetUniqueID = this.PetUniqueID();
}
}

export class SA_PetEquipT implements flatbuffers.IGeneratedObject {
constructor(
  public PetUniqueID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PetEquip.createSA_PetEquip(builder,
    this.PetUniqueID
  );
}
}

export class CQ_PetLock implements flatbuffers.IUnpackableObject<CQ_PetLockT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PetLock {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PetLock(bb:flatbuffers.ByteBuffer, obj?:CQ_PetLock):CQ_PetLock {
  return (obj || new CQ_PetLock()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PetLock(bb:flatbuffers.ByteBuffer, obj?:CQ_PetLock):CQ_PetLock {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PetLock()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PetLock';
}

static startCQ_PetLock(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(0, BigInt(PetUniqueID), BigInt(0));
}

static endCQ_PetLock(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PetLock(builder:flatbuffers.Builder, PetUniqueID:number):flatbuffers.Offset {
  CQ_PetLock.startCQ_PetLock(builder);
  CQ_PetLock.add_PetUniqueID(builder, PetUniqueID);
  return CQ_PetLock.endCQ_PetLock(builder);
}

unpack(): CQ_PetLockT {
  return new CQ_PetLockT(
    this.PetUniqueID()
  );
}


unpackTo(_o: CQ_PetLockT): void {
  _o.PetUniqueID = this.PetUniqueID();
}
}

export class CQ_PetLockT implements flatbuffers.IGeneratedObject {
constructor(
  public PetUniqueID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PetLock.createCQ_PetLock(builder,
    this.PetUniqueID
  );
}
}

export class SA_PetLock implements flatbuffers.IUnpackableObject<SA_PetLockT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PetLock {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PetLock(bb:flatbuffers.ByteBuffer, obj?:SA_PetLock):SA_PetLock {
  return (obj || new SA_PetLock()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PetLock(bb:flatbuffers.ByteBuffer, obj?:SA_PetLock):SA_PetLock {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PetLock()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Pet(obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PetLock';
}

static startSA_PetLock(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Pet(builder:flatbuffers.Builder, PetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PetOffset, 0);
}

static endSA_PetLock(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PetLock(builder:flatbuffers.Builder, PetOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PetLock.startSA_PetLock(builder);
  SA_PetLock.add_Pet(builder, PetOffset);
  return SA_PetLock.endSA_PetLock(builder);
}

unpack(): SA_PetLockT {
  return new SA_PetLockT(
    (this.Pet() !== null ? this.Pet()!.unpack() : null)
  );
}


unpackTo(_o: SA_PetLockT): void {
  _o.Pet = (this.Pet() !== null ? this.Pet()!.unpack() : null);
}
}

export class SA_PetLockT implements flatbuffers.IGeneratedObject {
constructor(
  public Pet: PetDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Pet = (this.Pet !== null ? this.Pet!.pack(builder) : 0);

  return SA_PetLock.createSA_PetLock(builder,
    Pet
  );
}
}

export class CQ_VehicleEquipSlot implements flatbuffers.IUnpackableObject<CQ_VehicleEquipSlotT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_VehicleEquipSlot {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_VehicleEquipSlot(bb:flatbuffers.ByteBuffer, obj?:CQ_VehicleEquipSlot):CQ_VehicleEquipSlot {
  return (obj || new CQ_VehicleEquipSlot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_VehicleEquipSlot(bb:flatbuffers.ByteBuffer, obj?:CQ_VehicleEquipSlot):CQ_VehicleEquipSlot {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_VehicleEquipSlot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

VehicleID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_VehicleEquipSlot';
}

static startCQ_VehicleEquipSlot(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_VehicleID(builder:flatbuffers.Builder, VehicleID:number) {
  builder.addFieldInt32(0, VehicleID, 0);
}

static endCQ_VehicleEquipSlot(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_VehicleEquipSlot(builder:flatbuffers.Builder, VehicleID:number):flatbuffers.Offset {
  CQ_VehicleEquipSlot.startCQ_VehicleEquipSlot(builder);
  CQ_VehicleEquipSlot.add_VehicleID(builder, VehicleID);
  return CQ_VehicleEquipSlot.endCQ_VehicleEquipSlot(builder);
}

unpack(): CQ_VehicleEquipSlotT {
  return new CQ_VehicleEquipSlotT(
    this.VehicleID()
  );
}


unpackTo(_o: CQ_VehicleEquipSlotT): void {
  _o.VehicleID = this.VehicleID();
}
}

export class CQ_VehicleEquipSlotT implements flatbuffers.IGeneratedObject {
constructor(
  public VehicleID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_VehicleEquipSlot.createCQ_VehicleEquipSlot(builder,
    this.VehicleID
  );
}
}

export class SA_VehicleEquipSlot implements flatbuffers.IUnpackableObject<SA_VehicleEquipSlotT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_VehicleEquipSlot {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_VehicleEquipSlot(bb:flatbuffers.ByteBuffer, obj?:SA_VehicleEquipSlot):SA_VehicleEquipSlot {
  return (obj || new SA_VehicleEquipSlot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_VehicleEquipSlot(bb:flatbuffers.ByteBuffer, obj?:SA_VehicleEquipSlot):SA_VehicleEquipSlot {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_VehicleEquipSlot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

VehicleID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_VehicleEquipSlot';
}

static startSA_VehicleEquipSlot(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_VehicleID(builder:flatbuffers.Builder, VehicleID:number) {
  builder.addFieldInt32(0, VehicleID, 0);
}

static endSA_VehicleEquipSlot(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_VehicleEquipSlot(builder:flatbuffers.Builder, VehicleID:number):flatbuffers.Offset {
  SA_VehicleEquipSlot.startSA_VehicleEquipSlot(builder);
  SA_VehicleEquipSlot.add_VehicleID(builder, VehicleID);
  return SA_VehicleEquipSlot.endSA_VehicleEquipSlot(builder);
}

unpack(): SA_VehicleEquipSlotT {
  return new SA_VehicleEquipSlotT(
    this.VehicleID()
  );
}


unpackTo(_o: SA_VehicleEquipSlotT): void {
  _o.VehicleID = this.VehicleID();
}
}

export class SA_VehicleEquipSlotT implements flatbuffers.IGeneratedObject {
constructor(
  public VehicleID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_VehicleEquipSlot.createSA_VehicleEquipSlot(builder,
    this.VehicleID
  );
}
}

export class CQ_RpgAttributeList implements flatbuffers.IUnpackableObject<CQ_RpgAttributeListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgAttributeList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgAttributeList(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgAttributeList):CQ_RpgAttributeList {
  return (obj || new CQ_RpgAttributeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgAttributeList(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgAttributeList):CQ_RpgAttributeList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgAttributeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgAttributeList';
}

static startCQ_RpgAttributeList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_RpgAttributeList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgAttributeList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_RpgAttributeList.startCQ_RpgAttributeList(builder);
  return CQ_RpgAttributeList.endCQ_RpgAttributeList(builder);
}

unpack(): CQ_RpgAttributeListT {
  return new CQ_RpgAttributeListT();
}


unpackTo(_o: CQ_RpgAttributeListT): void {}
}

export class CQ_RpgAttributeListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgAttributeList.createCQ_RpgAttributeList(builder);
}
}

export class SA_RpgAttributeList implements flatbuffers.IUnpackableObject<SA_RpgAttributeListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgAttributeList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgAttributeList(bb:flatbuffers.ByteBuffer, obj?:SA_RpgAttributeList):SA_RpgAttributeList {
  return (obj || new SA_RpgAttributeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgAttributeList(bb:flatbuffers.ByteBuffer, obj?:SA_RpgAttributeList):SA_RpgAttributeList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgAttributeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AttributeList(index: number, obj?:AttributeData):AttributeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AttributeData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

AttributeList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgAttributeList';
}

static startSA_RpgAttributeList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AttributeList(builder:flatbuffers.Builder, AttributeListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AttributeListOffset, 0);
}

static start_AttributeList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_RpgAttributeList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgAttributeList(builder:flatbuffers.Builder, AttributeListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_RpgAttributeList.startSA_RpgAttributeList(builder);
  SA_RpgAttributeList.add_AttributeList(builder, AttributeListOffset);
  return SA_RpgAttributeList.endSA_RpgAttributeList(builder);
}

unpack(): SA_RpgAttributeListT {
  return new SA_RpgAttributeListT(
    this.bb!.createObjList<AttributeData, AttributeDataT>(this.AttributeList.bind(this), this.AttributeList_Length())
  );
}


unpackTo(_o: SA_RpgAttributeListT): void {
  _o.AttributeList = this.bb!.createObjList<AttributeData, AttributeDataT>(this.AttributeList.bind(this), this.AttributeList_Length());
}
}

export class SA_RpgAttributeListT implements flatbuffers.IGeneratedObject {
constructor(
  public AttributeList: (AttributeDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AttributeList = builder.createStructOffsetList(this.AttributeList, SA_RpgAttributeList.start_AttributeList_Vector);

  return SA_RpgAttributeList.createSA_RpgAttributeList(builder,
    AttributeList
  );
}
}

export class CQ_RpgAttributeLearn implements flatbuffers.IUnpackableObject<CQ_RpgAttributeLearnT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgAttributeLearn {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgAttributeLearn(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgAttributeLearn):CQ_RpgAttributeLearn {
  return (obj || new CQ_RpgAttributeLearn()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgAttributeLearn(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgAttributeLearn):CQ_RpgAttributeLearn {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgAttributeLearn()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AttributeID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgAttributeLearn';
}

static startCQ_RpgAttributeLearn(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AttributeID(builder:flatbuffers.Builder, AttributeID:number) {
  builder.addFieldInt32(0, AttributeID, 0);
}

static endCQ_RpgAttributeLearn(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgAttributeLearn(builder:flatbuffers.Builder, AttributeID:number):flatbuffers.Offset {
  CQ_RpgAttributeLearn.startCQ_RpgAttributeLearn(builder);
  CQ_RpgAttributeLearn.add_AttributeID(builder, AttributeID);
  return CQ_RpgAttributeLearn.endCQ_RpgAttributeLearn(builder);
}

unpack(): CQ_RpgAttributeLearnT {
  return new CQ_RpgAttributeLearnT(
    this.AttributeID()
  );
}


unpackTo(_o: CQ_RpgAttributeLearnT): void {
  _o.AttributeID = this.AttributeID();
}
}

export class CQ_RpgAttributeLearnT implements flatbuffers.IGeneratedObject {
constructor(
  public AttributeID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgAttributeLearn.createCQ_RpgAttributeLearn(builder,
    this.AttributeID
  );
}
}

export class SA_RpgAttributeLearn implements flatbuffers.IUnpackableObject<SA_RpgAttributeLearnT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgAttributeLearn {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgAttributeLearn(bb:flatbuffers.ByteBuffer, obj?:SA_RpgAttributeLearn):SA_RpgAttributeLearn {
  return (obj || new SA_RpgAttributeLearn()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgAttributeLearn(bb:flatbuffers.ByteBuffer, obj?:SA_RpgAttributeLearn):SA_RpgAttributeLearn {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgAttributeLearn()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Attribute(obj?:AttributeData):AttributeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AttributeData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgAttributeLearn';
}

static startSA_RpgAttributeLearn(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Attribute(builder:flatbuffers.Builder, AttributeOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, AttributeOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_RpgAttributeLearn(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgAttributeLearn(builder:flatbuffers.Builder, AttributeOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_RpgAttributeLearn.startSA_RpgAttributeLearn(builder);
  SA_RpgAttributeLearn.add_Attribute(builder, AttributeOffset);
  SA_RpgAttributeLearn.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_RpgAttributeLearn.endSA_RpgAttributeLearn(builder);
}

unpack(): SA_RpgAttributeLearnT {
  return new SA_RpgAttributeLearnT(
    (this.Attribute() !== null ? this.Attribute()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_RpgAttributeLearnT): void {
  _o.Attribute = (this.Attribute() !== null ? this.Attribute()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_RpgAttributeLearnT implements flatbuffers.IGeneratedObject {
constructor(
  public Attribute: AttributeDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_RpgAttributeLearn.start_ChangeAssetList_Vector);

  return SA_RpgAttributeLearn.createSA_RpgAttributeLearn(builder,
    (this.Attribute !== null ? this.Attribute!.pack(builder) : 0),
    ChangeAssetList
  );
}
}

export class CQ_ArtifactList implements flatbuffers.IUnpackableObject<CQ_ArtifactListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ArtifactList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ArtifactList(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactList):CQ_ArtifactList {
  return (obj || new CQ_ArtifactList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ArtifactList(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactList):CQ_ArtifactList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ArtifactList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ArtifactList';
}

static startCQ_ArtifactList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ArtifactList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ArtifactList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ArtifactList.startCQ_ArtifactList(builder);
  return CQ_ArtifactList.endCQ_ArtifactList(builder);
}

unpack(): CQ_ArtifactListT {
  return new CQ_ArtifactListT();
}


unpackTo(_o: CQ_ArtifactListT): void {}
}

export class CQ_ArtifactListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ArtifactList.createCQ_ArtifactList(builder);
}
}

export class SA_ArtifactList implements flatbuffers.IUnpackableObject<SA_ArtifactListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ArtifactList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ArtifactList(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactList):SA_ArtifactList {
  return (obj || new SA_ArtifactList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ArtifactList(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactList):SA_ArtifactList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ArtifactList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

ArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ArtifactList';
}

static startSA_ArtifactList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ArtifactList(builder:flatbuffers.Builder, ArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ArtifactListOffset, 0);
}

static start_ArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static endSA_ArtifactList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ArtifactList(builder:flatbuffers.Builder, ArtifactListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ArtifactList.startSA_ArtifactList(builder);
  SA_ArtifactList.add_ArtifactList(builder, ArtifactListOffset);
  return SA_ArtifactList.endSA_ArtifactList(builder);
}

unpack(): SA_ArtifactListT {
  return new SA_ArtifactListT(
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ArtifactList.bind(this), this.ArtifactList_Length())
  );
}


unpackTo(_o: SA_ArtifactListT): void {
  _o.ArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ArtifactList.bind(this), this.ArtifactList_Length());
}
}

export class SA_ArtifactListT implements flatbuffers.IGeneratedObject {
constructor(
  public ArtifactList: (ArtifactDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ArtifactList = builder.createStructOffsetList(this.ArtifactList, SA_ArtifactList.start_ArtifactList_Vector);

  return SA_ArtifactList.createSA_ArtifactList(builder,
    ArtifactList
  );
}
}

export class CQ_ArtifactEnhance implements flatbuffers.IUnpackableObject<CQ_ArtifactEnhanceT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ArtifactEnhance {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ArtifactEnhance(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactEnhance):CQ_ArtifactEnhance {
  return (obj || new CQ_ArtifactEnhance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ArtifactEnhance(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactEnhance):CQ_ArtifactEnhance {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ArtifactEnhance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ArtifactID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ArtifactEnhance';
}

static startCQ_ArtifactEnhance(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ArtifactID(builder:flatbuffers.Builder, ArtifactID:number) {
  builder.addFieldInt32(0, ArtifactID, 0);
}

static endCQ_ArtifactEnhance(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ArtifactEnhance(builder:flatbuffers.Builder, ArtifactID:number):flatbuffers.Offset {
  CQ_ArtifactEnhance.startCQ_ArtifactEnhance(builder);
  CQ_ArtifactEnhance.add_ArtifactID(builder, ArtifactID);
  return CQ_ArtifactEnhance.endCQ_ArtifactEnhance(builder);
}

unpack(): CQ_ArtifactEnhanceT {
  return new CQ_ArtifactEnhanceT(
    this.ArtifactID()
  );
}


unpackTo(_o: CQ_ArtifactEnhanceT): void {
  _o.ArtifactID = this.ArtifactID();
}
}

export class CQ_ArtifactEnhanceT implements flatbuffers.IGeneratedObject {
constructor(
  public ArtifactID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ArtifactEnhance.createCQ_ArtifactEnhance(builder,
    this.ArtifactID
  );
}
}

export class SA_ArtifactEnhance implements flatbuffers.IUnpackableObject<SA_ArtifactEnhanceT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ArtifactEnhance {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ArtifactEnhance(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactEnhance):SA_ArtifactEnhance {
  return (obj || new SA_ArtifactEnhance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ArtifactEnhance(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactEnhance):SA_ArtifactEnhance {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ArtifactEnhance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeArtifact(obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ArtifactData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ArtifactEnhance';
}

static startSA_ArtifactEnhance(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChangeArtifact(builder:flatbuffers.Builder, ChangeArtifactOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, ChangeArtifactOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_ArtifactEnhance(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ArtifactEnhance(builder:flatbuffers.Builder, ChangeArtifactOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ArtifactEnhance.startSA_ArtifactEnhance(builder);
  SA_ArtifactEnhance.add_ChangeArtifact(builder, ChangeArtifactOffset);
  SA_ArtifactEnhance.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_ArtifactEnhance.endSA_ArtifactEnhance(builder);
}

unpack(): SA_ArtifactEnhanceT {
  return new SA_ArtifactEnhanceT(
    (this.ChangeArtifact() !== null ? this.ChangeArtifact()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_ArtifactEnhanceT): void {
  _o.ChangeArtifact = (this.ChangeArtifact() !== null ? this.ChangeArtifact()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_ArtifactEnhanceT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeArtifact: ArtifactDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_ArtifactEnhance.start_ChangeAssetList_Vector);

  return SA_ArtifactEnhance.createSA_ArtifactEnhance(builder,
    (this.ChangeArtifact !== null ? this.ChangeArtifact!.pack(builder) : 0),
    ChangeAssetList
  );
}
}

export class CQ_ArtifactDeckList implements flatbuffers.IUnpackableObject<CQ_ArtifactDeckListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ArtifactDeckList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ArtifactDeckList(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactDeckList):CQ_ArtifactDeckList {
  return (obj || new CQ_ArtifactDeckList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ArtifactDeckList(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactDeckList):CQ_ArtifactDeckList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ArtifactDeckList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ArtifactDeckList';
}

static startCQ_ArtifactDeckList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ArtifactDeckList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ArtifactDeckList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ArtifactDeckList.startCQ_ArtifactDeckList(builder);
  return CQ_ArtifactDeckList.endCQ_ArtifactDeckList(builder);
}

unpack(): CQ_ArtifactDeckListT {
  return new CQ_ArtifactDeckListT();
}


unpackTo(_o: CQ_ArtifactDeckListT): void {}
}

export class CQ_ArtifactDeckListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ArtifactDeckList.createCQ_ArtifactDeckList(builder);
}
}

export class SA_ArtifactDeckList implements flatbuffers.IUnpackableObject<SA_ArtifactDeckListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ArtifactDeckList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ArtifactDeckList(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactDeckList):SA_ArtifactDeckList {
  return (obj || new SA_ArtifactDeckList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ArtifactDeckList(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactDeckList):SA_ArtifactDeckList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ArtifactDeckList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PresetList(index: number, obj?:ArtifactDeckData):ArtifactDeckData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ArtifactDeckData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

PresetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ArtifactDeckList';
}

static startSA_ArtifactDeckList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PresetList(builder:flatbuffers.Builder, PresetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PresetListOffset, 0);
}

static create_PresetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_PresetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_ArtifactDeckList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ArtifactDeckList(builder:flatbuffers.Builder, PresetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ArtifactDeckList.startSA_ArtifactDeckList(builder);
  SA_ArtifactDeckList.add_PresetList(builder, PresetListOffset);
  return SA_ArtifactDeckList.endSA_ArtifactDeckList(builder);
}

unpack(): SA_ArtifactDeckListT {
  return new SA_ArtifactDeckListT(
    this.bb!.createObjList<ArtifactDeckData, ArtifactDeckDataT>(this.PresetList.bind(this), this.PresetList_Length())
  );
}


unpackTo(_o: SA_ArtifactDeckListT): void {
  _o.PresetList = this.bb!.createObjList<ArtifactDeckData, ArtifactDeckDataT>(this.PresetList.bind(this), this.PresetList_Length());
}
}

export class SA_ArtifactDeckListT implements flatbuffers.IGeneratedObject {
constructor(
  public PresetList: (ArtifactDeckDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetList = SA_ArtifactDeckList.create_PresetList_Vector(builder, builder.createObjectOffsetList(this.PresetList));

  return SA_ArtifactDeckList.createSA_ArtifactDeckList(builder,
    PresetList
  );
}
}

export class CQ_ArtifactDeckSave implements flatbuffers.IUnpackableObject<CQ_ArtifactDeckSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ArtifactDeckSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ArtifactDeckSave(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactDeckSave):CQ_ArtifactDeckSave {
  return (obj || new CQ_ArtifactDeckSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ArtifactDeckSave(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactDeckSave):CQ_ArtifactDeckSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ArtifactDeckSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ArtifactDeck(obj?:ArtifactDeckData):ArtifactDeckData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ArtifactDeckData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ArtifactDeckSave';
}

static startCQ_ArtifactDeckSave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ArtifactDeck(builder:flatbuffers.Builder, ArtifactDeckOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ArtifactDeckOffset, 0);
}

static endCQ_ArtifactDeckSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ArtifactDeckSave(builder:flatbuffers.Builder, ArtifactDeckOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ArtifactDeckSave.startCQ_ArtifactDeckSave(builder);
  CQ_ArtifactDeckSave.add_ArtifactDeck(builder, ArtifactDeckOffset);
  return CQ_ArtifactDeckSave.endCQ_ArtifactDeckSave(builder);
}

unpack(): CQ_ArtifactDeckSaveT {
  return new CQ_ArtifactDeckSaveT(
    (this.ArtifactDeck() !== null ? this.ArtifactDeck()!.unpack() : null)
  );
}


unpackTo(_o: CQ_ArtifactDeckSaveT): void {
  _o.ArtifactDeck = (this.ArtifactDeck() !== null ? this.ArtifactDeck()!.unpack() : null);
}
}

export class CQ_ArtifactDeckSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public ArtifactDeck: ArtifactDeckDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ArtifactDeck = (this.ArtifactDeck !== null ? this.ArtifactDeck!.pack(builder) : 0);

  return CQ_ArtifactDeckSave.createCQ_ArtifactDeckSave(builder,
    ArtifactDeck
  );
}
}

export class SA_ArtifactDeckSave implements flatbuffers.IUnpackableObject<SA_ArtifactDeckSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ArtifactDeckSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ArtifactDeckSave(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactDeckSave):SA_ArtifactDeckSave {
  return (obj || new SA_ArtifactDeckSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ArtifactDeckSave(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactDeckSave):SA_ArtifactDeckSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ArtifactDeckSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ArtifactDeck(obj?:ArtifactDeckData):ArtifactDeckData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ArtifactDeckData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ArtifactDeckSave';
}

static startSA_ArtifactDeckSave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ArtifactDeck(builder:flatbuffers.Builder, ArtifactDeckOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ArtifactDeckOffset, 0);
}

static endSA_ArtifactDeckSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ArtifactDeckSave(builder:flatbuffers.Builder, ArtifactDeckOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ArtifactDeckSave.startSA_ArtifactDeckSave(builder);
  SA_ArtifactDeckSave.add_ArtifactDeck(builder, ArtifactDeckOffset);
  return SA_ArtifactDeckSave.endSA_ArtifactDeckSave(builder);
}

unpack(): SA_ArtifactDeckSaveT {
  return new SA_ArtifactDeckSaveT(
    (this.ArtifactDeck() !== null ? this.ArtifactDeck()!.unpack() : null)
  );
}


unpackTo(_o: SA_ArtifactDeckSaveT): void {
  _o.ArtifactDeck = (this.ArtifactDeck() !== null ? this.ArtifactDeck()!.unpack() : null);
}
}

export class SA_ArtifactDeckSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public ArtifactDeck: ArtifactDeckDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ArtifactDeck = (this.ArtifactDeck !== null ? this.ArtifactDeck!.pack(builder) : 0);

  return SA_ArtifactDeckSave.createSA_ArtifactDeckSave(builder,
    ArtifactDeck
  );
}
}

export class CQ_ArtifactDeckSlotBuy implements flatbuffers.IUnpackableObject<CQ_ArtifactDeckSlotBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ArtifactDeckSlotBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ArtifactDeckSlotBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactDeckSlotBuy):CQ_ArtifactDeckSlotBuy {
  return (obj || new CQ_ArtifactDeckSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ArtifactDeckSlotBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_ArtifactDeckSlotBuy):CQ_ArtifactDeckSlotBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ArtifactDeckSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ArtifactDeckSlotBuy';
}

static startCQ_ArtifactDeckSlotBuy(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ArtifactDeckSlotBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ArtifactDeckSlotBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ArtifactDeckSlotBuy.startCQ_ArtifactDeckSlotBuy(builder);
  return CQ_ArtifactDeckSlotBuy.endCQ_ArtifactDeckSlotBuy(builder);
}

unpack(): CQ_ArtifactDeckSlotBuyT {
  return new CQ_ArtifactDeckSlotBuyT();
}


unpackTo(_o: CQ_ArtifactDeckSlotBuyT): void {}
}

export class CQ_ArtifactDeckSlotBuyT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ArtifactDeckSlotBuy.createCQ_ArtifactDeckSlotBuy(builder);
}
}

export class SA_ArtifactDeckSlotBuy implements flatbuffers.IUnpackableObject<SA_ArtifactDeckSlotBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ArtifactDeckSlotBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ArtifactDeckSlotBuy(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactDeckSlotBuy):SA_ArtifactDeckSlotBuy {
  return (obj || new SA_ArtifactDeckSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ArtifactDeckSlotBuy(bb:flatbuffers.ByteBuffer, obj?:SA_ArtifactDeckSlotBuy):SA_ArtifactDeckSlotBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ArtifactDeckSlotBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AddArtifactDeckCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ArtifactDeckSlotBuy';
}

static startSA_ArtifactDeckSlotBuy(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_AddArtifactDeckCount(builder:flatbuffers.Builder, AddArtifactDeckCount:number) {
  builder.addFieldInt32(0, AddArtifactDeckCount, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_ArtifactDeckSlotBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ArtifactDeckSlotBuy(builder:flatbuffers.Builder, AddArtifactDeckCount:number, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ArtifactDeckSlotBuy.startSA_ArtifactDeckSlotBuy(builder);
  SA_ArtifactDeckSlotBuy.add_AddArtifactDeckCount(builder, AddArtifactDeckCount);
  SA_ArtifactDeckSlotBuy.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_ArtifactDeckSlotBuy.endSA_ArtifactDeckSlotBuy(builder);
}

unpack(): SA_ArtifactDeckSlotBuyT {
  return new SA_ArtifactDeckSlotBuyT(
    this.AddArtifactDeckCount(),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_ArtifactDeckSlotBuyT): void {
  _o.AddArtifactDeckCount = this.AddArtifactDeckCount();
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_ArtifactDeckSlotBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public AddArtifactDeckCount: number = 0,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_ArtifactDeckSlotBuy.start_ChangeAssetList_Vector);

  return SA_ArtifactDeckSlotBuy.createSA_ArtifactDeckSlotBuy(builder,
    this.AddArtifactDeckCount,
    ChangeAssetList
  );
}
}

export class CQ_CheatChangeUserState implements flatbuffers.IUnpackableObject<CQ_CheatChangeUserStateT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CheatChangeUserState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CheatChangeUserState(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatChangeUserState):CQ_CheatChangeUserState {
  return (obj || new CQ_CheatChangeUserState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CheatChangeUserState(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatChangeUserState):CQ_CheatChangeUserState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CheatChangeUserState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UserState():EUserState {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EUserState.None;
}

IsSetRedis():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

IsSendToFriends():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CheatChangeUserState';
}

static startCQ_CheatChangeUserState(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_UserState(builder:flatbuffers.Builder, UserState:EUserState) {
  builder.addFieldInt8(0, UserState, EUserState.None);
}

static add_IsSetRedis(builder:flatbuffers.Builder, IsSetRedis:boolean) {
  builder.addFieldInt8(1, +IsSetRedis, +false);
}

static add_IsSendToFriends(builder:flatbuffers.Builder, IsSendToFriends:boolean) {
  builder.addFieldInt8(2, +IsSendToFriends, +false);
}

static endCQ_CheatChangeUserState(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CheatChangeUserState(builder:flatbuffers.Builder, UserState:EUserState, IsSetRedis:boolean, IsSendToFriends:boolean):flatbuffers.Offset {
  CQ_CheatChangeUserState.startCQ_CheatChangeUserState(builder);
  CQ_CheatChangeUserState.add_UserState(builder, UserState);
  CQ_CheatChangeUserState.add_IsSetRedis(builder, IsSetRedis);
  CQ_CheatChangeUserState.add_IsSendToFriends(builder, IsSendToFriends);
  return CQ_CheatChangeUserState.endCQ_CheatChangeUserState(builder);
}

unpack(): CQ_CheatChangeUserStateT {
  return new CQ_CheatChangeUserStateT(
    this.UserState(),
    this.IsSetRedis(),
    this.IsSendToFriends()
  );
}


unpackTo(_o: CQ_CheatChangeUserStateT): void {
  _o.UserState = this.UserState();
  _o.IsSetRedis = this.IsSetRedis();
  _o.IsSendToFriends = this.IsSendToFriends();
}
}

export class CQ_CheatChangeUserStateT implements flatbuffers.IGeneratedObject {
constructor(
  public UserState: EUserState = EUserState.None,
  public IsSetRedis: boolean = false,
  public IsSendToFriends: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CheatChangeUserState.createCQ_CheatChangeUserState(builder,
    this.UserState,
    this.IsSetRedis,
    this.IsSendToFriends
  );
}
}

export class SA_CheatChangeUserState implements flatbuffers.IUnpackableObject<SA_CheatChangeUserStateT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CheatChangeUserState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CheatChangeUserState(bb:flatbuffers.ByteBuffer, obj?:SA_CheatChangeUserState):SA_CheatChangeUserState {
  return (obj || new SA_CheatChangeUserState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CheatChangeUserState(bb:flatbuffers.ByteBuffer, obj?:SA_CheatChangeUserState):SA_CheatChangeUserState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CheatChangeUserState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CheatChangeUserState';
}

static startSA_CheatChangeUserState(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_CheatChangeUserState(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CheatChangeUserState(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_CheatChangeUserState.startSA_CheatChangeUserState(builder);
  return SA_CheatChangeUserState.endSA_CheatChangeUserState(builder);
}

unpack(): SA_CheatChangeUserStateT {
  return new SA_CheatChangeUserStateT();
}


unpackTo(_o: SA_CheatChangeUserStateT): void {}
}

export class SA_CheatChangeUserStateT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CheatChangeUserState.createSA_CheatChangeUserState(builder);
}
}

export class CQ_CheatSendSystemMail implements flatbuffers.IUnpackableObject<CQ_CheatSendSystemMailT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CheatSendSystemMail {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CheatSendSystemMail(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatSendSystemMail):CQ_CheatSendSystemMail {
  return (obj || new CQ_CheatSendSystemMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CheatSendSystemMail(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatSendSystemMail):CQ_CheatSendSystemMail {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CheatSendSystemMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

TableID():string|null
TableID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TableID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RewardList(index: number, obj?:MailRewardInfo):MailRewardInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new MailRewardInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

RewardList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CheatSendSystemMail';
}

static startCQ_CheatSendSystemMail(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_TableID(builder:flatbuffers.Builder, TableIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TableIDOffset, 0);
}

static add_RewardList(builder:flatbuffers.Builder, RewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RewardListOffset, 0);
}

static start_RewardList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endCQ_CheatSendSystemMail(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CheatSendSystemMail(builder:flatbuffers.Builder, TargetUID:number, TableIDOffset:flatbuffers.Offset, RewardListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_CheatSendSystemMail.startCQ_CheatSendSystemMail(builder);
  CQ_CheatSendSystemMail.add_TargetUID(builder, TargetUID);
  CQ_CheatSendSystemMail.add_TableID(builder, TableIDOffset);
  CQ_CheatSendSystemMail.add_RewardList(builder, RewardListOffset);
  return CQ_CheatSendSystemMail.endCQ_CheatSendSystemMail(builder);
}

unpack(): CQ_CheatSendSystemMailT {
  return new CQ_CheatSendSystemMailT(
    this.TargetUID(),
    this.TableID(),
    this.bb!.createObjList<MailRewardInfo, MailRewardInfoT>(this.RewardList.bind(this), this.RewardList_Length())
  );
}


unpackTo(_o: CQ_CheatSendSystemMailT): void {
  _o.TargetUID = this.TargetUID();
  _o.TableID = this.TableID();
  _o.RewardList = this.bb!.createObjList<MailRewardInfo, MailRewardInfoT>(this.RewardList.bind(this), this.RewardList_Length());
}
}

export class CQ_CheatSendSystemMailT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public TableID: string|Uint8Array|null = null,
  public RewardList: (MailRewardInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TableID = (this.TableID !== null ? builder.createString(this.TableID!) : 0);
  const RewardList = builder.createStructOffsetList(this.RewardList, CQ_CheatSendSystemMail.start_RewardList_Vector);

  return CQ_CheatSendSystemMail.createCQ_CheatSendSystemMail(builder,
    this.TargetUID,
    TableID,
    RewardList
  );
}
}

export class SA_CheatSendSystemMail implements flatbuffers.IUnpackableObject<SA_CheatSendSystemMailT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CheatSendSystemMail {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CheatSendSystemMail(bb:flatbuffers.ByteBuffer, obj?:SA_CheatSendSystemMail):SA_CheatSendSystemMail {
  return (obj || new SA_CheatSendSystemMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CheatSendSystemMail(bb:flatbuffers.ByteBuffer, obj?:SA_CheatSendSystemMail):SA_CheatSendSystemMail {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CheatSendSystemMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MailID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CheatSendSystemMail';
}

static startSA_CheatSendSystemMail(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_MailID(builder:flatbuffers.Builder, MailID:number) {
  builder.addFieldInt64(1, BigInt(MailID), BigInt(0));
}

static endSA_CheatSendSystemMail(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CheatSendSystemMail(builder:flatbuffers.Builder, TargetUID:number, MailID:number):flatbuffers.Offset {
  SA_CheatSendSystemMail.startSA_CheatSendSystemMail(builder);
  SA_CheatSendSystemMail.add_TargetUID(builder, TargetUID);
  SA_CheatSendSystemMail.add_MailID(builder, MailID);
  return SA_CheatSendSystemMail.endSA_CheatSendSystemMail(builder);
}

unpack(): SA_CheatSendSystemMailT {
  return new SA_CheatSendSystemMailT(
    this.TargetUID(),
    this.MailID()
  );
}


unpackTo(_o: SA_CheatSendSystemMailT): void {
  _o.TargetUID = this.TargetUID();
  _o.MailID = this.MailID();
}
}

export class SA_CheatSendSystemMailT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public MailID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CheatSendSystemMail.createSA_CheatSendSystemMail(builder,
    this.TargetUID,
    this.MailID
  );
}
}

export class CQ_CheatSendOpMail implements flatbuffers.IUnpackableObject<CQ_CheatSendOpMailT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CheatSendOpMail {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CheatSendOpMail(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatSendOpMail):CQ_CheatSendOpMail {
  return (obj || new CQ_CheatSendOpMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CheatSendOpMail(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatSendOpMail):CQ_CheatSendOpMail {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CheatSendOpMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Title():string|null
Title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

ExpireTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardList(index: number, obj?:MailRewardInfo):MailRewardInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new MailRewardInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

RewardList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CheatSendOpMail';
}

static startCQ_CheatSendOpMail(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_Title(builder:flatbuffers.Builder, TitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TitleOffset, 0);
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MessageOffset, 0);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(3, +IsBM, +false);
}

static add_ExpireTime(builder:flatbuffers.Builder, ExpireTime:number) {
  builder.addFieldInt32(4, ExpireTime, 0);
}

static add_RewardList(builder:flatbuffers.Builder, RewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, RewardListOffset, 0);
}

static start_RewardList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endCQ_CheatSendOpMail(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CheatSendOpMail(builder:flatbuffers.Builder, TargetUID:number, TitleOffset:flatbuffers.Offset, MessageOffset:flatbuffers.Offset, IsBM:boolean, ExpireTime:number, RewardListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_CheatSendOpMail.startCQ_CheatSendOpMail(builder);
  CQ_CheatSendOpMail.add_TargetUID(builder, TargetUID);
  CQ_CheatSendOpMail.add_Title(builder, TitleOffset);
  CQ_CheatSendOpMail.add_Message(builder, MessageOffset);
  CQ_CheatSendOpMail.add_IsBM(builder, IsBM);
  CQ_CheatSendOpMail.add_ExpireTime(builder, ExpireTime);
  CQ_CheatSendOpMail.add_RewardList(builder, RewardListOffset);
  return CQ_CheatSendOpMail.endCQ_CheatSendOpMail(builder);
}

unpack(): CQ_CheatSendOpMailT {
  return new CQ_CheatSendOpMailT(
    this.TargetUID(),
    this.Title(),
    this.Message(),
    this.IsBM(),
    this.ExpireTime(),
    this.bb!.createObjList<MailRewardInfo, MailRewardInfoT>(this.RewardList.bind(this), this.RewardList_Length())
  );
}


unpackTo(_o: CQ_CheatSendOpMailT): void {
  _o.TargetUID = this.TargetUID();
  _o.Title = this.Title();
  _o.Message = this.Message();
  _o.IsBM = this.IsBM();
  _o.ExpireTime = this.ExpireTime();
  _o.RewardList = this.bb!.createObjList<MailRewardInfo, MailRewardInfoT>(this.RewardList.bind(this), this.RewardList_Length());
}
}

export class CQ_CheatSendOpMailT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public Title: string|Uint8Array|null = null,
  public Message: string|Uint8Array|null = null,
  public IsBM: boolean = false,
  public ExpireTime: number = 0,
  public RewardList: (MailRewardInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Title = (this.Title !== null ? builder.createString(this.Title!) : 0);
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);
  const RewardList = builder.createStructOffsetList(this.RewardList, CQ_CheatSendOpMail.start_RewardList_Vector);

  return CQ_CheatSendOpMail.createCQ_CheatSendOpMail(builder,
    this.TargetUID,
    Title,
    Message,
    this.IsBM,
    this.ExpireTime,
    RewardList
  );
}
}

export class SA_CheatSendOpMail implements flatbuffers.IUnpackableObject<SA_CheatSendOpMailT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CheatSendOpMail {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CheatSendOpMail(bb:flatbuffers.ByteBuffer, obj?:SA_CheatSendOpMail):SA_CheatSendOpMail {
  return (obj || new SA_CheatSendOpMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CheatSendOpMail(bb:flatbuffers.ByteBuffer, obj?:SA_CheatSendOpMail):SA_CheatSendOpMail {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CheatSendOpMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MailID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CheatSendOpMail';
}

static startSA_CheatSendOpMail(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_MailID(builder:flatbuffers.Builder, MailID:number) {
  builder.addFieldInt64(1, BigInt(MailID), BigInt(0));
}

static endSA_CheatSendOpMail(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CheatSendOpMail(builder:flatbuffers.Builder, TargetUID:number, MailID:number):flatbuffers.Offset {
  SA_CheatSendOpMail.startSA_CheatSendOpMail(builder);
  SA_CheatSendOpMail.add_TargetUID(builder, TargetUID);
  SA_CheatSendOpMail.add_MailID(builder, MailID);
  return SA_CheatSendOpMail.endSA_CheatSendOpMail(builder);
}

unpack(): SA_CheatSendOpMailT {
  return new SA_CheatSendOpMailT(
    this.TargetUID(),
    this.MailID()
  );
}


unpackTo(_o: SA_CheatSendOpMailT): void {
  _o.TargetUID = this.TargetUID();
  _o.MailID = this.MailID();
}
}

export class SA_CheatSendOpMailT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public MailID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CheatSendOpMail.createSA_CheatSendOpMail(builder,
    this.TargetUID,
    this.MailID
  );
}
}

export class CQ_CheatSeasonPassBuy implements flatbuffers.IUnpackableObject<CQ_CheatSeasonPassBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CheatSeasonPassBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CheatSeasonPassBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatSeasonPassBuy):CQ_CheatSeasonPassBuy {
  return (obj || new CQ_CheatSeasonPassBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CheatSeasonPassBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatSeasonPassBuy):CQ_CheatSeasonPassBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CheatSeasonPassBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CheatSeasonPassBuy';
}

static startCQ_CheatSeasonPassBuy(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_CheatSeasonPassBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CheatSeasonPassBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_CheatSeasonPassBuy.startCQ_CheatSeasonPassBuy(builder);
  return CQ_CheatSeasonPassBuy.endCQ_CheatSeasonPassBuy(builder);
}

unpack(): CQ_CheatSeasonPassBuyT {
  return new CQ_CheatSeasonPassBuyT();
}


unpackTo(_o: CQ_CheatSeasonPassBuyT): void {}
}

export class CQ_CheatSeasonPassBuyT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CheatSeasonPassBuy.createCQ_CheatSeasonPassBuy(builder);
}
}

export class SA_CheatSeasonPassBuy implements flatbuffers.IUnpackableObject<SA_CheatSeasonPassBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CheatSeasonPassBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CheatSeasonPassBuy(bb:flatbuffers.ByteBuffer, obj?:SA_CheatSeasonPassBuy):SA_CheatSeasonPassBuy {
  return (obj || new SA_CheatSeasonPassBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CheatSeasonPassBuy(bb:flatbuffers.ByteBuffer, obj?:SA_CheatSeasonPassBuy):SA_CheatSeasonPassBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CheatSeasonPassBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPass(obj?:SeasonPassData):SeasonPassData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SeasonPassData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CheatSeasonPassBuy';
}

static startSA_CheatSeasonPassBuy(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SeasonPass(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SeasonPassOffset, 0);
}

static endSA_CheatSeasonPassBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CheatSeasonPassBuy(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CheatSeasonPassBuy.startSA_CheatSeasonPassBuy(builder);
  SA_CheatSeasonPassBuy.add_SeasonPass(builder, SeasonPassOffset);
  return SA_CheatSeasonPassBuy.endSA_CheatSeasonPassBuy(builder);
}

unpack(): SA_CheatSeasonPassBuyT {
  return new SA_CheatSeasonPassBuyT(
    (this.SeasonPass() !== null ? this.SeasonPass()!.unpack() : null)
  );
}


unpackTo(_o: SA_CheatSeasonPassBuyT): void {
  _o.SeasonPass = (this.SeasonPass() !== null ? this.SeasonPass()!.unpack() : null);
}
}

export class SA_CheatSeasonPassBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPass: SeasonPassDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SeasonPass = (this.SeasonPass !== null ? this.SeasonPass!.pack(builder) : 0);

  return SA_CheatSeasonPassBuy.createSA_CheatSeasonPassBuy(builder,
    SeasonPass
  );
}
}

export class CQ_CheatPenaltySet implements flatbuffers.IUnpackableObject<CQ_CheatPenaltySetT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CheatPenaltySet {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CheatPenaltySet(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatPenaltySet):CQ_CheatPenaltySet {
  return (obj || new CQ_CheatPenaltySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CheatPenaltySet(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatPenaltySet):CQ_CheatPenaltySet {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CheatPenaltySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ReportState():EPenaltyReportState {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EPenaltyReportState.None;
}

PenaltyGrade():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CheatPenaltySet';
}

static startCQ_CheatPenaltySet(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ReportState(builder:flatbuffers.Builder, ReportState:EPenaltyReportState) {
  builder.addFieldInt8(0, ReportState, EPenaltyReportState.None);
}

static add_PenaltyGrade(builder:flatbuffers.Builder, PenaltyGrade:number) {
  builder.addFieldInt8(1, PenaltyGrade, 0);
}

static endCQ_CheatPenaltySet(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CheatPenaltySet(builder:flatbuffers.Builder, ReportState:EPenaltyReportState, PenaltyGrade:number):flatbuffers.Offset {
  CQ_CheatPenaltySet.startCQ_CheatPenaltySet(builder);
  CQ_CheatPenaltySet.add_ReportState(builder, ReportState);
  CQ_CheatPenaltySet.add_PenaltyGrade(builder, PenaltyGrade);
  return CQ_CheatPenaltySet.endCQ_CheatPenaltySet(builder);
}

unpack(): CQ_CheatPenaltySetT {
  return new CQ_CheatPenaltySetT(
    this.ReportState(),
    this.PenaltyGrade()
  );
}


unpackTo(_o: CQ_CheatPenaltySetT): void {
  _o.ReportState = this.ReportState();
  _o.PenaltyGrade = this.PenaltyGrade();
}
}

export class CQ_CheatPenaltySetT implements flatbuffers.IGeneratedObject {
constructor(
  public ReportState: EPenaltyReportState = EPenaltyReportState.None,
  public PenaltyGrade: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CheatPenaltySet.createCQ_CheatPenaltySet(builder,
    this.ReportState,
    this.PenaltyGrade
  );
}
}

export class SA_CheatPenaltySet implements flatbuffers.IUnpackableObject<SA_CheatPenaltySetT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CheatPenaltySet {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CheatPenaltySet(bb:flatbuffers.ByteBuffer, obj?:SA_CheatPenaltySet):SA_CheatPenaltySet {
  return (obj || new SA_CheatPenaltySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CheatPenaltySet(bb:flatbuffers.ByteBuffer, obj?:SA_CheatPenaltySet):SA_CheatPenaltySet {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CheatPenaltySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PenaltyList(index: number, obj?:PenaltyInfo):PenaltyInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PenaltyInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;
}

PenaltyList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

NewNick():string|null
NewNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NewNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CheatPenaltySet';
}

static startSA_CheatPenaltySet(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PenaltyList(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PenaltyListOffset, 0);
}

static start_PenaltyList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(24, numElems, 4);
}

static add_NewNick(builder:flatbuffers.Builder, NewNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewNickOffset, 0);
}

static endSA_CheatPenaltySet(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CheatPenaltySet(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset, NewNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CheatPenaltySet.startSA_CheatPenaltySet(builder);
  SA_CheatPenaltySet.add_PenaltyList(builder, PenaltyListOffset);
  SA_CheatPenaltySet.add_NewNick(builder, NewNickOffset);
  return SA_CheatPenaltySet.endSA_CheatPenaltySet(builder);
}

unpack(): SA_CheatPenaltySetT {
  return new SA_CheatPenaltySetT(
    this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length()),
    this.NewNick()
  );
}


unpackTo(_o: SA_CheatPenaltySetT): void {
  _o.PenaltyList = this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length());
  _o.NewNick = this.NewNick();
}
}

export class SA_CheatPenaltySetT implements flatbuffers.IGeneratedObject {
constructor(
  public PenaltyList: (PenaltyInfoT)[] = [],
  public NewNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PenaltyList = builder.createStructOffsetList(this.PenaltyList, SA_CheatPenaltySet.start_PenaltyList_Vector);
  const NewNick = (this.NewNick !== null ? builder.createString(this.NewNick!) : 0);

  return SA_CheatPenaltySet.createSA_CheatPenaltySet(builder,
    PenaltyList,
    NewNick
  );
}
}

export class CQ_CheatKey implements flatbuffers.IUnpackableObject<CQ_CheatKeyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CheatKey {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CheatKey(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatKey):CQ_CheatKey {
  return (obj || new CQ_CheatKey()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CheatKey(bb:flatbuffers.ByteBuffer, obj?:CQ_CheatKey):CQ_CheatKey {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CheatKey()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CheatKey():string|null
CheatKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CheatKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

CheatValues(index: number):string
CheatValues(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
CheatValues(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

CheatValues_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CheatKey';
}

static startCQ_CheatKey(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_CheatKey(builder:flatbuffers.Builder, CheatKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, CheatKeyOffset, 0);
}

static add_CheatValues(builder:flatbuffers.Builder, CheatValuesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, CheatValuesOffset, 0);
}

static create_CheatValues_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_CheatValues_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_CheatKey(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CheatKey(builder:flatbuffers.Builder, CheatKeyOffset:flatbuffers.Offset, CheatValuesOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_CheatKey.startCQ_CheatKey(builder);
  CQ_CheatKey.add_CheatKey(builder, CheatKeyOffset);
  CQ_CheatKey.add_CheatValues(builder, CheatValuesOffset);
  return CQ_CheatKey.endCQ_CheatKey(builder);
}

unpack(): CQ_CheatKeyT {
  return new CQ_CheatKeyT(
    this.CheatKey(),
    this.bb!.createScalarList<string>(this.CheatValues.bind(this), this.CheatValues_Length())
  );
}


unpackTo(_o: CQ_CheatKeyT): void {
  _o.CheatKey = this.CheatKey();
  _o.CheatValues = this.bb!.createScalarList<string>(this.CheatValues.bind(this), this.CheatValues_Length());
}
}

export class CQ_CheatKeyT implements flatbuffers.IGeneratedObject {
constructor(
  public CheatKey: string|Uint8Array|null = null,
  public CheatValues: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const CheatKey = (this.CheatKey !== null ? builder.createString(this.CheatKey!) : 0);
  const CheatValues = CQ_CheatKey.create_CheatValues_Vector(builder, builder.createObjectOffsetList(this.CheatValues));

  return CQ_CheatKey.createCQ_CheatKey(builder,
    CheatKey,
    CheatValues
  );
}
}

export class SA_CheatKey implements flatbuffers.IUnpackableObject<SA_CheatKeyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CheatKey {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CheatKey(bb:flatbuffers.ByteBuffer, obj?:SA_CheatKey):SA_CheatKey {
  return (obj || new SA_CheatKey()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CheatKey(bb:flatbuffers.ByteBuffer, obj?:SA_CheatKey):SA_CheatKey {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CheatKey()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

CheatKey():string|null
CheatKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CheatKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChangeAchevementList(index: number, obj?:AchievementData):AchievementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AchievementData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAchevementList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

ChangeArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeAttributeList(index: number, obj?:AttributeData):AttributeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new AttributeData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeAttributeList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeCollectionList(index: number, obj?:CollectionData):CollectionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new CollectionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeCollectionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeEntitlementList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

ChangeEntitlementList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeEntitlementList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

ChangeExpressionList(index: number, obj?:ExpressionData):ExpressionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new ExpressionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeExpressionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeExpressionPresetList(index: number, obj?:ExpressionPresetData):ExpressionPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new ExpressionPresetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeExpressionPresetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeHeroList(index: number, obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeHeroList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeHeroSkinList(index: number, obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeHeroSkinList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangePetList(index: number, obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangePetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeProfileList(index: number, obj?:ProfileData):ProfileData|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new ProfileData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeProfileList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeSeasonPassList(index: number, obj?:SeasonPassData):SeasonPassData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new SeasonPassData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeSeasonPassList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeMissionList(index: number, obj?:MissionData):MissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new MissionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;
}

ChangeMissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeUserAccount(obj?:UserAccountData):UserAccountData|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new UserAccountData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeGuideMissionList(index: number, obj?:GuideMissionData):GuideMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? (obj || new GuideMissionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeGuideMissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeWonderStoreList(index: number, obj?:WonderStoreData):WonderStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? (obj || new WonderStoreData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeWonderStoreList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeWeaponCategoryList(index: number, obj?:WeaponCategoryData):WeaponCategoryData|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? (obj || new WeaponCategoryData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeWeaponCategoryList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeWonderCube(obj?:WonderCubeData):WonderCubeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? (obj || new WonderCubeData()).__init(this.bb_pos + offset, this.bb!) : null;
}

DeleteAllAttribute():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DeleteAllPet():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DeleteAllCollection():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DeleteAllWonderCube():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CheatKey';
}

static startSA_CheatKey(builder:flatbuffers.Builder) {
  builder.startObject(25);
}

static add_CheatKey(builder:flatbuffers.Builder, CheatKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, CheatKeyOffset, 0);
}

static add_ChangeAchevementList(builder:flatbuffers.Builder, ChangeAchevementListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAchevementListOffset, 0);
}

static start_ChangeAchevementList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeArtifactList(builder:flatbuffers.Builder, ChangeArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeArtifactListOffset, 0);
}

static start_ChangeArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeAttributeList(builder:flatbuffers.Builder, ChangeAttributeListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ChangeAttributeListOffset, 0);
}

static start_ChangeAttributeList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeCollectionList(builder:flatbuffers.Builder, ChangeCollectionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, ChangeCollectionListOffset, 0);
}

static start_ChangeCollectionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeEntitlementList(builder:flatbuffers.Builder, ChangeEntitlementListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ChangeEntitlementListOffset, 0);
}

static create_ChangeEntitlementList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ChangeEntitlementList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ChangeEntitlementList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeEntitlementList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeExpressionList(builder:flatbuffers.Builder, ChangeExpressionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, ChangeExpressionListOffset, 0);
}

static start_ChangeExpressionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeExpressionPresetList(builder:flatbuffers.Builder, ChangeExpressionPresetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, ChangeExpressionPresetListOffset, 0);
}

static create_ChangeExpressionPresetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeExpressionPresetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeHeroList(builder:flatbuffers.Builder, ChangeHeroListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, ChangeHeroListOffset, 0);
}

static create_ChangeHeroList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeHeroList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeHeroSkinList(builder:flatbuffers.Builder, ChangeHeroSkinListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, ChangeHeroSkinListOffset, 0);
}

static create_ChangeHeroSkinList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeHeroSkinList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangePetList(builder:flatbuffers.Builder, ChangePetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, ChangePetListOffset, 0);
}

static create_ChangePetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangePetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeProfileList(builder:flatbuffers.Builder, ChangeProfileListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, ChangeProfileListOffset, 0);
}

static start_ChangeProfileList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeSeasonPassList(builder:flatbuffers.Builder, ChangeSeasonPassListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, ChangeSeasonPassListOffset, 0);
}

static create_ChangeSeasonPassList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeSeasonPassList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeMissionList(builder:flatbuffers.Builder, ChangeMissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, ChangeMissionListOffset, 0);
}

static start_ChangeMissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(20, numElems, 4);
}

static add_ChangeUserAccount(builder:flatbuffers.Builder, ChangeUserAccountOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, ChangeUserAccountOffset, 0);
}

static add_ChangeGuideMissionList(builder:flatbuffers.Builder, ChangeGuideMissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, ChangeGuideMissionListOffset, 0);
}

static start_ChangeGuideMissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeWonderStoreList(builder:flatbuffers.Builder, ChangeWonderStoreListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, ChangeWonderStoreListOffset, 0);
}

static create_ChangeWonderStoreList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeWonderStoreList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ChangeWeaponCategoryList(builder:flatbuffers.Builder, ChangeWeaponCategoryListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, ChangeWeaponCategoryListOffset, 0);
}

static start_ChangeWeaponCategoryList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeWonderCube(builder:flatbuffers.Builder, ChangeWonderCubeOffset:flatbuffers.Offset) {
  builder.addFieldStruct(20, ChangeWonderCubeOffset, 0);
}

static add_DeleteAllAttribute(builder:flatbuffers.Builder, DeleteAllAttribute:boolean) {
  builder.addFieldInt8(21, +DeleteAllAttribute, +false);
}

static add_DeleteAllPet(builder:flatbuffers.Builder, DeleteAllPet:boolean) {
  builder.addFieldInt8(22, +DeleteAllPet, +false);
}

static add_DeleteAllCollection(builder:flatbuffers.Builder, DeleteAllCollection:boolean) {
  builder.addFieldInt8(23, +DeleteAllCollection, +false);
}

static add_DeleteAllWonderCube(builder:flatbuffers.Builder, DeleteAllWonderCube:boolean) {
  builder.addFieldInt8(24, +DeleteAllWonderCube, +false);
}

static endSA_CheatKey(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_CheatKeyT {
  return new SA_CheatKeyT(
    this.CheatKey(),
    this.bb!.createObjList<AchievementData, AchievementDataT>(this.ChangeAchevementList.bind(this), this.ChangeAchevementList_Length()),
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ChangeArtifactList.bind(this), this.ChangeArtifactList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length()),
    this.bb!.createObjList<AttributeData, AttributeDataT>(this.ChangeAttributeList.bind(this), this.ChangeAttributeList_Length()),
    this.bb!.createObjList<CollectionData, CollectionDataT>(this.ChangeCollectionList.bind(this), this.ChangeCollectionList_Length()),
    this.bb!.createScalarList<number>(this.ChangeEntitlementList.bind(this), this.ChangeEntitlementList_Length()),
    this.bb!.createObjList<ExpressionData, ExpressionDataT>(this.ChangeExpressionList.bind(this), this.ChangeExpressionList_Length()),
    this.bb!.createObjList<ExpressionPresetData, ExpressionPresetDataT>(this.ChangeExpressionPresetList.bind(this), this.ChangeExpressionPresetList_Length()),
    this.bb!.createObjList<HeroData, HeroDataT>(this.ChangeHeroList.bind(this), this.ChangeHeroList_Length()),
    this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinList.bind(this), this.ChangeHeroSkinList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length()),
    this.bb!.createObjList<PetData, PetDataT>(this.ChangePetList.bind(this), this.ChangePetList_Length()),
    this.bb!.createObjList<ProfileData, ProfileDataT>(this.ChangeProfileList.bind(this), this.ChangeProfileList_Length()),
    this.bb!.createObjList<SeasonPassData, SeasonPassDataT>(this.ChangeSeasonPassList.bind(this), this.ChangeSeasonPassList_Length()),
    this.bb!.createObjList<MissionData, MissionDataT>(this.ChangeMissionList.bind(this), this.ChangeMissionList_Length()),
    (this.ChangeUserAccount() !== null ? this.ChangeUserAccount()!.unpack() : null),
    this.bb!.createObjList<GuideMissionData, GuideMissionDataT>(this.ChangeGuideMissionList.bind(this), this.ChangeGuideMissionList_Length()),
    this.bb!.createObjList<WonderStoreData, WonderStoreDataT>(this.ChangeWonderStoreList.bind(this), this.ChangeWonderStoreList_Length()),
    this.bb!.createObjList<WeaponCategoryData, WeaponCategoryDataT>(this.ChangeWeaponCategoryList.bind(this), this.ChangeWeaponCategoryList_Length()),
    (this.ChangeWonderCube() !== null ? this.ChangeWonderCube()!.unpack() : null),
    this.DeleteAllAttribute(),
    this.DeleteAllPet(),
    this.DeleteAllCollection(),
    this.DeleteAllWonderCube()
  );
}


unpackTo(_o: SA_CheatKeyT): void {
  _o.CheatKey = this.CheatKey();
  _o.ChangeAchevementList = this.bb!.createObjList<AchievementData, AchievementDataT>(this.ChangeAchevementList.bind(this), this.ChangeAchevementList_Length());
  _o.ChangeArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ChangeArtifactList.bind(this), this.ChangeArtifactList_Length());
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
  _o.ChangeAttributeList = this.bb!.createObjList<AttributeData, AttributeDataT>(this.ChangeAttributeList.bind(this), this.ChangeAttributeList_Length());
  _o.ChangeCollectionList = this.bb!.createObjList<CollectionData, CollectionDataT>(this.ChangeCollectionList.bind(this), this.ChangeCollectionList_Length());
  _o.ChangeEntitlementList = this.bb!.createScalarList<number>(this.ChangeEntitlementList.bind(this), this.ChangeEntitlementList_Length());
  _o.ChangeExpressionList = this.bb!.createObjList<ExpressionData, ExpressionDataT>(this.ChangeExpressionList.bind(this), this.ChangeExpressionList_Length());
  _o.ChangeExpressionPresetList = this.bb!.createObjList<ExpressionPresetData, ExpressionPresetDataT>(this.ChangeExpressionPresetList.bind(this), this.ChangeExpressionPresetList_Length());
  _o.ChangeHeroList = this.bb!.createObjList<HeroData, HeroDataT>(this.ChangeHeroList.bind(this), this.ChangeHeroList_Length());
  _o.ChangeHeroSkinList = this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinList.bind(this), this.ChangeHeroSkinList_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
  _o.ChangePetList = this.bb!.createObjList<PetData, PetDataT>(this.ChangePetList.bind(this), this.ChangePetList_Length());
  _o.ChangeProfileList = this.bb!.createObjList<ProfileData, ProfileDataT>(this.ChangeProfileList.bind(this), this.ChangeProfileList_Length());
  _o.ChangeSeasonPassList = this.bb!.createObjList<SeasonPassData, SeasonPassDataT>(this.ChangeSeasonPassList.bind(this), this.ChangeSeasonPassList_Length());
  _o.ChangeMissionList = this.bb!.createObjList<MissionData, MissionDataT>(this.ChangeMissionList.bind(this), this.ChangeMissionList_Length());
  _o.ChangeUserAccount = (this.ChangeUserAccount() !== null ? this.ChangeUserAccount()!.unpack() : null);
  _o.ChangeGuideMissionList = this.bb!.createObjList<GuideMissionData, GuideMissionDataT>(this.ChangeGuideMissionList.bind(this), this.ChangeGuideMissionList_Length());
  _o.ChangeWonderStoreList = this.bb!.createObjList<WonderStoreData, WonderStoreDataT>(this.ChangeWonderStoreList.bind(this), this.ChangeWonderStoreList_Length());
  _o.ChangeWeaponCategoryList = this.bb!.createObjList<WeaponCategoryData, WeaponCategoryDataT>(this.ChangeWeaponCategoryList.bind(this), this.ChangeWeaponCategoryList_Length());
  _o.ChangeWonderCube = (this.ChangeWonderCube() !== null ? this.ChangeWonderCube()!.unpack() : null);
  _o.DeleteAllAttribute = this.DeleteAllAttribute();
  _o.DeleteAllPet = this.DeleteAllPet();
  _o.DeleteAllCollection = this.DeleteAllCollection();
  _o.DeleteAllWonderCube = this.DeleteAllWonderCube();
}
}

export class SA_CheatKeyT implements flatbuffers.IGeneratedObject {
constructor(
  public CheatKey: string|Uint8Array|null = null,
  public ChangeAchevementList: (AchievementDataT)[] = [],
  public ChangeArtifactList: (ArtifactDataT)[] = [],
  public ChangeAssetList: (AssetDataT)[] = [],
  public ChangeAttributeList: (AttributeDataT)[] = [],
  public ChangeCollectionList: (CollectionDataT)[] = [],
  public ChangeEntitlementList: (number)[] = [],
  public ChangeExpressionList: (ExpressionDataT)[] = [],
  public ChangeExpressionPresetList: (ExpressionPresetDataT)[] = [],
  public ChangeHeroList: (HeroDataT)[] = [],
  public ChangeHeroSkinList: (HeroSkinDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = [],
  public ChangePetList: (PetDataT)[] = [],
  public ChangeProfileList: (ProfileDataT)[] = [],
  public ChangeSeasonPassList: (SeasonPassDataT)[] = [],
  public ChangeMissionList: (MissionDataT)[] = [],
  public ChangeUserAccount: UserAccountDataT|null = null,
  public ChangeGuideMissionList: (GuideMissionDataT)[] = [],
  public ChangeWonderStoreList: (WonderStoreDataT)[] = [],
  public ChangeWeaponCategoryList: (WeaponCategoryDataT)[] = [],
  public ChangeWonderCube: WonderCubeDataT|null = null,
  public DeleteAllAttribute: boolean = false,
  public DeleteAllPet: boolean = false,
  public DeleteAllCollection: boolean = false,
  public DeleteAllWonderCube: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const CheatKey = (this.CheatKey !== null ? builder.createString(this.CheatKey!) : 0);
  const ChangeAchevementList = builder.createStructOffsetList(this.ChangeAchevementList, SA_CheatKey.start_ChangeAchevementList_Vector);
  const ChangeArtifactList = builder.createStructOffsetList(this.ChangeArtifactList, SA_CheatKey.start_ChangeArtifactList_Vector);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_CheatKey.start_ChangeAssetList_Vector);
  const ChangeAttributeList = builder.createStructOffsetList(this.ChangeAttributeList, SA_CheatKey.start_ChangeAttributeList_Vector);
  const ChangeCollectionList = builder.createStructOffsetList(this.ChangeCollectionList, SA_CheatKey.start_ChangeCollectionList_Vector);
  const ChangeEntitlementList = SA_CheatKey.create_ChangeEntitlementList_Vector(builder, this.ChangeEntitlementList);
  const ChangeExpressionList = builder.createStructOffsetList(this.ChangeExpressionList, SA_CheatKey.start_ChangeExpressionList_Vector);
  const ChangeExpressionPresetList = SA_CheatKey.create_ChangeExpressionPresetList_Vector(builder, builder.createObjectOffsetList(this.ChangeExpressionPresetList));
  const ChangeHeroList = SA_CheatKey.create_ChangeHeroList_Vector(builder, builder.createObjectOffsetList(this.ChangeHeroList));
  const ChangeHeroSkinList = SA_CheatKey.create_ChangeHeroSkinList_Vector(builder, builder.createObjectOffsetList(this.ChangeHeroSkinList));
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_CheatKey.start_ChangeItemList_Vector);
  const ChangePetList = SA_CheatKey.create_ChangePetList_Vector(builder, builder.createObjectOffsetList(this.ChangePetList));
  const ChangeProfileList = builder.createStructOffsetList(this.ChangeProfileList, SA_CheatKey.start_ChangeProfileList_Vector);
  const ChangeSeasonPassList = SA_CheatKey.create_ChangeSeasonPassList_Vector(builder, builder.createObjectOffsetList(this.ChangeSeasonPassList));
  const ChangeMissionList = builder.createStructOffsetList(this.ChangeMissionList, SA_CheatKey.start_ChangeMissionList_Vector);
  const ChangeUserAccount = (this.ChangeUserAccount !== null ? this.ChangeUserAccount!.pack(builder) : 0);
  const ChangeGuideMissionList = builder.createStructOffsetList(this.ChangeGuideMissionList, SA_CheatKey.start_ChangeGuideMissionList_Vector);
  const ChangeWonderStoreList = SA_CheatKey.create_ChangeWonderStoreList_Vector(builder, builder.createObjectOffsetList(this.ChangeWonderStoreList));
  const ChangeWeaponCategoryList = builder.createStructOffsetList(this.ChangeWeaponCategoryList, SA_CheatKey.start_ChangeWeaponCategoryList_Vector);

  SA_CheatKey.startSA_CheatKey(builder);
  SA_CheatKey.add_CheatKey(builder, CheatKey);
  SA_CheatKey.add_ChangeAchevementList(builder, ChangeAchevementList);
  SA_CheatKey.add_ChangeArtifactList(builder, ChangeArtifactList);
  SA_CheatKey.add_ChangeAssetList(builder, ChangeAssetList);
  SA_CheatKey.add_ChangeAttributeList(builder, ChangeAttributeList);
  SA_CheatKey.add_ChangeCollectionList(builder, ChangeCollectionList);
  SA_CheatKey.add_ChangeEntitlementList(builder, ChangeEntitlementList);
  SA_CheatKey.add_ChangeExpressionList(builder, ChangeExpressionList);
  SA_CheatKey.add_ChangeExpressionPresetList(builder, ChangeExpressionPresetList);
  SA_CheatKey.add_ChangeHeroList(builder, ChangeHeroList);
  SA_CheatKey.add_ChangeHeroSkinList(builder, ChangeHeroSkinList);
  SA_CheatKey.add_ChangeItemList(builder, ChangeItemList);
  SA_CheatKey.add_ChangePetList(builder, ChangePetList);
  SA_CheatKey.add_ChangeProfileList(builder, ChangeProfileList);
  SA_CheatKey.add_ChangeSeasonPassList(builder, ChangeSeasonPassList);
  SA_CheatKey.add_ChangeMissionList(builder, ChangeMissionList);
  SA_CheatKey.add_ChangeUserAccount(builder, ChangeUserAccount);
  SA_CheatKey.add_ChangeGuideMissionList(builder, ChangeGuideMissionList);
  SA_CheatKey.add_ChangeWonderStoreList(builder, ChangeWonderStoreList);
  SA_CheatKey.add_ChangeWeaponCategoryList(builder, ChangeWeaponCategoryList);
  SA_CheatKey.add_ChangeWonderCube(builder, (this.ChangeWonderCube !== null ? this.ChangeWonderCube!.pack(builder) : 0));
  SA_CheatKey.add_DeleteAllAttribute(builder, this.DeleteAllAttribute);
  SA_CheatKey.add_DeleteAllPet(builder, this.DeleteAllPet);
  SA_CheatKey.add_DeleteAllCollection(builder, this.DeleteAllCollection);
  SA_CheatKey.add_DeleteAllWonderCube(builder, this.DeleteAllWonderCube);

  return SA_CheatKey.endSA_CheatKey(builder);
}
}

export class CQ_InstantGuideList implements flatbuffers.IUnpackableObject<CQ_InstantGuideListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_InstantGuideList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_InstantGuideList(bb:flatbuffers.ByteBuffer, obj?:CQ_InstantGuideList):CQ_InstantGuideList {
  return (obj || new CQ_InstantGuideList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_InstantGuideList(bb:flatbuffers.ByteBuffer, obj?:CQ_InstantGuideList):CQ_InstantGuideList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_InstantGuideList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_InstantGuideList';
}

static startCQ_InstantGuideList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_InstantGuideList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_InstantGuideList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_InstantGuideList.startCQ_InstantGuideList(builder);
  return CQ_InstantGuideList.endCQ_InstantGuideList(builder);
}

unpack(): CQ_InstantGuideListT {
  return new CQ_InstantGuideListT();
}


unpackTo(_o: CQ_InstantGuideListT): void {}
}

export class CQ_InstantGuideListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_InstantGuideList.createCQ_InstantGuideList(builder);
}
}

export class SA_InstantGuideList implements flatbuffers.IUnpackableObject<SA_InstantGuideListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_InstantGuideList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_InstantGuideList(bb:flatbuffers.ByteBuffer, obj?:SA_InstantGuideList):SA_InstantGuideList {
  return (obj || new SA_InstantGuideList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_InstantGuideList(bb:flatbuffers.ByteBuffer, obj?:SA_InstantGuideList):SA_InstantGuideList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_InstantGuideList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

InstantGuideList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

InstantGuideList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

InstantGuideList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_InstantGuideList';
}

static startSA_InstantGuideList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_InstantGuideList(builder:flatbuffers.Builder, InstantGuideListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, InstantGuideListOffset, 0);
}

static create_InstantGuideList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_InstantGuideList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_InstantGuideList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_InstantGuideList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_InstantGuideList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_InstantGuideList(builder:flatbuffers.Builder, InstantGuideListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_InstantGuideList.startSA_InstantGuideList(builder);
  SA_InstantGuideList.add_InstantGuideList(builder, InstantGuideListOffset);
  return SA_InstantGuideList.endSA_InstantGuideList(builder);
}

unpack(): SA_InstantGuideListT {
  return new SA_InstantGuideListT(
    this.bb!.createScalarList<number>(this.InstantGuideList.bind(this), this.InstantGuideList_Length())
  );
}


unpackTo(_o: SA_InstantGuideListT): void {
  _o.InstantGuideList = this.bb!.createScalarList<number>(this.InstantGuideList.bind(this), this.InstantGuideList_Length());
}
}

export class SA_InstantGuideListT implements flatbuffers.IGeneratedObject {
constructor(
  public InstantGuideList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const InstantGuideList = SA_InstantGuideList.create_InstantGuideList_Vector(builder, this.InstantGuideList);

  return SA_InstantGuideList.createSA_InstantGuideList(builder,
    InstantGuideList
  );
}
}

export class CQ_InstantGuideSave implements flatbuffers.IUnpackableObject<CQ_InstantGuideSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_InstantGuideSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_InstantGuideSave(bb:flatbuffers.ByteBuffer, obj?:CQ_InstantGuideSave):CQ_InstantGuideSave {
  return (obj || new CQ_InstantGuideSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_InstantGuideSave(bb:flatbuffers.ByteBuffer, obj?:CQ_InstantGuideSave):CQ_InstantGuideSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_InstantGuideSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

InstantGuideList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

InstantGuideList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

InstantGuideList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_InstantGuideSave';
}

static startCQ_InstantGuideSave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_InstantGuideList(builder:flatbuffers.Builder, InstantGuideListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, InstantGuideListOffset, 0);
}

static create_InstantGuideList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_InstantGuideList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_InstantGuideList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_InstantGuideList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_InstantGuideSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_InstantGuideSave(builder:flatbuffers.Builder, InstantGuideListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_InstantGuideSave.startCQ_InstantGuideSave(builder);
  CQ_InstantGuideSave.add_InstantGuideList(builder, InstantGuideListOffset);
  return CQ_InstantGuideSave.endCQ_InstantGuideSave(builder);
}

unpack(): CQ_InstantGuideSaveT {
  return new CQ_InstantGuideSaveT(
    this.bb!.createScalarList<number>(this.InstantGuideList.bind(this), this.InstantGuideList_Length())
  );
}


unpackTo(_o: CQ_InstantGuideSaveT): void {
  _o.InstantGuideList = this.bb!.createScalarList<number>(this.InstantGuideList.bind(this), this.InstantGuideList_Length());
}
}

export class CQ_InstantGuideSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public InstantGuideList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const InstantGuideList = CQ_InstantGuideSave.create_InstantGuideList_Vector(builder, this.InstantGuideList);

  return CQ_InstantGuideSave.createCQ_InstantGuideSave(builder,
    InstantGuideList
  );
}
}

export class SA_InstantGuideSave implements flatbuffers.IUnpackableObject<SA_InstantGuideSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_InstantGuideSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_InstantGuideSave(bb:flatbuffers.ByteBuffer, obj?:SA_InstantGuideSave):SA_InstantGuideSave {
  return (obj || new SA_InstantGuideSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_InstantGuideSave(bb:flatbuffers.ByteBuffer, obj?:SA_InstantGuideSave):SA_InstantGuideSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_InstantGuideSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_InstantGuideSave';
}

static startSA_InstantGuideSave(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_InstantGuideSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_InstantGuideSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_InstantGuideSave.startSA_InstantGuideSave(builder);
  return SA_InstantGuideSave.endSA_InstantGuideSave(builder);
}

unpack(): SA_InstantGuideSaveT {
  return new SA_InstantGuideSaveT();
}


unpackTo(_o: SA_InstantGuideSaveT): void {}
}

export class SA_InstantGuideSaveT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_InstantGuideSave.createSA_InstantGuideSave(builder);
}
}

export class CQ_RpgStart implements flatbuffers.IUnpackableObject<CQ_RpgStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgStart(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgStart):CQ_RpgStart {
  return (obj || new CQ_RpgStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgStart(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgStart):CQ_RpgStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgStart';
}

static startCQ_RpgStart(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(0, ChapterID, 0);
}

static endCQ_RpgStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgStart(builder:flatbuffers.Builder, ChapterID:number):flatbuffers.Offset {
  CQ_RpgStart.startCQ_RpgStart(builder);
  CQ_RpgStart.add_ChapterID(builder, ChapterID);
  return CQ_RpgStart.endCQ_RpgStart(builder);
}

unpack(): CQ_RpgStartT {
  return new CQ_RpgStartT(
    this.ChapterID()
  );
}


unpackTo(_o: CQ_RpgStartT): void {
  _o.ChapterID = this.ChapterID();
}
}

export class CQ_RpgStartT implements flatbuffers.IGeneratedObject {
constructor(
  public ChapterID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgStart.createCQ_RpgStart(builder,
    this.ChapterID
  );
}
}

export class SA_RpgStart implements flatbuffers.IUnpackableObject<SA_RpgStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgStart(bb:flatbuffers.ByteBuffer, obj?:SA_RpgStart):SA_RpgStart {
  return (obj || new SA_RpgStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgStart(bb:flatbuffers.ByteBuffer, obj?:SA_RpgStart):SA_RpgStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SpecialLevelList(index: number, obj?:SpecialLevelData):SpecialLevelData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new SpecialLevelData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

SpecialLevelList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgStart';
}

static startSA_RpgStart(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(0, ChapterID, 0);
}

static add_SpecialLevelList(builder:flatbuffers.Builder, SpecialLevelListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, SpecialLevelListOffset, 0);
}

static create_SpecialLevelList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_SpecialLevelList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_RpgStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgStart(builder:flatbuffers.Builder, ChapterID:number, SpecialLevelListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_RpgStart.startSA_RpgStart(builder);
  SA_RpgStart.add_ChapterID(builder, ChapterID);
  SA_RpgStart.add_SpecialLevelList(builder, SpecialLevelListOffset);
  return SA_RpgStart.endSA_RpgStart(builder);
}

unpack(): SA_RpgStartT {
  return new SA_RpgStartT(
    this.ChapterID(),
    this.bb!.createObjList<SpecialLevelData, SpecialLevelDataT>(this.SpecialLevelList.bind(this), this.SpecialLevelList_Length())
  );
}


unpackTo(_o: SA_RpgStartT): void {
  _o.ChapterID = this.ChapterID();
  _o.SpecialLevelList = this.bb!.createObjList<SpecialLevelData, SpecialLevelDataT>(this.SpecialLevelList.bind(this), this.SpecialLevelList_Length());
}
}

export class SA_RpgStartT implements flatbuffers.IGeneratedObject {
constructor(
  public ChapterID: number = 0,
  public SpecialLevelList: (SpecialLevelDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SpecialLevelList = SA_RpgStart.create_SpecialLevelList_Vector(builder, builder.createObjectOffsetList(this.SpecialLevelList));

  return SA_RpgStart.createSA_RpgStart(builder,
    this.ChapterID,
    SpecialLevelList
  );
}
}

export class CQ_RpgRoomStart implements flatbuffers.IUnpackableObject<CQ_RpgRoomStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgRoomStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgRoomStart(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgRoomStart):CQ_RpgRoomStart {
  return (obj || new CQ_RpgRoomStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgRoomStart(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgRoomStart):CQ_RpgRoomStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgRoomStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

LevelID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgRoomStart';
}

static startCQ_RpgRoomStart(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_LevelID(builder:flatbuffers.Builder, LevelID:number) {
  builder.addFieldInt32(0, LevelID, 0);
}

static endCQ_RpgRoomStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgRoomStart(builder:flatbuffers.Builder, LevelID:number):flatbuffers.Offset {
  CQ_RpgRoomStart.startCQ_RpgRoomStart(builder);
  CQ_RpgRoomStart.add_LevelID(builder, LevelID);
  return CQ_RpgRoomStart.endCQ_RpgRoomStart(builder);
}

unpack(): CQ_RpgRoomStartT {
  return new CQ_RpgRoomStartT(
    this.LevelID()
  );
}


unpackTo(_o: CQ_RpgRoomStartT): void {
  _o.LevelID = this.LevelID();
}
}

export class CQ_RpgRoomStartT implements flatbuffers.IGeneratedObject {
constructor(
  public LevelID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgRoomStart.createCQ_RpgRoomStart(builder,
    this.LevelID
  );
}
}

export class SA_RpgRoomStart implements flatbuffers.IUnpackableObject<SA_RpgRoomStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgRoomStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgRoomStart(bb:flatbuffers.ByteBuffer, obj?:SA_RpgRoomStart):SA_RpgRoomStart {
  return (obj || new SA_RpgRoomStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgRoomStart(bb:flatbuffers.ByteBuffer, obj?:SA_RpgRoomStart):SA_RpgRoomStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgRoomStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgRoomStart';
}

static startSA_RpgRoomStart(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_RpgRoomStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgRoomStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_RpgRoomStart.startSA_RpgRoomStart(builder);
  return SA_RpgRoomStart.endSA_RpgRoomStart(builder);
}

unpack(): SA_RpgRoomStartT {
  return new SA_RpgRoomStartT();
}


unpackTo(_o: SA_RpgRoomStartT): void {}
}

export class SA_RpgRoomStartT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_RpgRoomStart.createSA_RpgRoomStart(builder);
}
}

export class CQ_RpgRoomEnd implements flatbuffers.IUnpackableObject<CQ_RpgRoomEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgRoomEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgRoomEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgRoomEnd):CQ_RpgRoomEnd {
  return (obj || new CQ_RpgRoomEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgRoomEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgRoomEnd):CQ_RpgRoomEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgRoomEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

LevelID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

CharacterLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FragmentCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MonsterList(index: number, obj?:MonsterData):MonsterData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new MonsterData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

MonsterList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

WeaponIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

WeaponIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

WeaponIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

ArtifactIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

ArtifactIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ArtifactIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

ItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

AssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

AssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ConsumeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ConsumeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

LevelupBuffList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

LevelupBuffList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

LevelupBuffList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

IsRoomClear():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgRoomEnd';
}

static startCQ_RpgRoomEnd(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static add_LevelID(builder:flatbuffers.Builder, LevelID:number) {
  builder.addFieldInt32(0, LevelID, 0);
}

static add_CharacterLevel(builder:flatbuffers.Builder, CharacterLevel:number) {
  builder.addFieldInt32(1, CharacterLevel, 0);
}

static add_FragmentCount(builder:flatbuffers.Builder, FragmentCount:number) {
  builder.addFieldInt32(2, FragmentCount, 0);
}

static add_MonsterList(builder:flatbuffers.Builder, MonsterListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, MonsterListOffset, 0);
}

static start_MonsterList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_WeaponIDList(builder:flatbuffers.Builder, WeaponIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, WeaponIDListOffset, 0);
}

static create_WeaponIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_WeaponIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_WeaponIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_WeaponIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ArtifactIDList(builder:flatbuffers.Builder, ArtifactIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, ArtifactIDListOffset, 0);
}

static create_ArtifactIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ArtifactIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ArtifactIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_ArtifactIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ItemList(builder:flatbuffers.Builder, ItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ItemListOffset, 0);
}

static start_ItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_AssetList(builder:flatbuffers.Builder, AssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, AssetListOffset, 0);
}

static start_AssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ConsumeAssetList(builder:flatbuffers.Builder, ConsumeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, ConsumeAssetListOffset, 0);
}

static start_ConsumeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_LevelupBuffList(builder:flatbuffers.Builder, LevelupBuffListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, LevelupBuffListOffset, 0);
}

static create_LevelupBuffList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_LevelupBuffList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_LevelupBuffList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_LevelupBuffList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_IsRoomClear(builder:flatbuffers.Builder, IsRoomClear:boolean) {
  builder.addFieldInt8(10, +IsRoomClear, +false);
}

static endCQ_RpgRoomEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgRoomEnd(builder:flatbuffers.Builder, LevelID:number, CharacterLevel:number, FragmentCount:number, MonsterListOffset:flatbuffers.Offset, WeaponIDListOffset:flatbuffers.Offset, ArtifactIDListOffset:flatbuffers.Offset, ItemListOffset:flatbuffers.Offset, AssetListOffset:flatbuffers.Offset, ConsumeAssetListOffset:flatbuffers.Offset, LevelupBuffListOffset:flatbuffers.Offset, IsRoomClear:boolean):flatbuffers.Offset {
  CQ_RpgRoomEnd.startCQ_RpgRoomEnd(builder);
  CQ_RpgRoomEnd.add_LevelID(builder, LevelID);
  CQ_RpgRoomEnd.add_CharacterLevel(builder, CharacterLevel);
  CQ_RpgRoomEnd.add_FragmentCount(builder, FragmentCount);
  CQ_RpgRoomEnd.add_MonsterList(builder, MonsterListOffset);
  CQ_RpgRoomEnd.add_WeaponIDList(builder, WeaponIDListOffset);
  CQ_RpgRoomEnd.add_ArtifactIDList(builder, ArtifactIDListOffset);
  CQ_RpgRoomEnd.add_ItemList(builder, ItemListOffset);
  CQ_RpgRoomEnd.add_AssetList(builder, AssetListOffset);
  CQ_RpgRoomEnd.add_ConsumeAssetList(builder, ConsumeAssetListOffset);
  CQ_RpgRoomEnd.add_LevelupBuffList(builder, LevelupBuffListOffset);
  CQ_RpgRoomEnd.add_IsRoomClear(builder, IsRoomClear);
  return CQ_RpgRoomEnd.endCQ_RpgRoomEnd(builder);
}

unpack(): CQ_RpgRoomEndT {
  return new CQ_RpgRoomEndT(
    this.LevelID(),
    this.CharacterLevel(),
    this.FragmentCount(),
    this.bb!.createObjList<MonsterData, MonsterDataT>(this.MonsterList.bind(this), this.MonsterList_Length()),
    this.bb!.createScalarList<number>(this.WeaponIDList.bind(this), this.WeaponIDList_Length()),
    this.bb!.createScalarList<number>(this.ArtifactIDList.bind(this), this.ArtifactIDList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ItemList.bind(this), this.ItemList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.AssetList.bind(this), this.AssetList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ConsumeAssetList.bind(this), this.ConsumeAssetList_Length()),
    this.bb!.createScalarList<number>(this.LevelupBuffList.bind(this), this.LevelupBuffList_Length()),
    this.IsRoomClear()
  );
}


unpackTo(_o: CQ_RpgRoomEndT): void {
  _o.LevelID = this.LevelID();
  _o.CharacterLevel = this.CharacterLevel();
  _o.FragmentCount = this.FragmentCount();
  _o.MonsterList = this.bb!.createObjList<MonsterData, MonsterDataT>(this.MonsterList.bind(this), this.MonsterList_Length());
  _o.WeaponIDList = this.bb!.createScalarList<number>(this.WeaponIDList.bind(this), this.WeaponIDList_Length());
  _o.ArtifactIDList = this.bb!.createScalarList<number>(this.ArtifactIDList.bind(this), this.ArtifactIDList_Length());
  _o.ItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ItemList.bind(this), this.ItemList_Length());
  _o.AssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.AssetList.bind(this), this.AssetList_Length());
  _o.ConsumeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ConsumeAssetList.bind(this), this.ConsumeAssetList_Length());
  _o.LevelupBuffList = this.bb!.createScalarList<number>(this.LevelupBuffList.bind(this), this.LevelupBuffList_Length());
  _o.IsRoomClear = this.IsRoomClear();
}
}

export class CQ_RpgRoomEndT implements flatbuffers.IGeneratedObject {
constructor(
  public LevelID: number = 0,
  public CharacterLevel: number = 0,
  public FragmentCount: number = 0,
  public MonsterList: (MonsterDataT)[] = [],
  public WeaponIDList: (number)[] = [],
  public ArtifactIDList: (number)[] = [],
  public ItemList: (ItemDataT)[] = [],
  public AssetList: (AssetDataT)[] = [],
  public ConsumeAssetList: (AssetDataT)[] = [],
  public LevelupBuffList: (number)[] = [],
  public IsRoomClear: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MonsterList = builder.createStructOffsetList(this.MonsterList, CQ_RpgRoomEnd.start_MonsterList_Vector);
  const WeaponIDList = CQ_RpgRoomEnd.create_WeaponIDList_Vector(builder, this.WeaponIDList);
  const ArtifactIDList = CQ_RpgRoomEnd.create_ArtifactIDList_Vector(builder, this.ArtifactIDList);
  const ItemList = builder.createStructOffsetList(this.ItemList, CQ_RpgRoomEnd.start_ItemList_Vector);
  const AssetList = builder.createStructOffsetList(this.AssetList, CQ_RpgRoomEnd.start_AssetList_Vector);
  const ConsumeAssetList = builder.createStructOffsetList(this.ConsumeAssetList, CQ_RpgRoomEnd.start_ConsumeAssetList_Vector);
  const LevelupBuffList = CQ_RpgRoomEnd.create_LevelupBuffList_Vector(builder, this.LevelupBuffList);

  return CQ_RpgRoomEnd.createCQ_RpgRoomEnd(builder,
    this.LevelID,
    this.CharacterLevel,
    this.FragmentCount,
    MonsterList,
    WeaponIDList,
    ArtifactIDList,
    ItemList,
    AssetList,
    ConsumeAssetList,
    LevelupBuffList,
    this.IsRoomClear
  );
}
}

export class SA_RpgRoomEnd implements flatbuffers.IUnpackableObject<SA_RpgRoomEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgRoomEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgRoomEnd(bb:flatbuffers.ByteBuffer, obj?:SA_RpgRoomEnd):SA_RpgRoomEnd {
  return (obj || new SA_RpgRoomEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgRoomEnd(bb:flatbuffers.ByteBuffer, obj?:SA_RpgRoomEnd):SA_RpgRoomEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgRoomEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgRoomEnd';
}

static startSA_RpgRoomEnd(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_RpgRoomEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgRoomEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_RpgRoomEnd.startSA_RpgRoomEnd(builder);
  return SA_RpgRoomEnd.endSA_RpgRoomEnd(builder);
}

unpack(): SA_RpgRoomEndT {
  return new SA_RpgRoomEndT();
}


unpackTo(_o: SA_RpgRoomEndT): void {}
}

export class SA_RpgRoomEndT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_RpgRoomEnd.createSA_RpgRoomEnd(builder);
}
}

export class CQ_RpgOpenBox implements flatbuffers.IUnpackableObject<CQ_RpgOpenBoxT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgOpenBox {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgOpenBox(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgOpenBox):CQ_RpgOpenBox {
  return (obj || new CQ_RpgOpenBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgOpenBox(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgOpenBox):CQ_RpgOpenBox {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgOpenBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BoxID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgOpenBox';
}

static startCQ_RpgOpenBox(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_BoxID(builder:flatbuffers.Builder, BoxID:number) {
  builder.addFieldInt32(0, BoxID, 0);
}

static endCQ_RpgOpenBox(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgOpenBox(builder:flatbuffers.Builder, BoxID:number):flatbuffers.Offset {
  CQ_RpgOpenBox.startCQ_RpgOpenBox(builder);
  CQ_RpgOpenBox.add_BoxID(builder, BoxID);
  return CQ_RpgOpenBox.endCQ_RpgOpenBox(builder);
}

unpack(): CQ_RpgOpenBoxT {
  return new CQ_RpgOpenBoxT(
    this.BoxID()
  );
}


unpackTo(_o: CQ_RpgOpenBoxT): void {
  _o.BoxID = this.BoxID();
}
}

export class CQ_RpgOpenBoxT implements flatbuffers.IGeneratedObject {
constructor(
  public BoxID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgOpenBox.createCQ_RpgOpenBox(builder,
    this.BoxID
  );
}
}

export class SA_RpgOpenBox implements flatbuffers.IUnpackableObject<SA_RpgOpenBoxT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgOpenBox {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgOpenBox(bb:flatbuffers.ByteBuffer, obj?:SA_RpgOpenBox):SA_RpgOpenBox {
  return (obj || new SA_RpgOpenBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgOpenBox(bb:flatbuffers.ByteBuffer, obj?:SA_RpgOpenBox):SA_RpgOpenBox {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgOpenBox()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgOpenBox';
}

static startSA_RpgOpenBox(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_RpgOpenBox(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgOpenBox(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_RpgOpenBox.startSA_RpgOpenBox(builder);
  return SA_RpgOpenBox.endSA_RpgOpenBox(builder);
}

unpack(): SA_RpgOpenBoxT {
  return new SA_RpgOpenBoxT();
}


unpackTo(_o: SA_RpgOpenBoxT): void {}
}

export class SA_RpgOpenBoxT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_RpgOpenBox.createSA_RpgOpenBox(builder);
}
}

export class CQ_RpgEnd implements flatbuffers.IUnpackableObject<CQ_RpgEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgEnd):CQ_RpgEnd {
  return (obj || new CQ_RpgEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgEnd):CQ_RpgEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsClear():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

IsQuit():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DieObjectID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

DieMonsterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PlayTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgEnd';
}

static startCQ_RpgEnd(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_IsClear(builder:flatbuffers.Builder, IsClear:boolean) {
  builder.addFieldInt8(0, +IsClear, +false);
}

static add_IsQuit(builder:flatbuffers.Builder, IsQuit:boolean) {
  builder.addFieldInt8(1, +IsQuit, +false);
}

static add_DieObjectID(builder:flatbuffers.Builder, DieObjectID:number) {
  builder.addFieldInt32(2, DieObjectID, 0);
}

static add_DieMonsterID(builder:flatbuffers.Builder, DieMonsterID:number) {
  builder.addFieldInt32(3, DieMonsterID, 0);
}

static add_PlayTime(builder:flatbuffers.Builder, PlayTime:number) {
  builder.addFieldInt32(4, PlayTime, 0);
}

static endCQ_RpgEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgEnd(builder:flatbuffers.Builder, IsClear:boolean, IsQuit:boolean, DieObjectID:number, DieMonsterID:number, PlayTime:number):flatbuffers.Offset {
  CQ_RpgEnd.startCQ_RpgEnd(builder);
  CQ_RpgEnd.add_IsClear(builder, IsClear);
  CQ_RpgEnd.add_IsQuit(builder, IsQuit);
  CQ_RpgEnd.add_DieObjectID(builder, DieObjectID);
  CQ_RpgEnd.add_DieMonsterID(builder, DieMonsterID);
  CQ_RpgEnd.add_PlayTime(builder, PlayTime);
  return CQ_RpgEnd.endCQ_RpgEnd(builder);
}

unpack(): CQ_RpgEndT {
  return new CQ_RpgEndT(
    this.IsClear(),
    this.IsQuit(),
    this.DieObjectID(),
    this.DieMonsterID(),
    this.PlayTime()
  );
}


unpackTo(_o: CQ_RpgEndT): void {
  _o.IsClear = this.IsClear();
  _o.IsQuit = this.IsQuit();
  _o.DieObjectID = this.DieObjectID();
  _o.DieMonsterID = this.DieMonsterID();
  _o.PlayTime = this.PlayTime();
}
}

export class CQ_RpgEndT implements flatbuffers.IGeneratedObject {
constructor(
  public IsClear: boolean = false,
  public IsQuit: boolean = false,
  public DieObjectID: number = 0,
  public DieMonsterID: number = 0,
  public PlayTime: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgEnd.createCQ_RpgEnd(builder,
    this.IsClear,
    this.IsQuit,
    this.DieObjectID,
    this.DieMonsterID,
    this.PlayTime
  );
}
}

export class SA_RpgEnd implements flatbuffers.IUnpackableObject<SA_RpgEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgEnd(bb:flatbuffers.ByteBuffer, obj?:SA_RpgEnd):SA_RpgEnd {
  return (obj || new SA_RpgEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgEnd(bb:flatbuffers.ByteBuffer, obj?:SA_RpgEnd):SA_RpgEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

LastClearChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsClear():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

ChangeWonderCube(obj?:WonderCubeData):WonderCubeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new WonderCubeData()).__init(this.bb_pos + offset, this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgEnd';
}

static startSA_RpgEnd(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_LastClearChapterID(builder:flatbuffers.Builder, LastClearChapterID:number) {
  builder.addFieldInt32(2, LastClearChapterID, 0);
}

static add_IsClear(builder:flatbuffers.Builder, IsClear:boolean) {
  builder.addFieldInt8(3, +IsClear, +false);
}

static add_ChangeWonderCube(builder:flatbuffers.Builder, ChangeWonderCubeOffset:flatbuffers.Offset) {
  builder.addFieldStruct(4, ChangeWonderCubeOffset, 0);
}

static endSA_RpgEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_RpgEndT {
  return new SA_RpgEndT(
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length()),
    this.LastClearChapterID(),
    this.IsClear(),
    (this.ChangeWonderCube() !== null ? this.ChangeWonderCube()!.unpack() : null)
  );
}


unpackTo(_o: SA_RpgEndT): void {
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
  _o.LastClearChapterID = this.LastClearChapterID();
  _o.IsClear = this.IsClear();
  _o.ChangeWonderCube = (this.ChangeWonderCube() !== null ? this.ChangeWonderCube()!.unpack() : null);
}
}

export class SA_RpgEndT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeAssetList: (AssetDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = [],
  public LastClearChapterID: number = 0,
  public IsClear: boolean = false,
  public ChangeWonderCube: WonderCubeDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_RpgEnd.start_ChangeAssetList_Vector);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_RpgEnd.start_ChangeItemList_Vector);

  SA_RpgEnd.startSA_RpgEnd(builder);
  SA_RpgEnd.add_ChangeAssetList(builder, ChangeAssetList);
  SA_RpgEnd.add_ChangeItemList(builder, ChangeItemList);
  SA_RpgEnd.add_LastClearChapterID(builder, this.LastClearChapterID);
  SA_RpgEnd.add_IsClear(builder, this.IsClear);
  SA_RpgEnd.add_ChangeWonderCube(builder, (this.ChangeWonderCube !== null ? this.ChangeWonderCube!.pack(builder) : 0));

  return SA_RpgEnd.endSA_RpgEnd(builder);
}
}

export class CQ_RpgStartChallenge implements flatbuffers.IUnpackableObject<CQ_RpgStartChallengeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgStartChallenge {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgStartChallenge(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgStartChallenge):CQ_RpgStartChallenge {
  return (obj || new CQ_RpgStartChallenge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgStartChallenge(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgStartChallenge):CQ_RpgStartChallenge {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgStartChallenge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ParameterList(index: number, obj?:RpgChallengeParameter):RpgChallengeParameter|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RpgChallengeParameter()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ParameterList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgStartChallenge';
}

static startCQ_RpgStartChallenge(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(0, ChapterID, 0);
}

static add_ParameterList(builder:flatbuffers.Builder, ParameterListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ParameterListOffset, 0);
}

static start_ParameterList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endCQ_RpgStartChallenge(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgStartChallenge(builder:flatbuffers.Builder, ChapterID:number, ParameterListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_RpgStartChallenge.startCQ_RpgStartChallenge(builder);
  CQ_RpgStartChallenge.add_ChapterID(builder, ChapterID);
  CQ_RpgStartChallenge.add_ParameterList(builder, ParameterListOffset);
  return CQ_RpgStartChallenge.endCQ_RpgStartChallenge(builder);
}

unpack(): CQ_RpgStartChallengeT {
  return new CQ_RpgStartChallengeT(
    this.ChapterID(),
    this.bb!.createObjList<RpgChallengeParameter, RpgChallengeParameterT>(this.ParameterList.bind(this), this.ParameterList_Length())
  );
}


unpackTo(_o: CQ_RpgStartChallengeT): void {
  _o.ChapterID = this.ChapterID();
  _o.ParameterList = this.bb!.createObjList<RpgChallengeParameter, RpgChallengeParameterT>(this.ParameterList.bind(this), this.ParameterList_Length());
}
}

export class CQ_RpgStartChallengeT implements flatbuffers.IGeneratedObject {
constructor(
  public ChapterID: number = 0,
  public ParameterList: (RpgChallengeParameterT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ParameterList = builder.createStructOffsetList(this.ParameterList, CQ_RpgStartChallenge.start_ParameterList_Vector);

  return CQ_RpgStartChallenge.createCQ_RpgStartChallenge(builder,
    this.ChapterID,
    ParameterList
  );
}
}

export class SA_RpgStartChallenge implements flatbuffers.IUnpackableObject<SA_RpgStartChallengeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgStartChallenge {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgStartChallenge(bb:flatbuffers.ByteBuffer, obj?:SA_RpgStartChallenge):SA_RpgStartChallenge {
  return (obj || new SA_RpgStartChallenge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgStartChallenge(bb:flatbuffers.ByteBuffer, obj?:SA_RpgStartChallenge):SA_RpgStartChallenge {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgStartChallenge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgStartChallenge';
}

static startSA_RpgStartChallenge(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(0, ChapterID, 0);
}

static endSA_RpgStartChallenge(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgStartChallenge(builder:flatbuffers.Builder, ChapterID:number):flatbuffers.Offset {
  SA_RpgStartChallenge.startSA_RpgStartChallenge(builder);
  SA_RpgStartChallenge.add_ChapterID(builder, ChapterID);
  return SA_RpgStartChallenge.endSA_RpgStartChallenge(builder);
}

unpack(): SA_RpgStartChallengeT {
  return new SA_RpgStartChallengeT(
    this.ChapterID()
  );
}


unpackTo(_o: SA_RpgStartChallengeT): void {
  _o.ChapterID = this.ChapterID();
}
}

export class SA_RpgStartChallengeT implements flatbuffers.IGeneratedObject {
constructor(
  public ChapterID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_RpgStartChallenge.createSA_RpgStartChallenge(builder,
    this.ChapterID
  );
}
}

export class CQ_EnterTrainingRoom implements flatbuffers.IUnpackableObject<CQ_EnterTrainingRoomT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EnterTrainingRoom {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EnterTrainingRoom(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterTrainingRoom):CQ_EnterTrainingRoom {
  return (obj || new CQ_EnterTrainingRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EnterTrainingRoom(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterTrainingRoom):CQ_EnterTrainingRoom {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EnterTrainingRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EnterTrainingRoom';
}

static startCQ_EnterTrainingRoom(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_EnterTrainingRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EnterTrainingRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_EnterTrainingRoom.startCQ_EnterTrainingRoom(builder);
  return CQ_EnterTrainingRoom.endCQ_EnterTrainingRoom(builder);
}

unpack(): CQ_EnterTrainingRoomT {
  return new CQ_EnterTrainingRoomT();
}


unpackTo(_o: CQ_EnterTrainingRoomT): void {}
}

export class CQ_EnterTrainingRoomT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EnterTrainingRoom.createCQ_EnterTrainingRoom(builder);
}
}

export class SA_EnterTrainingRoom implements flatbuffers.IUnpackableObject<SA_EnterTrainingRoomT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EnterTrainingRoom {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EnterTrainingRoom(bb:flatbuffers.ByteBuffer, obj?:SA_EnterTrainingRoom):SA_EnterTrainingRoom {
  return (obj || new SA_EnterTrainingRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EnterTrainingRoom(bb:flatbuffers.ByteBuffer, obj?:SA_EnterTrainingRoom):SA_EnterTrainingRoom {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EnterTrainingRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EnterTrainingRoom';
}

static startSA_EnterTrainingRoom(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_EnterTrainingRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EnterTrainingRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_EnterTrainingRoom.startSA_EnterTrainingRoom(builder);
  return SA_EnterTrainingRoom.endSA_EnterTrainingRoom(builder);
}

unpack(): SA_EnterTrainingRoomT {
  return new SA_EnterTrainingRoomT();
}


unpackTo(_o: SA_EnterTrainingRoomT): void {}
}

export class SA_EnterTrainingRoomT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_EnterTrainingRoom.createSA_EnterTrainingRoom(builder);
}
}

export class CQ_EnterRpgCamp implements flatbuffers.IUnpackableObject<CQ_EnterRpgCampT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EnterRpgCamp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EnterRpgCamp(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterRpgCamp):CQ_EnterRpgCamp {
  return (obj || new CQ_EnterRpgCamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EnterRpgCamp(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterRpgCamp):CQ_EnterRpgCamp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EnterRpgCamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EnterRpgCamp';
}

static startCQ_EnterRpgCamp(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_EnterRpgCamp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EnterRpgCamp(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_EnterRpgCamp.startCQ_EnterRpgCamp(builder);
  return CQ_EnterRpgCamp.endCQ_EnterRpgCamp(builder);
}

unpack(): CQ_EnterRpgCampT {
  return new CQ_EnterRpgCampT();
}


unpackTo(_o: CQ_EnterRpgCampT): void {}
}

export class CQ_EnterRpgCampT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EnterRpgCamp.createCQ_EnterRpgCamp(builder);
}
}

export class SA_EnterRpgCamp implements flatbuffers.IUnpackableObject<SA_EnterRpgCampT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EnterRpgCamp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EnterRpgCamp(bb:flatbuffers.ByteBuffer, obj?:SA_EnterRpgCamp):SA_EnterRpgCamp {
  return (obj || new SA_EnterRpgCamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EnterRpgCamp(bb:flatbuffers.ByteBuffer, obj?:SA_EnterRpgCamp):SA_EnterRpgCamp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EnterRpgCamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EnterRpgCamp';
}

static startSA_EnterRpgCamp(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_EnterRpgCamp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EnterRpgCamp(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_EnterRpgCamp.startSA_EnterRpgCamp(builder);
  return SA_EnterRpgCamp.endSA_EnterRpgCamp(builder);
}

unpack(): SA_EnterRpgCampT {
  return new SA_EnterRpgCampT();
}


unpackTo(_o: SA_EnterRpgCampT): void {}
}

export class SA_EnterRpgCampT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_EnterRpgCamp.createSA_EnterRpgCamp(builder);
}
}

export class CQ_EnterGoldClashTutorial implements flatbuffers.IUnpackableObject<CQ_EnterGoldClashTutorialT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EnterGoldClashTutorial {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EnterGoldClashTutorial(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterGoldClashTutorial):CQ_EnterGoldClashTutorial {
  return (obj || new CQ_EnterGoldClashTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EnterGoldClashTutorial(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterGoldClashTutorial):CQ_EnterGoldClashTutorial {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EnterGoldClashTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EnterGoldClashTutorial';
}

static startCQ_EnterGoldClashTutorial(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_EnterGoldClashTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EnterGoldClashTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_EnterGoldClashTutorial.startCQ_EnterGoldClashTutorial(builder);
  return CQ_EnterGoldClashTutorial.endCQ_EnterGoldClashTutorial(builder);
}

unpack(): CQ_EnterGoldClashTutorialT {
  return new CQ_EnterGoldClashTutorialT();
}


unpackTo(_o: CQ_EnterGoldClashTutorialT): void {}
}

export class CQ_EnterGoldClashTutorialT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EnterGoldClashTutorial.createCQ_EnterGoldClashTutorial(builder);
}
}

export class SA_EnterGoldClashTutorial implements flatbuffers.IUnpackableObject<SA_EnterGoldClashTutorialT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EnterGoldClashTutorial {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EnterGoldClashTutorial(bb:flatbuffers.ByteBuffer, obj?:SA_EnterGoldClashTutorial):SA_EnterGoldClashTutorial {
  return (obj || new SA_EnterGoldClashTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EnterGoldClashTutorial(bb:flatbuffers.ByteBuffer, obj?:SA_EnterGoldClashTutorial):SA_EnterGoldClashTutorial {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EnterGoldClashTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EnterGoldClashTutorial';
}

static startSA_EnterGoldClashTutorial(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_EnterGoldClashTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EnterGoldClashTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_EnterGoldClashTutorial.startSA_EnterGoldClashTutorial(builder);
  return SA_EnterGoldClashTutorial.endSA_EnterGoldClashTutorial(builder);
}

unpack(): SA_EnterGoldClashTutorialT {
  return new SA_EnterGoldClashTutorialT();
}


unpackTo(_o: SA_EnterGoldClashTutorialT): void {}
}

export class SA_EnterGoldClashTutorialT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_EnterGoldClashTutorial.createSA_EnterGoldClashTutorial(builder);
}
}

export class CQ_EnterRpgTutorial implements flatbuffers.IUnpackableObject<CQ_EnterRpgTutorialT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EnterRpgTutorial {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EnterRpgTutorial(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterRpgTutorial):CQ_EnterRpgTutorial {
  return (obj || new CQ_EnterRpgTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EnterRpgTutorial(bb:flatbuffers.ByteBuffer, obj?:CQ_EnterRpgTutorial):CQ_EnterRpgTutorial {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EnterRpgTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EnterRpgTutorial';
}

static startCQ_EnterRpgTutorial(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_EnterRpgTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EnterRpgTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_EnterRpgTutorial.startCQ_EnterRpgTutorial(builder);
  return CQ_EnterRpgTutorial.endCQ_EnterRpgTutorial(builder);
}

unpack(): CQ_EnterRpgTutorialT {
  return new CQ_EnterRpgTutorialT();
}


unpackTo(_o: CQ_EnterRpgTutorialT): void {}
}

export class CQ_EnterRpgTutorialT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EnterRpgTutorial.createCQ_EnterRpgTutorial(builder);
}
}

export class SA_EnterRpgTutorial implements flatbuffers.IUnpackableObject<SA_EnterRpgTutorialT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EnterRpgTutorial {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EnterRpgTutorial(bb:flatbuffers.ByteBuffer, obj?:SA_EnterRpgTutorial):SA_EnterRpgTutorial {
  return (obj || new SA_EnterRpgTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EnterRpgTutorial(bb:flatbuffers.ByteBuffer, obj?:SA_EnterRpgTutorial):SA_EnterRpgTutorial {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EnterRpgTutorial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EnterRpgTutorial';
}

static startSA_EnterRpgTutorial(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_EnterRpgTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EnterRpgTutorial(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_EnterRpgTutorial.startSA_EnterRpgTutorial(builder);
  return SA_EnterRpgTutorial.endSA_EnterRpgTutorial(builder);
}

unpack(): SA_EnterRpgTutorialT {
  return new SA_EnterRpgTutorialT();
}


unpackTo(_o: SA_EnterRpgTutorialT): void {}
}

export class SA_EnterRpgTutorialT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_EnterRpgTutorial.createSA_EnterRpgTutorial(builder);
}
}

export class CQ_GetOpenWorldInfo implements flatbuffers.IUnpackableObject<CQ_GetOpenWorldInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GetOpenWorldInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GetOpenWorldInfo(bb:flatbuffers.ByteBuffer, obj?:CQ_GetOpenWorldInfo):CQ_GetOpenWorldInfo {
  return (obj || new CQ_GetOpenWorldInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GetOpenWorldInfo(bb:flatbuffers.ByteBuffer, obj?:CQ_GetOpenWorldInfo):CQ_GetOpenWorldInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GetOpenWorldInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GetOpenWorldInfo';
}

static startCQ_GetOpenWorldInfo(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_GetOpenWorldInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GetOpenWorldInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_GetOpenWorldInfo.startCQ_GetOpenWorldInfo(builder);
  return CQ_GetOpenWorldInfo.endCQ_GetOpenWorldInfo(builder);
}

unpack(): CQ_GetOpenWorldInfoT {
  return new CQ_GetOpenWorldInfoT();
}


unpackTo(_o: CQ_GetOpenWorldInfoT): void {}
}

export class CQ_GetOpenWorldInfoT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GetOpenWorldInfo.createCQ_GetOpenWorldInfo(builder);
}
}

export class SA_GetOpenWorldInfo implements flatbuffers.IUnpackableObject<SA_GetOpenWorldInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GetOpenWorldInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GetOpenWorldInfo(bb:flatbuffers.ByteBuffer, obj?:SA_GetOpenWorldInfo):SA_GetOpenWorldInfo {
  return (obj || new SA_GetOpenWorldInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GetOpenWorldInfo(bb:flatbuffers.ByteBuffer, obj?:SA_GetOpenWorldInfo):SA_GetOpenWorldInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GetOpenWorldInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GetOpenWorldInfo';
}

static startSA_GetOpenWorldInfo(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_GetOpenWorldInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GetOpenWorldInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_GetOpenWorldInfo.startSA_GetOpenWorldInfo(builder);
  return SA_GetOpenWorldInfo.endSA_GetOpenWorldInfo(builder);
}

unpack(): SA_GetOpenWorldInfoT {
  return new SA_GetOpenWorldInfoT();
}


unpackTo(_o: SA_GetOpenWorldInfoT): void {}
}

export class SA_GetOpenWorldInfoT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_GetOpenWorldInfo.createSA_GetOpenWorldInfo(builder);
}
}

export class CQ_GetOpenWorldInfoEditor implements flatbuffers.IUnpackableObject<CQ_GetOpenWorldInfoEditorT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GetOpenWorldInfoEditor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GetOpenWorldInfoEditor(bb:flatbuffers.ByteBuffer, obj?:CQ_GetOpenWorldInfoEditor):CQ_GetOpenWorldInfoEditor {
  return (obj || new CQ_GetOpenWorldInfoEditor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GetOpenWorldInfoEditor(bb:flatbuffers.ByteBuffer, obj?:CQ_GetOpenWorldInfoEditor):CQ_GetOpenWorldInfoEditor {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GetOpenWorldInfoEditor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ServerUrl():string|null
ServerUrl(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ServerUrl(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GetOpenWorldInfoEditor';
}

static startCQ_GetOpenWorldInfoEditor(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DedicatedIDOffset, 0);
}

static add_ServerUrl(builder:flatbuffers.Builder, ServerUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ServerUrlOffset, 0);
}

static endCQ_GetOpenWorldInfoEditor(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GetOpenWorldInfoEditor(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset, ServerUrlOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_GetOpenWorldInfoEditor.startCQ_GetOpenWorldInfoEditor(builder);
  CQ_GetOpenWorldInfoEditor.add_DedicatedID(builder, DedicatedIDOffset);
  CQ_GetOpenWorldInfoEditor.add_ServerUrl(builder, ServerUrlOffset);
  return CQ_GetOpenWorldInfoEditor.endCQ_GetOpenWorldInfoEditor(builder);
}

unpack(): CQ_GetOpenWorldInfoEditorT {
  return new CQ_GetOpenWorldInfoEditorT(
    this.DedicatedID(),
    this.ServerUrl()
  );
}


unpackTo(_o: CQ_GetOpenWorldInfoEditorT): void {
  _o.DedicatedID = this.DedicatedID();
  _o.ServerUrl = this.ServerUrl();
}
}

export class CQ_GetOpenWorldInfoEditorT implements flatbuffers.IGeneratedObject {
constructor(
  public DedicatedID: string|Uint8Array|null = null,
  public ServerUrl: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const ServerUrl = (this.ServerUrl !== null ? builder.createString(this.ServerUrl!) : 0);

  return CQ_GetOpenWorldInfoEditor.createCQ_GetOpenWorldInfoEditor(builder,
    DedicatedID,
    ServerUrl
  );
}
}

export class SA_GetOpenWorldInfoEditor implements flatbuffers.IUnpackableObject<SA_GetOpenWorldInfoEditorT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GetOpenWorldInfoEditor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GetOpenWorldInfoEditor(bb:flatbuffers.ByteBuffer, obj?:SA_GetOpenWorldInfoEditor):SA_GetOpenWorldInfoEditor {
  return (obj || new SA_GetOpenWorldInfoEditor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GetOpenWorldInfoEditor(bb:flatbuffers.ByteBuffer, obj?:SA_GetOpenWorldInfoEditor):SA_GetOpenWorldInfoEditor {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GetOpenWorldInfoEditor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GetOpenWorldInfoEditor';
}

static startSA_GetOpenWorldInfoEditor(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_GetOpenWorldInfoEditor(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GetOpenWorldInfoEditor(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_GetOpenWorldInfoEditor.startSA_GetOpenWorldInfoEditor(builder);
  return SA_GetOpenWorldInfoEditor.endSA_GetOpenWorldInfoEditor(builder);
}

unpack(): SA_GetOpenWorldInfoEditorT {
  return new SA_GetOpenWorldInfoEditorT();
}


unpackTo(_o: SA_GetOpenWorldInfoEditorT): void {}
}

export class SA_GetOpenWorldInfoEditorT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_GetOpenWorldInfoEditor.createSA_GetOpenWorldInfoEditor(builder);
}
}

export class CQ_PingLog implements flatbuffers.IUnpackableObject<CQ_PingLogT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PingLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PingLog(bb:flatbuffers.ByteBuffer, obj?:CQ_PingLog):CQ_PingLog {
  return (obj || new CQ_PingLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PingLog(bb:flatbuffers.ByteBuffer, obj?:CQ_PingLog):CQ_PingLog {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PingLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

ServerIP():string|null
ServerIP(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ServerIP(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

PingAvg():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PingMin():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

PingMax():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PingLog';
}

static startCQ_PingLog(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(0, ContentsType, EContentsType.None);
}

static add_ServerIP(builder:flatbuffers.Builder, ServerIPOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ServerIPOffset, 0);
}

static add_PingAvg(builder:flatbuffers.Builder, PingAvg:number) {
  builder.addFieldFloat32(2, PingAvg, 0.0);
}

static add_PingMin(builder:flatbuffers.Builder, PingMin:number) {
  builder.addFieldFloat32(3, PingMin, 0.0);
}

static add_PingMax(builder:flatbuffers.Builder, PingMax:number) {
  builder.addFieldFloat32(4, PingMax, 0.0);
}

static endCQ_PingLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PingLog(builder:flatbuffers.Builder, ContentsType:EContentsType, ServerIPOffset:flatbuffers.Offset, PingAvg:number, PingMin:number, PingMax:number):flatbuffers.Offset {
  CQ_PingLog.startCQ_PingLog(builder);
  CQ_PingLog.add_ContentsType(builder, ContentsType);
  CQ_PingLog.add_ServerIP(builder, ServerIPOffset);
  CQ_PingLog.add_PingAvg(builder, PingAvg);
  CQ_PingLog.add_PingMin(builder, PingMin);
  CQ_PingLog.add_PingMax(builder, PingMax);
  return CQ_PingLog.endCQ_PingLog(builder);
}

unpack(): CQ_PingLogT {
  return new CQ_PingLogT(
    this.ContentsType(),
    this.ServerIP(),
    this.PingAvg(),
    this.PingMin(),
    this.PingMax()
  );
}


unpackTo(_o: CQ_PingLogT): void {
  _o.ContentsType = this.ContentsType();
  _o.ServerIP = this.ServerIP();
  _o.PingAvg = this.PingAvg();
  _o.PingMin = this.PingMin();
  _o.PingMax = this.PingMax();
}
}

export class CQ_PingLogT implements flatbuffers.IGeneratedObject {
constructor(
  public ContentsType: EContentsType = EContentsType.None,
  public ServerIP: string|Uint8Array|null = null,
  public PingAvg: number = 0.0,
  public PingMin: number = 0.0,
  public PingMax: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ServerIP = (this.ServerIP !== null ? builder.createString(this.ServerIP!) : 0);

  return CQ_PingLog.createCQ_PingLog(builder,
    this.ContentsType,
    ServerIP,
    this.PingAvg,
    this.PingMin,
    this.PingMax
  );
}
}

export class SA_PingLog implements flatbuffers.IUnpackableObject<SA_PingLogT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PingLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PingLog(bb:flatbuffers.ByteBuffer, obj?:SA_PingLog):SA_PingLog {
  return (obj || new SA_PingLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PingLog(bb:flatbuffers.ByteBuffer, obj?:SA_PingLog):SA_PingLog {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PingLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PingLog';
}

static startSA_PingLog(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_PingLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PingLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_PingLog.startSA_PingLog(builder);
  return SA_PingLog.endSA_PingLog(builder);
}

unpack(): SA_PingLogT {
  return new SA_PingLogT();
}


unpackTo(_o: SA_PingLogT): void {}
}

export class SA_PingLogT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PingLog.createSA_PingLog(builder);
}
}

export class SN_EnterMultiMode implements flatbuffers.IUnpackableObject<SN_EnterMultiModeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_EnterMultiMode {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_EnterMultiMode(bb:flatbuffers.ByteBuffer, obj?:SN_EnterMultiMode):SN_EnterMultiMode {
  return (obj || new SN_EnterMultiMode()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_EnterMultiMode(bb:flatbuffers.ByteBuffer, obj?:SN_EnterMultiMode):SN_EnterMultiMode {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_EnterMultiMode()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ServerUrl():string|null
ServerUrl(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ServerUrl(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

PlayerSessionID():string|null
PlayerSessionID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PlayerSessionID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

FriendUserName():string|null
FriendUserName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
FriendUserName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsCustomGame():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_EnterMultiMode';
}

static startSN_EnterMultiMode(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(0, ContentsType, EContentsType.None);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TeamIDOffset, 0);
}

static add_ServerUrl(builder:flatbuffers.Builder, ServerUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ServerUrlOffset, 0);
}

static add_PlayerSessionID(builder:flatbuffers.Builder, PlayerSessionIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, PlayerSessionIDOffset, 0);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, DedicatedIDOffset, 0);
}

static add_FriendUserName(builder:flatbuffers.Builder, FriendUserNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, FriendUserNameOffset, 0);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, MatchIDOffset, 0);
}

static add_IsCustomGame(builder:flatbuffers.Builder, IsCustomGame:boolean) {
  builder.addFieldInt8(7, +IsCustomGame, +false);
}

static endSN_EnterMultiMode(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_EnterMultiMode(builder:flatbuffers.Builder, ContentsType:EContentsType, TeamIDOffset:flatbuffers.Offset, ServerUrlOffset:flatbuffers.Offset, PlayerSessionIDOffset:flatbuffers.Offset, DedicatedIDOffset:flatbuffers.Offset, FriendUserNameOffset:flatbuffers.Offset, MatchIDOffset:flatbuffers.Offset, IsCustomGame:boolean):flatbuffers.Offset {
  SN_EnterMultiMode.startSN_EnterMultiMode(builder);
  SN_EnterMultiMode.add_ContentsType(builder, ContentsType);
  SN_EnterMultiMode.add_TeamID(builder, TeamIDOffset);
  SN_EnterMultiMode.add_ServerUrl(builder, ServerUrlOffset);
  SN_EnterMultiMode.add_PlayerSessionID(builder, PlayerSessionIDOffset);
  SN_EnterMultiMode.add_DedicatedID(builder, DedicatedIDOffset);
  SN_EnterMultiMode.add_FriendUserName(builder, FriendUserNameOffset);
  SN_EnterMultiMode.add_MatchID(builder, MatchIDOffset);
  SN_EnterMultiMode.add_IsCustomGame(builder, IsCustomGame);
  return SN_EnterMultiMode.endSN_EnterMultiMode(builder);
}

unpack(): SN_EnterMultiModeT {
  return new SN_EnterMultiModeT(
    this.ContentsType(),
    this.TeamID(),
    this.ServerUrl(),
    this.PlayerSessionID(),
    this.DedicatedID(),
    this.FriendUserName(),
    this.MatchID(),
    this.IsCustomGame()
  );
}


unpackTo(_o: SN_EnterMultiModeT): void {
  _o.ContentsType = this.ContentsType();
  _o.TeamID = this.TeamID();
  _o.ServerUrl = this.ServerUrl();
  _o.PlayerSessionID = this.PlayerSessionID();
  _o.DedicatedID = this.DedicatedID();
  _o.FriendUserName = this.FriendUserName();
  _o.MatchID = this.MatchID();
  _o.IsCustomGame = this.IsCustomGame();
}
}

export class SN_EnterMultiModeT implements flatbuffers.IGeneratedObject {
constructor(
  public ContentsType: EContentsType = EContentsType.None,
  public TeamID: string|Uint8Array|null = null,
  public ServerUrl: string|Uint8Array|null = null,
  public PlayerSessionID: string|Uint8Array|null = null,
  public DedicatedID: string|Uint8Array|null = null,
  public FriendUserName: string|Uint8Array|null = null,
  public MatchID: string|Uint8Array|null = null,
  public IsCustomGame: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const ServerUrl = (this.ServerUrl !== null ? builder.createString(this.ServerUrl!) : 0);
  const PlayerSessionID = (this.PlayerSessionID !== null ? builder.createString(this.PlayerSessionID!) : 0);
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const FriendUserName = (this.FriendUserName !== null ? builder.createString(this.FriendUserName!) : 0);
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);

  return SN_EnterMultiMode.createSN_EnterMultiMode(builder,
    this.ContentsType,
    TeamID,
    ServerUrl,
    PlayerSessionID,
    DedicatedID,
    FriendUserName,
    MatchID,
    this.IsCustomGame
  );
}
}

export class CQ_RankingList implements flatbuffers.IUnpackableObject<CQ_RankingListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RankingList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RankingList(bb:flatbuffers.ByteBuffer, obj?:CQ_RankingList):CQ_RankingList {
  return (obj || new CQ_RankingList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RankingList(bb:flatbuffers.ByteBuffer, obj?:CQ_RankingList):CQ_RankingList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RankingList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RankingList';
}

static startCQ_RankingList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(0, ContentsType, EContentsType.None);
}

static endCQ_RankingList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RankingList(builder:flatbuffers.Builder, ContentsType:EContentsType):flatbuffers.Offset {
  CQ_RankingList.startCQ_RankingList(builder);
  CQ_RankingList.add_ContentsType(builder, ContentsType);
  return CQ_RankingList.endCQ_RankingList(builder);
}

unpack(): CQ_RankingListT {
  return new CQ_RankingListT(
    this.ContentsType()
  );
}


unpackTo(_o: CQ_RankingListT): void {
  _o.ContentsType = this.ContentsType();
}
}

export class CQ_RankingListT implements flatbuffers.IGeneratedObject {
constructor(
  public ContentsType: EContentsType = EContentsType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RankingList.createCQ_RankingList(builder,
    this.ContentsType
  );
}
}

export class SA_RankingList implements flatbuffers.IUnpackableObject<SA_RankingListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RankingList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RankingList(bb:flatbuffers.ByteBuffer, obj?:SA_RankingList):SA_RankingList {
  return (obj || new SA_RankingList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RankingList(bb:flatbuffers.ByteBuffer, obj?:SA_RankingList):SA_RankingList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RankingList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MyRankingInfo(obj?:RankingScoreData):RankingScoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new RankingScoreData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

TopRankingList(index: number, obj?:RankingScoreData):RankingScoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RankingScoreData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

TopRankingList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RankingList';
}

static startSA_RankingList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MyRankingInfo(builder:flatbuffers.Builder, MyRankingInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MyRankingInfoOffset, 0);
}

static add_TopRankingList(builder:flatbuffers.Builder, TopRankingListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TopRankingListOffset, 0);
}

static create_TopRankingList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_TopRankingList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(2, ContentsType, EContentsType.None);
}

static endSA_RankingList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RankingList(builder:flatbuffers.Builder, MyRankingInfoOffset:flatbuffers.Offset, TopRankingListOffset:flatbuffers.Offset, ContentsType:EContentsType):flatbuffers.Offset {
  SA_RankingList.startSA_RankingList(builder);
  SA_RankingList.add_MyRankingInfo(builder, MyRankingInfoOffset);
  SA_RankingList.add_TopRankingList(builder, TopRankingListOffset);
  SA_RankingList.add_ContentsType(builder, ContentsType);
  return SA_RankingList.endSA_RankingList(builder);
}

unpack(): SA_RankingListT {
  return new SA_RankingListT(
    (this.MyRankingInfo() !== null ? this.MyRankingInfo()!.unpack() : null),
    this.bb!.createObjList<RankingScoreData, RankingScoreDataT>(this.TopRankingList.bind(this), this.TopRankingList_Length()),
    this.ContentsType()
  );
}


unpackTo(_o: SA_RankingListT): void {
  _o.MyRankingInfo = (this.MyRankingInfo() !== null ? this.MyRankingInfo()!.unpack() : null);
  _o.TopRankingList = this.bb!.createObjList<RankingScoreData, RankingScoreDataT>(this.TopRankingList.bind(this), this.TopRankingList_Length());
  _o.ContentsType = this.ContentsType();
}
}

export class SA_RankingListT implements flatbuffers.IGeneratedObject {
constructor(
  public MyRankingInfo: RankingScoreDataT|null = null,
  public TopRankingList: (RankingScoreDataT)[] = [],
  public ContentsType: EContentsType = EContentsType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MyRankingInfo = (this.MyRankingInfo !== null ? this.MyRankingInfo!.pack(builder) : 0);
  const TopRankingList = SA_RankingList.create_TopRankingList_Vector(builder, builder.createObjectOffsetList(this.TopRankingList));

  return SA_RankingList.createSA_RankingList(builder,
    MyRankingInfo,
    TopRankingList,
    this.ContentsType
  );
}
}

export class MyRankingData implements flatbuffers.IUnpackableObject<MyRankingDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MyRankingData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMyRankingData(bb:flatbuffers.ByteBuffer, obj?:MyRankingData):MyRankingData {
  return (obj || new MyRankingData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMyRankingData(bb:flatbuffers.ByteBuffer, obj?:MyRankingData):MyRankingData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MyRankingData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

RankingData(obj?:RankingScoreData):RankingScoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RankingScoreData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.MyRankingData';
}

static startMyRankingData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(0, ContentsType, EContentsType.None);
}

static add_RankingData(builder:flatbuffers.Builder, RankingDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RankingDataOffset, 0);
}

static endMyRankingData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): MyRankingDataT {
  return new MyRankingDataT(
    this.ContentsType(),
    (this.RankingData() !== null ? this.RankingData()!.unpack() : null)
  );
}


unpackTo(_o: MyRankingDataT): void {
  _o.ContentsType = this.ContentsType();
  _o.RankingData = (this.RankingData() !== null ? this.RankingData()!.unpack() : null);
}
}

export class MyRankingDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ContentsType: EContentsType = EContentsType.None,
  public RankingData: RankingScoreDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RankingData = (this.RankingData !== null ? this.RankingData!.pack(builder) : 0);

  MyRankingData.startMyRankingData(builder);
  MyRankingData.add_ContentsType(builder, this.ContentsType);
  MyRankingData.add_RankingData(builder, RankingData);

  return MyRankingData.endMyRankingData(builder);
}
}

export class CQ_RankingMyInfo implements flatbuffers.IUnpackableObject<CQ_RankingMyInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RankingMyInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RankingMyInfo(bb:flatbuffers.ByteBuffer, obj?:CQ_RankingMyInfo):CQ_RankingMyInfo {
  return (obj || new CQ_RankingMyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RankingMyInfo(bb:flatbuffers.ByteBuffer, obj?:CQ_RankingMyInfo):CQ_RankingMyInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RankingMyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RankingMyInfo';
}

static startCQ_RankingMyInfo(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_RankingMyInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RankingMyInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_RankingMyInfo.startCQ_RankingMyInfo(builder);
  return CQ_RankingMyInfo.endCQ_RankingMyInfo(builder);
}

unpack(): CQ_RankingMyInfoT {
  return new CQ_RankingMyInfoT();
}


unpackTo(_o: CQ_RankingMyInfoT): void {}
}

export class CQ_RankingMyInfoT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RankingMyInfo.createCQ_RankingMyInfo(builder);
}
}

export class SA_RankingMyInfo implements flatbuffers.IUnpackableObject<SA_RankingMyInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RankingMyInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RankingMyInfo(bb:flatbuffers.ByteBuffer, obj?:SA_RankingMyInfo):SA_RankingMyInfo {
  return (obj || new SA_RankingMyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RankingMyInfo(bb:flatbuffers.ByteBuffer, obj?:SA_RankingMyInfo):SA_RankingMyInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RankingMyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MyRankingList(index: number, obj?:MyRankingData):MyRankingData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MyRankingData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

MyRankingList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RankingMyInfo';
}

static startSA_RankingMyInfo(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MyRankingList(builder:flatbuffers.Builder, MyRankingListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MyRankingListOffset, 0);
}

static create_MyRankingList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_MyRankingList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_RankingMyInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RankingMyInfo(builder:flatbuffers.Builder, MyRankingListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_RankingMyInfo.startSA_RankingMyInfo(builder);
  SA_RankingMyInfo.add_MyRankingList(builder, MyRankingListOffset);
  return SA_RankingMyInfo.endSA_RankingMyInfo(builder);
}

unpack(): SA_RankingMyInfoT {
  return new SA_RankingMyInfoT(
    this.bb!.createObjList<MyRankingData, MyRankingDataT>(this.MyRankingList.bind(this), this.MyRankingList_Length())
  );
}


unpackTo(_o: SA_RankingMyInfoT): void {
  _o.MyRankingList = this.bb!.createObjList<MyRankingData, MyRankingDataT>(this.MyRankingList.bind(this), this.MyRankingList_Length());
}
}

export class SA_RankingMyInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public MyRankingList: (MyRankingDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MyRankingList = SA_RankingMyInfo.create_MyRankingList_Vector(builder, builder.createObjectOffsetList(this.MyRankingList));

  return SA_RankingMyInfo.createSA_RankingMyInfo(builder,
    MyRankingList
  );
}
}

export class CQ_MissionList implements flatbuffers.IUnpackableObject<CQ_MissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MissionList(bb:flatbuffers.ByteBuffer, obj?:CQ_MissionList):CQ_MissionList {
  return (obj || new CQ_MissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MissionList(bb:flatbuffers.ByteBuffer, obj?:CQ_MissionList):CQ_MissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MissionList';
}

static startCQ_MissionList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_MissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_MissionList.startCQ_MissionList(builder);
  return CQ_MissionList.endCQ_MissionList(builder);
}

unpack(): CQ_MissionListT {
  return new CQ_MissionListT();
}


unpackTo(_o: CQ_MissionListT): void {}
}

export class CQ_MissionListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_MissionList.createCQ_MissionList(builder);
}
}

export class SA_MissionList implements flatbuffers.IUnpackableObject<SA_MissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MissionList(bb:flatbuffers.ByteBuffer, obj?:SA_MissionList):SA_MissionList {
  return (obj || new SA_MissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MissionList(bb:flatbuffers.ByteBuffer, obj?:SA_MissionList):SA_MissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MissionList(index: number, obj?:MissionData):MissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MissionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;
}

MissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DailyMissionResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonMissionAddAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MissionList';
}

static startSA_MissionList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MissionListOffset, 0);
}

static start_MissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(20, numElems, 4);
}

static add_DailyMissionResetAt(builder:flatbuffers.Builder, DailyMissionResetAt:number) {
  builder.addFieldInt32(1, DailyMissionResetAt, 0);
}

static add_SeasonMissionAddAt(builder:flatbuffers.Builder, SeasonMissionAddAt:number) {
  builder.addFieldInt32(2, SeasonMissionAddAt, 0);
}

static endSA_MissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset, DailyMissionResetAt:number, SeasonMissionAddAt:number):flatbuffers.Offset {
  SA_MissionList.startSA_MissionList(builder);
  SA_MissionList.add_MissionList(builder, MissionListOffset);
  SA_MissionList.add_DailyMissionResetAt(builder, DailyMissionResetAt);
  SA_MissionList.add_SeasonMissionAddAt(builder, SeasonMissionAddAt);
  return SA_MissionList.endSA_MissionList(builder);
}

unpack(): SA_MissionListT {
  return new SA_MissionListT(
    this.bb!.createObjList<MissionData, MissionDataT>(this.MissionList.bind(this), this.MissionList_Length()),
    this.DailyMissionResetAt(),
    this.SeasonMissionAddAt()
  );
}


unpackTo(_o: SA_MissionListT): void {
  _o.MissionList = this.bb!.createObjList<MissionData, MissionDataT>(this.MissionList.bind(this), this.MissionList_Length());
  _o.DailyMissionResetAt = this.DailyMissionResetAt();
  _o.SeasonMissionAddAt = this.SeasonMissionAddAt();
}
}

export class SA_MissionListT implements flatbuffers.IGeneratedObject {
constructor(
  public MissionList: (MissionDataT)[] = [],
  public DailyMissionResetAt: number = 0,
  public SeasonMissionAddAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MissionList = builder.createStructOffsetList(this.MissionList, SA_MissionList.start_MissionList_Vector);

  return SA_MissionList.createSA_MissionList(builder,
    MissionList,
    this.DailyMissionResetAt,
    this.SeasonMissionAddAt
  );
}
}

export class SN_MissionList implements flatbuffers.IUnpackableObject<SN_MissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MissionList(bb:flatbuffers.ByteBuffer, obj?:SN_MissionList):SN_MissionList {
  return (obj || new SN_MissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MissionList(bb:flatbuffers.ByteBuffer, obj?:SN_MissionList):SN_MissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MissionList(index: number, obj?:MissionData):MissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MissionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;
}

MissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DailyMissionResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonMissionAddAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MissionList';
}

static startSN_MissionList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MissionListOffset, 0);
}

static start_MissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(20, numElems, 4);
}

static add_DailyMissionResetAt(builder:flatbuffers.Builder, DailyMissionResetAt:number) {
  builder.addFieldInt32(1, DailyMissionResetAt, 0);
}

static add_SeasonMissionAddAt(builder:flatbuffers.Builder, SeasonMissionAddAt:number) {
  builder.addFieldInt32(2, SeasonMissionAddAt, 0);
}

static endSN_MissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset, DailyMissionResetAt:number, SeasonMissionAddAt:number):flatbuffers.Offset {
  SN_MissionList.startSN_MissionList(builder);
  SN_MissionList.add_MissionList(builder, MissionListOffset);
  SN_MissionList.add_DailyMissionResetAt(builder, DailyMissionResetAt);
  SN_MissionList.add_SeasonMissionAddAt(builder, SeasonMissionAddAt);
  return SN_MissionList.endSN_MissionList(builder);
}

unpack(): SN_MissionListT {
  return new SN_MissionListT(
    this.bb!.createObjList<MissionData, MissionDataT>(this.MissionList.bind(this), this.MissionList_Length()),
    this.DailyMissionResetAt(),
    this.SeasonMissionAddAt()
  );
}


unpackTo(_o: SN_MissionListT): void {
  _o.MissionList = this.bb!.createObjList<MissionData, MissionDataT>(this.MissionList.bind(this), this.MissionList_Length());
  _o.DailyMissionResetAt = this.DailyMissionResetAt();
  _o.SeasonMissionAddAt = this.SeasonMissionAddAt();
}
}

export class SN_MissionListT implements flatbuffers.IGeneratedObject {
constructor(
  public MissionList: (MissionDataT)[] = [],
  public DailyMissionResetAt: number = 0,
  public SeasonMissionAddAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MissionList = builder.createStructOffsetList(this.MissionList, SN_MissionList.start_MissionList_Vector);

  return SN_MissionList.createSN_MissionList(builder,
    MissionList,
    this.DailyMissionResetAt,
    this.SeasonMissionAddAt
  );
}
}

export class CQ_MissionAddCount implements flatbuffers.IUnpackableObject<CQ_MissionAddCountT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MissionAddCount {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MissionAddCount(bb:flatbuffers.ByteBuffer, obj?:CQ_MissionAddCount):CQ_MissionAddCount {
  return (obj || new CQ_MissionAddCount()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MissionAddCount(bb:flatbuffers.ByteBuffer, obj?:CQ_MissionAddCount):CQ_MissionAddCount {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MissionAddCount()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AddList(index: number, obj?:MissionAddCountData):MissionAddCountData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MissionAddCountData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

AddList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MissionAddCount';
}

static startCQ_MissionAddCount(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AddList(builder:flatbuffers.Builder, AddListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AddListOffset, 0);
}

static start_AddList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endCQ_MissionAddCount(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MissionAddCount(builder:flatbuffers.Builder, AddListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_MissionAddCount.startCQ_MissionAddCount(builder);
  CQ_MissionAddCount.add_AddList(builder, AddListOffset);
  return CQ_MissionAddCount.endCQ_MissionAddCount(builder);
}

unpack(): CQ_MissionAddCountT {
  return new CQ_MissionAddCountT(
    this.bb!.createObjList<MissionAddCountData, MissionAddCountDataT>(this.AddList.bind(this), this.AddList_Length())
  );
}


unpackTo(_o: CQ_MissionAddCountT): void {
  _o.AddList = this.bb!.createObjList<MissionAddCountData, MissionAddCountDataT>(this.AddList.bind(this), this.AddList_Length());
}
}

export class CQ_MissionAddCountT implements flatbuffers.IGeneratedObject {
constructor(
  public AddList: (MissionAddCountDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AddList = builder.createStructOffsetList(this.AddList, CQ_MissionAddCount.start_AddList_Vector);

  return CQ_MissionAddCount.createCQ_MissionAddCount(builder,
    AddList
  );
}
}

export class SA_MissionAddCount implements flatbuffers.IUnpackableObject<SA_MissionAddCountT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MissionAddCount {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MissionAddCount(bb:flatbuffers.ByteBuffer, obj?:SA_MissionAddCount):SA_MissionAddCount {
  return (obj || new SA_MissionAddCount()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MissionAddCount(bb:flatbuffers.ByteBuffer, obj?:SA_MissionAddCount):SA_MissionAddCount {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MissionAddCount()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MissionAddCount';
}

static startSA_MissionAddCount(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_MissionAddCount(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MissionAddCount(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_MissionAddCount.startSA_MissionAddCount(builder);
  return SA_MissionAddCount.endSA_MissionAddCount(builder);
}

unpack(): SA_MissionAddCountT {
  return new SA_MissionAddCountT();
}


unpackTo(_o: SA_MissionAddCountT): void {}
}

export class SA_MissionAddCountT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_MissionAddCount.createSA_MissionAddCount(builder);
}
}

export class SN_ResetMissionList implements flatbuffers.IUnpackableObject<SN_ResetMissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_ResetMissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_ResetMissionList(bb:flatbuffers.ByteBuffer, obj?:SN_ResetMissionList):SN_ResetMissionList {
  return (obj || new SN_ResetMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_ResetMissionList(bb:flatbuffers.ByteBuffer, obj?:SN_ResetMissionList):SN_ResetMissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_ResetMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MissionList(index: number, obj?:MissionData):MissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MissionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;
}

MissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DailyMissionResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonMissionAddAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_ResetMissionList';
}

static startSN_ResetMissionList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MissionListOffset, 0);
}

static start_MissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(20, numElems, 4);
}

static add_DailyMissionResetAt(builder:flatbuffers.Builder, DailyMissionResetAt:number) {
  builder.addFieldInt32(1, DailyMissionResetAt, 0);
}

static add_SeasonMissionAddAt(builder:flatbuffers.Builder, SeasonMissionAddAt:number) {
  builder.addFieldInt32(2, SeasonMissionAddAt, 0);
}

static endSN_ResetMissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_ResetMissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset, DailyMissionResetAt:number, SeasonMissionAddAt:number):flatbuffers.Offset {
  SN_ResetMissionList.startSN_ResetMissionList(builder);
  SN_ResetMissionList.add_MissionList(builder, MissionListOffset);
  SN_ResetMissionList.add_DailyMissionResetAt(builder, DailyMissionResetAt);
  SN_ResetMissionList.add_SeasonMissionAddAt(builder, SeasonMissionAddAt);
  return SN_ResetMissionList.endSN_ResetMissionList(builder);
}

unpack(): SN_ResetMissionListT {
  return new SN_ResetMissionListT(
    this.bb!.createObjList<MissionData, MissionDataT>(this.MissionList.bind(this), this.MissionList_Length()),
    this.DailyMissionResetAt(),
    this.SeasonMissionAddAt()
  );
}


unpackTo(_o: SN_ResetMissionListT): void {
  _o.MissionList = this.bb!.createObjList<MissionData, MissionDataT>(this.MissionList.bind(this), this.MissionList_Length());
  _o.DailyMissionResetAt = this.DailyMissionResetAt();
  _o.SeasonMissionAddAt = this.SeasonMissionAddAt();
}
}

export class SN_ResetMissionListT implements flatbuffers.IGeneratedObject {
constructor(
  public MissionList: (MissionDataT)[] = [],
  public DailyMissionResetAt: number = 0,
  public SeasonMissionAddAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MissionList = builder.createStructOffsetList(this.MissionList, SN_ResetMissionList.start_MissionList_Vector);

  return SN_ResetMissionList.createSN_ResetMissionList(builder,
    MissionList,
    this.DailyMissionResetAt,
    this.SeasonMissionAddAt
  );
}
}

export class CQ_EntitlementList implements flatbuffers.IUnpackableObject<CQ_EntitlementListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EntitlementList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EntitlementList(bb:flatbuffers.ByteBuffer, obj?:CQ_EntitlementList):CQ_EntitlementList {
  return (obj || new CQ_EntitlementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EntitlementList(bb:flatbuffers.ByteBuffer, obj?:CQ_EntitlementList):CQ_EntitlementList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EntitlementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EntitlementList';
}

static startCQ_EntitlementList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_EntitlementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EntitlementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_EntitlementList.startCQ_EntitlementList(builder);
  return CQ_EntitlementList.endCQ_EntitlementList(builder);
}

unpack(): CQ_EntitlementListT {
  return new CQ_EntitlementListT();
}


unpackTo(_o: CQ_EntitlementListT): void {}
}

export class CQ_EntitlementListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EntitlementList.createCQ_EntitlementList(builder);
}
}

export class SA_EntitlementList implements flatbuffers.IUnpackableObject<SA_EntitlementListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EntitlementList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EntitlementList(bb:flatbuffers.ByteBuffer, obj?:SA_EntitlementList):SA_EntitlementList {
  return (obj || new SA_EntitlementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EntitlementList(bb:flatbuffers.ByteBuffer, obj?:SA_EntitlementList):SA_EntitlementList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EntitlementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

EntitlementList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

EntitlementList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

EntitlementList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EntitlementList';
}

static startSA_EntitlementList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_EntitlementList(builder:flatbuffers.Builder, EntitlementListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, EntitlementListOffset, 0);
}

static create_EntitlementList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_EntitlementList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_EntitlementList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_EntitlementList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_EntitlementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EntitlementList(builder:flatbuffers.Builder, EntitlementListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_EntitlementList.startSA_EntitlementList(builder);
  SA_EntitlementList.add_EntitlementList(builder, EntitlementListOffset);
  return SA_EntitlementList.endSA_EntitlementList(builder);
}

unpack(): SA_EntitlementListT {
  return new SA_EntitlementListT(
    this.bb!.createScalarList<number>(this.EntitlementList.bind(this), this.EntitlementList_Length())
  );
}


unpackTo(_o: SA_EntitlementListT): void {
  _o.EntitlementList = this.bb!.createScalarList<number>(this.EntitlementList.bind(this), this.EntitlementList_Length());
}
}

export class SA_EntitlementListT implements flatbuffers.IGeneratedObject {
constructor(
  public EntitlementList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const EntitlementList = SA_EntitlementList.create_EntitlementList_Vector(builder, this.EntitlementList);

  return SA_EntitlementList.createSA_EntitlementList(builder,
    EntitlementList
  );
}
}

export class CQ_EntitlementReward implements flatbuffers.IUnpackableObject<CQ_EntitlementRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_EntitlementReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_EntitlementReward(bb:flatbuffers.ByteBuffer, obj?:CQ_EntitlementReward):CQ_EntitlementReward {
  return (obj || new CQ_EntitlementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_EntitlementReward(bb:flatbuffers.ByteBuffer, obj?:CQ_EntitlementReward):CQ_EntitlementReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_EntitlementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AchievementGroupID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_EntitlementReward';
}

static startCQ_EntitlementReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AchievementGroupID(builder:flatbuffers.Builder, AchievementGroupID:number) {
  builder.addFieldInt32(0, AchievementGroupID, 0);
}

static endCQ_EntitlementReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_EntitlementReward(builder:flatbuffers.Builder, AchievementGroupID:number):flatbuffers.Offset {
  CQ_EntitlementReward.startCQ_EntitlementReward(builder);
  CQ_EntitlementReward.add_AchievementGroupID(builder, AchievementGroupID);
  return CQ_EntitlementReward.endCQ_EntitlementReward(builder);
}

unpack(): CQ_EntitlementRewardT {
  return new CQ_EntitlementRewardT(
    this.AchievementGroupID()
  );
}


unpackTo(_o: CQ_EntitlementRewardT): void {
  _o.AchievementGroupID = this.AchievementGroupID();
}
}

export class CQ_EntitlementRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public AchievementGroupID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_EntitlementReward.createCQ_EntitlementReward(builder,
    this.AchievementGroupID
  );
}
}

export class SA_EntitlementReward implements flatbuffers.IUnpackableObject<SA_EntitlementRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_EntitlementReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_EntitlementReward(bb:flatbuffers.ByteBuffer, obj?:SA_EntitlementReward):SA_EntitlementReward {
  return (obj || new SA_EntitlementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_EntitlementReward(bb:flatbuffers.ByteBuffer, obj?:SA_EntitlementReward):SA_EntitlementReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_EntitlementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_EntitlementReward';
}

static startSA_EntitlementReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(0, EntitlementID, 0);
}

static endSA_EntitlementReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_EntitlementReward(builder:flatbuffers.Builder, EntitlementID:number):flatbuffers.Offset {
  SA_EntitlementReward.startSA_EntitlementReward(builder);
  SA_EntitlementReward.add_EntitlementID(builder, EntitlementID);
  return SA_EntitlementReward.endSA_EntitlementReward(builder);
}

unpack(): SA_EntitlementRewardT {
  return new SA_EntitlementRewardT(
    this.EntitlementID()
  );
}


unpackTo(_o: SA_EntitlementRewardT): void {
  _o.EntitlementID = this.EntitlementID();
}
}

export class SA_EntitlementRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public EntitlementID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_EntitlementReward.createSA_EntitlementReward(builder,
    this.EntitlementID
  );
}
}

export class CQ_MailList implements flatbuffers.IUnpackableObject<CQ_MailListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MailList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MailList(bb:flatbuffers.ByteBuffer, obj?:CQ_MailList):CQ_MailList {
  return (obj || new CQ_MailList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MailList(bb:flatbuffers.ByteBuffer, obj?:CQ_MailList):CQ_MailList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MailList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MailList';
}

static startCQ_MailList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(0, +IsBM, +false);
}

static endCQ_MailList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MailList(builder:flatbuffers.Builder, IsBM:boolean):flatbuffers.Offset {
  CQ_MailList.startCQ_MailList(builder);
  CQ_MailList.add_IsBM(builder, IsBM);
  return CQ_MailList.endCQ_MailList(builder);
}

unpack(): CQ_MailListT {
  return new CQ_MailListT(
    this.IsBM()
  );
}


unpackTo(_o: CQ_MailListT): void {
  _o.IsBM = this.IsBM();
}
}

export class CQ_MailListT implements flatbuffers.IGeneratedObject {
constructor(
  public IsBM: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_MailList.createCQ_MailList(builder,
    this.IsBM
  );
}
}

export class SA_MailList implements flatbuffers.IUnpackableObject<SA_MailListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MailList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MailList(bb:flatbuffers.ByteBuffer, obj?:SA_MailList):SA_MailList {
  return (obj || new SA_MailList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MailList(bb:flatbuffers.ByteBuffer, obj?:SA_MailList):SA_MailList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MailList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

AddMailList(index: number, obj?:MailInfo):MailInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new MailInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

AddMailList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DeletedMailIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DeletedMailIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MailList';
}

static startSA_MailList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(0, +IsBM, +false);
}

static add_AddMailList(builder:flatbuffers.Builder, AddMailListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, AddMailListOffset, 0);
}

static create_AddMailList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_AddMailList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_DeletedMailIDList(builder:flatbuffers.Builder, DeletedMailIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, DeletedMailIDListOffset, 0);
}

static create_DeletedMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DeletedMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DeletedMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DeletedMailIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static endSA_MailList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MailList(builder:flatbuffers.Builder, IsBM:boolean, AddMailListOffset:flatbuffers.Offset, DeletedMailIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_MailList.startSA_MailList(builder);
  SA_MailList.add_IsBM(builder, IsBM);
  SA_MailList.add_AddMailList(builder, AddMailListOffset);
  SA_MailList.add_DeletedMailIDList(builder, DeletedMailIDListOffset);
  return SA_MailList.endSA_MailList(builder);
}

unpack(): SA_MailListT {
  return new SA_MailListT(
    this.IsBM(),
    this.bb!.createObjList<MailInfo, MailInfoT>(this.AddMailList.bind(this), this.AddMailList_Length()),
    this.bb!.createScalarList<number>(this.DeletedMailIDList.bind(this), this.DeletedMailIDList_Length())
  );
}


unpackTo(_o: SA_MailListT): void {
  _o.IsBM = this.IsBM();
  _o.AddMailList = this.bb!.createObjList<MailInfo, MailInfoT>(this.AddMailList.bind(this), this.AddMailList_Length());
  _o.DeletedMailIDList = this.bb!.createScalarList<number>(this.DeletedMailIDList.bind(this), this.DeletedMailIDList_Length());
}
}

export class SA_MailListT implements flatbuffers.IGeneratedObject {
constructor(
  public IsBM: boolean = false,
  public AddMailList: (MailInfoT)[] = [],
  public DeletedMailIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AddMailList = SA_MailList.create_AddMailList_Vector(builder, builder.createObjectOffsetList(this.AddMailList));
  const DeletedMailIDList = SA_MailList.create_DeletedMailIDList_Vector(builder, this.DeletedMailIDList);

  return SA_MailList.createSA_MailList(builder,
    this.IsBM,
    AddMailList,
    DeletedMailIDList
  );
}
}

export class CQ_MailHistory implements flatbuffers.IUnpackableObject<CQ_MailHistoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MailHistory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MailHistory(bb:flatbuffers.ByteBuffer, obj?:CQ_MailHistory):CQ_MailHistory {
  return (obj || new CQ_MailHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MailHistory(bb:flatbuffers.ByteBuffer, obj?:CQ_MailHistory):CQ_MailHistory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MailHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MailHistory';
}

static startCQ_MailHistory(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_MailHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MailHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_MailHistory.startCQ_MailHistory(builder);
  return CQ_MailHistory.endCQ_MailHistory(builder);
}

unpack(): CQ_MailHistoryT {
  return new CQ_MailHistoryT();
}


unpackTo(_o: CQ_MailHistoryT): void {}
}

export class CQ_MailHistoryT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_MailHistory.createCQ_MailHistory(builder);
}
}

export class SA_MailHistory implements flatbuffers.IUnpackableObject<SA_MailHistoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MailHistory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MailHistory(bb:flatbuffers.ByteBuffer, obj?:SA_MailHistory):SA_MailHistory {
  return (obj || new SA_MailHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MailHistory(bb:flatbuffers.ByteBuffer, obj?:SA_MailHistory):SA_MailHistory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MailHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AddHistoryList(index: number, obj?:MailInfo):MailInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MailInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

AddHistoryList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DeletedHistoryIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DeletedHistoryIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MailHistory';
}

static startSA_MailHistory(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_AddHistoryList(builder:flatbuffers.Builder, AddHistoryListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AddHistoryListOffset, 0);
}

static create_AddHistoryList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_AddHistoryList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_DeletedHistoryIDList(builder:flatbuffers.Builder, DeletedHistoryIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, DeletedHistoryIDListOffset, 0);
}

static create_DeletedHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DeletedHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DeletedHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DeletedHistoryIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static endSA_MailHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MailHistory(builder:flatbuffers.Builder, AddHistoryListOffset:flatbuffers.Offset, DeletedHistoryIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_MailHistory.startSA_MailHistory(builder);
  SA_MailHistory.add_AddHistoryList(builder, AddHistoryListOffset);
  SA_MailHistory.add_DeletedHistoryIDList(builder, DeletedHistoryIDListOffset);
  return SA_MailHistory.endSA_MailHistory(builder);
}

unpack(): SA_MailHistoryT {
  return new SA_MailHistoryT(
    this.bb!.createObjList<MailInfo, MailInfoT>(this.AddHistoryList.bind(this), this.AddHistoryList_Length()),
    this.bb!.createScalarList<number>(this.DeletedHistoryIDList.bind(this), this.DeletedHistoryIDList_Length())
  );
}


unpackTo(_o: SA_MailHistoryT): void {
  _o.AddHistoryList = this.bb!.createObjList<MailInfo, MailInfoT>(this.AddHistoryList.bind(this), this.AddHistoryList_Length());
  _o.DeletedHistoryIDList = this.bb!.createScalarList<number>(this.DeletedHistoryIDList.bind(this), this.DeletedHistoryIDList_Length());
}
}

export class SA_MailHistoryT implements flatbuffers.IGeneratedObject {
constructor(
  public AddHistoryList: (MailInfoT)[] = [],
  public DeletedHistoryIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AddHistoryList = SA_MailHistory.create_AddHistoryList_Vector(builder, builder.createObjectOffsetList(this.AddHistoryList));
  const DeletedHistoryIDList = SA_MailHistory.create_DeletedHistoryIDList_Vector(builder, this.DeletedHistoryIDList);

  return SA_MailHistory.createSA_MailHistory(builder,
    AddHistoryList,
    DeletedHistoryIDList
  );
}
}

export class CQ_MailReceive implements flatbuffers.IUnpackableObject<CQ_MailReceiveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MailReceive {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MailReceive(bb:flatbuffers.ByteBuffer, obj?:CQ_MailReceive):CQ_MailReceive {
  return (obj || new CQ_MailReceive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MailReceive(bb:flatbuffers.ByteBuffer, obj?:CQ_MailReceive):CQ_MailReceive {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MailReceive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MailID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MailReceive';
}

static startCQ_MailReceive(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MailID(builder:flatbuffers.Builder, MailID:number) {
  builder.addFieldInt64(0, BigInt(MailID), BigInt(0));
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(1, +IsBM, +false);
}

static endCQ_MailReceive(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MailReceive(builder:flatbuffers.Builder, MailID:number, IsBM:boolean):flatbuffers.Offset {
  CQ_MailReceive.startCQ_MailReceive(builder);
  CQ_MailReceive.add_MailID(builder, MailID);
  CQ_MailReceive.add_IsBM(builder, IsBM);
  return CQ_MailReceive.endCQ_MailReceive(builder);
}

unpack(): CQ_MailReceiveT {
  return new CQ_MailReceiveT(
    this.MailID(),
    this.IsBM()
  );
}


unpackTo(_o: CQ_MailReceiveT): void {
  _o.MailID = this.MailID();
  _o.IsBM = this.IsBM();
}
}

export class CQ_MailReceiveT implements flatbuffers.IGeneratedObject {
constructor(
  public MailID: number = 0,
  public IsBM: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_MailReceive.createCQ_MailReceive(builder,
    this.MailID,
    this.IsBM
  );
}
}

export class SA_MailReceive implements flatbuffers.IUnpackableObject<SA_MailReceiveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MailReceive {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MailReceive(bb:flatbuffers.ByteBuffer, obj?:SA_MailReceive):SA_MailReceive {
  return (obj || new SA_MailReceive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MailReceive(bb:flatbuffers.ByteBuffer, obj?:SA_MailReceive):SA_MailReceive {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MailReceive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DeleteMailIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DeleteMailIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

AddHistoryList(index: number, obj?:MailInfo):MailInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new MailInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

AddHistoryList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DeleteHistoryIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DeleteHistoryIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

Reward(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MailReceive';
}

static startSA_MailReceive(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(0, +IsBM, +false);
}

static add_DeleteMailIDList(builder:flatbuffers.Builder, DeleteMailIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, DeleteMailIDListOffset, 0);
}

static create_DeleteMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DeleteMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DeleteMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DeleteMailIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_AddHistoryList(builder:flatbuffers.Builder, AddHistoryListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, AddHistoryListOffset, 0);
}

static create_AddHistoryList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_AddHistoryList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_DeleteHistoryIDList(builder:flatbuffers.Builder, DeleteHistoryIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, DeleteHistoryIDListOffset, 0);
}

static create_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_Reward(builder:flatbuffers.Builder, RewardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, RewardOffset, 0);
}

static endSA_MailReceive(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_MailReceiveT {
  return new SA_MailReceiveT(
    this.IsBM(),
    this.bb!.createScalarList<number>(this.DeleteMailIDList.bind(this), this.DeleteMailIDList_Length()),
    this.bb!.createObjList<MailInfo, MailInfoT>(this.AddHistoryList.bind(this), this.AddHistoryList_Length()),
    this.bb!.createScalarList<number>(this.DeleteHistoryIDList.bind(this), this.DeleteHistoryIDList_Length()),
    (this.Reward() !== null ? this.Reward()!.unpack() : null)
  );
}


unpackTo(_o: SA_MailReceiveT): void {
  _o.IsBM = this.IsBM();
  _o.DeleteMailIDList = this.bb!.createScalarList<number>(this.DeleteMailIDList.bind(this), this.DeleteMailIDList_Length());
  _o.AddHistoryList = this.bb!.createObjList<MailInfo, MailInfoT>(this.AddHistoryList.bind(this), this.AddHistoryList_Length());
  _o.DeleteHistoryIDList = this.bb!.createScalarList<number>(this.DeleteHistoryIDList.bind(this), this.DeleteHistoryIDList_Length());
  _o.Reward = (this.Reward() !== null ? this.Reward()!.unpack() : null);
}
}

export class SA_MailReceiveT implements flatbuffers.IGeneratedObject {
constructor(
  public IsBM: boolean = false,
  public DeleteMailIDList: (number)[] = [],
  public AddHistoryList: (MailInfoT)[] = [],
  public DeleteHistoryIDList: (number)[] = [],
  public Reward: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DeleteMailIDList = SA_MailReceive.create_DeleteMailIDList_Vector(builder, this.DeleteMailIDList);
  const AddHistoryList = SA_MailReceive.create_AddHistoryList_Vector(builder, builder.createObjectOffsetList(this.AddHistoryList));
  const DeleteHistoryIDList = SA_MailReceive.create_DeleteHistoryIDList_Vector(builder, this.DeleteHistoryIDList);
  const Reward = (this.Reward !== null ? this.Reward!.pack(builder) : 0);

  SA_MailReceive.startSA_MailReceive(builder);
  SA_MailReceive.add_IsBM(builder, this.IsBM);
  SA_MailReceive.add_DeleteMailIDList(builder, DeleteMailIDList);
  SA_MailReceive.add_AddHistoryList(builder, AddHistoryList);
  SA_MailReceive.add_DeleteHistoryIDList(builder, DeleteHistoryIDList);
  SA_MailReceive.add_Reward(builder, Reward);

  return SA_MailReceive.endSA_MailReceive(builder);
}
}

export class CQ_MailReceiveAll implements flatbuffers.IUnpackableObject<CQ_MailReceiveAllT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MailReceiveAll {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MailReceiveAll(bb:flatbuffers.ByteBuffer, obj?:CQ_MailReceiveAll):CQ_MailReceiveAll {
  return (obj || new CQ_MailReceiveAll()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MailReceiveAll(bb:flatbuffers.ByteBuffer, obj?:CQ_MailReceiveAll):CQ_MailReceiveAll {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MailReceiveAll()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MailIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

MailIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MailReceiveAll';
}

static startCQ_MailReceiveAll(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MailIDList(builder:flatbuffers.Builder, MailIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MailIDListOffset, 0);
}

static create_MailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_MailIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_MailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_MailIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(1, +IsBM, +false);
}

static endCQ_MailReceiveAll(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MailReceiveAll(builder:flatbuffers.Builder, MailIDListOffset:flatbuffers.Offset, IsBM:boolean):flatbuffers.Offset {
  CQ_MailReceiveAll.startCQ_MailReceiveAll(builder);
  CQ_MailReceiveAll.add_MailIDList(builder, MailIDListOffset);
  CQ_MailReceiveAll.add_IsBM(builder, IsBM);
  return CQ_MailReceiveAll.endCQ_MailReceiveAll(builder);
}

unpack(): CQ_MailReceiveAllT {
  return new CQ_MailReceiveAllT(
    this.bb!.createScalarList<number>(this.MailIDList.bind(this), this.MailIDList_Length()),
    this.IsBM()
  );
}


unpackTo(_o: CQ_MailReceiveAllT): void {
  _o.MailIDList = this.bb!.createScalarList<number>(this.MailIDList.bind(this), this.MailIDList_Length());
  _o.IsBM = this.IsBM();
}
}

export class CQ_MailReceiveAllT implements flatbuffers.IGeneratedObject {
constructor(
  public MailIDList: (number)[] = [],
  public IsBM: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MailIDList = CQ_MailReceiveAll.create_MailIDList_Vector(builder, this.MailIDList);

  return CQ_MailReceiveAll.createCQ_MailReceiveAll(builder,
    MailIDList,
    this.IsBM
  );
}
}

export class SA_MailReceiveAll implements flatbuffers.IUnpackableObject<SA_MailReceiveAllT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MailReceiveAll {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MailReceiveAll(bb:flatbuffers.ByteBuffer, obj?:SA_MailReceiveAll):SA_MailReceiveAll {
  return (obj || new SA_MailReceiveAll()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MailReceiveAll(bb:flatbuffers.ByteBuffer, obj?:SA_MailReceiveAll):SA_MailReceiveAll {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MailReceiveAll()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsBM():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DeleteMailIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DeleteMailIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

AddHistoryList(index: number, obj?:MailInfo):MailInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new MailInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

AddHistoryList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DeleteHistoryIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

DeleteHistoryIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

Reward(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MailReceiveAll';
}

static startSA_MailReceiveAll(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_IsBM(builder:flatbuffers.Builder, IsBM:boolean) {
  builder.addFieldInt8(0, +IsBM, +false);
}

static add_DeleteMailIDList(builder:flatbuffers.Builder, DeleteMailIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, DeleteMailIDListOffset, 0);
}

static create_DeleteMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DeleteMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DeleteMailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DeleteMailIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_AddHistoryList(builder:flatbuffers.Builder, AddHistoryListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, AddHistoryListOffset, 0);
}

static create_AddHistoryList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_AddHistoryList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_DeleteHistoryIDList(builder:flatbuffers.Builder, DeleteHistoryIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, DeleteHistoryIDListOffset, 0);
}

static create_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_DeleteHistoryIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static add_Reward(builder:flatbuffers.Builder, RewardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, RewardOffset, 0);
}

static endSA_MailReceiveAll(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_MailReceiveAllT {
  return new SA_MailReceiveAllT(
    this.IsBM(),
    this.bb!.createScalarList<number>(this.DeleteMailIDList.bind(this), this.DeleteMailIDList_Length()),
    this.bb!.createObjList<MailInfo, MailInfoT>(this.AddHistoryList.bind(this), this.AddHistoryList_Length()),
    this.bb!.createScalarList<number>(this.DeleteHistoryIDList.bind(this), this.DeleteHistoryIDList_Length()),
    (this.Reward() !== null ? this.Reward()!.unpack() : null)
  );
}


unpackTo(_o: SA_MailReceiveAllT): void {
  _o.IsBM = this.IsBM();
  _o.DeleteMailIDList = this.bb!.createScalarList<number>(this.DeleteMailIDList.bind(this), this.DeleteMailIDList_Length());
  _o.AddHistoryList = this.bb!.createObjList<MailInfo, MailInfoT>(this.AddHistoryList.bind(this), this.AddHistoryList_Length());
  _o.DeleteHistoryIDList = this.bb!.createScalarList<number>(this.DeleteHistoryIDList.bind(this), this.DeleteHistoryIDList_Length());
  _o.Reward = (this.Reward() !== null ? this.Reward()!.unpack() : null);
}
}

export class SA_MailReceiveAllT implements flatbuffers.IGeneratedObject {
constructor(
  public IsBM: boolean = false,
  public DeleteMailIDList: (number)[] = [],
  public AddHistoryList: (MailInfoT)[] = [],
  public DeleteHistoryIDList: (number)[] = [],
  public Reward: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DeleteMailIDList = SA_MailReceiveAll.create_DeleteMailIDList_Vector(builder, this.DeleteMailIDList);
  const AddHistoryList = SA_MailReceiveAll.create_AddHistoryList_Vector(builder, builder.createObjectOffsetList(this.AddHistoryList));
  const DeleteHistoryIDList = SA_MailReceiveAll.create_DeleteHistoryIDList_Vector(builder, this.DeleteHistoryIDList);
  const Reward = (this.Reward !== null ? this.Reward!.pack(builder) : 0);

  SA_MailReceiveAll.startSA_MailReceiveAll(builder);
  SA_MailReceiveAll.add_IsBM(builder, this.IsBM);
  SA_MailReceiveAll.add_DeleteMailIDList(builder, DeleteMailIDList);
  SA_MailReceiveAll.add_AddHistoryList(builder, AddHistoryList);
  SA_MailReceiveAll.add_DeleteHistoryIDList(builder, DeleteHistoryIDList);
  SA_MailReceiveAll.add_Reward(builder, Reward);

  return SA_MailReceiveAll.endSA_MailReceiveAll(builder);
}
}

export class SN_NewMail implements flatbuffers.IUnpackableObject<SN_NewMailT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_NewMail {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_NewMail(bb:flatbuffers.ByteBuffer, obj?:SN_NewMail):SN_NewMail {
  return (obj || new SN_NewMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_NewMail(bb:flatbuffers.ByteBuffer, obj?:SN_NewMail):SN_NewMail {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_NewMail()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MailIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? Number(this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)) : 0;
}

MailIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_NewMail';
}

static startSN_NewMail(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MailIDList(builder:flatbuffers.Builder, MailIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MailIDListOffset, 0);
}

static create_MailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_MailIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_MailIDList_Vector(builder:flatbuffers.Builder, data:number[]|BigInt64Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(BigInt(data[i]!));
  }
  return builder.endVector();
}

static start_MailIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static endSN_NewMail(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_NewMail(builder:flatbuffers.Builder, MailIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_NewMail.startSN_NewMail(builder);
  SN_NewMail.add_MailIDList(builder, MailIDListOffset);
  return SN_NewMail.endSN_NewMail(builder);
}

unpack(): SN_NewMailT {
  return new SN_NewMailT(
    this.bb!.createScalarList<number>(this.MailIDList.bind(this), this.MailIDList_Length())
  );
}


unpackTo(_o: SN_NewMailT): void {
  _o.MailIDList = this.bb!.createScalarList<number>(this.MailIDList.bind(this), this.MailIDList_Length());
}
}

export class SN_NewMailT implements flatbuffers.IGeneratedObject {
constructor(
  public MailIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MailIDList = SN_NewMail.create_MailIDList_Vector(builder, this.MailIDList);

  return SN_NewMail.createSN_NewMail(builder,
    MailIDList
  );
}
}

export class CQ_SeasonPassList implements flatbuffers.IUnpackableObject<CQ_SeasonPassListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_SeasonPassList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_SeasonPassList(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassList):CQ_SeasonPassList {
  return (obj || new CQ_SeasonPassList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_SeasonPassList(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassList):CQ_SeasonPassList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_SeasonPassList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_SeasonPassList';
}

static startCQ_SeasonPassList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_SeasonPassList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_SeasonPassList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_SeasonPassList.startCQ_SeasonPassList(builder);
  return CQ_SeasonPassList.endCQ_SeasonPassList(builder);
}

unpack(): CQ_SeasonPassListT {
  return new CQ_SeasonPassListT();
}


unpackTo(_o: CQ_SeasonPassListT): void {}
}

export class CQ_SeasonPassListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_SeasonPassList.createCQ_SeasonPassList(builder);
}
}

export class SA_SeasonPassList implements flatbuffers.IUnpackableObject<SA_SeasonPassListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_SeasonPassList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_SeasonPassList(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassList):SA_SeasonPassList {
  return (obj || new SA_SeasonPassList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_SeasonPassList(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassList):SA_SeasonPassList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_SeasonPassList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPass(index: number, obj?:SeasonPassData):SeasonPassData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SeasonPassData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

SeasonPass_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ReqDirection():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_SeasonPassList';
}

static startSA_SeasonPassList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_SeasonPass(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SeasonPassOffset, 0);
}

static create_SeasonPass_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_SeasonPass_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_ReqDirection(builder:flatbuffers.Builder, ReqDirection:boolean) {
  builder.addFieldInt8(1, +ReqDirection, +false);
}

static endSA_SeasonPassList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_SeasonPassList(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset, ReqDirection:boolean):flatbuffers.Offset {
  SA_SeasonPassList.startSA_SeasonPassList(builder);
  SA_SeasonPassList.add_SeasonPass(builder, SeasonPassOffset);
  SA_SeasonPassList.add_ReqDirection(builder, ReqDirection);
  return SA_SeasonPassList.endSA_SeasonPassList(builder);
}

unpack(): SA_SeasonPassListT {
  return new SA_SeasonPassListT(
    this.bb!.createObjList<SeasonPassData, SeasonPassDataT>(this.SeasonPass.bind(this), this.SeasonPass_Length()),
    this.ReqDirection()
  );
}


unpackTo(_o: SA_SeasonPassListT): void {
  _o.SeasonPass = this.bb!.createObjList<SeasonPassData, SeasonPassDataT>(this.SeasonPass.bind(this), this.SeasonPass_Length());
  _o.ReqDirection = this.ReqDirection();
}
}

export class SA_SeasonPassListT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPass: (SeasonPassDataT)[] = [],
  public ReqDirection: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SeasonPass = SA_SeasonPassList.create_SeasonPass_Vector(builder, builder.createObjectOffsetList(this.SeasonPass));

  return SA_SeasonPassList.createSA_SeasonPassList(builder,
    SeasonPass,
    this.ReqDirection
  );
}
}

export class SN_SeasonPassExp implements flatbuffers.IUnpackableObject<SN_SeasonPassExpT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_SeasonPassExp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_SeasonPassExp(bb:flatbuffers.ByteBuffer, obj?:SN_SeasonPassExp):SN_SeasonPassExp {
  return (obj || new SN_SeasonPassExp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_SeasonPassExp(bb:flatbuffers.ByteBuffer, obj?:SN_SeasonPassExp):SN_SeasonPassExp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_SeasonPassExp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPassID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Level():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Exp():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_SeasonPassExp';
}

static startSN_SeasonPassExp(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_SeasonPassID(builder:flatbuffers.Builder, SeasonPassID:number) {
  builder.addFieldInt32(0, SeasonPassID, 0);
}

static add_Level(builder:flatbuffers.Builder, Level:number) {
  builder.addFieldInt32(1, Level, 0);
}

static add_Exp(builder:flatbuffers.Builder, Exp:number) {
  builder.addFieldInt32(2, Exp, 0);
}

static endSN_SeasonPassExp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_SeasonPassExp(builder:flatbuffers.Builder, SeasonPassID:number, Level:number, Exp:number):flatbuffers.Offset {
  SN_SeasonPassExp.startSN_SeasonPassExp(builder);
  SN_SeasonPassExp.add_SeasonPassID(builder, SeasonPassID);
  SN_SeasonPassExp.add_Level(builder, Level);
  SN_SeasonPassExp.add_Exp(builder, Exp);
  return SN_SeasonPassExp.endSN_SeasonPassExp(builder);
}

unpack(): SN_SeasonPassExpT {
  return new SN_SeasonPassExpT(
    this.SeasonPassID(),
    this.Level(),
    this.Exp()
  );
}


unpackTo(_o: SN_SeasonPassExpT): void {
  _o.SeasonPassID = this.SeasonPassID();
  _o.Level = this.Level();
  _o.Exp = this.Exp();
}
}

export class SN_SeasonPassExpT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPassID: number = 0,
  public Level: number = 0,
  public Exp: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_SeasonPassExp.createSN_SeasonPassExp(builder,
    this.SeasonPassID,
    this.Level,
    this.Exp
  );
}
}

export class CQ_SeasonPassRecvReward implements flatbuffers.IUnpackableObject<CQ_SeasonPassRecvRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_SeasonPassRecvReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_SeasonPassRecvReward(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassRecvReward):CQ_SeasonPassRecvReward {
  return (obj || new CQ_SeasonPassRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_SeasonPassRecvReward(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassRecvReward):CQ_SeasonPassRecvReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_SeasonPassRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPassID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_SeasonPassRecvReward';
}

static startCQ_SeasonPassRecvReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SeasonPassID(builder:flatbuffers.Builder, SeasonPassID:number) {
  builder.addFieldInt32(0, SeasonPassID, 0);
}

static endCQ_SeasonPassRecvReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_SeasonPassRecvReward(builder:flatbuffers.Builder, SeasonPassID:number):flatbuffers.Offset {
  CQ_SeasonPassRecvReward.startCQ_SeasonPassRecvReward(builder);
  CQ_SeasonPassRecvReward.add_SeasonPassID(builder, SeasonPassID);
  return CQ_SeasonPassRecvReward.endCQ_SeasonPassRecvReward(builder);
}

unpack(): CQ_SeasonPassRecvRewardT {
  return new CQ_SeasonPassRecvRewardT(
    this.SeasonPassID()
  );
}


unpackTo(_o: CQ_SeasonPassRecvRewardT): void {
  _o.SeasonPassID = this.SeasonPassID();
}
}

export class CQ_SeasonPassRecvRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPassID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_SeasonPassRecvReward.createCQ_SeasonPassRecvReward(builder,
    this.SeasonPassID
  );
}
}

export class SA_SeasonPassRecvReward implements flatbuffers.IUnpackableObject<SA_SeasonPassRecvRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_SeasonPassRecvReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_SeasonPassRecvReward(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassRecvReward):SA_SeasonPassRecvReward {
  return (obj || new SA_SeasonPassRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_SeasonPassRecvReward(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassRecvReward):SA_SeasonPassRecvReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_SeasonPassRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPass(obj?:SeasonPassData):SeasonPassData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SeasonPassData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

SeasonPassReward(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_SeasonPassRecvReward';
}

static startSA_SeasonPassRecvReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_SeasonPass(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SeasonPassOffset, 0);
}

static add_SeasonPassReward(builder:flatbuffers.Builder, SeasonPassRewardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, SeasonPassRewardOffset, 0);
}

static endSA_SeasonPassRecvReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_SeasonPassRecvRewardT {
  return new SA_SeasonPassRecvRewardT(
    (this.SeasonPass() !== null ? this.SeasonPass()!.unpack() : null),
    (this.SeasonPassReward() !== null ? this.SeasonPassReward()!.unpack() : null)
  );
}


unpackTo(_o: SA_SeasonPassRecvRewardT): void {
  _o.SeasonPass = (this.SeasonPass() !== null ? this.SeasonPass()!.unpack() : null);
  _o.SeasonPassReward = (this.SeasonPassReward() !== null ? this.SeasonPassReward()!.unpack() : null);
}
}

export class SA_SeasonPassRecvRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPass: SeasonPassDataT|null = null,
  public SeasonPassReward: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SeasonPass = (this.SeasonPass !== null ? this.SeasonPass!.pack(builder) : 0);
  const SeasonPassReward = (this.SeasonPassReward !== null ? this.SeasonPassReward!.pack(builder) : 0);

  SA_SeasonPassRecvReward.startSA_SeasonPassRecvReward(builder);
  SA_SeasonPassRecvReward.add_SeasonPass(builder, SeasonPass);
  SA_SeasonPassRecvReward.add_SeasonPassReward(builder, SeasonPassReward);

  return SA_SeasonPassRecvReward.endSA_SeasonPassRecvReward(builder);
}
}

export class CQ_SeasonPassDirectionOff implements flatbuffers.IUnpackableObject<CQ_SeasonPassDirectionOffT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_SeasonPassDirectionOff {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_SeasonPassDirectionOff(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassDirectionOff):CQ_SeasonPassDirectionOff {
  return (obj || new CQ_SeasonPassDirectionOff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_SeasonPassDirectionOff(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassDirectionOff):CQ_SeasonPassDirectionOff {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_SeasonPassDirectionOff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_SeasonPassDirectionOff';
}

static startCQ_SeasonPassDirectionOff(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_SeasonPassDirectionOff(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_SeasonPassDirectionOff(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_SeasonPassDirectionOff.startCQ_SeasonPassDirectionOff(builder);
  return CQ_SeasonPassDirectionOff.endCQ_SeasonPassDirectionOff(builder);
}

unpack(): CQ_SeasonPassDirectionOffT {
  return new CQ_SeasonPassDirectionOffT();
}


unpackTo(_o: CQ_SeasonPassDirectionOffT): void {}
}

export class CQ_SeasonPassDirectionOffT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_SeasonPassDirectionOff.createCQ_SeasonPassDirectionOff(builder);
}
}

export class SA_SeasonPassDirectionOff implements flatbuffers.IUnpackableObject<SA_SeasonPassDirectionOffT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_SeasonPassDirectionOff {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_SeasonPassDirectionOff(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassDirectionOff):SA_SeasonPassDirectionOff {
  return (obj || new SA_SeasonPassDirectionOff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_SeasonPassDirectionOff(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassDirectionOff):SA_SeasonPassDirectionOff {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_SeasonPassDirectionOff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_SeasonPassDirectionOff';
}

static startSA_SeasonPassDirectionOff(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_SeasonPassDirectionOff(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_SeasonPassDirectionOff(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_SeasonPassDirectionOff.startSA_SeasonPassDirectionOff(builder);
  return SA_SeasonPassDirectionOff.endSA_SeasonPassDirectionOff(builder);
}

unpack(): SA_SeasonPassDirectionOffT {
  return new SA_SeasonPassDirectionOffT();
}


unpackTo(_o: SA_SeasonPassDirectionOffT): void {}
}

export class SA_SeasonPassDirectionOffT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_SeasonPassDirectionOff.createSA_SeasonPassDirectionOff(builder);
}
}

export class CQ_AttendanceList implements flatbuffers.IUnpackableObject<CQ_AttendanceListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_AttendanceList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_AttendanceList(bb:flatbuffers.ByteBuffer, obj?:CQ_AttendanceList):CQ_AttendanceList {
  return (obj || new CQ_AttendanceList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_AttendanceList(bb:flatbuffers.ByteBuffer, obj?:CQ_AttendanceList):CQ_AttendanceList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_AttendanceList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_AttendanceList';
}

static startCQ_AttendanceList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_AttendanceList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_AttendanceList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_AttendanceList.startCQ_AttendanceList(builder);
  return CQ_AttendanceList.endCQ_AttendanceList(builder);
}

unpack(): CQ_AttendanceListT {
  return new CQ_AttendanceListT();
}


unpackTo(_o: CQ_AttendanceListT): void {}
}

export class CQ_AttendanceListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_AttendanceList.createCQ_AttendanceList(builder);
}
}

export class SA_AttendanceList implements flatbuffers.IUnpackableObject<SA_AttendanceListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_AttendanceList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_AttendanceList(bb:flatbuffers.ByteBuffer, obj?:SA_AttendanceList):SA_AttendanceList {
  return (obj || new SA_AttendanceList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_AttendanceList(bb:flatbuffers.ByteBuffer, obj?:SA_AttendanceList):SA_AttendanceList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_AttendanceList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsAttendance():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

AttendanceList(index: number, obj?:AttendanceData):AttendanceData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AttendanceData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

AttendanceList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

NextAttendanceResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_AttendanceList';
}

static startSA_AttendanceList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_IsAttendance(builder:flatbuffers.Builder, IsAttendance:boolean) {
  builder.addFieldInt8(0, +IsAttendance, +false);
}

static add_AttendanceList(builder:flatbuffers.Builder, AttendanceListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, AttendanceListOffset, 0);
}

static create_AttendanceList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_AttendanceList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_NextAttendanceResetAt(builder:flatbuffers.Builder, NextAttendanceResetAt:number) {
  builder.addFieldInt32(2, NextAttendanceResetAt, 0);
}

static endSA_AttendanceList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_AttendanceList(builder:flatbuffers.Builder, IsAttendance:boolean, AttendanceListOffset:flatbuffers.Offset, NextAttendanceResetAt:number):flatbuffers.Offset {
  SA_AttendanceList.startSA_AttendanceList(builder);
  SA_AttendanceList.add_IsAttendance(builder, IsAttendance);
  SA_AttendanceList.add_AttendanceList(builder, AttendanceListOffset);
  SA_AttendanceList.add_NextAttendanceResetAt(builder, NextAttendanceResetAt);
  return SA_AttendanceList.endSA_AttendanceList(builder);
}

unpack(): SA_AttendanceListT {
  return new SA_AttendanceListT(
    this.IsAttendance(),
    this.bb!.createObjList<AttendanceData, AttendanceDataT>(this.AttendanceList.bind(this), this.AttendanceList_Length()),
    this.NextAttendanceResetAt()
  );
}


unpackTo(_o: SA_AttendanceListT): void {
  _o.IsAttendance = this.IsAttendance();
  _o.AttendanceList = this.bb!.createObjList<AttendanceData, AttendanceDataT>(this.AttendanceList.bind(this), this.AttendanceList_Length());
  _o.NextAttendanceResetAt = this.NextAttendanceResetAt();
}
}

export class SA_AttendanceListT implements flatbuffers.IGeneratedObject {
constructor(
  public IsAttendance: boolean = false,
  public AttendanceList: (AttendanceDataT)[] = [],
  public NextAttendanceResetAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AttendanceList = SA_AttendanceList.create_AttendanceList_Vector(builder, builder.createObjectOffsetList(this.AttendanceList));

  return SA_AttendanceList.createSA_AttendanceList(builder,
    this.IsAttendance,
    AttendanceList,
    this.NextAttendanceResetAt
  );
}
}

export class CQ_AttendanceRecvReward implements flatbuffers.IUnpackableObject<CQ_AttendanceRecvRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_AttendanceRecvReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_AttendanceRecvReward(bb:flatbuffers.ByteBuffer, obj?:CQ_AttendanceRecvReward):CQ_AttendanceRecvReward {
  return (obj || new CQ_AttendanceRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_AttendanceRecvReward(bb:flatbuffers.ByteBuffer, obj?:CQ_AttendanceRecvReward):CQ_AttendanceRecvReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_AttendanceRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AttendanceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_AttendanceRecvReward';
}

static startCQ_AttendanceRecvReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_AttendanceID(builder:flatbuffers.Builder, AttendanceID:number) {
  builder.addFieldInt32(0, AttendanceID, 0);
}

static add_RewardID(builder:flatbuffers.Builder, RewardID:number) {
  builder.addFieldInt32(1, RewardID, 0);
}

static endCQ_AttendanceRecvReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_AttendanceRecvReward(builder:flatbuffers.Builder, AttendanceID:number, RewardID:number):flatbuffers.Offset {
  CQ_AttendanceRecvReward.startCQ_AttendanceRecvReward(builder);
  CQ_AttendanceRecvReward.add_AttendanceID(builder, AttendanceID);
  CQ_AttendanceRecvReward.add_RewardID(builder, RewardID);
  return CQ_AttendanceRecvReward.endCQ_AttendanceRecvReward(builder);
}

unpack(): CQ_AttendanceRecvRewardT {
  return new CQ_AttendanceRecvRewardT(
    this.AttendanceID(),
    this.RewardID()
  );
}


unpackTo(_o: CQ_AttendanceRecvRewardT): void {
  _o.AttendanceID = this.AttendanceID();
  _o.RewardID = this.RewardID();
}
}

export class CQ_AttendanceRecvRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public AttendanceID: number = 0,
  public RewardID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_AttendanceRecvReward.createCQ_AttendanceRecvReward(builder,
    this.AttendanceID,
    this.RewardID
  );
}
}

export class SA_AttendanceRecvReward implements flatbuffers.IUnpackableObject<SA_AttendanceRecvRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_AttendanceRecvReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_AttendanceRecvReward(bb:flatbuffers.ByteBuffer, obj?:SA_AttendanceRecvReward):SA_AttendanceRecvReward {
  return (obj || new SA_AttendanceRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_AttendanceRecvReward(bb:flatbuffers.ByteBuffer, obj?:SA_AttendanceRecvReward):SA_AttendanceRecvReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_AttendanceRecvReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Attendance(obj?:AttendanceData):AttendanceData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AttendanceData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeHeroSkinList(index: number, obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChangeHeroSkinList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_AttendanceRecvReward';
}

static startSA_AttendanceRecvReward(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_Attendance(builder:flatbuffers.Builder, AttendanceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AttendanceOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeHeroSkinList(builder:flatbuffers.Builder, ChangeHeroSkinListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ChangeHeroSkinListOffset, 0);
}

static create_ChangeHeroSkinList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChangeHeroSkinList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_AttendanceRecvReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_AttendanceRecvReward(builder:flatbuffers.Builder, AttendanceOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset, ChangeHeroSkinListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_AttendanceRecvReward.startSA_AttendanceRecvReward(builder);
  SA_AttendanceRecvReward.add_Attendance(builder, AttendanceOffset);
  SA_AttendanceRecvReward.add_ChangeAssetList(builder, ChangeAssetListOffset);
  SA_AttendanceRecvReward.add_ChangeItemList(builder, ChangeItemListOffset);
  SA_AttendanceRecvReward.add_ChangeHeroSkinList(builder, ChangeHeroSkinListOffset);
  return SA_AttendanceRecvReward.endSA_AttendanceRecvReward(builder);
}

unpack(): SA_AttendanceRecvRewardT {
  return new SA_AttendanceRecvRewardT(
    (this.Attendance() !== null ? this.Attendance()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length()),
    this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinList.bind(this), this.ChangeHeroSkinList_Length())
  );
}


unpackTo(_o: SA_AttendanceRecvRewardT): void {
  _o.Attendance = (this.Attendance() !== null ? this.Attendance()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
  _o.ChangeHeroSkinList = this.bb!.createObjList<HeroSkinData, HeroSkinDataT>(this.ChangeHeroSkinList.bind(this), this.ChangeHeroSkinList_Length());
}
}

export class SA_AttendanceRecvRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public Attendance: AttendanceDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = [],
  public ChangeHeroSkinList: (HeroSkinDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Attendance = (this.Attendance !== null ? this.Attendance!.pack(builder) : 0);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_AttendanceRecvReward.start_ChangeAssetList_Vector);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_AttendanceRecvReward.start_ChangeItemList_Vector);
  const ChangeHeroSkinList = SA_AttendanceRecvReward.create_ChangeHeroSkinList_Vector(builder, builder.createObjectOffsetList(this.ChangeHeroSkinList));

  return SA_AttendanceRecvReward.createSA_AttendanceRecvReward(builder,
    Attendance,
    ChangeAssetList,
    ChangeItemList,
    ChangeHeroSkinList
  );
}
}

export class PartyMemberInfo implements flatbuffers.IUnpackableObject<PartyMemberInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PartyMemberInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPartyMemberInfo(bb:flatbuffers.ByteBuffer, obj?:PartyMemberInfo):PartyMemberInfo {
  return (obj || new PartyMemberInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPartyMemberInfo(bb:flatbuffers.ByteBuffer, obj?:PartyMemberInfo):PartyMemberInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PartyMemberInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

DodgeID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsMaster():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.PartyMemberInfo';
}

static startPartyMemberInfo(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(2, EntitlementID, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(3, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(4, ProfileBGID, 0);
}

static add_DodgeID(builder:flatbuffers.Builder, DodgeID:number) {
  builder.addFieldInt32(5, DodgeID, 0);
}

static add_IsMaster(builder:flatbuffers.Builder, IsMaster:boolean) {
  builder.addFieldInt8(6, +IsMaster, +false);
}

static endPartyMemberInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPartyMemberInfo(builder:flatbuffers.Builder, UID:number, NickOffset:flatbuffers.Offset, EntitlementID:number, ProfileIconID:number, ProfileBGID:number, DodgeID:number, IsMaster:boolean):flatbuffers.Offset {
  PartyMemberInfo.startPartyMemberInfo(builder);
  PartyMemberInfo.add_UID(builder, UID);
  PartyMemberInfo.add_Nick(builder, NickOffset);
  PartyMemberInfo.add_EntitlementID(builder, EntitlementID);
  PartyMemberInfo.add_ProfileIconID(builder, ProfileIconID);
  PartyMemberInfo.add_ProfileBGID(builder, ProfileBGID);
  PartyMemberInfo.add_DodgeID(builder, DodgeID);
  PartyMemberInfo.add_IsMaster(builder, IsMaster);
  return PartyMemberInfo.endPartyMemberInfo(builder);
}

unpack(): PartyMemberInfoT {
  return new PartyMemberInfoT(
    this.UID(),
    this.Nick(),
    this.EntitlementID(),
    this.ProfileIconID(),
    this.ProfileBGID(),
    this.DodgeID(),
    this.IsMaster()
  );
}


unpackTo(_o: PartyMemberInfoT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.EntitlementID = this.EntitlementID();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.DodgeID = this.DodgeID();
  _o.IsMaster = this.IsMaster();
}
}

export class PartyMemberInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public EntitlementID: number = 0,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0,
  public DodgeID: number = 0,
  public IsMaster: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);

  return PartyMemberInfo.createPartyMemberInfo(builder,
    this.UID,
    Nick,
    this.EntitlementID,
    this.ProfileIconID,
    this.ProfileBGID,
    this.DodgeID,
    this.IsMaster
  );
}
}

export class CQ_PartyInviteUser implements flatbuffers.IUnpackableObject<CQ_PartyInviteUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PartyInviteUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PartyInviteUser(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyInviteUser):CQ_PartyInviteUser {
  return (obj || new CQ_PartyInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PartyInviteUser(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyInviteUser):CQ_PartyInviteUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PartyInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PartyInviteUser';
}

static startCQ_PartyInviteUser(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, GuestNickOffset, 0);
}

static add_GuestUID(builder:flatbuffers.Builder, GuestUID:number) {
  builder.addFieldInt32(2, GuestUID, 0);
}

static endCQ_PartyInviteUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PartyInviteUser(builder:flatbuffers.Builder, MatchingTableID:number, GuestNickOffset:flatbuffers.Offset, GuestUID:number):flatbuffers.Offset {
  CQ_PartyInviteUser.startCQ_PartyInviteUser(builder);
  CQ_PartyInviteUser.add_MatchingTableID(builder, MatchingTableID);
  CQ_PartyInviteUser.add_GuestNick(builder, GuestNickOffset);
  CQ_PartyInviteUser.add_GuestUID(builder, GuestUID);
  return CQ_PartyInviteUser.endCQ_PartyInviteUser(builder);
}

unpack(): CQ_PartyInviteUserT {
  return new CQ_PartyInviteUserT(
    this.MatchingTableID(),
    this.GuestNick(),
    this.GuestUID()
  );
}


unpackTo(_o: CQ_PartyInviteUserT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.GuestNick = this.GuestNick();
  _o.GuestUID = this.GuestUID();
}
}

export class CQ_PartyInviteUserT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public GuestNick: string|Uint8Array|null = null,
  public GuestUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);

  return CQ_PartyInviteUser.createCQ_PartyInviteUser(builder,
    this.MatchingTableID,
    GuestNick,
    this.GuestUID
  );
}
}

export class SA_PartyInviteUser implements flatbuffers.IUnpackableObject<SA_PartyInviteUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PartyInviteUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PartyInviteUser(bb:flatbuffers.ByteBuffer, obj?:SA_PartyInviteUser):SA_PartyInviteUser {
  return (obj || new SA_PartyInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PartyInviteUser(bb:flatbuffers.ByteBuffer, obj?:SA_PartyInviteUser):SA_PartyInviteUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PartyInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RemainCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PartyInviteUser';
}

static startSA_PartyInviteUser(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(0, ExpireAt, 0);
}

static add_RemainCount(builder:flatbuffers.Builder, RemainCount:number) {
  builder.addFieldInt8(1, RemainCount, 0);
}

static endSA_PartyInviteUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PartyInviteUser(builder:flatbuffers.Builder, ExpireAt:number, RemainCount:number):flatbuffers.Offset {
  SA_PartyInviteUser.startSA_PartyInviteUser(builder);
  SA_PartyInviteUser.add_ExpireAt(builder, ExpireAt);
  SA_PartyInviteUser.add_RemainCount(builder, RemainCount);
  return SA_PartyInviteUser.endSA_PartyInviteUser(builder);
}

unpack(): SA_PartyInviteUserT {
  return new SA_PartyInviteUserT(
    this.ExpireAt(),
    this.RemainCount()
  );
}


unpackTo(_o: SA_PartyInviteUserT): void {
  _o.ExpireAt = this.ExpireAt();
  _o.RemainCount = this.RemainCount();
}
}

export class SA_PartyInviteUserT implements flatbuffers.IGeneratedObject {
constructor(
  public ExpireAt: number = 0,
  public RemainCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PartyInviteUser.createSA_PartyInviteUser(builder,
    this.ExpireAt,
    this.RemainCount
  );
}
}

export class SN_PartyInviteUser implements flatbuffers.IUnpackableObject<SN_PartyInviteUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyInviteUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyInviteUser(bb:flatbuffers.ByteBuffer, obj?:SN_PartyInviteUser):SN_PartyInviteUser {
  return (obj || new SN_PartyInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyInviteUser(bb:flatbuffers.ByteBuffer, obj?:SN_PartyInviteUser):SN_PartyInviteUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyInviteUser';
}

static startSN_PartyInviteUser(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, InviteCodeOffset, 0);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(2, ExpireAt, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(3, MasterUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, MasterNickOffset, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, GuestNickOffset, 0);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, PartyIDOffset, 0);
}

static endSN_PartyInviteUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyInviteUser(builder:flatbuffers.Builder, MatchingTableID:number, InviteCodeOffset:flatbuffers.Offset, ExpireAt:number, MasterUID:number, MasterNickOffset:flatbuffers.Offset, GuestNickOffset:flatbuffers.Offset, PartyIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_PartyInviteUser.startSN_PartyInviteUser(builder);
  SN_PartyInviteUser.add_MatchingTableID(builder, MatchingTableID);
  SN_PartyInviteUser.add_InviteCode(builder, InviteCodeOffset);
  SN_PartyInviteUser.add_ExpireAt(builder, ExpireAt);
  SN_PartyInviteUser.add_MasterUID(builder, MasterUID);
  SN_PartyInviteUser.add_MasterNick(builder, MasterNickOffset);
  SN_PartyInviteUser.add_GuestNick(builder, GuestNickOffset);
  SN_PartyInviteUser.add_PartyID(builder, PartyIDOffset);
  return SN_PartyInviteUser.endSN_PartyInviteUser(builder);
}

unpack(): SN_PartyInviteUserT {
  return new SN_PartyInviteUserT(
    this.MatchingTableID(),
    this.InviteCode(),
    this.ExpireAt(),
    this.MasterUID(),
    this.MasterNick(),
    this.GuestNick(),
    this.PartyID()
  );
}


unpackTo(_o: SN_PartyInviteUserT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.InviteCode = this.InviteCode();
  _o.ExpireAt = this.ExpireAt();
  _o.MasterUID = this.MasterUID();
  _o.MasterNick = this.MasterNick();
  _o.GuestNick = this.GuestNick();
  _o.PartyID = this.PartyID();
}
}

export class SN_PartyInviteUserT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public InviteCode: string|Uint8Array|null = null,
  public ExpireAt: number = 0,
  public MasterUID: number = 0,
  public MasterNick: string|Uint8Array|null = null,
  public GuestNick: string|Uint8Array|null = null,
  public PartyID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);

  return SN_PartyInviteUser.createSN_PartyInviteUser(builder,
    this.MatchingTableID,
    InviteCode,
    this.ExpireAt,
    this.MasterUID,
    MasterNick,
    GuestNick,
    PartyID
  );
}
}

export class CQ_PartyInviteAnswer implements flatbuffers.IUnpackableObject<CQ_PartyInviteAnswerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PartyInviteAnswer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PartyInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyInviteAnswer):CQ_PartyInviteAnswer {
  return (obj || new CQ_PartyInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PartyInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyInviteAnswer):CQ_PartyInviteAnswer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PartyInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsAccept():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PartyInviteAnswer';
}

static startCQ_PartyInviteAnswer(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_IsAccept(builder:flatbuffers.Builder, IsAccept:boolean) {
  builder.addFieldInt8(0, +IsAccept, +false);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, InviteCodeOffset, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(2, MasterUID, 0);
}

static endCQ_PartyInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PartyInviteAnswer(builder:flatbuffers.Builder, IsAccept:boolean, InviteCodeOffset:flatbuffers.Offset, MasterUID:number):flatbuffers.Offset {
  CQ_PartyInviteAnswer.startCQ_PartyInviteAnswer(builder);
  CQ_PartyInviteAnswer.add_IsAccept(builder, IsAccept);
  CQ_PartyInviteAnswer.add_InviteCode(builder, InviteCodeOffset);
  CQ_PartyInviteAnswer.add_MasterUID(builder, MasterUID);
  return CQ_PartyInviteAnswer.endCQ_PartyInviteAnswer(builder);
}

unpack(): CQ_PartyInviteAnswerT {
  return new CQ_PartyInviteAnswerT(
    this.IsAccept(),
    this.InviteCode(),
    this.MasterUID()
  );
}


unpackTo(_o: CQ_PartyInviteAnswerT): void {
  _o.IsAccept = this.IsAccept();
  _o.InviteCode = this.InviteCode();
  _o.MasterUID = this.MasterUID();
}
}

export class CQ_PartyInviteAnswerT implements flatbuffers.IGeneratedObject {
constructor(
  public IsAccept: boolean = false,
  public InviteCode: string|Uint8Array|null = null,
  public MasterUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);

  return CQ_PartyInviteAnswer.createCQ_PartyInviteAnswer(builder,
    this.IsAccept,
    InviteCode,
    this.MasterUID
  );
}
}

export class SA_PartyInviteAnswer implements flatbuffers.IUnpackableObject<SA_PartyInviteAnswerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PartyInviteAnswer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PartyInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SA_PartyInviteAnswer):SA_PartyInviteAnswer {
  return (obj || new SA_PartyInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PartyInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SA_PartyInviteAnswer):SA_PartyInviteAnswer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PartyInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PartyInviteAnswer';
}

static startSA_PartyInviteAnswer(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_PartyInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PartyInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_PartyInviteAnswer.startSA_PartyInviteAnswer(builder);
  return SA_PartyInviteAnswer.endSA_PartyInviteAnswer(builder);
}

unpack(): SA_PartyInviteAnswerT {
  return new SA_PartyInviteAnswerT();
}


unpackTo(_o: SA_PartyInviteAnswerT): void {}
}

export class SA_PartyInviteAnswerT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PartyInviteAnswer.createSA_PartyInviteAnswer(builder);
}
}

export class SN_PartyInviteAnswer implements flatbuffers.IUnpackableObject<SN_PartyInviteAnswerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyInviteAnswer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SN_PartyInviteAnswer):SN_PartyInviteAnswer {
  return (obj || new SN_PartyInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SN_PartyInviteAnswer):SN_PartyInviteAnswer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsAccept():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Reason():EResultType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : EResultType.Success;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestEntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestDodgeID():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyInviteAnswer';
}

static startSN_PartyInviteAnswer(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static add_IsAccept(builder:flatbuffers.Builder, IsAccept:boolean) {
  builder.addFieldInt8(0, +IsAccept, +false);
}

static add_Reason(builder:flatbuffers.Builder, Reason:EResultType) {
  builder.addFieldInt16(1, Reason, EResultType.Success);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, InviteCodeOffset, 0);
}

static add_GuestUID(builder:flatbuffers.Builder, GuestUID:number) {
  builder.addFieldInt32(3, GuestUID, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, GuestNickOffset, 0);
}

static add_GuestEntitlementID(builder:flatbuffers.Builder, GuestEntitlementID:number) {
  builder.addFieldInt32(5, GuestEntitlementID, 0);
}

static add_GuestProfileIconID(builder:flatbuffers.Builder, GuestProfileIconID:number) {
  builder.addFieldInt32(6, GuestProfileIconID, 0);
}

static add_GuestProfileBGID(builder:flatbuffers.Builder, GuestProfileBGID:number) {
  builder.addFieldInt32(7, GuestProfileBGID, 0);
}

static add_GuestDodgeID(builder:flatbuffers.Builder, GuestDodgeID:number) {
  builder.addFieldInt32(8, GuestDodgeID, 0);
}

static endSN_PartyInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyInviteAnswer(builder:flatbuffers.Builder, IsAccept:boolean, Reason:EResultType, InviteCodeOffset:flatbuffers.Offset, GuestUID:number, GuestNickOffset:flatbuffers.Offset, GuestEntitlementID:number, GuestProfileIconID:number, GuestProfileBGID:number, GuestDodgeID:number):flatbuffers.Offset {
  SN_PartyInviteAnswer.startSN_PartyInviteAnswer(builder);
  SN_PartyInviteAnswer.add_IsAccept(builder, IsAccept);
  SN_PartyInviteAnswer.add_Reason(builder, Reason);
  SN_PartyInviteAnswer.add_InviteCode(builder, InviteCodeOffset);
  SN_PartyInviteAnswer.add_GuestUID(builder, GuestUID);
  SN_PartyInviteAnswer.add_GuestNick(builder, GuestNickOffset);
  SN_PartyInviteAnswer.add_GuestEntitlementID(builder, GuestEntitlementID);
  SN_PartyInviteAnswer.add_GuestProfileIconID(builder, GuestProfileIconID);
  SN_PartyInviteAnswer.add_GuestProfileBGID(builder, GuestProfileBGID);
  SN_PartyInviteAnswer.add_GuestDodgeID(builder, GuestDodgeID);
  return SN_PartyInviteAnswer.endSN_PartyInviteAnswer(builder);
}

unpack(): SN_PartyInviteAnswerT {
  return new SN_PartyInviteAnswerT(
    this.IsAccept(),
    this.Reason(),
    this.InviteCode(),
    this.GuestUID(),
    this.GuestNick(),
    this.GuestEntitlementID(),
    this.GuestProfileIconID(),
    this.GuestProfileBGID(),
    this.GuestDodgeID()
  );
}


unpackTo(_o: SN_PartyInviteAnswerT): void {
  _o.IsAccept = this.IsAccept();
  _o.Reason = this.Reason();
  _o.InviteCode = this.InviteCode();
  _o.GuestUID = this.GuestUID();
  _o.GuestNick = this.GuestNick();
  _o.GuestEntitlementID = this.GuestEntitlementID();
  _o.GuestProfileIconID = this.GuestProfileIconID();
  _o.GuestProfileBGID = this.GuestProfileBGID();
  _o.GuestDodgeID = this.GuestDodgeID();
}
}

export class SN_PartyInviteAnswerT implements flatbuffers.IGeneratedObject {
constructor(
  public IsAccept: boolean = false,
  public Reason: EResultType = EResultType.Success,
  public InviteCode: string|Uint8Array|null = null,
  public GuestUID: number = 0,
  public GuestNick: string|Uint8Array|null = null,
  public GuestEntitlementID: number = 0,
  public GuestProfileIconID: number = 0,
  public GuestProfileBGID: number = 0,
  public GuestDodgeID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);

  return SN_PartyInviteAnswer.createSN_PartyInviteAnswer(builder,
    this.IsAccept,
    this.Reason,
    InviteCode,
    this.GuestUID,
    GuestNick,
    this.GuestEntitlementID,
    this.GuestProfileIconID,
    this.GuestProfileBGID,
    this.GuestDodgeID
  );
}
}

export class SN_PartyJoinAccept implements flatbuffers.IUnpackableObject<SN_PartyJoinAcceptT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyJoinAccept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyJoinAccept(bb:flatbuffers.ByteBuffer, obj?:SN_PartyJoinAccept):SN_PartyJoinAccept {
  return (obj || new SN_PartyJoinAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyJoinAccept(bb:flatbuffers.ByteBuffer, obj?:SN_PartyJoinAccept):SN_PartyJoinAccept {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyJoinAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MemberList(index: number, obj?:PartyMemberInfo):PartyMemberInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new PartyMemberInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

MemberList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyJoinAccept';
}

static startSN_PartyJoinAccept(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(1, MasterUID, 0);
}

static add_MemberList(builder:flatbuffers.Builder, MemberListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MemberListOffset, 0);
}

static create_MemberList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_MemberList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSN_PartyJoinAccept(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyJoinAccept(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, MasterUID:number, MemberListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_PartyJoinAccept.startSN_PartyJoinAccept(builder);
  SN_PartyJoinAccept.add_PartyID(builder, PartyIDOffset);
  SN_PartyJoinAccept.add_MasterUID(builder, MasterUID);
  SN_PartyJoinAccept.add_MemberList(builder, MemberListOffset);
  return SN_PartyJoinAccept.endSN_PartyJoinAccept(builder);
}

unpack(): SN_PartyJoinAcceptT {
  return new SN_PartyJoinAcceptT(
    this.PartyID(),
    this.MasterUID(),
    this.bb!.createObjList<PartyMemberInfo, PartyMemberInfoT>(this.MemberList.bind(this), this.MemberList_Length())
  );
}


unpackTo(_o: SN_PartyJoinAcceptT): void {
  _o.PartyID = this.PartyID();
  _o.MasterUID = this.MasterUID();
  _o.MemberList = this.bb!.createObjList<PartyMemberInfo, PartyMemberInfoT>(this.MemberList.bind(this), this.MemberList_Length());
}
}

export class SN_PartyJoinAcceptT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public MasterUID: number = 0,
  public MemberList: (PartyMemberInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);
  const MemberList = SN_PartyJoinAccept.create_MemberList_Vector(builder, builder.createObjectOffsetList(this.MemberList));

  return SN_PartyJoinAccept.createSN_PartyJoinAccept(builder,
    PartyID,
    this.MasterUID,
    MemberList
  );
}
}

export class SN_PartyJoinReject implements flatbuffers.IUnpackableObject<SN_PartyJoinRejectT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyJoinReject {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyJoinReject(bb:flatbuffers.ByteBuffer, obj?:SN_PartyJoinReject):SN_PartyJoinReject {
  return (obj || new SN_PartyJoinReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyJoinReject(bb:flatbuffers.ByteBuffer, obj?:SN_PartyJoinReject):SN_PartyJoinReject {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyJoinReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Reason():EResultType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : EResultType.Success;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyJoinReject';
}

static startSN_PartyJoinReject(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, InviteCodeOffset, 0);
}

static add_Reason(builder:flatbuffers.Builder, Reason:EResultType) {
  builder.addFieldInt16(1, Reason, EResultType.Success);
}

static endSN_PartyJoinReject(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyJoinReject(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset, Reason:EResultType):flatbuffers.Offset {
  SN_PartyJoinReject.startSN_PartyJoinReject(builder);
  SN_PartyJoinReject.add_InviteCode(builder, InviteCodeOffset);
  SN_PartyJoinReject.add_Reason(builder, Reason);
  return SN_PartyJoinReject.endSN_PartyJoinReject(builder);
}

unpack(): SN_PartyJoinRejectT {
  return new SN_PartyJoinRejectT(
    this.InviteCode(),
    this.Reason()
  );
}


unpackTo(_o: SN_PartyJoinRejectT): void {
  _o.InviteCode = this.InviteCode();
  _o.Reason = this.Reason();
}
}

export class SN_PartyJoinRejectT implements flatbuffers.IGeneratedObject {
constructor(
  public InviteCode: string|Uint8Array|null = null,
  public Reason: EResultType = EResultType.Success
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);

  return SN_PartyJoinReject.createSN_PartyJoinReject(builder,
    InviteCode,
    this.Reason
  );
}
}

export class SN_PartyWelcomeNewUser implements flatbuffers.IUnpackableObject<SN_PartyWelcomeNewUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyWelcomeNewUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyWelcomeNewUser(bb:flatbuffers.ByteBuffer, obj?:SN_PartyWelcomeNewUser):SN_PartyWelcomeNewUser {
  return (obj || new SN_PartyWelcomeNewUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyWelcomeNewUser(bb:flatbuffers.ByteBuffer, obj?:SN_PartyWelcomeNewUser):SN_PartyWelcomeNewUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyWelcomeNewUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NewMember(obj?:PartyMemberInfo):PartyMemberInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new PartyMemberInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyWelcomeNewUser';
}

static startSN_PartyWelcomeNewUser(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_NewMember(builder:flatbuffers.Builder, NewMemberOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewMemberOffset, 0);
}

static endSN_PartyWelcomeNewUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SN_PartyWelcomeNewUserT {
  return new SN_PartyWelcomeNewUserT(
    this.PartyID(),
    (this.NewMember() !== null ? this.NewMember()!.unpack() : null)
  );
}


unpackTo(_o: SN_PartyWelcomeNewUserT): void {
  _o.PartyID = this.PartyID();
  _o.NewMember = (this.NewMember() !== null ? this.NewMember()!.unpack() : null);
}
}

export class SN_PartyWelcomeNewUserT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public NewMember: PartyMemberInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);
  const NewMember = (this.NewMember !== null ? this.NewMember!.pack(builder) : 0);

  SN_PartyWelcomeNewUser.startSN_PartyWelcomeNewUser(builder);
  SN_PartyWelcomeNewUser.add_PartyID(builder, PartyID);
  SN_PartyWelcomeNewUser.add_NewMember(builder, NewMember);

  return SN_PartyWelcomeNewUser.endSN_PartyWelcomeNewUser(builder);
}
}

export class CQ_PartyLeaveMember implements flatbuffers.IUnpackableObject<CQ_PartyLeaveMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PartyLeaveMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PartyLeaveMember(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyLeaveMember):CQ_PartyLeaveMember {
  return (obj || new CQ_PartyLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PartyLeaveMember(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyLeaveMember):CQ_PartyLeaveMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PartyLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PartyLeaveMember';
}

static startCQ_PartyLeaveMember(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static endCQ_PartyLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PartyLeaveMember(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_PartyLeaveMember.startCQ_PartyLeaveMember(builder);
  CQ_PartyLeaveMember.add_PartyID(builder, PartyIDOffset);
  return CQ_PartyLeaveMember.endCQ_PartyLeaveMember(builder);
}

unpack(): CQ_PartyLeaveMemberT {
  return new CQ_PartyLeaveMemberT(
    this.PartyID()
  );
}


unpackTo(_o: CQ_PartyLeaveMemberT): void {
  _o.PartyID = this.PartyID();
}
}

export class CQ_PartyLeaveMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);

  return CQ_PartyLeaveMember.createCQ_PartyLeaveMember(builder,
    PartyID
  );
}
}

export class SA_PartyLeaveMember implements flatbuffers.IUnpackableObject<SA_PartyLeaveMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PartyLeaveMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PartyLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SA_PartyLeaveMember):SA_PartyLeaveMember {
  return (obj || new SA_PartyLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PartyLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SA_PartyLeaveMember):SA_PartyLeaveMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PartyLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PartyLeaveMember';
}

static startSA_PartyLeaveMember(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_PartyLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PartyLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_PartyLeaveMember.startSA_PartyLeaveMember(builder);
  return SA_PartyLeaveMember.endSA_PartyLeaveMember(builder);
}

unpack(): SA_PartyLeaveMemberT {
  return new SA_PartyLeaveMemberT();
}


unpackTo(_o: SA_PartyLeaveMemberT): void {}
}

export class SA_PartyLeaveMemberT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PartyLeaveMember.createSA_PartyLeaveMember(builder);
}
}

export class SN_PartyLeaveMember implements flatbuffers.IUnpackableObject<SN_PartyLeaveMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyLeaveMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SN_PartyLeaveMember):SN_PartyLeaveMember {
  return (obj || new SN_PartyLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SN_PartyLeaveMember):SN_PartyLeaveMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LeaveMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NewMasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsBrokenParty():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyLeaveMember';
}

static startSN_PartyLeaveMember(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_LeaveMemberUID(builder:flatbuffers.Builder, LeaveMemberUID:number) {
  builder.addFieldInt32(1, LeaveMemberUID, 0);
}

static add_NewMasterUID(builder:flatbuffers.Builder, NewMasterUID:number) {
  builder.addFieldInt32(2, NewMasterUID, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(3, MasterUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, MasterNickOffset, 0);
}

static add_IsBrokenParty(builder:flatbuffers.Builder, IsBrokenParty:boolean) {
  builder.addFieldInt8(5, +IsBrokenParty, +false);
}

static endSN_PartyLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyLeaveMember(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, LeaveMemberUID:number, NewMasterUID:number, MasterUID:number, MasterNickOffset:flatbuffers.Offset, IsBrokenParty:boolean):flatbuffers.Offset {
  SN_PartyLeaveMember.startSN_PartyLeaveMember(builder);
  SN_PartyLeaveMember.add_PartyID(builder, PartyIDOffset);
  SN_PartyLeaveMember.add_LeaveMemberUID(builder, LeaveMemberUID);
  SN_PartyLeaveMember.add_NewMasterUID(builder, NewMasterUID);
  SN_PartyLeaveMember.add_MasterUID(builder, MasterUID);
  SN_PartyLeaveMember.add_MasterNick(builder, MasterNickOffset);
  SN_PartyLeaveMember.add_IsBrokenParty(builder, IsBrokenParty);
  return SN_PartyLeaveMember.endSN_PartyLeaveMember(builder);
}

unpack(): SN_PartyLeaveMemberT {
  return new SN_PartyLeaveMemberT(
    this.PartyID(),
    this.LeaveMemberUID(),
    this.NewMasterUID(),
    this.MasterUID(),
    this.MasterNick(),
    this.IsBrokenParty()
  );
}


unpackTo(_o: SN_PartyLeaveMemberT): void {
  _o.PartyID = this.PartyID();
  _o.LeaveMemberUID = this.LeaveMemberUID();
  _o.NewMasterUID = this.NewMasterUID();
  _o.MasterUID = this.MasterUID();
  _o.MasterNick = this.MasterNick();
  _o.IsBrokenParty = this.IsBrokenParty();
}
}

export class SN_PartyLeaveMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public LeaveMemberUID: number = 0,
  public NewMasterUID: number = 0,
  public MasterUID: number = 0,
  public MasterNick: string|Uint8Array|null = null,
  public IsBrokenParty: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return SN_PartyLeaveMember.createSN_PartyLeaveMember(builder,
    PartyID,
    this.LeaveMemberUID,
    this.NewMasterUID,
    this.MasterUID,
    MasterNick,
    this.IsBrokenParty
  );
}
}

export class CQ_PartyKickMember implements flatbuffers.IUnpackableObject<CQ_PartyKickMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PartyKickMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PartyKickMember(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyKickMember):CQ_PartyKickMember {
  return (obj || new CQ_PartyKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PartyKickMember(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyKickMember):CQ_PartyKickMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PartyKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

KickMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PartyKickMember';
}

static startCQ_PartyKickMember(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_KickMemberUID(builder:flatbuffers.Builder, KickMemberUID:number) {
  builder.addFieldInt32(1, KickMemberUID, 0);
}

static endCQ_PartyKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PartyKickMember(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, KickMemberUID:number):flatbuffers.Offset {
  CQ_PartyKickMember.startCQ_PartyKickMember(builder);
  CQ_PartyKickMember.add_PartyID(builder, PartyIDOffset);
  CQ_PartyKickMember.add_KickMemberUID(builder, KickMemberUID);
  return CQ_PartyKickMember.endCQ_PartyKickMember(builder);
}

unpack(): CQ_PartyKickMemberT {
  return new CQ_PartyKickMemberT(
    this.PartyID(),
    this.KickMemberUID()
  );
}


unpackTo(_o: CQ_PartyKickMemberT): void {
  _o.PartyID = this.PartyID();
  _o.KickMemberUID = this.KickMemberUID();
}
}

export class CQ_PartyKickMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public KickMemberUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);

  return CQ_PartyKickMember.createCQ_PartyKickMember(builder,
    PartyID,
    this.KickMemberUID
  );
}
}

export class SA_PartyKickMember implements flatbuffers.IUnpackableObject<SA_PartyKickMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PartyKickMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PartyKickMember(bb:flatbuffers.ByteBuffer, obj?:SA_PartyKickMember):SA_PartyKickMember {
  return (obj || new SA_PartyKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PartyKickMember(bb:flatbuffers.ByteBuffer, obj?:SA_PartyKickMember):SA_PartyKickMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PartyKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PartyKickMember';
}

static startSA_PartyKickMember(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_PartyKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PartyKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_PartyKickMember.startSA_PartyKickMember(builder);
  return SA_PartyKickMember.endSA_PartyKickMember(builder);
}

unpack(): SA_PartyKickMemberT {
  return new SA_PartyKickMemberT();
}


unpackTo(_o: SA_PartyKickMemberT): void {}
}

export class SA_PartyKickMemberT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PartyKickMember.createSA_PartyKickMember(builder);
}
}

export class SN_PartyKickMember implements flatbuffers.IUnpackableObject<SN_PartyKickMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyKickMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyKickMember(bb:flatbuffers.ByteBuffer, obj?:SN_PartyKickMember):SN_PartyKickMember {
  return (obj || new SN_PartyKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyKickMember(bb:flatbuffers.ByteBuffer, obj?:SN_PartyKickMember):SN_PartyKickMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

KickMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyKickMember';
}

static startSN_PartyKickMember(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_KickMemberUID(builder:flatbuffers.Builder, KickMemberUID:number) {
  builder.addFieldInt32(1, KickMemberUID, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(2, MasterUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, MasterNickOffset, 0);
}

static endSN_PartyKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyKickMember(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, KickMemberUID:number, MasterUID:number, MasterNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_PartyKickMember.startSN_PartyKickMember(builder);
  SN_PartyKickMember.add_PartyID(builder, PartyIDOffset);
  SN_PartyKickMember.add_KickMemberUID(builder, KickMemberUID);
  SN_PartyKickMember.add_MasterUID(builder, MasterUID);
  SN_PartyKickMember.add_MasterNick(builder, MasterNickOffset);
  return SN_PartyKickMember.endSN_PartyKickMember(builder);
}

unpack(): SN_PartyKickMemberT {
  return new SN_PartyKickMemberT(
    this.PartyID(),
    this.KickMemberUID(),
    this.MasterUID(),
    this.MasterNick()
  );
}


unpackTo(_o: SN_PartyKickMemberT): void {
  _o.PartyID = this.PartyID();
  _o.KickMemberUID = this.KickMemberUID();
  _o.MasterUID = this.MasterUID();
  _o.MasterNick = this.MasterNick();
}
}

export class SN_PartyKickMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public KickMemberUID: number = 0,
  public MasterUID: number = 0,
  public MasterNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return SN_PartyKickMember.createSN_PartyKickMember(builder,
    PartyID,
    this.KickMemberUID,
    this.MasterUID,
    MasterNick
  );
}
}

export class CQ_PartyChangeMaster implements flatbuffers.IUnpackableObject<CQ_PartyChangeMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PartyChangeMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PartyChangeMaster(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyChangeMaster):CQ_PartyChangeMaster {
  return (obj || new CQ_PartyChangeMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PartyChangeMaster(bb:flatbuffers.ByteBuffer, obj?:CQ_PartyChangeMaster):CQ_PartyChangeMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PartyChangeMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NewMasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PartyChangeMaster';
}

static startCQ_PartyChangeMaster(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_NewMasterUID(builder:flatbuffers.Builder, NewMasterUID:number) {
  builder.addFieldInt32(1, NewMasterUID, 0);
}

static endCQ_PartyChangeMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PartyChangeMaster(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, NewMasterUID:number):flatbuffers.Offset {
  CQ_PartyChangeMaster.startCQ_PartyChangeMaster(builder);
  CQ_PartyChangeMaster.add_PartyID(builder, PartyIDOffset);
  CQ_PartyChangeMaster.add_NewMasterUID(builder, NewMasterUID);
  return CQ_PartyChangeMaster.endCQ_PartyChangeMaster(builder);
}

unpack(): CQ_PartyChangeMasterT {
  return new CQ_PartyChangeMasterT(
    this.PartyID(),
    this.NewMasterUID()
  );
}


unpackTo(_o: CQ_PartyChangeMasterT): void {
  _o.PartyID = this.PartyID();
  _o.NewMasterUID = this.NewMasterUID();
}
}

export class CQ_PartyChangeMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public NewMasterUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);

  return CQ_PartyChangeMaster.createCQ_PartyChangeMaster(builder,
    PartyID,
    this.NewMasterUID
  );
}
}

export class SA_PartyChangeMaster implements flatbuffers.IUnpackableObject<SA_PartyChangeMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PartyChangeMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PartyChangeMaster(bb:flatbuffers.ByteBuffer, obj?:SA_PartyChangeMaster):SA_PartyChangeMaster {
  return (obj || new SA_PartyChangeMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PartyChangeMaster(bb:flatbuffers.ByteBuffer, obj?:SA_PartyChangeMaster):SA_PartyChangeMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PartyChangeMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NewMasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PartyChangeMaster';
}

static startSA_PartyChangeMaster(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_NewMasterUID(builder:flatbuffers.Builder, NewMasterUID:number) {
  builder.addFieldInt32(1, NewMasterUID, 0);
}

static endSA_PartyChangeMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PartyChangeMaster(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, NewMasterUID:number):flatbuffers.Offset {
  SA_PartyChangeMaster.startSA_PartyChangeMaster(builder);
  SA_PartyChangeMaster.add_PartyID(builder, PartyIDOffset);
  SA_PartyChangeMaster.add_NewMasterUID(builder, NewMasterUID);
  return SA_PartyChangeMaster.endSA_PartyChangeMaster(builder);
}

unpack(): SA_PartyChangeMasterT {
  return new SA_PartyChangeMasterT(
    this.PartyID(),
    this.NewMasterUID()
  );
}


unpackTo(_o: SA_PartyChangeMasterT): void {
  _o.PartyID = this.PartyID();
  _o.NewMasterUID = this.NewMasterUID();
}
}

export class SA_PartyChangeMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public NewMasterUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);

  return SA_PartyChangeMaster.createSA_PartyChangeMaster(builder,
    PartyID,
    this.NewMasterUID
  );
}
}

export class SN_PartyChangeMaster implements flatbuffers.IUnpackableObject<SN_PartyChangeMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PartyChangeMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PartyChangeMaster(bb:flatbuffers.ByteBuffer, obj?:SN_PartyChangeMaster):SN_PartyChangeMaster {
  return (obj || new SN_PartyChangeMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PartyChangeMaster(bb:flatbuffers.ByteBuffer, obj?:SN_PartyChangeMaster):SN_PartyChangeMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PartyChangeMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

OldMasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NewMasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PartyChangeMaster';
}

static startSN_PartyChangeMaster(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_OldMasterUID(builder:flatbuffers.Builder, OldMasterUID:number) {
  builder.addFieldInt32(1, OldMasterUID, 0);
}

static add_NewMasterUID(builder:flatbuffers.Builder, NewMasterUID:number) {
  builder.addFieldInt32(2, NewMasterUID, 0);
}

static endSN_PartyChangeMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PartyChangeMaster(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, OldMasterUID:number, NewMasterUID:number):flatbuffers.Offset {
  SN_PartyChangeMaster.startSN_PartyChangeMaster(builder);
  SN_PartyChangeMaster.add_PartyID(builder, PartyIDOffset);
  SN_PartyChangeMaster.add_OldMasterUID(builder, OldMasterUID);
  SN_PartyChangeMaster.add_NewMasterUID(builder, NewMasterUID);
  return SN_PartyChangeMaster.endSN_PartyChangeMaster(builder);
}

unpack(): SN_PartyChangeMasterT {
  return new SN_PartyChangeMasterT(
    this.PartyID(),
    this.OldMasterUID(),
    this.NewMasterUID()
  );
}


unpackTo(_o: SN_PartyChangeMasterT): void {
  _o.PartyID = this.PartyID();
  _o.OldMasterUID = this.OldMasterUID();
  _o.NewMasterUID = this.NewMasterUID();
}
}

export class SN_PartyChangeMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public OldMasterUID: number = 0,
  public NewMasterUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);

  return SN_PartyChangeMaster.createSN_PartyChangeMaster(builder,
    PartyID,
    this.OldMasterUID,
    this.NewMasterUID
  );
}
}

export class CustomGameMemberInfo implements flatbuffers.IUnpackableObject<CustomGameMemberInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CustomGameMemberInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCustomGameMemberInfo(bb:flatbuffers.ByteBuffer, obj?:CustomGameMemberInfo):CustomGameMemberInfo {
  return (obj || new CustomGameMemberInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCustomGameMemberInfo(bb:flatbuffers.ByteBuffer, obj?:CustomGameMemberInfo):CustomGameMemberInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CustomGameMemberInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SlotNo():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsMaster():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CustomGameMemberInfo';
}

static startCustomGameMemberInfo(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static add_SlotNo(builder:flatbuffers.Builder, SlotNo:number) {
  builder.addFieldInt8(0, SlotNo, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, NickOffset, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(3, EntitlementID, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(4, ProfileIconID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(5, ProfileBGID, 0);
}

static add_IsMaster(builder:flatbuffers.Builder, IsMaster:boolean) {
  builder.addFieldInt8(6, +IsMaster, +false);
}

static endCustomGameMemberInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCustomGameMemberInfo(builder:flatbuffers.Builder, SlotNo:number, UID:number, NickOffset:flatbuffers.Offset, EntitlementID:number, ProfileIconID:number, ProfileBGID:number, IsMaster:boolean):flatbuffers.Offset {
  CustomGameMemberInfo.startCustomGameMemberInfo(builder);
  CustomGameMemberInfo.add_SlotNo(builder, SlotNo);
  CustomGameMemberInfo.add_UID(builder, UID);
  CustomGameMemberInfo.add_Nick(builder, NickOffset);
  CustomGameMemberInfo.add_EntitlementID(builder, EntitlementID);
  CustomGameMemberInfo.add_ProfileIconID(builder, ProfileIconID);
  CustomGameMemberInfo.add_ProfileBGID(builder, ProfileBGID);
  CustomGameMemberInfo.add_IsMaster(builder, IsMaster);
  return CustomGameMemberInfo.endCustomGameMemberInfo(builder);
}

unpack(): CustomGameMemberInfoT {
  return new CustomGameMemberInfoT(
    this.SlotNo(),
    this.UID(),
    this.Nick(),
    this.EntitlementID(),
    this.ProfileIconID(),
    this.ProfileBGID(),
    this.IsMaster()
  );
}


unpackTo(_o: CustomGameMemberInfoT): void {
  _o.SlotNo = this.SlotNo();
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.EntitlementID = this.EntitlementID();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.IsMaster = this.IsMaster();
}
}

export class CustomGameMemberInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotNo: number = 0,
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public EntitlementID: number = 0,
  public ProfileIconID: number = 0,
  public ProfileBGID: number = 0,
  public IsMaster: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);

  return CustomGameMemberInfo.createCustomGameMemberInfo(builder,
    this.SlotNo,
    this.UID,
    Nick,
    this.EntitlementID,
    this.ProfileIconID,
    this.ProfileBGID,
    this.IsMaster
  );
}
}

export class CQ_CustomGameCreateRoom implements flatbuffers.IUnpackableObject<CQ_CustomGameCreateRoomT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameCreateRoom {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameCreateRoom(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameCreateRoom):CQ_CustomGameCreateRoom {
  return (obj || new CQ_CustomGameCreateRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameCreateRoom(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameCreateRoom):CQ_CustomGameCreateRoom {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameCreateRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameCreateRoom';
}

static startCQ_CustomGameCreateRoom(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static endCQ_CustomGameCreateRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameCreateRoom(builder:flatbuffers.Builder, MatchingTableID:number):flatbuffers.Offset {
  CQ_CustomGameCreateRoom.startCQ_CustomGameCreateRoom(builder);
  CQ_CustomGameCreateRoom.add_MatchingTableID(builder, MatchingTableID);
  return CQ_CustomGameCreateRoom.endCQ_CustomGameCreateRoom(builder);
}

unpack(): CQ_CustomGameCreateRoomT {
  return new CQ_CustomGameCreateRoomT(
    this.MatchingTableID()
  );
}


unpackTo(_o: CQ_CustomGameCreateRoomT): void {
  _o.MatchingTableID = this.MatchingTableID();
}
}

export class CQ_CustomGameCreateRoomT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CustomGameCreateRoom.createCQ_CustomGameCreateRoom(builder,
    this.MatchingTableID
  );
}
}

export class SA_CustomGameCreateRoom implements flatbuffers.IUnpackableObject<SA_CustomGameCreateRoomT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameCreateRoom {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameCreateRoom(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameCreateRoom):SA_CustomGameCreateRoom {
  return (obj || new SA_CustomGameCreateRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameCreateRoom(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameCreateRoom):SA_CustomGameCreateRoom {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameCreateRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ActiveSlotNoList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
}

ActiveSlotNoList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ActiveSlotNoList_Array():Int8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

IsFollowOn():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

MasterInfo(obj?:CustomGameMemberInfo):CustomGameMemberInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new CustomGameMemberInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameCreateRoom';
}

static startSA_CustomGameCreateRoom(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(1, MatchingTableID, 0);
}

static add_ActiveSlotNoList(builder:flatbuffers.Builder, ActiveSlotNoListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ActiveSlotNoListOffset, 0);
}

static create_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, data:number[]|Int8Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, data:number[]|Int8Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]!);
  }
  return builder.endVector();
}

static start_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static add_IsFollowOn(builder:flatbuffers.Builder, IsFollowOn:boolean) {
  builder.addFieldInt8(3, +IsFollowOn, +false);
}

static add_MasterInfo(builder:flatbuffers.Builder, MasterInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, MasterInfoOffset, 0);
}

static endSA_CustomGameCreateRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_CustomGameCreateRoomT {
  return new SA_CustomGameCreateRoomT(
    this.RoomID(),
    this.MatchingTableID(),
    this.bb!.createScalarList<number>(this.ActiveSlotNoList.bind(this), this.ActiveSlotNoList_Length()),
    this.IsFollowOn(),
    (this.MasterInfo() !== null ? this.MasterInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_CustomGameCreateRoomT): void {
  _o.RoomID = this.RoomID();
  _o.MatchingTableID = this.MatchingTableID();
  _o.ActiveSlotNoList = this.bb!.createScalarList<number>(this.ActiveSlotNoList.bind(this), this.ActiveSlotNoList_Length());
  _o.IsFollowOn = this.IsFollowOn();
  _o.MasterInfo = (this.MasterInfo() !== null ? this.MasterInfo()!.unpack() : null);
}
}

export class SA_CustomGameCreateRoomT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public MatchingTableID: number = 0,
  public ActiveSlotNoList: (number)[] = [],
  public IsFollowOn: boolean = false,
  public MasterInfo: CustomGameMemberInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const ActiveSlotNoList = SA_CustomGameCreateRoom.create_ActiveSlotNoList_Vector(builder, this.ActiveSlotNoList);
  const MasterInfo = (this.MasterInfo !== null ? this.MasterInfo!.pack(builder) : 0);

  SA_CustomGameCreateRoom.startSA_CustomGameCreateRoom(builder);
  SA_CustomGameCreateRoom.add_RoomID(builder, RoomID);
  SA_CustomGameCreateRoom.add_MatchingTableID(builder, this.MatchingTableID);
  SA_CustomGameCreateRoom.add_ActiveSlotNoList(builder, ActiveSlotNoList);
  SA_CustomGameCreateRoom.add_IsFollowOn(builder, this.IsFollowOn);
  SA_CustomGameCreateRoom.add_MasterInfo(builder, MasterInfo);

  return SA_CustomGameCreateRoom.endSA_CustomGameCreateRoom(builder);
}
}

export class CQ_CustomGameInviteUser implements flatbuffers.IUnpackableObject<CQ_CustomGameInviteUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameInviteUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameInviteUser(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameInviteUser):CQ_CustomGameInviteUser {
  return (obj || new CQ_CustomGameInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameInviteUser(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameInviteUser):CQ_CustomGameInviteUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameInviteUser';
}

static startCQ_CustomGameInviteUser(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, GuestNickOffset, 0);
}

static add_GuestUID(builder:flatbuffers.Builder, GuestUID:number) {
  builder.addFieldInt32(2, GuestUID, 0);
}

static endCQ_CustomGameInviteUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameInviteUser(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, GuestNickOffset:flatbuffers.Offset, GuestUID:number):flatbuffers.Offset {
  CQ_CustomGameInviteUser.startCQ_CustomGameInviteUser(builder);
  CQ_CustomGameInviteUser.add_RoomID(builder, RoomIDOffset);
  CQ_CustomGameInviteUser.add_GuestNick(builder, GuestNickOffset);
  CQ_CustomGameInviteUser.add_GuestUID(builder, GuestUID);
  return CQ_CustomGameInviteUser.endCQ_CustomGameInviteUser(builder);
}

unpack(): CQ_CustomGameInviteUserT {
  return new CQ_CustomGameInviteUserT(
    this.RoomID(),
    this.GuestNick(),
    this.GuestUID()
  );
}


unpackTo(_o: CQ_CustomGameInviteUserT): void {
  _o.RoomID = this.RoomID();
  _o.GuestNick = this.GuestNick();
  _o.GuestUID = this.GuestUID();
}
}

export class CQ_CustomGameInviteUserT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public GuestNick: string|Uint8Array|null = null,
  public GuestUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);

  return CQ_CustomGameInviteUser.createCQ_CustomGameInviteUser(builder,
    RoomID,
    GuestNick,
    this.GuestUID
  );
}
}

export class SA_CustomGameInviteUser implements flatbuffers.IUnpackableObject<SA_CustomGameInviteUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameInviteUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameInviteUser(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameInviteUser):SA_CustomGameInviteUser {
  return (obj || new SA_CustomGameInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameInviteUser(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameInviteUser):SA_CustomGameInviteUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RemainCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameInviteUser';
}

static startSA_CustomGameInviteUser(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(1, ExpireAt, 0);
}

static add_RemainCount(builder:flatbuffers.Builder, RemainCount:number) {
  builder.addFieldInt8(2, RemainCount, 0);
}

static endSA_CustomGameInviteUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameInviteUser(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, ExpireAt:number, RemainCount:number):flatbuffers.Offset {
  SA_CustomGameInviteUser.startSA_CustomGameInviteUser(builder);
  SA_CustomGameInviteUser.add_RoomID(builder, RoomIDOffset);
  SA_CustomGameInviteUser.add_ExpireAt(builder, ExpireAt);
  SA_CustomGameInviteUser.add_RemainCount(builder, RemainCount);
  return SA_CustomGameInviteUser.endSA_CustomGameInviteUser(builder);
}

unpack(): SA_CustomGameInviteUserT {
  return new SA_CustomGameInviteUserT(
    this.RoomID(),
    this.ExpireAt(),
    this.RemainCount()
  );
}


unpackTo(_o: SA_CustomGameInviteUserT): void {
  _o.RoomID = this.RoomID();
  _o.ExpireAt = this.ExpireAt();
  _o.RemainCount = this.RemainCount();
}
}

export class SA_CustomGameInviteUserT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public ExpireAt: number = 0,
  public RemainCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);

  return SA_CustomGameInviteUser.createSA_CustomGameInviteUser(builder,
    RoomID,
    this.ExpireAt,
    this.RemainCount
  );
}
}

export class SN_CustomGameInviteUser implements flatbuffers.IUnpackableObject<SN_CustomGameInviteUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameInviteUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameInviteUser(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameInviteUser):SN_CustomGameInviteUser {
  return (obj || new SN_CustomGameInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameInviteUser(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameInviteUser):SN_CustomGameInviteUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameInviteUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ActiveSlotNoList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
}

ActiveSlotNoList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ActiveSlotNoList_Array():Int8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameInviteUser';
}

static startSN_CustomGameInviteUser(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(1, MatchingTableID, 0);
}

static add_ActiveSlotNoList(builder:flatbuffers.Builder, ActiveSlotNoListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ActiveSlotNoListOffset, 0);
}

static create_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, data:number[]|Int8Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, data:number[]|Int8Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]!);
  }
  return builder.endVector();
}

static start_ActiveSlotNoList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, InviteCodeOffset, 0);
}

static add_ExpireAt(builder:flatbuffers.Builder, ExpireAt:number) {
  builder.addFieldInt32(4, ExpireAt, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(5, MasterUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, MasterNickOffset, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, GuestNickOffset, 0);
}

static endSN_CustomGameInviteUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameInviteUser(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, MatchingTableID:number, ActiveSlotNoListOffset:flatbuffers.Offset, InviteCodeOffset:flatbuffers.Offset, ExpireAt:number, MasterUID:number, MasterNickOffset:flatbuffers.Offset, GuestNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_CustomGameInviteUser.startSN_CustomGameInviteUser(builder);
  SN_CustomGameInviteUser.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameInviteUser.add_MatchingTableID(builder, MatchingTableID);
  SN_CustomGameInviteUser.add_ActiveSlotNoList(builder, ActiveSlotNoListOffset);
  SN_CustomGameInviteUser.add_InviteCode(builder, InviteCodeOffset);
  SN_CustomGameInviteUser.add_ExpireAt(builder, ExpireAt);
  SN_CustomGameInviteUser.add_MasterUID(builder, MasterUID);
  SN_CustomGameInviteUser.add_MasterNick(builder, MasterNickOffset);
  SN_CustomGameInviteUser.add_GuestNick(builder, GuestNickOffset);
  return SN_CustomGameInviteUser.endSN_CustomGameInviteUser(builder);
}

unpack(): SN_CustomGameInviteUserT {
  return new SN_CustomGameInviteUserT(
    this.RoomID(),
    this.MatchingTableID(),
    this.bb!.createScalarList<number>(this.ActiveSlotNoList.bind(this), this.ActiveSlotNoList_Length()),
    this.InviteCode(),
    this.ExpireAt(),
    this.MasterUID(),
    this.MasterNick(),
    this.GuestNick()
  );
}


unpackTo(_o: SN_CustomGameInviteUserT): void {
  _o.RoomID = this.RoomID();
  _o.MatchingTableID = this.MatchingTableID();
  _o.ActiveSlotNoList = this.bb!.createScalarList<number>(this.ActiveSlotNoList.bind(this), this.ActiveSlotNoList_Length());
  _o.InviteCode = this.InviteCode();
  _o.ExpireAt = this.ExpireAt();
  _o.MasterUID = this.MasterUID();
  _o.MasterNick = this.MasterNick();
  _o.GuestNick = this.GuestNick();
}
}

export class SN_CustomGameInviteUserT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public MatchingTableID: number = 0,
  public ActiveSlotNoList: (number)[] = [],
  public InviteCode: string|Uint8Array|null = null,
  public ExpireAt: number = 0,
  public MasterUID: number = 0,
  public MasterNick: string|Uint8Array|null = null,
  public GuestNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const ActiveSlotNoList = SN_CustomGameInviteUser.create_ActiveSlotNoList_Vector(builder, this.ActiveSlotNoList);
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);

  return SN_CustomGameInviteUser.createSN_CustomGameInviteUser(builder,
    RoomID,
    this.MatchingTableID,
    ActiveSlotNoList,
    InviteCode,
    this.ExpireAt,
    this.MasterUID,
    MasterNick,
    GuestNick
  );
}
}

export class CQ_CustomGameInviteAnswer implements flatbuffers.IUnpackableObject<CQ_CustomGameInviteAnswerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameInviteAnswer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameInviteAnswer):CQ_CustomGameInviteAnswer {
  return (obj || new CQ_CustomGameInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameInviteAnswer):CQ_CustomGameInviteAnswer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsAccept():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameInviteAnswer';
}

static startCQ_CustomGameInviteAnswer(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_IsAccept(builder:flatbuffers.Builder, IsAccept:boolean) {
  builder.addFieldInt8(1, +IsAccept, +false);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, InviteCodeOffset, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(3, MasterUID, 0);
}

static endCQ_CustomGameInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameInviteAnswer(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, IsAccept:boolean, InviteCodeOffset:flatbuffers.Offset, MasterUID:number):flatbuffers.Offset {
  CQ_CustomGameInviteAnswer.startCQ_CustomGameInviteAnswer(builder);
  CQ_CustomGameInviteAnswer.add_RoomID(builder, RoomIDOffset);
  CQ_CustomGameInviteAnswer.add_IsAccept(builder, IsAccept);
  CQ_CustomGameInviteAnswer.add_InviteCode(builder, InviteCodeOffset);
  CQ_CustomGameInviteAnswer.add_MasterUID(builder, MasterUID);
  return CQ_CustomGameInviteAnswer.endCQ_CustomGameInviteAnswer(builder);
}

unpack(): CQ_CustomGameInviteAnswerT {
  return new CQ_CustomGameInviteAnswerT(
    this.RoomID(),
    this.IsAccept(),
    this.InviteCode(),
    this.MasterUID()
  );
}


unpackTo(_o: CQ_CustomGameInviteAnswerT): void {
  _o.RoomID = this.RoomID();
  _o.IsAccept = this.IsAccept();
  _o.InviteCode = this.InviteCode();
  _o.MasterUID = this.MasterUID();
}
}

export class CQ_CustomGameInviteAnswerT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public IsAccept: boolean = false,
  public InviteCode: string|Uint8Array|null = null,
  public MasterUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);

  return CQ_CustomGameInviteAnswer.createCQ_CustomGameInviteAnswer(builder,
    RoomID,
    this.IsAccept,
    InviteCode,
    this.MasterUID
  );
}
}

export class SA_CustomGameInviteAnswer implements flatbuffers.IUnpackableObject<SA_CustomGameInviteAnswerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameInviteAnswer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameInviteAnswer):SA_CustomGameInviteAnswer {
  return (obj || new SA_CustomGameInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameInviteAnswer):SA_CustomGameInviteAnswer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameInviteAnswer';
}

static startSA_CustomGameInviteAnswer(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_CustomGameInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_CustomGameInviteAnswer.startSA_CustomGameInviteAnswer(builder);
  return SA_CustomGameInviteAnswer.endSA_CustomGameInviteAnswer(builder);
}

unpack(): SA_CustomGameInviteAnswerT {
  return new SA_CustomGameInviteAnswerT();
}


unpackTo(_o: SA_CustomGameInviteAnswerT): void {}
}

export class SA_CustomGameInviteAnswerT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CustomGameInviteAnswer.createSA_CustomGameInviteAnswer(builder);
}
}

export class SN_CustomGameInviteAnswer implements flatbuffers.IUnpackableObject<SN_CustomGameInviteAnswerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameInviteAnswer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameInviteAnswer):SN_CustomGameInviteAnswer {
  return (obj || new SN_CustomGameInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameInviteAnswer(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameInviteAnswer):SN_CustomGameInviteAnswer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameInviteAnswer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsAccept():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Reason():EResultType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : EResultType.Success;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestEntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameInviteAnswer';
}

static startSN_CustomGameInviteAnswer(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_IsAccept(builder:flatbuffers.Builder, IsAccept:boolean) {
  builder.addFieldInt8(1, +IsAccept, +false);
}

static add_Reason(builder:flatbuffers.Builder, Reason:EResultType) {
  builder.addFieldInt16(2, Reason, EResultType.Success);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, InviteCodeOffset, 0);
}

static add_GuestUID(builder:flatbuffers.Builder, GuestUID:number) {
  builder.addFieldInt32(4, GuestUID, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, GuestNickOffset, 0);
}

static add_GuestEntitlementID(builder:flatbuffers.Builder, GuestEntitlementID:number) {
  builder.addFieldInt32(6, GuestEntitlementID, 0);
}

static add_GuestProfileIconID(builder:flatbuffers.Builder, GuestProfileIconID:number) {
  builder.addFieldInt32(7, GuestProfileIconID, 0);
}

static add_GuestProfileBGID(builder:flatbuffers.Builder, GuestProfileBGID:number) {
  builder.addFieldInt32(8, GuestProfileBGID, 0);
}

static endSN_CustomGameInviteAnswer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameInviteAnswer(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, IsAccept:boolean, Reason:EResultType, InviteCodeOffset:flatbuffers.Offset, GuestUID:number, GuestNickOffset:flatbuffers.Offset, GuestEntitlementID:number, GuestProfileIconID:number, GuestProfileBGID:number):flatbuffers.Offset {
  SN_CustomGameInviteAnswer.startSN_CustomGameInviteAnswer(builder);
  SN_CustomGameInviteAnswer.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameInviteAnswer.add_IsAccept(builder, IsAccept);
  SN_CustomGameInviteAnswer.add_Reason(builder, Reason);
  SN_CustomGameInviteAnswer.add_InviteCode(builder, InviteCodeOffset);
  SN_CustomGameInviteAnswer.add_GuestUID(builder, GuestUID);
  SN_CustomGameInviteAnswer.add_GuestNick(builder, GuestNickOffset);
  SN_CustomGameInviteAnswer.add_GuestEntitlementID(builder, GuestEntitlementID);
  SN_CustomGameInviteAnswer.add_GuestProfileIconID(builder, GuestProfileIconID);
  SN_CustomGameInviteAnswer.add_GuestProfileBGID(builder, GuestProfileBGID);
  return SN_CustomGameInviteAnswer.endSN_CustomGameInviteAnswer(builder);
}

unpack(): SN_CustomGameInviteAnswerT {
  return new SN_CustomGameInviteAnswerT(
    this.RoomID(),
    this.IsAccept(),
    this.Reason(),
    this.InviteCode(),
    this.GuestUID(),
    this.GuestNick(),
    this.GuestEntitlementID(),
    this.GuestProfileIconID(),
    this.GuestProfileBGID()
  );
}


unpackTo(_o: SN_CustomGameInviteAnswerT): void {
  _o.RoomID = this.RoomID();
  _o.IsAccept = this.IsAccept();
  _o.Reason = this.Reason();
  _o.InviteCode = this.InviteCode();
  _o.GuestUID = this.GuestUID();
  _o.GuestNick = this.GuestNick();
  _o.GuestEntitlementID = this.GuestEntitlementID();
  _o.GuestProfileIconID = this.GuestProfileIconID();
  _o.GuestProfileBGID = this.GuestProfileBGID();
}
}

export class SN_CustomGameInviteAnswerT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public IsAccept: boolean = false,
  public Reason: EResultType = EResultType.Success,
  public InviteCode: string|Uint8Array|null = null,
  public GuestUID: number = 0,
  public GuestNick: string|Uint8Array|null = null,
  public GuestEntitlementID: number = 0,
  public GuestProfileIconID: number = 0,
  public GuestProfileBGID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);

  return SN_CustomGameInviteAnswer.createSN_CustomGameInviteAnswer(builder,
    RoomID,
    this.IsAccept,
    this.Reason,
    InviteCode,
    this.GuestUID,
    GuestNick,
    this.GuestEntitlementID,
    this.GuestProfileIconID,
    this.GuestProfileBGID
  );
}
}

export class SN_CustomGameJoinAccept implements flatbuffers.IUnpackableObject<SN_CustomGameJoinAcceptT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameJoinAccept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameJoinAccept(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameJoinAccept):SN_CustomGameJoinAccept {
  return (obj || new SN_CustomGameJoinAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameJoinAccept(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameJoinAccept):SN_CustomGameJoinAccept {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameJoinAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MemberList(index: number, obj?:CustomGameMemberInfo):CustomGameMemberInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new CustomGameMemberInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

MemberList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameJoinAccept';
}

static startSN_CustomGameJoinAccept(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(1, MasterUID, 0);
}

static add_MemberList(builder:flatbuffers.Builder, MemberListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MemberListOffset, 0);
}

static create_MemberList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_MemberList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSN_CustomGameJoinAccept(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameJoinAccept(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, MasterUID:number, MemberListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_CustomGameJoinAccept.startSN_CustomGameJoinAccept(builder);
  SN_CustomGameJoinAccept.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameJoinAccept.add_MasterUID(builder, MasterUID);
  SN_CustomGameJoinAccept.add_MemberList(builder, MemberListOffset);
  return SN_CustomGameJoinAccept.endSN_CustomGameJoinAccept(builder);
}

unpack(): SN_CustomGameJoinAcceptT {
  return new SN_CustomGameJoinAcceptT(
    this.RoomID(),
    this.MasterUID(),
    this.bb!.createObjList<CustomGameMemberInfo, CustomGameMemberInfoT>(this.MemberList.bind(this), this.MemberList_Length())
  );
}


unpackTo(_o: SN_CustomGameJoinAcceptT): void {
  _o.RoomID = this.RoomID();
  _o.MasterUID = this.MasterUID();
  _o.MemberList = this.bb!.createObjList<CustomGameMemberInfo, CustomGameMemberInfoT>(this.MemberList.bind(this), this.MemberList_Length());
}
}

export class SN_CustomGameJoinAcceptT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public MasterUID: number = 0,
  public MemberList: (CustomGameMemberInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const MemberList = SN_CustomGameJoinAccept.create_MemberList_Vector(builder, builder.createObjectOffsetList(this.MemberList));

  return SN_CustomGameJoinAccept.createSN_CustomGameJoinAccept(builder,
    RoomID,
    this.MasterUID,
    MemberList
  );
}
}

export class SN_CustomGameJoinReject implements flatbuffers.IUnpackableObject<SN_CustomGameJoinRejectT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameJoinReject {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameJoinReject(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameJoinReject):SN_CustomGameJoinReject {
  return (obj || new SN_CustomGameJoinReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameJoinReject(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameJoinReject):SN_CustomGameJoinReject {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameJoinReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

InviteCode():string|null
InviteCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
InviteCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Reason():EResultType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : EResultType.Success;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameJoinReject';
}

static startSN_CustomGameJoinReject(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_InviteCode(builder:flatbuffers.Builder, InviteCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, InviteCodeOffset, 0);
}

static add_Reason(builder:flatbuffers.Builder, Reason:EResultType) {
  builder.addFieldInt16(2, Reason, EResultType.Success);
}

static endSN_CustomGameJoinReject(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameJoinReject(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, InviteCodeOffset:flatbuffers.Offset, Reason:EResultType):flatbuffers.Offset {
  SN_CustomGameJoinReject.startSN_CustomGameJoinReject(builder);
  SN_CustomGameJoinReject.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameJoinReject.add_InviteCode(builder, InviteCodeOffset);
  SN_CustomGameJoinReject.add_Reason(builder, Reason);
  return SN_CustomGameJoinReject.endSN_CustomGameJoinReject(builder);
}

unpack(): SN_CustomGameJoinRejectT {
  return new SN_CustomGameJoinRejectT(
    this.RoomID(),
    this.InviteCode(),
    this.Reason()
  );
}


unpackTo(_o: SN_CustomGameJoinRejectT): void {
  _o.RoomID = this.RoomID();
  _o.InviteCode = this.InviteCode();
  _o.Reason = this.Reason();
}
}

export class SN_CustomGameJoinRejectT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public InviteCode: string|Uint8Array|null = null,
  public Reason: EResultType = EResultType.Success
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const InviteCode = (this.InviteCode !== null ? builder.createString(this.InviteCode!) : 0);

  return SN_CustomGameJoinReject.createSN_CustomGameJoinReject(builder,
    RoomID,
    InviteCode,
    this.Reason
  );
}
}

export class SN_CustomGameWelcomeNewUser implements flatbuffers.IUnpackableObject<SN_CustomGameWelcomeNewUserT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameWelcomeNewUser {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameWelcomeNewUser(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameWelcomeNewUser):SN_CustomGameWelcomeNewUser {
  return (obj || new SN_CustomGameWelcomeNewUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameWelcomeNewUser(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameWelcomeNewUser):SN_CustomGameWelcomeNewUser {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameWelcomeNewUser()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NewMember(obj?:CustomGameMemberInfo):CustomGameMemberInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new CustomGameMemberInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameWelcomeNewUser';
}

static startSN_CustomGameWelcomeNewUser(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_NewMember(builder:flatbuffers.Builder, NewMemberOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewMemberOffset, 0);
}

static endSN_CustomGameWelcomeNewUser(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SN_CustomGameWelcomeNewUserT {
  return new SN_CustomGameWelcomeNewUserT(
    this.RoomID(),
    (this.NewMember() !== null ? this.NewMember()!.unpack() : null)
  );
}


unpackTo(_o: SN_CustomGameWelcomeNewUserT): void {
  _o.RoomID = this.RoomID();
  _o.NewMember = (this.NewMember() !== null ? this.NewMember()!.unpack() : null);
}
}

export class SN_CustomGameWelcomeNewUserT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public NewMember: CustomGameMemberInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const NewMember = (this.NewMember !== null ? this.NewMember!.pack(builder) : 0);

  SN_CustomGameWelcomeNewUser.startSN_CustomGameWelcomeNewUser(builder);
  SN_CustomGameWelcomeNewUser.add_RoomID(builder, RoomID);
  SN_CustomGameWelcomeNewUser.add_NewMember(builder, NewMember);

  return SN_CustomGameWelcomeNewUser.endSN_CustomGameWelcomeNewUser(builder);
}
}

export class CQ_CustomGameLeaveMember implements flatbuffers.IUnpackableObject<CQ_CustomGameLeaveMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameLeaveMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameLeaveMember(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameLeaveMember):CQ_CustomGameLeaveMember {
  return (obj || new CQ_CustomGameLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameLeaveMember(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameLeaveMember):CQ_CustomGameLeaveMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameLeaveMember';
}

static startCQ_CustomGameLeaveMember(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static endCQ_CustomGameLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameLeaveMember(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_CustomGameLeaveMember.startCQ_CustomGameLeaveMember(builder);
  CQ_CustomGameLeaveMember.add_RoomID(builder, RoomIDOffset);
  return CQ_CustomGameLeaveMember.endCQ_CustomGameLeaveMember(builder);
}

unpack(): CQ_CustomGameLeaveMemberT {
  return new CQ_CustomGameLeaveMemberT(
    this.RoomID()
  );
}


unpackTo(_o: CQ_CustomGameLeaveMemberT): void {
  _o.RoomID = this.RoomID();
}
}

export class CQ_CustomGameLeaveMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);

  return CQ_CustomGameLeaveMember.createCQ_CustomGameLeaveMember(builder,
    RoomID
  );
}
}

export class SA_CustomGameLeaveMember implements flatbuffers.IUnpackableObject<SA_CustomGameLeaveMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameLeaveMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameLeaveMember):SA_CustomGameLeaveMember {
  return (obj || new SA_CustomGameLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameLeaveMember):SA_CustomGameLeaveMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameLeaveMember';
}

static startSA_CustomGameLeaveMember(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_CustomGameLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_CustomGameLeaveMember.startSA_CustomGameLeaveMember(builder);
  return SA_CustomGameLeaveMember.endSA_CustomGameLeaveMember(builder);
}

unpack(): SA_CustomGameLeaveMemberT {
  return new SA_CustomGameLeaveMemberT();
}


unpackTo(_o: SA_CustomGameLeaveMemberT): void {}
}

export class SA_CustomGameLeaveMemberT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CustomGameLeaveMember.createSA_CustomGameLeaveMember(builder);
}
}

export class SN_CustomGameLeaveMember implements flatbuffers.IUnpackableObject<SN_CustomGameLeaveMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameLeaveMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameLeaveMember):SN_CustomGameLeaveMember {
  return (obj || new SN_CustomGameLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameLeaveMember(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameLeaveMember):SN_CustomGameLeaveMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameLeaveMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LeaveMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameLeaveMember';
}

static startSN_CustomGameLeaveMember(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_LeaveMemberUID(builder:flatbuffers.Builder, LeaveMemberUID:number) {
  builder.addFieldInt32(1, LeaveMemberUID, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(2, MasterUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, MasterNickOffset, 0);
}

static endSN_CustomGameLeaveMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameLeaveMember(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, LeaveMemberUID:number, MasterUID:number, MasterNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_CustomGameLeaveMember.startSN_CustomGameLeaveMember(builder);
  SN_CustomGameLeaveMember.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameLeaveMember.add_LeaveMemberUID(builder, LeaveMemberUID);
  SN_CustomGameLeaveMember.add_MasterUID(builder, MasterUID);
  SN_CustomGameLeaveMember.add_MasterNick(builder, MasterNickOffset);
  return SN_CustomGameLeaveMember.endSN_CustomGameLeaveMember(builder);
}

unpack(): SN_CustomGameLeaveMemberT {
  return new SN_CustomGameLeaveMemberT(
    this.RoomID(),
    this.LeaveMemberUID(),
    this.MasterUID(),
    this.MasterNick()
  );
}


unpackTo(_o: SN_CustomGameLeaveMemberT): void {
  _o.RoomID = this.RoomID();
  _o.LeaveMemberUID = this.LeaveMemberUID();
  _o.MasterUID = this.MasterUID();
  _o.MasterNick = this.MasterNick();
}
}

export class SN_CustomGameLeaveMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public LeaveMemberUID: number = 0,
  public MasterUID: number = 0,
  public MasterNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return SN_CustomGameLeaveMember.createSN_CustomGameLeaveMember(builder,
    RoomID,
    this.LeaveMemberUID,
    this.MasterUID,
    MasterNick
  );
}
}

export class SN_CustomGameBrokenRoom implements flatbuffers.IUnpackableObject<SN_CustomGameBrokenRoomT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameBrokenRoom {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameBrokenRoom(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameBrokenRoom):SN_CustomGameBrokenRoom {
  return (obj || new SN_CustomGameBrokenRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameBrokenRoom(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameBrokenRoom):SN_CustomGameBrokenRoom {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameBrokenRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LeaveMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameBrokenRoom';
}

static startSN_CustomGameBrokenRoom(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_LeaveMemberUID(builder:flatbuffers.Builder, LeaveMemberUID:number) {
  builder.addFieldInt32(1, LeaveMemberUID, 0);
}

static add_MasterUID(builder:flatbuffers.Builder, MasterUID:number) {
  builder.addFieldInt32(2, MasterUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, MasterNickOffset, 0);
}

static endSN_CustomGameBrokenRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameBrokenRoom(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, LeaveMemberUID:number, MasterUID:number, MasterNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_CustomGameBrokenRoom.startSN_CustomGameBrokenRoom(builder);
  SN_CustomGameBrokenRoom.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameBrokenRoom.add_LeaveMemberUID(builder, LeaveMemberUID);
  SN_CustomGameBrokenRoom.add_MasterUID(builder, MasterUID);
  SN_CustomGameBrokenRoom.add_MasterNick(builder, MasterNickOffset);
  return SN_CustomGameBrokenRoom.endSN_CustomGameBrokenRoom(builder);
}

unpack(): SN_CustomGameBrokenRoomT {
  return new SN_CustomGameBrokenRoomT(
    this.RoomID(),
    this.LeaveMemberUID(),
    this.MasterUID(),
    this.MasterNick()
  );
}


unpackTo(_o: SN_CustomGameBrokenRoomT): void {
  _o.RoomID = this.RoomID();
  _o.LeaveMemberUID = this.LeaveMemberUID();
  _o.MasterUID = this.MasterUID();
  _o.MasterNick = this.MasterNick();
}
}

export class SN_CustomGameBrokenRoomT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public LeaveMemberUID: number = 0,
  public MasterUID: number = 0,
  public MasterNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return SN_CustomGameBrokenRoom.createSN_CustomGameBrokenRoom(builder,
    RoomID,
    this.LeaveMemberUID,
    this.MasterUID,
    MasterNick
  );
}
}

export class CQ_CustomGameKickMember implements flatbuffers.IUnpackableObject<CQ_CustomGameKickMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameKickMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameKickMember(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameKickMember):CQ_CustomGameKickMember {
  return (obj || new CQ_CustomGameKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameKickMember(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameKickMember):CQ_CustomGameKickMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

KickMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameKickMember';
}

static startCQ_CustomGameKickMember(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_KickMemberUID(builder:flatbuffers.Builder, KickMemberUID:number) {
  builder.addFieldInt32(1, KickMemberUID, 0);
}

static endCQ_CustomGameKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameKickMember(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, KickMemberUID:number):flatbuffers.Offset {
  CQ_CustomGameKickMember.startCQ_CustomGameKickMember(builder);
  CQ_CustomGameKickMember.add_RoomID(builder, RoomIDOffset);
  CQ_CustomGameKickMember.add_KickMemberUID(builder, KickMemberUID);
  return CQ_CustomGameKickMember.endCQ_CustomGameKickMember(builder);
}

unpack(): CQ_CustomGameKickMemberT {
  return new CQ_CustomGameKickMemberT(
    this.RoomID(),
    this.KickMemberUID()
  );
}


unpackTo(_o: CQ_CustomGameKickMemberT): void {
  _o.RoomID = this.RoomID();
  _o.KickMemberUID = this.KickMemberUID();
}
}

export class CQ_CustomGameKickMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public KickMemberUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);

  return CQ_CustomGameKickMember.createCQ_CustomGameKickMember(builder,
    RoomID,
    this.KickMemberUID
  );
}
}

export class SA_CustomGameKickMember implements flatbuffers.IUnpackableObject<SA_CustomGameKickMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameKickMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameKickMember(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameKickMember):SA_CustomGameKickMember {
  return (obj || new SA_CustomGameKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameKickMember(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameKickMember):SA_CustomGameKickMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameKickMember';
}

static startSA_CustomGameKickMember(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_CustomGameKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_CustomGameKickMember.startSA_CustomGameKickMember(builder);
  return SA_CustomGameKickMember.endSA_CustomGameKickMember(builder);
}

unpack(): SA_CustomGameKickMemberT {
  return new SA_CustomGameKickMemberT();
}


unpackTo(_o: SA_CustomGameKickMemberT): void {}
}

export class SA_CustomGameKickMemberT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CustomGameKickMember.createSA_CustomGameKickMember(builder);
}
}

export class SN_CustomGameKickMember implements flatbuffers.IUnpackableObject<SN_CustomGameKickMemberT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameKickMember {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameKickMember(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameKickMember):SN_CustomGameKickMember {
  return (obj || new SN_CustomGameKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameKickMember(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameKickMember):SN_CustomGameKickMember {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameKickMember()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

KickMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameKickMember';
}

static startSN_CustomGameKickMember(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_KickMemberUID(builder:flatbuffers.Builder, KickMemberUID:number) {
  builder.addFieldInt32(1, KickMemberUID, 0);
}

static endSN_CustomGameKickMember(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameKickMember(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, KickMemberUID:number):flatbuffers.Offset {
  SN_CustomGameKickMember.startSN_CustomGameKickMember(builder);
  SN_CustomGameKickMember.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameKickMember.add_KickMemberUID(builder, KickMemberUID);
  return SN_CustomGameKickMember.endSN_CustomGameKickMember(builder);
}

unpack(): SN_CustomGameKickMemberT {
  return new SN_CustomGameKickMemberT(
    this.RoomID(),
    this.KickMemberUID()
  );
}


unpackTo(_o: SN_CustomGameKickMemberT): void {
  _o.RoomID = this.RoomID();
  _o.KickMemberUID = this.KickMemberUID();
}
}

export class SN_CustomGameKickMemberT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public KickMemberUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);

  return SN_CustomGameKickMember.createSN_CustomGameKickMember(builder,
    RoomID,
    this.KickMemberUID
  );
}
}

export class CQ_CustomGameChangeFollow implements flatbuffers.IUnpackableObject<CQ_CustomGameChangeFollowT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameChangeFollow {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameChangeFollow(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameChangeFollow):CQ_CustomGameChangeFollow {
  return (obj || new CQ_CustomGameChangeFollow()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameChangeFollow(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameChangeFollow):CQ_CustomGameChangeFollow {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameChangeFollow()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsFollowOn():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameChangeFollow';
}

static startCQ_CustomGameChangeFollow(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IsFollowOn(builder:flatbuffers.Builder, IsFollowOn:boolean) {
  builder.addFieldInt8(0, +IsFollowOn, +false);
}

static endCQ_CustomGameChangeFollow(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameChangeFollow(builder:flatbuffers.Builder, IsFollowOn:boolean):flatbuffers.Offset {
  CQ_CustomGameChangeFollow.startCQ_CustomGameChangeFollow(builder);
  CQ_CustomGameChangeFollow.add_IsFollowOn(builder, IsFollowOn);
  return CQ_CustomGameChangeFollow.endCQ_CustomGameChangeFollow(builder);
}

unpack(): CQ_CustomGameChangeFollowT {
  return new CQ_CustomGameChangeFollowT(
    this.IsFollowOn()
  );
}


unpackTo(_o: CQ_CustomGameChangeFollowT): void {
  _o.IsFollowOn = this.IsFollowOn();
}
}

export class CQ_CustomGameChangeFollowT implements flatbuffers.IGeneratedObject {
constructor(
  public IsFollowOn: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CustomGameChangeFollow.createCQ_CustomGameChangeFollow(builder,
    this.IsFollowOn
  );
}
}

export class SA_CustomGameChangeFollow implements flatbuffers.IUnpackableObject<SA_CustomGameChangeFollowT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameChangeFollow {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameChangeFollow(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameChangeFollow):SA_CustomGameChangeFollow {
  return (obj || new SA_CustomGameChangeFollow()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameChangeFollow(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameChangeFollow):SA_CustomGameChangeFollow {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameChangeFollow()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsFollowOn():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameChangeFollow';
}

static startSA_CustomGameChangeFollow(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IsFollowOn(builder:flatbuffers.Builder, IsFollowOn:boolean) {
  builder.addFieldInt8(0, +IsFollowOn, +false);
}

static endSA_CustomGameChangeFollow(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameChangeFollow(builder:flatbuffers.Builder, IsFollowOn:boolean):flatbuffers.Offset {
  SA_CustomGameChangeFollow.startSA_CustomGameChangeFollow(builder);
  SA_CustomGameChangeFollow.add_IsFollowOn(builder, IsFollowOn);
  return SA_CustomGameChangeFollow.endSA_CustomGameChangeFollow(builder);
}

unpack(): SA_CustomGameChangeFollowT {
  return new SA_CustomGameChangeFollowT(
    this.IsFollowOn()
  );
}


unpackTo(_o: SA_CustomGameChangeFollowT): void {
  _o.IsFollowOn = this.IsFollowOn();
}
}

export class SA_CustomGameChangeFollowT implements flatbuffers.IGeneratedObject {
constructor(
  public IsFollowOn: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CustomGameChangeFollow.createSA_CustomGameChangeFollow(builder,
    this.IsFollowOn
  );
}
}

export class CQ_CustomGameFollowMaster implements flatbuffers.IUnpackableObject<CQ_CustomGameFollowMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameFollowMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameFollowMaster(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameFollowMaster):CQ_CustomGameFollowMaster {
  return (obj || new CQ_CustomGameFollowMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameFollowMaster(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameFollowMaster):CQ_CustomGameFollowMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameFollowMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameFollowMaster';
}

static startCQ_CustomGameFollowMaster(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MasterNickOffset, 0);
}

static endCQ_CustomGameFollowMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameFollowMaster(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_CustomGameFollowMaster.startCQ_CustomGameFollowMaster(builder);
  CQ_CustomGameFollowMaster.add_MasterNick(builder, MasterNickOffset);
  return CQ_CustomGameFollowMaster.endCQ_CustomGameFollowMaster(builder);
}

unpack(): CQ_CustomGameFollowMasterT {
  return new CQ_CustomGameFollowMasterT(
    this.MasterNick()
  );
}


unpackTo(_o: CQ_CustomGameFollowMasterT): void {
  _o.MasterNick = this.MasterNick();
}
}

export class CQ_CustomGameFollowMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public MasterNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return CQ_CustomGameFollowMaster.createCQ_CustomGameFollowMaster(builder,
    MasterNick
  );
}
}

export class SA_CustomGameFollowMaster implements flatbuffers.IUnpackableObject<SA_CustomGameFollowMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameFollowMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameFollowMaster(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameFollowMaster):SA_CustomGameFollowMaster {
  return (obj || new SA_CustomGameFollowMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameFollowMaster(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameFollowMaster):SA_CustomGameFollowMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameFollowMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameFollowMaster';
}

static startSA_CustomGameFollowMaster(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_CustomGameFollowMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameFollowMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_CustomGameFollowMaster.startSA_CustomGameFollowMaster(builder);
  return SA_CustomGameFollowMaster.endSA_CustomGameFollowMaster(builder);
}

unpack(): SA_CustomGameFollowMasterT {
  return new SA_CustomGameFollowMasterT();
}


unpackTo(_o: SA_CustomGameFollowMasterT): void {}
}

export class SA_CustomGameFollowMasterT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CustomGameFollowMaster.createSA_CustomGameFollowMaster(builder);
}
}

export class ChangeSlotInfo implements flatbuffers.IUnpackableObject<ChangeSlotInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ChangeSlotInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

SlotNo():number {
  return this.bb!.readInt8(this.bb_pos);
}

UID():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.ChangeSlotInfo';
}

static sizeOf():number {
  return 8;
}

static createChangeSlotInfo(builder:flatbuffers.Builder, SlotNo: number, UID: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(UID);
  builder.pad(3);
  builder.writeInt8(SlotNo);
  return builder.offset();
}


unpack(): ChangeSlotInfoT {
  return new ChangeSlotInfoT(
    this.SlotNo(),
    this.UID()
  );
}


unpackTo(_o: ChangeSlotInfoT): void {
  _o.SlotNo = this.SlotNo();
  _o.UID = this.UID();
}
}

export class ChangeSlotInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotNo: number = 0,
  public UID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ChangeSlotInfo.createChangeSlotInfo(builder,
    this.SlotNo,
    this.UID
  );
}
}

export class CQ_CustomGameChangeSlotNo implements flatbuffers.IUnpackableObject<CQ_CustomGameChangeSlotNoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameChangeSlotNo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameChangeSlotNo(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameChangeSlotNo):CQ_CustomGameChangeSlotNo {
  return (obj || new CQ_CustomGameChangeSlotNo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameChangeSlotNo(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameChangeSlotNo):CQ_CustomGameChangeSlotNo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameChangeSlotNo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChangeSlotList(index: number, obj?:ChangeSlotInfo):ChangeSlotInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ChangeSlotInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeSlotList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameChangeSlotNo';
}

static startCQ_CustomGameChangeSlotNo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_ChangeSlotList(builder:flatbuffers.Builder, ChangeSlotListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeSlotListOffset, 0);
}

static start_ChangeSlotList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endCQ_CustomGameChangeSlotNo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameChangeSlotNo(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, ChangeSlotListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_CustomGameChangeSlotNo.startCQ_CustomGameChangeSlotNo(builder);
  CQ_CustomGameChangeSlotNo.add_RoomID(builder, RoomIDOffset);
  CQ_CustomGameChangeSlotNo.add_ChangeSlotList(builder, ChangeSlotListOffset);
  return CQ_CustomGameChangeSlotNo.endCQ_CustomGameChangeSlotNo(builder);
}

unpack(): CQ_CustomGameChangeSlotNoT {
  return new CQ_CustomGameChangeSlotNoT(
    this.RoomID(),
    this.bb!.createObjList<ChangeSlotInfo, ChangeSlotInfoT>(this.ChangeSlotList.bind(this), this.ChangeSlotList_Length())
  );
}


unpackTo(_o: CQ_CustomGameChangeSlotNoT): void {
  _o.RoomID = this.RoomID();
  _o.ChangeSlotList = this.bb!.createObjList<ChangeSlotInfo, ChangeSlotInfoT>(this.ChangeSlotList.bind(this), this.ChangeSlotList_Length());
}
}

export class CQ_CustomGameChangeSlotNoT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public ChangeSlotList: (ChangeSlotInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const ChangeSlotList = builder.createStructOffsetList(this.ChangeSlotList, CQ_CustomGameChangeSlotNo.start_ChangeSlotList_Vector);

  return CQ_CustomGameChangeSlotNo.createCQ_CustomGameChangeSlotNo(builder,
    RoomID,
    ChangeSlotList
  );
}
}

export class SA_CustomGameChangeSlotNo implements flatbuffers.IUnpackableObject<SA_CustomGameChangeSlotNoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameChangeSlotNo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameChangeSlotNo(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameChangeSlotNo):SA_CustomGameChangeSlotNo {
  return (obj || new SA_CustomGameChangeSlotNo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameChangeSlotNo(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameChangeSlotNo):SA_CustomGameChangeSlotNo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameChangeSlotNo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChangeSlotList(index: number, obj?:ChangeSlotInfo):ChangeSlotInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ChangeSlotInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeSlotList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameChangeSlotNo';
}

static startSA_CustomGameChangeSlotNo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_ChangeSlotList(builder:flatbuffers.Builder, ChangeSlotListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeSlotListOffset, 0);
}

static start_ChangeSlotList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_CustomGameChangeSlotNo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameChangeSlotNo(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, ChangeSlotListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CustomGameChangeSlotNo.startSA_CustomGameChangeSlotNo(builder);
  SA_CustomGameChangeSlotNo.add_RoomID(builder, RoomIDOffset);
  SA_CustomGameChangeSlotNo.add_ChangeSlotList(builder, ChangeSlotListOffset);
  return SA_CustomGameChangeSlotNo.endSA_CustomGameChangeSlotNo(builder);
}

unpack(): SA_CustomGameChangeSlotNoT {
  return new SA_CustomGameChangeSlotNoT(
    this.RoomID(),
    this.bb!.createObjList<ChangeSlotInfo, ChangeSlotInfoT>(this.ChangeSlotList.bind(this), this.ChangeSlotList_Length())
  );
}


unpackTo(_o: SA_CustomGameChangeSlotNoT): void {
  _o.RoomID = this.RoomID();
  _o.ChangeSlotList = this.bb!.createObjList<ChangeSlotInfo, ChangeSlotInfoT>(this.ChangeSlotList.bind(this), this.ChangeSlotList_Length());
}
}

export class SA_CustomGameChangeSlotNoT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public ChangeSlotList: (ChangeSlotInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const ChangeSlotList = builder.createStructOffsetList(this.ChangeSlotList, SA_CustomGameChangeSlotNo.start_ChangeSlotList_Vector);

  return SA_CustomGameChangeSlotNo.createSA_CustomGameChangeSlotNo(builder,
    RoomID,
    ChangeSlotList
  );
}
}

export class SN_CustomGameChangeSlotNo implements flatbuffers.IUnpackableObject<SN_CustomGameChangeSlotNoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CustomGameChangeSlotNo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CustomGameChangeSlotNo(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameChangeSlotNo):SN_CustomGameChangeSlotNo {
  return (obj || new SN_CustomGameChangeSlotNo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CustomGameChangeSlotNo(bb:flatbuffers.ByteBuffer, obj?:SN_CustomGameChangeSlotNo):SN_CustomGameChangeSlotNo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CustomGameChangeSlotNo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChangeSlotList(index: number, obj?:ChangeSlotInfo):ChangeSlotInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ChangeSlotInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeSlotList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CustomGameChangeSlotNo';
}

static startSN_CustomGameChangeSlotNo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_ChangeSlotList(builder:flatbuffers.Builder, ChangeSlotListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeSlotListOffset, 0);
}

static start_ChangeSlotList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSN_CustomGameChangeSlotNo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CustomGameChangeSlotNo(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, ChangeSlotListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_CustomGameChangeSlotNo.startSN_CustomGameChangeSlotNo(builder);
  SN_CustomGameChangeSlotNo.add_RoomID(builder, RoomIDOffset);
  SN_CustomGameChangeSlotNo.add_ChangeSlotList(builder, ChangeSlotListOffset);
  return SN_CustomGameChangeSlotNo.endSN_CustomGameChangeSlotNo(builder);
}

unpack(): SN_CustomGameChangeSlotNoT {
  return new SN_CustomGameChangeSlotNoT(
    this.RoomID(),
    this.bb!.createObjList<ChangeSlotInfo, ChangeSlotInfoT>(this.ChangeSlotList.bind(this), this.ChangeSlotList_Length())
  );
}


unpackTo(_o: SN_CustomGameChangeSlotNoT): void {
  _o.RoomID = this.RoomID();
  _o.ChangeSlotList = this.bb!.createObjList<ChangeSlotInfo, ChangeSlotInfoT>(this.ChangeSlotList.bind(this), this.ChangeSlotList_Length());
}
}

export class SN_CustomGameChangeSlotNoT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public ChangeSlotList: (ChangeSlotInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const ChangeSlotList = builder.createStructOffsetList(this.ChangeSlotList, SN_CustomGameChangeSlotNo.start_ChangeSlotList_Vector);

  return SN_CustomGameChangeSlotNo.createSN_CustomGameChangeSlotNo(builder,
    RoomID,
    ChangeSlotList
  );
}
}

export class CQ_CustomGameAddAI implements flatbuffers.IUnpackableObject<CQ_CustomGameAddAIT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CustomGameAddAI {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CustomGameAddAI(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameAddAI):CQ_CustomGameAddAI {
  return (obj || new CQ_CustomGameAddAI()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CustomGameAddAI(bb:flatbuffers.ByteBuffer, obj?:CQ_CustomGameAddAI):CQ_CustomGameAddAI {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CustomGameAddAI()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

SlotNo():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CustomGameAddAI';
}

static startCQ_CustomGameAddAI(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_SlotNo(builder:flatbuffers.Builder, SlotNo:number) {
  builder.addFieldInt32(1, SlotNo, 0);
}

static endCQ_CustomGameAddAI(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CustomGameAddAI(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, SlotNo:number):flatbuffers.Offset {
  CQ_CustomGameAddAI.startCQ_CustomGameAddAI(builder);
  CQ_CustomGameAddAI.add_RoomID(builder, RoomIDOffset);
  CQ_CustomGameAddAI.add_SlotNo(builder, SlotNo);
  return CQ_CustomGameAddAI.endCQ_CustomGameAddAI(builder);
}

unpack(): CQ_CustomGameAddAIT {
  return new CQ_CustomGameAddAIT(
    this.RoomID(),
    this.SlotNo()
  );
}


unpackTo(_o: CQ_CustomGameAddAIT): void {
  _o.RoomID = this.RoomID();
  _o.SlotNo = this.SlotNo();
}
}

export class CQ_CustomGameAddAIT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public SlotNo: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);

  return CQ_CustomGameAddAI.createCQ_CustomGameAddAI(builder,
    RoomID,
    this.SlotNo
  );
}
}

export class SA_CustomGameAddAI implements flatbuffers.IUnpackableObject<SA_CustomGameAddAIT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CustomGameAddAI {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CustomGameAddAI(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameAddAI):SA_CustomGameAddAI {
  return (obj || new SA_CustomGameAddAI()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CustomGameAddAI(bb:flatbuffers.ByteBuffer, obj?:SA_CustomGameAddAI):SA_CustomGameAddAI {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CustomGameAddAI()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CustomGameAddAI';
}

static startSA_CustomGameAddAI(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_CustomGameAddAI(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CustomGameAddAI(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_CustomGameAddAI.startSA_CustomGameAddAI(builder);
  return SA_CustomGameAddAI.endSA_CustomGameAddAI(builder);
}

unpack(): SA_CustomGameAddAIT {
  return new SA_CustomGameAddAIT();
}


unpackTo(_o: SA_CustomGameAddAIT): void {}
}

export class SA_CustomGameAddAIT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_CustomGameAddAI.createSA_CustomGameAddAI(builder);
}
}

export class CQ_SeasonPassBuyExp implements flatbuffers.IUnpackableObject<CQ_SeasonPassBuyExpT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_SeasonPassBuyExp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_SeasonPassBuyExp(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassBuyExp):CQ_SeasonPassBuyExp {
  return (obj || new CQ_SeasonPassBuyExp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_SeasonPassBuyExp(bb:flatbuffers.ByteBuffer, obj?:CQ_SeasonPassBuyExp):CQ_SeasonPassBuyExp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_SeasonPassBuyExp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Step():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_SeasonPassBuyExp';
}

static startCQ_SeasonPassBuyExp(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Step(builder:flatbuffers.Builder, Step:number) {
  builder.addFieldInt32(0, Step, 0);
}

static endCQ_SeasonPassBuyExp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_SeasonPassBuyExp(builder:flatbuffers.Builder, Step:number):flatbuffers.Offset {
  CQ_SeasonPassBuyExp.startCQ_SeasonPassBuyExp(builder);
  CQ_SeasonPassBuyExp.add_Step(builder, Step);
  return CQ_SeasonPassBuyExp.endCQ_SeasonPassBuyExp(builder);
}

unpack(): CQ_SeasonPassBuyExpT {
  return new CQ_SeasonPassBuyExpT(
    this.Step()
  );
}


unpackTo(_o: CQ_SeasonPassBuyExpT): void {
  _o.Step = this.Step();
}
}

export class CQ_SeasonPassBuyExpT implements flatbuffers.IGeneratedObject {
constructor(
  public Step: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_SeasonPassBuyExp.createCQ_SeasonPassBuyExp(builder,
    this.Step
  );
}
}

export class SA_SeasonPassBuyExp implements flatbuffers.IUnpackableObject<SA_SeasonPassBuyExpT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_SeasonPassBuyExp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_SeasonPassBuyExp(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassBuyExp):SA_SeasonPassBuyExp {
  return (obj || new SA_SeasonPassBuyExp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_SeasonPassBuyExp(bb:flatbuffers.ByteBuffer, obj?:SA_SeasonPassBuyExp):SA_SeasonPassBuyExp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_SeasonPassBuyExp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonPass(obj?:SeasonPassData):SeasonPassData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SeasonPassData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_SeasonPassBuyExp';
}

static startSA_SeasonPassBuyExp(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_SeasonPass(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SeasonPassOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_SeasonPassBuyExp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_SeasonPassBuyExp(builder:flatbuffers.Builder, SeasonPassOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_SeasonPassBuyExp.startSA_SeasonPassBuyExp(builder);
  SA_SeasonPassBuyExp.add_SeasonPass(builder, SeasonPassOffset);
  SA_SeasonPassBuyExp.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_SeasonPassBuyExp.endSA_SeasonPassBuyExp(builder);
}

unpack(): SA_SeasonPassBuyExpT {
  return new SA_SeasonPassBuyExpT(
    (this.SeasonPass() !== null ? this.SeasonPass()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_SeasonPassBuyExpT): void {
  _o.SeasonPass = (this.SeasonPass() !== null ? this.SeasonPass()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_SeasonPassBuyExpT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonPass: SeasonPassDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SeasonPass = (this.SeasonPass !== null ? this.SeasonPass!.pack(builder) : 0);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_SeasonPassBuyExp.start_ChangeAssetList_Vector);

  return SA_SeasonPassBuyExp.createSA_SeasonPassBuyExp(builder,
    SeasonPass,
    ChangeAssetList
  );
}
}

export class CQ_GameStart implements flatbuffers.IUnpackableObject<CQ_GameStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GameStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GameStart(bb:flatbuffers.ByteBuffer, obj?:CQ_GameStart):CQ_GameStart {
  return (obj || new CQ_GameStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GameStart(bb:flatbuffers.ByteBuffer, obj?:CQ_GameStart):CQ_GameStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GameStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GameStart';
}

static startCQ_GameStart(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_GameStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GameStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_GameStart.startCQ_GameStart(builder);
  return CQ_GameStart.endCQ_GameStart(builder);
}

unpack(): CQ_GameStartT {
  return new CQ_GameStartT();
}


unpackTo(_o: CQ_GameStartT): void {}
}

export class CQ_GameStartT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GameStart.createCQ_GameStart(builder);
}
}

export class SA_GameStart implements flatbuffers.IUnpackableObject<SA_GameStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GameStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GameStart(bb:flatbuffers.ByteBuffer, obj?:SA_GameStart):SA_GameStart {
  return (obj || new SA_GameStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GameStart(bb:flatbuffers.ByteBuffer, obj?:SA_GameStart):SA_GameStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GameStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GameStart';
}

static startSA_GameStart(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_GameStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GameStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_GameStart.startSA_GameStart(builder);
  return SA_GameStart.endSA_GameStart(builder);
}

unpack(): SA_GameStartT {
  return new SA_GameStartT();
}


unpackTo(_o: SA_GameStartT): void {}
}

export class SA_GameStartT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_GameStart.createSA_GameStart(builder);
}
}

export class CQ_MatchingStartMatch implements flatbuffers.IUnpackableObject<CQ_MatchingStartMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MatchingStartMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingStartMatch):CQ_MatchingStartMatch {
  return (obj || new CQ_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingStartMatch):CQ_MatchingStartMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

TeamList(index: number, obj?:MatchingTeamInfo):MatchingTeamInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new MatchingTeamInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

TeamList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

Ping():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MatchingStartMatch';
}

static startCQ_MatchingStartMatch(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_TeamList(builder:flatbuffers.Builder, TeamListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TeamListOffset, 0);
}

static create_TeamList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_TeamList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_Ping(builder:flatbuffers.Builder, Ping:number) {
  builder.addFieldInt32(2, Ping, 0);
}

static endCQ_MatchingStartMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MatchingStartMatch(builder:flatbuffers.Builder, MatchingTableID:number, TeamListOffset:flatbuffers.Offset, Ping:number):flatbuffers.Offset {
  CQ_MatchingStartMatch.startCQ_MatchingStartMatch(builder);
  CQ_MatchingStartMatch.add_MatchingTableID(builder, MatchingTableID);
  CQ_MatchingStartMatch.add_TeamList(builder, TeamListOffset);
  CQ_MatchingStartMatch.add_Ping(builder, Ping);
  return CQ_MatchingStartMatch.endCQ_MatchingStartMatch(builder);
}

unpack(): CQ_MatchingStartMatchT {
  return new CQ_MatchingStartMatchT(
    this.MatchingTableID(),
    this.bb!.createObjList<MatchingTeamInfo, MatchingTeamInfoT>(this.TeamList.bind(this), this.TeamList_Length()),
    this.Ping()
  );
}


unpackTo(_o: CQ_MatchingStartMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.TeamList = this.bb!.createObjList<MatchingTeamInfo, MatchingTeamInfoT>(this.TeamList.bind(this), this.TeamList_Length());
  _o.Ping = this.Ping();
}
}

export class CQ_MatchingStartMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public TeamList: (MatchingTeamInfoT)[] = [],
  public Ping: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TeamList = CQ_MatchingStartMatch.create_TeamList_Vector(builder, builder.createObjectOffsetList(this.TeamList));

  return CQ_MatchingStartMatch.createCQ_MatchingStartMatch(builder,
    this.MatchingTableID,
    TeamList,
    this.Ping
  );
}
}

export class SA_MatchingStartMatch implements flatbuffers.IUnpackableObject<SA_MatchingStartMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MatchingStartMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingStartMatch):SA_MatchingStartMatch {
  return (obj || new SA_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingStartMatch):SA_MatchingStartMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MatchingStartMatch';
}

static startSA_MatchingStartMatch(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static endSA_MatchingStartMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MatchingStartMatch(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_MatchingStartMatch.startSA_MatchingStartMatch(builder);
  SA_MatchingStartMatch.add_MatchingTableID(builder, MatchingTableID);
  SA_MatchingStartMatch.add_MatchTicket(builder, MatchTicketOffset);
  return SA_MatchingStartMatch.endSA_MatchingStartMatch(builder);
}

unpack(): SA_MatchingStartMatchT {
  return new SA_MatchingStartMatchT(
    this.MatchingTableID(),
    this.MatchTicket()
  );
}


unpackTo(_o: SA_MatchingStartMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
}
}

export class SA_MatchingStartMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return SA_MatchingStartMatch.createSA_MatchingStartMatch(builder,
    this.MatchingTableID,
    MatchTicket
  );
}
}

export class SN_MatchingStartMatch implements flatbuffers.IUnpackableObject<SN_MatchingStartMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingStartMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingStartMatch):SN_MatchingStartMatch {
  return (obj || new SN_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingStartMatch):SN_MatchingStartMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingStartMatch';
}

static startSN_MatchingStartMatch(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static endSN_MatchingStartMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingStartMatch(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_MatchingStartMatch.startSN_MatchingStartMatch(builder);
  SN_MatchingStartMatch.add_MatchingTableID(builder, MatchingTableID);
  SN_MatchingStartMatch.add_MatchTicket(builder, MatchTicketOffset);
  return SN_MatchingStartMatch.endSN_MatchingStartMatch(builder);
}

unpack(): SN_MatchingStartMatchT {
  return new SN_MatchingStartMatchT(
    this.MatchingTableID(),
    this.MatchTicket()
  );
}


unpackTo(_o: SN_MatchingStartMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
}
}

export class SN_MatchingStartMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return SN_MatchingStartMatch.createSN_MatchingStartMatch(builder,
    this.MatchingTableID,
    MatchTicket
  );
}
}

export class CQ_MatchingCancelMatch implements flatbuffers.IUnpackableObject<CQ_MatchingCancelMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MatchingCancelMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MatchingCancelMatch(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingCancelMatch):CQ_MatchingCancelMatch {
  return (obj || new CQ_MatchingCancelMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MatchingCancelMatch(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingCancelMatch):CQ_MatchingCancelMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MatchingCancelMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MatchingCancelMatch';
}

static startCQ_MatchingCancelMatch(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static endCQ_MatchingCancelMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MatchingCancelMatch(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_MatchingCancelMatch.startCQ_MatchingCancelMatch(builder);
  CQ_MatchingCancelMatch.add_MatchingTableID(builder, MatchingTableID);
  CQ_MatchingCancelMatch.add_MatchTicket(builder, MatchTicketOffset);
  return CQ_MatchingCancelMatch.endCQ_MatchingCancelMatch(builder);
}

unpack(): CQ_MatchingCancelMatchT {
  return new CQ_MatchingCancelMatchT(
    this.MatchingTableID(),
    this.MatchTicket()
  );
}


unpackTo(_o: CQ_MatchingCancelMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
}
}

export class CQ_MatchingCancelMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return CQ_MatchingCancelMatch.createCQ_MatchingCancelMatch(builder,
    this.MatchingTableID,
    MatchTicket
  );
}
}

export class SA_MatchingCancelMatch implements flatbuffers.IUnpackableObject<SA_MatchingCancelMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MatchingCancelMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MatchingCancelMatch(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingCancelMatch):SA_MatchingCancelMatch {
  return (obj || new SA_MatchingCancelMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MatchingCancelMatch(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingCancelMatch):SA_MatchingCancelMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MatchingCancelMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Reason():EResultType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : EResultType.Success;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MatchingCancelMatch';
}

static startSA_MatchingCancelMatch(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static add_Reason(builder:flatbuffers.Builder, Reason:EResultType) {
  builder.addFieldInt16(2, Reason, EResultType.Success);
}

static endSA_MatchingCancelMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MatchingCancelMatch(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset, Reason:EResultType):flatbuffers.Offset {
  SA_MatchingCancelMatch.startSA_MatchingCancelMatch(builder);
  SA_MatchingCancelMatch.add_MatchingTableID(builder, MatchingTableID);
  SA_MatchingCancelMatch.add_MatchTicket(builder, MatchTicketOffset);
  SA_MatchingCancelMatch.add_Reason(builder, Reason);
  return SA_MatchingCancelMatch.endSA_MatchingCancelMatch(builder);
}

unpack(): SA_MatchingCancelMatchT {
  return new SA_MatchingCancelMatchT(
    this.MatchingTableID(),
    this.MatchTicket(),
    this.Reason()
  );
}


unpackTo(_o: SA_MatchingCancelMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
  _o.Reason = this.Reason();
}
}

export class SA_MatchingCancelMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null,
  public Reason: EResultType = EResultType.Success
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return SA_MatchingCancelMatch.createSA_MatchingCancelMatch(builder,
    this.MatchingTableID,
    MatchTicket,
    this.Reason
  );
}
}

export class SN_MatchingCancelMatch implements flatbuffers.IUnpackableObject<SN_MatchingCancelMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingCancelMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingCancelMatch(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingCancelMatch):SN_MatchingCancelMatch {
  return (obj || new SN_MatchingCancelMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingCancelMatch(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingCancelMatch):SN_MatchingCancelMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingCancelMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Reason():EResultType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : EResultType.Success;
}

IsCustomGame():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingCancelMatch';
}

static startSN_MatchingCancelMatch(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MatchTicketOffset, 0);
}

static add_Reason(builder:flatbuffers.Builder, Reason:EResultType) {
  builder.addFieldInt16(1, Reason, EResultType.Success);
}

static add_IsCustomGame(builder:flatbuffers.Builder, IsCustomGame:boolean) {
  builder.addFieldInt8(2, +IsCustomGame, +false);
}

static endSN_MatchingCancelMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingCancelMatch(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset, Reason:EResultType, IsCustomGame:boolean):flatbuffers.Offset {
  SN_MatchingCancelMatch.startSN_MatchingCancelMatch(builder);
  SN_MatchingCancelMatch.add_MatchTicket(builder, MatchTicketOffset);
  SN_MatchingCancelMatch.add_Reason(builder, Reason);
  SN_MatchingCancelMatch.add_IsCustomGame(builder, IsCustomGame);
  return SN_MatchingCancelMatch.endSN_MatchingCancelMatch(builder);
}

unpack(): SN_MatchingCancelMatchT {
  return new SN_MatchingCancelMatchT(
    this.MatchTicket(),
    this.Reason(),
    this.IsCustomGame()
  );
}


unpackTo(_o: SN_MatchingCancelMatchT): void {
  _o.MatchTicket = this.MatchTicket();
  _o.Reason = this.Reason();
  _o.IsCustomGame = this.IsCustomGame();
}
}

export class SN_MatchingCancelMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchTicket: string|Uint8Array|null = null,
  public Reason: EResultType = EResultType.Success,
  public IsCustomGame: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return SN_MatchingCancelMatch.createSN_MatchingCancelMatch(builder,
    MatchTicket,
    this.Reason,
    this.IsCustomGame
  );
}
}

export class CQ_MatchingStartCustomMatch implements flatbuffers.IUnpackableObject<CQ_MatchingStartCustomMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MatchingStartCustomMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MatchingStartCustomMatch(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingStartCustomMatch):CQ_MatchingStartCustomMatch {
  return (obj || new CQ_MatchingStartCustomMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MatchingStartCustomMatch(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingStartCustomMatch):CQ_MatchingStartCustomMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MatchingStartCustomMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

TeamList(index: number, obj?:MatchingTeamInfo):MatchingTeamInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new MatchingTeamInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

TeamList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MatchingStartCustomMatch';
}

static startCQ_MatchingStartCustomMatch(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_TeamList(builder:flatbuffers.Builder, TeamListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, TeamListOffset, 0);
}

static create_TeamList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_TeamList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_MatchingStartCustomMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MatchingStartCustomMatch(builder:flatbuffers.Builder, MatchingTableID:number, TeamListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_MatchingStartCustomMatch.startCQ_MatchingStartCustomMatch(builder);
  CQ_MatchingStartCustomMatch.add_MatchingTableID(builder, MatchingTableID);
  CQ_MatchingStartCustomMatch.add_TeamList(builder, TeamListOffset);
  return CQ_MatchingStartCustomMatch.endCQ_MatchingStartCustomMatch(builder);
}

unpack(): CQ_MatchingStartCustomMatchT {
  return new CQ_MatchingStartCustomMatchT(
    this.MatchingTableID(),
    this.bb!.createObjList<MatchingTeamInfo, MatchingTeamInfoT>(this.TeamList.bind(this), this.TeamList_Length())
  );
}


unpackTo(_o: CQ_MatchingStartCustomMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.TeamList = this.bb!.createObjList<MatchingTeamInfo, MatchingTeamInfoT>(this.TeamList.bind(this), this.TeamList_Length());
}
}

export class CQ_MatchingStartCustomMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public TeamList: (MatchingTeamInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TeamList = CQ_MatchingStartCustomMatch.create_TeamList_Vector(builder, builder.createObjectOffsetList(this.TeamList));

  return CQ_MatchingStartCustomMatch.createCQ_MatchingStartCustomMatch(builder,
    this.MatchingTableID,
    TeamList
  );
}
}

export class SA_MatchingStartCustomMatch implements flatbuffers.IUnpackableObject<SA_MatchingStartCustomMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MatchingStartCustomMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MatchingStartCustomMatch(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingStartCustomMatch):SA_MatchingStartCustomMatch {
  return (obj || new SA_MatchingStartCustomMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MatchingStartCustomMatch(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingStartCustomMatch):SA_MatchingStartCustomMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MatchingStartCustomMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MatchingStartCustomMatch';
}

static startSA_MatchingStartCustomMatch(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static endSA_MatchingStartCustomMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MatchingStartCustomMatch(builder:flatbuffers.Builder, MatchingTableID:number):flatbuffers.Offset {
  SA_MatchingStartCustomMatch.startSA_MatchingStartCustomMatch(builder);
  SA_MatchingStartCustomMatch.add_MatchingTableID(builder, MatchingTableID);
  return SA_MatchingStartCustomMatch.endSA_MatchingStartCustomMatch(builder);
}

unpack(): SA_MatchingStartCustomMatchT {
  return new SA_MatchingStartCustomMatchT(
    this.MatchingTableID()
  );
}


unpackTo(_o: SA_MatchingStartCustomMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
}
}

export class SA_MatchingStartCustomMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_MatchingStartCustomMatch.createSA_MatchingStartCustomMatch(builder,
    this.MatchingTableID
  );
}
}

export class SN_MatchingRequireAcceptance implements flatbuffers.IUnpackableObject<SN_MatchingRequireAcceptanceT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingRequireAcceptance {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingRequireAcceptance(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingRequireAcceptance):SN_MatchingRequireAcceptance {
  return (obj || new SN_MatchingRequireAcceptance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingRequireAcceptance(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingRequireAcceptance):SN_MatchingRequireAcceptance {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingRequireAcceptance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

AICount():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

UserList(index: number, obj?:MatchingAcceptanceUser):MatchingAcceptanceUser|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new MatchingAcceptanceUser()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

UserList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingRequireAcceptance';
}

static startSN_MatchingRequireAcceptance(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MatchIDOffset, 0);
}

static add_AICount(builder:flatbuffers.Builder, AICount:number) {
  builder.addFieldInt32(3, AICount, 0);
}

static add_UserList(builder:flatbuffers.Builder, UserListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, UserListOffset, 0);
}

static start_UserList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSN_MatchingRequireAcceptance(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingRequireAcceptance(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset, MatchIDOffset:flatbuffers.Offset, AICount:number, UserListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_MatchingRequireAcceptance.startSN_MatchingRequireAcceptance(builder);
  SN_MatchingRequireAcceptance.add_MatchingTableID(builder, MatchingTableID);
  SN_MatchingRequireAcceptance.add_MatchTicket(builder, MatchTicketOffset);
  SN_MatchingRequireAcceptance.add_MatchID(builder, MatchIDOffset);
  SN_MatchingRequireAcceptance.add_AICount(builder, AICount);
  SN_MatchingRequireAcceptance.add_UserList(builder, UserListOffset);
  return SN_MatchingRequireAcceptance.endSN_MatchingRequireAcceptance(builder);
}

unpack(): SN_MatchingRequireAcceptanceT {
  return new SN_MatchingRequireAcceptanceT(
    this.MatchingTableID(),
    this.MatchTicket(),
    this.MatchID(),
    this.AICount(),
    this.bb!.createObjList<MatchingAcceptanceUser, MatchingAcceptanceUserT>(this.UserList.bind(this), this.UserList_Length())
  );
}


unpackTo(_o: SN_MatchingRequireAcceptanceT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
  _o.MatchID = this.MatchID();
  _o.AICount = this.AICount();
  _o.UserList = this.bb!.createObjList<MatchingAcceptanceUser, MatchingAcceptanceUserT>(this.UserList.bind(this), this.UserList_Length());
}
}

export class SN_MatchingRequireAcceptanceT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null,
  public MatchID: string|Uint8Array|null = null,
  public AICount: number = 0,
  public UserList: (MatchingAcceptanceUserT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);
  const UserList = builder.createStructOffsetList(this.UserList, SN_MatchingRequireAcceptance.start_UserList_Vector);

  return SN_MatchingRequireAcceptance.createSN_MatchingRequireAcceptance(builder,
    this.MatchingTableID,
    MatchTicket,
    MatchID,
    this.AICount,
    UserList
  );
}
}

export class CQ_MatchingAcceptance implements flatbuffers.IUnpackableObject<CQ_MatchingAcceptanceT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_MatchingAcceptance {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_MatchingAcceptance(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingAcceptance):CQ_MatchingAcceptance {
  return (obj || new CQ_MatchingAcceptance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_MatchingAcceptance(bb:flatbuffers.ByteBuffer, obj?:CQ_MatchingAcceptance):CQ_MatchingAcceptance {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_MatchingAcceptance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsAccept():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_MatchingAcceptance';
}

static startCQ_MatchingAcceptance(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MatchIDOffset, 0);
}

static add_IsAccept(builder:flatbuffers.Builder, IsAccept:boolean) {
  builder.addFieldInt8(1, +IsAccept, +false);
}

static endCQ_MatchingAcceptance(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_MatchingAcceptance(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset, IsAccept:boolean):flatbuffers.Offset {
  CQ_MatchingAcceptance.startCQ_MatchingAcceptance(builder);
  CQ_MatchingAcceptance.add_MatchID(builder, MatchIDOffset);
  CQ_MatchingAcceptance.add_IsAccept(builder, IsAccept);
  return CQ_MatchingAcceptance.endCQ_MatchingAcceptance(builder);
}

unpack(): CQ_MatchingAcceptanceT {
  return new CQ_MatchingAcceptanceT(
    this.MatchID(),
    this.IsAccept()
  );
}


unpackTo(_o: CQ_MatchingAcceptanceT): void {
  _o.MatchID = this.MatchID();
  _o.IsAccept = this.IsAccept();
}
}

export class CQ_MatchingAcceptanceT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchID: string|Uint8Array|null = null,
  public IsAccept: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);

  return CQ_MatchingAcceptance.createCQ_MatchingAcceptance(builder,
    MatchID,
    this.IsAccept
  );
}
}

export class SA_MatchingAcceptance implements flatbuffers.IUnpackableObject<SA_MatchingAcceptanceT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_MatchingAcceptance {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_MatchingAcceptance(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingAcceptance):SA_MatchingAcceptance {
  return (obj || new SA_MatchingAcceptance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_MatchingAcceptance(bb:flatbuffers.ByteBuffer, obj?:SA_MatchingAcceptance):SA_MatchingAcceptance {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_MatchingAcceptance()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_MatchingAcceptance';
}

static startSA_MatchingAcceptance(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_MatchingAcceptance(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_MatchingAcceptance(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_MatchingAcceptance.startSA_MatchingAcceptance(builder);
  return SA_MatchingAcceptance.endSA_MatchingAcceptance(builder);
}

unpack(): SA_MatchingAcceptanceT {
  return new SA_MatchingAcceptanceT();
}


unpackTo(_o: SA_MatchingAcceptanceT): void {}
}

export class SA_MatchingAcceptanceT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_MatchingAcceptance.createSA_MatchingAcceptance(builder);
}
}

export class SN_MatchingAccepted implements flatbuffers.IUnpackableObject<SN_MatchingAcceptedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingAccepted {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingAccepted(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingAccepted):SN_MatchingAccepted {
  return (obj || new SN_MatchingAccepted()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingAccepted(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingAccepted):SN_MatchingAccepted {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingAccepted()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

AcceptedUIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

AcceptedUIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

AcceptedUIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingAccepted';
}

static startSN_MatchingAccepted(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MatchIDOffset, 0);
}

static add_AcceptedUIDList(builder:flatbuffers.Builder, AcceptedUIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, AcceptedUIDListOffset, 0);
}

static create_AcceptedUIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_AcceptedUIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_AcceptedUIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_AcceptedUIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSN_MatchingAccepted(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingAccepted(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset, AcceptedUIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_MatchingAccepted.startSN_MatchingAccepted(builder);
  SN_MatchingAccepted.add_MatchID(builder, MatchIDOffset);
  SN_MatchingAccepted.add_AcceptedUIDList(builder, AcceptedUIDListOffset);
  return SN_MatchingAccepted.endSN_MatchingAccepted(builder);
}

unpack(): SN_MatchingAcceptedT {
  return new SN_MatchingAcceptedT(
    this.MatchID(),
    this.bb!.createScalarList<number>(this.AcceptedUIDList.bind(this), this.AcceptedUIDList_Length())
  );
}


unpackTo(_o: SN_MatchingAcceptedT): void {
  _o.MatchID = this.MatchID();
  _o.AcceptedUIDList = this.bb!.createScalarList<number>(this.AcceptedUIDList.bind(this), this.AcceptedUIDList_Length());
}
}

export class SN_MatchingAcceptedT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchID: string|Uint8Array|null = null,
  public AcceptedUIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);
  const AcceptedUIDList = SN_MatchingAccepted.create_AcceptedUIDList_Vector(builder, this.AcceptedUIDList);

  return SN_MatchingAccepted.createSN_MatchingAccepted(builder,
    MatchID,
    AcceptedUIDList
  );
}
}

export class SN_MatchingRejected implements flatbuffers.IUnpackableObject<SN_MatchingRejectedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingRejected {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingRejected(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingRejected):SN_MatchingRejected {
  return (obj || new SN_MatchingRejected()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingRejected(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingRejected):SN_MatchingRejected {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingRejected()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

RejectUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RejectNickName():string|null
RejectNickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RejectNickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingRejected';
}

static startSN_MatchingRejected(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, MatchTicketOffset, 0);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchIDOffset, 0);
}

static add_RejectUID(builder:flatbuffers.Builder, RejectUID:number) {
  builder.addFieldInt32(2, RejectUID, 0);
}

static add_RejectNickName(builder:flatbuffers.Builder, RejectNickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, RejectNickNameOffset, 0);
}

static endSN_MatchingRejected(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingRejected(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset, MatchIDOffset:flatbuffers.Offset, RejectUID:number, RejectNickNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_MatchingRejected.startSN_MatchingRejected(builder);
  SN_MatchingRejected.add_MatchTicket(builder, MatchTicketOffset);
  SN_MatchingRejected.add_MatchID(builder, MatchIDOffset);
  SN_MatchingRejected.add_RejectUID(builder, RejectUID);
  SN_MatchingRejected.add_RejectNickName(builder, RejectNickNameOffset);
  return SN_MatchingRejected.endSN_MatchingRejected(builder);
}

unpack(): SN_MatchingRejectedT {
  return new SN_MatchingRejectedT(
    this.MatchTicket(),
    this.MatchID(),
    this.RejectUID(),
    this.RejectNickName()
  );
}


unpackTo(_o: SN_MatchingRejectedT): void {
  _o.MatchTicket = this.MatchTicket();
  _o.MatchID = this.MatchID();
  _o.RejectUID = this.RejectUID();
  _o.RejectNickName = this.RejectNickName();
}
}

export class SN_MatchingRejectedT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchTicket: string|Uint8Array|null = null,
  public MatchID: string|Uint8Array|null = null,
  public RejectUID: number = 0,
  public RejectNickName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);
  const RejectNickName = (this.RejectNickName !== null ? builder.createString(this.RejectNickName!) : 0);

  return SN_MatchingRejected.createSN_MatchingRejected(builder,
    MatchTicket,
    MatchID,
    this.RejectUID,
    RejectNickName
  );
}
}

export class SN_MatchingReMatched implements flatbuffers.IUnpackableObject<SN_MatchingReMatchedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingReMatched {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingReMatched(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingReMatched):SN_MatchingReMatched {
  return (obj || new SN_MatchingReMatched()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingReMatched(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingReMatched):SN_MatchingReMatched {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingReMatched()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingReMatched';
}

static startSN_MatchingReMatched(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static endSN_MatchingReMatched(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingReMatched(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_MatchingReMatched.startSN_MatchingReMatched(builder);
  SN_MatchingReMatched.add_MatchingTableID(builder, MatchingTableID);
  SN_MatchingReMatched.add_MatchTicket(builder, MatchTicketOffset);
  return SN_MatchingReMatched.endSN_MatchingReMatched(builder);
}

unpack(): SN_MatchingReMatchedT {
  return new SN_MatchingReMatchedT(
    this.MatchingTableID(),
    this.MatchTicket()
  );
}


unpackTo(_o: SN_MatchingReMatchedT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
}
}

export class SN_MatchingReMatchedT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return SN_MatchingReMatched.createSN_MatchingReMatched(builder,
    this.MatchingTableID,
    MatchTicket
  );
}
}

export class CQ_VehicleRecall implements flatbuffers.IUnpackableObject<CQ_VehicleRecallT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_VehicleRecall {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_VehicleRecall(bb:flatbuffers.ByteBuffer, obj?:CQ_VehicleRecall):CQ_VehicleRecall {
  return (obj || new CQ_VehicleRecall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_VehicleRecall(bb:flatbuffers.ByteBuffer, obj?:CQ_VehicleRecall):CQ_VehicleRecall {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_VehicleRecall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsRecall():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_VehicleRecall';
}

static startCQ_VehicleRecall(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IsRecall(builder:flatbuffers.Builder, IsRecall:boolean) {
  builder.addFieldInt8(0, +IsRecall, +false);
}

static endCQ_VehicleRecall(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_VehicleRecall(builder:flatbuffers.Builder, IsRecall:boolean):flatbuffers.Offset {
  CQ_VehicleRecall.startCQ_VehicleRecall(builder);
  CQ_VehicleRecall.add_IsRecall(builder, IsRecall);
  return CQ_VehicleRecall.endCQ_VehicleRecall(builder);
}

unpack(): CQ_VehicleRecallT {
  return new CQ_VehicleRecallT(
    this.IsRecall()
  );
}


unpackTo(_o: CQ_VehicleRecallT): void {
  _o.IsRecall = this.IsRecall();
}
}

export class CQ_VehicleRecallT implements flatbuffers.IGeneratedObject {
constructor(
  public IsRecall: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_VehicleRecall.createCQ_VehicleRecall(builder,
    this.IsRecall
  );
}
}

export class SA_VehicleRecall implements flatbuffers.IUnpackableObject<SA_VehicleRecallT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_VehicleRecall {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_VehicleRecall(bb:flatbuffers.ByteBuffer, obj?:SA_VehicleRecall):SA_VehicleRecall {
  return (obj || new SA_VehicleRecall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_VehicleRecall(bb:flatbuffers.ByteBuffer, obj?:SA_VehicleRecall):SA_VehicleRecall {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_VehicleRecall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_VehicleRecall';
}

static startSA_VehicleRecall(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_VehicleRecall(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_VehicleRecall(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_VehicleRecall.startSA_VehicleRecall(builder);
  return SA_VehicleRecall.endSA_VehicleRecall(builder);
}

unpack(): SA_VehicleRecallT {
  return new SA_VehicleRecallT();
}


unpackTo(_o: SA_VehicleRecallT): void {}
}

export class SA_VehicleRecallT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_VehicleRecall.createSA_VehicleRecall(builder);
}
}

export class CQ_BiskitLog implements flatbuffers.IUnpackableObject<CQ_BiskitLogT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_BiskitLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_BiskitLog(bb:flatbuffers.ByteBuffer, obj?:CQ_BiskitLog):CQ_BiskitLog {
  return (obj || new CQ_BiskitLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_BiskitLog(bb:flatbuffers.ByteBuffer, obj?:CQ_BiskitLog):CQ_BiskitLog {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_BiskitLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Loglist(index: number, obj?:BiskitLog):BiskitLog|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new BiskitLog()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

Loglist_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_BiskitLog';
}

static startCQ_BiskitLog(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Loglist(builder:flatbuffers.Builder, LoglistOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, LoglistOffset, 0);
}

static create_Loglist_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_Loglist_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_BiskitLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_BiskitLog(builder:flatbuffers.Builder, LoglistOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_BiskitLog.startCQ_BiskitLog(builder);
  CQ_BiskitLog.add_Loglist(builder, LoglistOffset);
  return CQ_BiskitLog.endCQ_BiskitLog(builder);
}

unpack(): CQ_BiskitLogT {
  return new CQ_BiskitLogT(
    this.bb!.createObjList<BiskitLog, BiskitLogT>(this.Loglist.bind(this), this.Loglist_Length())
  );
}


unpackTo(_o: CQ_BiskitLogT): void {
  _o.Loglist = this.bb!.createObjList<BiskitLog, BiskitLogT>(this.Loglist.bind(this), this.Loglist_Length());
}
}

export class CQ_BiskitLogT implements flatbuffers.IGeneratedObject {
constructor(
  public Loglist: (BiskitLogT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Loglist = CQ_BiskitLog.create_Loglist_Vector(builder, builder.createObjectOffsetList(this.Loglist));

  return CQ_BiskitLog.createCQ_BiskitLog(builder,
    Loglist
  );
}
}

export class SA_BiskitLog implements flatbuffers.IUnpackableObject<SA_BiskitLogT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_BiskitLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_BiskitLog(bb:flatbuffers.ByteBuffer, obj?:SA_BiskitLog):SA_BiskitLog {
  return (obj || new SA_BiskitLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_BiskitLog(bb:flatbuffers.ByteBuffer, obj?:SA_BiskitLog):SA_BiskitLog {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_BiskitLog()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_BiskitLog';
}

static startSA_BiskitLog(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_BiskitLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_BiskitLog(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_BiskitLog.startSA_BiskitLog(builder);
  return SA_BiskitLog.endSA_BiskitLog(builder);
}

unpack(): SA_BiskitLogT {
  return new SA_BiskitLogT();
}


unpackTo(_o: SA_BiskitLogT): void {}
}

export class SA_BiskitLogT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_BiskitLog.createSA_BiskitLog(builder);
}
}

export class SN_UncheaterCookie implements flatbuffers.IUnpackableObject<SN_UncheaterCookieT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_UncheaterCookie {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_UncheaterCookie(bb:flatbuffers.ByteBuffer, obj?:SN_UncheaterCookie):SN_UncheaterCookie {
  return (obj || new SN_UncheaterCookie()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_UncheaterCookie(bb:flatbuffers.ByteBuffer, obj?:SN_UncheaterCookie):SN_UncheaterCookie {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_UncheaterCookie()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

buffer():string|null
buffer(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffer(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_UncheaterCookie';
}

static startSN_UncheaterCookie(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_buffer(builder:flatbuffers.Builder, bufferOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bufferOffset, 0);
}

static endSN_UncheaterCookie(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_UncheaterCookie(builder:flatbuffers.Builder, bufferOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_UncheaterCookie.startSN_UncheaterCookie(builder);
  SN_UncheaterCookie.add_buffer(builder, bufferOffset);
  return SN_UncheaterCookie.endSN_UncheaterCookie(builder);
}

unpack(): SN_UncheaterCookieT {
  return new SN_UncheaterCookieT(
    this.buffer()
  );
}


unpackTo(_o: SN_UncheaterCookieT): void {
  _o.buffer = this.buffer();
}
}

export class SN_UncheaterCookieT implements flatbuffers.IGeneratedObject {
constructor(
  public buffer: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffer = (this.buffer !== null ? builder.createString(this.buffer!) : 0);

  return SN_UncheaterCookie.createSN_UncheaterCookie(builder,
    buffer
  );
}
}

export class CQ_UncheaterVerifyCookie implements flatbuffers.IUnpackableObject<CQ_UncheaterVerifyCookieT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_UncheaterVerifyCookie {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_UncheaterVerifyCookie(bb:flatbuffers.ByteBuffer, obj?:CQ_UncheaterVerifyCookie):CQ_UncheaterVerifyCookie {
  return (obj || new CQ_UncheaterVerifyCookie()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_UncheaterVerifyCookie(bb:flatbuffers.ByteBuffer, obj?:CQ_UncheaterVerifyCookie):CQ_UncheaterVerifyCookie {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_UncheaterVerifyCookie()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

buffer():string|null
buffer(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffer(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_UncheaterVerifyCookie';
}

static startCQ_UncheaterVerifyCookie(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_buffer(builder:flatbuffers.Builder, bufferOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bufferOffset, 0);
}

static endCQ_UncheaterVerifyCookie(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_UncheaterVerifyCookie(builder:flatbuffers.Builder, bufferOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_UncheaterVerifyCookie.startCQ_UncheaterVerifyCookie(builder);
  CQ_UncheaterVerifyCookie.add_buffer(builder, bufferOffset);
  return CQ_UncheaterVerifyCookie.endCQ_UncheaterVerifyCookie(builder);
}

unpack(): CQ_UncheaterVerifyCookieT {
  return new CQ_UncheaterVerifyCookieT(
    this.buffer()
  );
}


unpackTo(_o: CQ_UncheaterVerifyCookieT): void {
  _o.buffer = this.buffer();
}
}

export class CQ_UncheaterVerifyCookieT implements flatbuffers.IGeneratedObject {
constructor(
  public buffer: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffer = (this.buffer !== null ? builder.createString(this.buffer!) : 0);

  return CQ_UncheaterVerifyCookie.createCQ_UncheaterVerifyCookie(builder,
    buffer
  );
}
}

export class SA_UncheaterVerifyCookie implements flatbuffers.IUnpackableObject<SA_UncheaterVerifyCookieT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_UncheaterVerifyCookie {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_UncheaterVerifyCookie(bb:flatbuffers.ByteBuffer, obj?:SA_UncheaterVerifyCookie):SA_UncheaterVerifyCookie {
  return (obj || new SA_UncheaterVerifyCookie()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_UncheaterVerifyCookie(bb:flatbuffers.ByteBuffer, obj?:SA_UncheaterVerifyCookie):SA_UncheaterVerifyCookie {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_UncheaterVerifyCookie()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_UncheaterVerifyCookie';
}

static startSA_UncheaterVerifyCookie(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_UncheaterVerifyCookie(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_UncheaterVerifyCookie(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_UncheaterVerifyCookie.startSA_UncheaterVerifyCookie(builder);
  return SA_UncheaterVerifyCookie.endSA_UncheaterVerifyCookie(builder);
}

unpack(): SA_UncheaterVerifyCookieT {
  return new SA_UncheaterVerifyCookieT();
}


unpackTo(_o: SA_UncheaterVerifyCookieT): void {}
}

export class SA_UncheaterVerifyCookieT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_UncheaterVerifyCookie.createSA_UncheaterVerifyCookie(builder);
}
}

export class CQ_UncheaterHackDetect implements flatbuffers.IUnpackableObject<CQ_UncheaterHackDetectT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_UncheaterHackDetect {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_UncheaterHackDetect(bb:flatbuffers.ByteBuffer, obj?:CQ_UncheaterHackDetect):CQ_UncheaterHackDetect {
  return (obj || new CQ_UncheaterHackDetect()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_UncheaterHackDetect(bb:flatbuffers.ByteBuffer, obj?:CQ_UncheaterHackDetect):CQ_UncheaterHackDetect {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_UncheaterHackDetect()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Type():EUncheaterReportType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EUncheaterReportType.None;
}

MajorCode():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

MinorCode():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

Log():string|null
Log(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Log(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Path():string|null
Path(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Path(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Extra():string|null
Extra(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Extra(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MemberNo():string|null
MemberNo(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MemberNo(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NicknameNo():string|null
NicknameNo(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NicknameNo(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TimeStamp():string|null
TimeStamp(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TimeStamp(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Time():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_UncheaterHackDetect';
}

static startCQ_UncheaterHackDetect(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static add_Type(builder:flatbuffers.Builder, Type:EUncheaterReportType) {
  builder.addFieldInt8(0, Type, EUncheaterReportType.None);
}

static add_MajorCode(builder:flatbuffers.Builder, MajorCode:number) {
  builder.addFieldInt32(1, MajorCode, 0);
}

static add_MinorCode(builder:flatbuffers.Builder, MinorCode:number) {
  builder.addFieldInt32(2, MinorCode, 0);
}

static add_Log(builder:flatbuffers.Builder, LogOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, LogOffset, 0);
}

static add_Path(builder:flatbuffers.Builder, PathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, PathOffset, 0);
}

static add_Extra(builder:flatbuffers.Builder, ExtraOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, ExtraOffset, 0);
}

static add_MemberNo(builder:flatbuffers.Builder, MemberNoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, MemberNoOffset, 0);
}

static add_NicknameNo(builder:flatbuffers.Builder, NicknameNoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, NicknameNoOffset, 0);
}

static add_TimeStamp(builder:flatbuffers.Builder, TimeStampOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, TimeStampOffset, 0);
}

static add_Time(builder:flatbuffers.Builder, Time:number) {
  builder.addFieldInt32(9, Time, 0);
}

static endCQ_UncheaterHackDetect(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_UncheaterHackDetect(builder:flatbuffers.Builder, Type:EUncheaterReportType, MajorCode:number, MinorCode:number, LogOffset:flatbuffers.Offset, PathOffset:flatbuffers.Offset, ExtraOffset:flatbuffers.Offset, MemberNoOffset:flatbuffers.Offset, NicknameNoOffset:flatbuffers.Offset, TimeStampOffset:flatbuffers.Offset, Time:number):flatbuffers.Offset {
  CQ_UncheaterHackDetect.startCQ_UncheaterHackDetect(builder);
  CQ_UncheaterHackDetect.add_Type(builder, Type);
  CQ_UncheaterHackDetect.add_MajorCode(builder, MajorCode);
  CQ_UncheaterHackDetect.add_MinorCode(builder, MinorCode);
  CQ_UncheaterHackDetect.add_Log(builder, LogOffset);
  CQ_UncheaterHackDetect.add_Path(builder, PathOffset);
  CQ_UncheaterHackDetect.add_Extra(builder, ExtraOffset);
  CQ_UncheaterHackDetect.add_MemberNo(builder, MemberNoOffset);
  CQ_UncheaterHackDetect.add_NicknameNo(builder, NicknameNoOffset);
  CQ_UncheaterHackDetect.add_TimeStamp(builder, TimeStampOffset);
  CQ_UncheaterHackDetect.add_Time(builder, Time);
  return CQ_UncheaterHackDetect.endCQ_UncheaterHackDetect(builder);
}

unpack(): CQ_UncheaterHackDetectT {
  return new CQ_UncheaterHackDetectT(
    this.Type(),
    this.MajorCode(),
    this.MinorCode(),
    this.Log(),
    this.Path(),
    this.Extra(),
    this.MemberNo(),
    this.NicknameNo(),
    this.TimeStamp(),
    this.Time()
  );
}


unpackTo(_o: CQ_UncheaterHackDetectT): void {
  _o.Type = this.Type();
  _o.MajorCode = this.MajorCode();
  _o.MinorCode = this.MinorCode();
  _o.Log = this.Log();
  _o.Path = this.Path();
  _o.Extra = this.Extra();
  _o.MemberNo = this.MemberNo();
  _o.NicknameNo = this.NicknameNo();
  _o.TimeStamp = this.TimeStamp();
  _o.Time = this.Time();
}
}

export class CQ_UncheaterHackDetectT implements flatbuffers.IGeneratedObject {
constructor(
  public Type: EUncheaterReportType = EUncheaterReportType.None,
  public MajorCode: number = 0,
  public MinorCode: number = 0,
  public Log: string|Uint8Array|null = null,
  public Path: string|Uint8Array|null = null,
  public Extra: string|Uint8Array|null = null,
  public MemberNo: string|Uint8Array|null = null,
  public NicknameNo: string|Uint8Array|null = null,
  public TimeStamp: string|Uint8Array|null = null,
  public Time: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Log = (this.Log !== null ? builder.createString(this.Log!) : 0);
  const Path = (this.Path !== null ? builder.createString(this.Path!) : 0);
  const Extra = (this.Extra !== null ? builder.createString(this.Extra!) : 0);
  const MemberNo = (this.MemberNo !== null ? builder.createString(this.MemberNo!) : 0);
  const NicknameNo = (this.NicknameNo !== null ? builder.createString(this.NicknameNo!) : 0);
  const TimeStamp = (this.TimeStamp !== null ? builder.createString(this.TimeStamp!) : 0);

  return CQ_UncheaterHackDetect.createCQ_UncheaterHackDetect(builder,
    this.Type,
    this.MajorCode,
    this.MinorCode,
    Log,
    Path,
    Extra,
    MemberNo,
    NicknameNo,
    TimeStamp,
    this.Time
  );
}
}

export class SA_UncheaterHackDetect implements flatbuffers.IUnpackableObject<SA_UncheaterHackDetectT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_UncheaterHackDetect {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_UncheaterHackDetect(bb:flatbuffers.ByteBuffer, obj?:SA_UncheaterHackDetect):SA_UncheaterHackDetect {
  return (obj || new SA_UncheaterHackDetect()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_UncheaterHackDetect(bb:flatbuffers.ByteBuffer, obj?:SA_UncheaterHackDetect):SA_UncheaterHackDetect {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_UncheaterHackDetect()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

shouldExitClient():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Type():EUncheaterReportType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EUncheaterReportType.None;
}

MajorCode():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

MinorCode():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

Log():string|null
Log(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Log(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_UncheaterHackDetect';
}

static startSA_UncheaterHackDetect(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_shouldExitClient(builder:flatbuffers.Builder, shouldExitClient:boolean) {
  builder.addFieldInt8(0, +shouldExitClient, +false);
}

static add_Type(builder:flatbuffers.Builder, Type:EUncheaterReportType) {
  builder.addFieldInt8(1, Type, EUncheaterReportType.None);
}

static add_MajorCode(builder:flatbuffers.Builder, MajorCode:number) {
  builder.addFieldInt32(2, MajorCode, 0);
}

static add_MinorCode(builder:flatbuffers.Builder, MinorCode:number) {
  builder.addFieldInt32(3, MinorCode, 0);
}

static add_Log(builder:flatbuffers.Builder, LogOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, LogOffset, 0);
}

static endSA_UncheaterHackDetect(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_UncheaterHackDetect(builder:flatbuffers.Builder, shouldExitClient:boolean, Type:EUncheaterReportType, MajorCode:number, MinorCode:number, LogOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_UncheaterHackDetect.startSA_UncheaterHackDetect(builder);
  SA_UncheaterHackDetect.add_shouldExitClient(builder, shouldExitClient);
  SA_UncheaterHackDetect.add_Type(builder, Type);
  SA_UncheaterHackDetect.add_MajorCode(builder, MajorCode);
  SA_UncheaterHackDetect.add_MinorCode(builder, MinorCode);
  SA_UncheaterHackDetect.add_Log(builder, LogOffset);
  return SA_UncheaterHackDetect.endSA_UncheaterHackDetect(builder);
}

unpack(): SA_UncheaterHackDetectT {
  return new SA_UncheaterHackDetectT(
    this.shouldExitClient(),
    this.Type(),
    this.MajorCode(),
    this.MinorCode(),
    this.Log()
  );
}


unpackTo(_o: SA_UncheaterHackDetectT): void {
  _o.shouldExitClient = this.shouldExitClient();
  _o.Type = this.Type();
  _o.MajorCode = this.MajorCode();
  _o.MinorCode = this.MinorCode();
  _o.Log = this.Log();
}
}

export class SA_UncheaterHackDetectT implements flatbuffers.IGeneratedObject {
constructor(
  public shouldExitClient: boolean = false,
  public Type: EUncheaterReportType = EUncheaterReportType.None,
  public MajorCode: number = 0,
  public MinorCode: number = 0,
  public Log: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Log = (this.Log !== null ? builder.createString(this.Log!) : 0);

  return SA_UncheaterHackDetect.createSA_UncheaterHackDetect(builder,
    this.shouldExitClient,
    this.Type,
    this.MajorCode,
    this.MinorCode,
    Log
  );
}
}

export class CQ_OpenWorldPositionChange implements flatbuffers.IUnpackableObject<CQ_OpenWorldPositionChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_OpenWorldPositionChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_OpenWorldPositionChange(bb:flatbuffers.ByteBuffer, obj?:CQ_OpenWorldPositionChange):CQ_OpenWorldPositionChange {
  return (obj || new CQ_OpenWorldPositionChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_OpenWorldPositionChange(bb:flatbuffers.ByteBuffer, obj?:CQ_OpenWorldPositionChange):CQ_OpenWorldPositionChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_OpenWorldPositionChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

X():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Y():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_OpenWorldPositionChange';
}

static startCQ_OpenWorldPositionChange(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_X(builder:flatbuffers.Builder, X:number) {
  builder.addFieldInt32(0, X, 0);
}

static add_Y(builder:flatbuffers.Builder, Y:number) {
  builder.addFieldInt32(1, Y, 0);
}

static endCQ_OpenWorldPositionChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_OpenWorldPositionChange(builder:flatbuffers.Builder, X:number, Y:number):flatbuffers.Offset {
  CQ_OpenWorldPositionChange.startCQ_OpenWorldPositionChange(builder);
  CQ_OpenWorldPositionChange.add_X(builder, X);
  CQ_OpenWorldPositionChange.add_Y(builder, Y);
  return CQ_OpenWorldPositionChange.endCQ_OpenWorldPositionChange(builder);
}

unpack(): CQ_OpenWorldPositionChangeT {
  return new CQ_OpenWorldPositionChangeT(
    this.X(),
    this.Y()
  );
}


unpackTo(_o: CQ_OpenWorldPositionChangeT): void {
  _o.X = this.X();
  _o.Y = this.Y();
}
}

export class CQ_OpenWorldPositionChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public X: number = 0,
  public Y: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_OpenWorldPositionChange.createCQ_OpenWorldPositionChange(builder,
    this.X,
    this.Y
  );
}
}

export class SA_OpenWorldPositionChange implements flatbuffers.IUnpackableObject<SA_OpenWorldPositionChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_OpenWorldPositionChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_OpenWorldPositionChange(bb:flatbuffers.ByteBuffer, obj?:SA_OpenWorldPositionChange):SA_OpenWorldPositionChange {
  return (obj || new SA_OpenWorldPositionChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_OpenWorldPositionChange(bb:flatbuffers.ByteBuffer, obj?:SA_OpenWorldPositionChange):SA_OpenWorldPositionChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_OpenWorldPositionChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

X():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Y():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_OpenWorldPositionChange';
}

static startSA_OpenWorldPositionChange(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_X(builder:flatbuffers.Builder, X:number) {
  builder.addFieldInt32(0, X, 0);
}

static add_Y(builder:flatbuffers.Builder, Y:number) {
  builder.addFieldInt32(1, Y, 0);
}

static endSA_OpenWorldPositionChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_OpenWorldPositionChange(builder:flatbuffers.Builder, X:number, Y:number):flatbuffers.Offset {
  SA_OpenWorldPositionChange.startSA_OpenWorldPositionChange(builder);
  SA_OpenWorldPositionChange.add_X(builder, X);
  SA_OpenWorldPositionChange.add_Y(builder, Y);
  return SA_OpenWorldPositionChange.endSA_OpenWorldPositionChange(builder);
}

unpack(): SA_OpenWorldPositionChangeT {
  return new SA_OpenWorldPositionChangeT(
    this.X(),
    this.Y()
  );
}


unpackTo(_o: SA_OpenWorldPositionChangeT): void {
  _o.X = this.X();
  _o.Y = this.Y();
}
}

export class SA_OpenWorldPositionChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public X: number = 0,
  public Y: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_OpenWorldPositionChange.createSA_OpenWorldPositionChange(builder,
    this.X,
    this.Y
  );
}
}

export class CQ_FriendChatRoomList implements flatbuffers.IUnpackableObject<CQ_FriendChatRoomListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendChatRoomList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendChatRoomList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatRoomList):CQ_FriendChatRoomList {
  return (obj || new CQ_FriendChatRoomList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendChatRoomList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatRoomList):CQ_FriendChatRoomList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendChatRoomList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendChatRoomList';
}

static startCQ_FriendChatRoomList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_FriendChatRoomList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendChatRoomList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_FriendChatRoomList.startCQ_FriendChatRoomList(builder);
  return CQ_FriendChatRoomList.endCQ_FriendChatRoomList(builder);
}

unpack(): CQ_FriendChatRoomListT {
  return new CQ_FriendChatRoomListT();
}


unpackTo(_o: CQ_FriendChatRoomListT): void {}
}

export class CQ_FriendChatRoomListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendChatRoomList.createCQ_FriendChatRoomList(builder);
}
}

export class SA_FriendChatRoomList implements flatbuffers.IUnpackableObject<SA_FriendChatRoomListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendChatRoomList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendChatRoomList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatRoomList):SA_FriendChatRoomList {
  return (obj || new SA_FriendChatRoomList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendChatRoomList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatRoomList):SA_FriendChatRoomList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendChatRoomList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomList(index: number, obj?:FriendChatRoomData):FriendChatRoomData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendChatRoomData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

RoomList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendChatRoomList';
}

static startSA_FriendChatRoomList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_RoomList(builder:flatbuffers.Builder, RoomListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomListOffset, 0);
}

static create_RoomList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_RoomList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_FriendChatRoomList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendChatRoomList(builder:flatbuffers.Builder, RoomListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_FriendChatRoomList.startSA_FriendChatRoomList(builder);
  SA_FriendChatRoomList.add_RoomList(builder, RoomListOffset);
  return SA_FriendChatRoomList.endSA_FriendChatRoomList(builder);
}

unpack(): SA_FriendChatRoomListT {
  return new SA_FriendChatRoomListT(
    this.bb!.createObjList<FriendChatRoomData, FriendChatRoomDataT>(this.RoomList.bind(this), this.RoomList_Length())
  );
}


unpackTo(_o: SA_FriendChatRoomListT): void {
  _o.RoomList = this.bb!.createObjList<FriendChatRoomData, FriendChatRoomDataT>(this.RoomList.bind(this), this.RoomList_Length());
}
}

export class SA_FriendChatRoomListT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomList: (FriendChatRoomDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomList = SA_FriendChatRoomList.create_RoomList_Vector(builder, builder.createObjectOffsetList(this.RoomList));

  return SA_FriendChatRoomList.createSA_FriendChatRoomList(builder,
    RoomList
  );
}
}

export class CQ_FriendChatMessageList implements flatbuffers.IUnpackableObject<CQ_FriendChatMessageListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendChatMessageList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendChatMessageList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatMessageList):CQ_FriendChatMessageList {
  return (obj || new CQ_FriendChatMessageList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendChatMessageList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatMessageList):CQ_FriendChatMessageList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendChatMessageList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendChatMessageList';
}

static startCQ_FriendChatMessageList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endCQ_FriendChatMessageList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendChatMessageList(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  CQ_FriendChatMessageList.startCQ_FriendChatMessageList(builder);
  CQ_FriendChatMessageList.add_FriendUID(builder, FriendUID);
  return CQ_FriendChatMessageList.endCQ_FriendChatMessageList(builder);
}

unpack(): CQ_FriendChatMessageListT {
  return new CQ_FriendChatMessageListT(
    this.FriendUID()
  );
}


unpackTo(_o: CQ_FriendChatMessageListT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class CQ_FriendChatMessageListT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendChatMessageList.createCQ_FriendChatMessageList(builder,
    this.FriendUID
  );
}
}

export class SA_FriendChatMessageList implements flatbuffers.IUnpackableObject<SA_FriendChatMessageListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendChatMessageList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendChatMessageList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatMessageList):SA_FriendChatMessageList {
  return (obj || new SA_FriendChatMessageList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendChatMessageList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatMessageList):SA_FriendChatMessageList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendChatMessageList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChatList(index: number, obj?:FriendChatData):FriendChatData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new FriendChatData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ChatList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendChatMessageList';
}

static startSA_FriendChatMessageList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static add_ChatList(builder:flatbuffers.Builder, ChatListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChatListOffset, 0);
}

static create_ChatList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ChatList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_FriendChatMessageList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendChatMessageList(builder:flatbuffers.Builder, FriendUID:number, ChatListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_FriendChatMessageList.startSA_FriendChatMessageList(builder);
  SA_FriendChatMessageList.add_FriendUID(builder, FriendUID);
  SA_FriendChatMessageList.add_ChatList(builder, ChatListOffset);
  return SA_FriendChatMessageList.endSA_FriendChatMessageList(builder);
}

unpack(): SA_FriendChatMessageListT {
  return new SA_FriendChatMessageListT(
    this.FriendUID(),
    this.bb!.createObjList<FriendChatData, FriendChatDataT>(this.ChatList.bind(this), this.ChatList_Length())
  );
}


unpackTo(_o: SA_FriendChatMessageListT): void {
  _o.FriendUID = this.FriendUID();
  _o.ChatList = this.bb!.createObjList<FriendChatData, FriendChatDataT>(this.ChatList.bind(this), this.ChatList_Length());
}
}

export class SA_FriendChatMessageListT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0,
  public ChatList: (FriendChatDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChatList = SA_FriendChatMessageList.create_ChatList_Vector(builder, builder.createObjectOffsetList(this.ChatList));

  return SA_FriendChatMessageList.createSA_FriendChatMessageList(builder,
    this.FriendUID,
    ChatList
  );
}
}

export class CQ_FriendChatSend implements flatbuffers.IUnpackableObject<CQ_FriendChatSendT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendChatSend {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendChatSend(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatSend):CQ_FriendChatSend {
  return (obj || new CQ_FriendChatSend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendChatSend(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatSend):CQ_FriendChatSend {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendChatSend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FriendNickName():string|null
FriendNickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
FriendNickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendChatSend';
}

static startCQ_FriendChatSend(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static add_FriendNickName(builder:flatbuffers.Builder, FriendNickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, FriendNickNameOffset, 0);
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MessageOffset, 0);
}

static endCQ_FriendChatSend(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendChatSend(builder:flatbuffers.Builder, FriendUID:number, FriendNickNameOffset:flatbuffers.Offset, MessageOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_FriendChatSend.startCQ_FriendChatSend(builder);
  CQ_FriendChatSend.add_FriendUID(builder, FriendUID);
  CQ_FriendChatSend.add_FriendNickName(builder, FriendNickNameOffset);
  CQ_FriendChatSend.add_Message(builder, MessageOffset);
  return CQ_FriendChatSend.endCQ_FriendChatSend(builder);
}

unpack(): CQ_FriendChatSendT {
  return new CQ_FriendChatSendT(
    this.FriendUID(),
    this.FriendNickName(),
    this.Message()
  );
}


unpackTo(_o: CQ_FriendChatSendT): void {
  _o.FriendUID = this.FriendUID();
  _o.FriendNickName = this.FriendNickName();
  _o.Message = this.Message();
}
}

export class CQ_FriendChatSendT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0,
  public FriendNickName: string|Uint8Array|null = null,
  public Message: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendNickName = (this.FriendNickName !== null ? builder.createString(this.FriendNickName!) : 0);
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);

  return CQ_FriendChatSend.createCQ_FriendChatSend(builder,
    this.FriendUID,
    FriendNickName,
    Message
  );
}
}

export class SA_FriendChatSend implements flatbuffers.IUnpackableObject<SA_FriendChatSendT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendChatSend {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendChatSend(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatSend):SA_FriendChatSend {
  return (obj || new SA_FriendChatSend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendChatSend(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatSend):SA_FriendChatSend {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendChatSend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Chat(obj?:FriendChatData):FriendChatData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendChatData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendChatSend';
}

static startSA_FriendChatSend(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Chat(builder:flatbuffers.Builder, ChatOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChatOffset, 0);
}

static endSA_FriendChatSend(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendChatSend(builder:flatbuffers.Builder, ChatOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_FriendChatSend.startSA_FriendChatSend(builder);
  SA_FriendChatSend.add_Chat(builder, ChatOffset);
  return SA_FriendChatSend.endSA_FriendChatSend(builder);
}

unpack(): SA_FriendChatSendT {
  return new SA_FriendChatSendT(
    (this.Chat() !== null ? this.Chat()!.unpack() : null)
  );
}


unpackTo(_o: SA_FriendChatSendT): void {
  _o.Chat = (this.Chat() !== null ? this.Chat()!.unpack() : null);
}
}

export class SA_FriendChatSendT implements flatbuffers.IGeneratedObject {
constructor(
  public Chat: FriendChatDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Chat = (this.Chat !== null ? this.Chat!.pack(builder) : 0);

  return SA_FriendChatSend.createSA_FriendChatSend(builder,
    Chat
  );
}
}

export class SN_FriendChatSend implements flatbuffers.IUnpackableObject<SN_FriendChatSendT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_FriendChatSend {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_FriendChatSend(bb:flatbuffers.ByteBuffer, obj?:SN_FriendChatSend):SN_FriendChatSend {
  return (obj || new SN_FriendChatSend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_FriendChatSend(bb:flatbuffers.ByteBuffer, obj?:SN_FriendChatSend):SN_FriendChatSend {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_FriendChatSend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Chat(obj?:SNFriendChatData):SNFriendChatData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SNFriendChatData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_FriendChatSend';
}

static startSN_FriendChatSend(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Chat(builder:flatbuffers.Builder, ChatOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChatOffset, 0);
}

static endSN_FriendChatSend(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_FriendChatSend(builder:flatbuffers.Builder, ChatOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_FriendChatSend.startSN_FriendChatSend(builder);
  SN_FriendChatSend.add_Chat(builder, ChatOffset);
  return SN_FriendChatSend.endSN_FriendChatSend(builder);
}

unpack(): SN_FriendChatSendT {
  return new SN_FriendChatSendT(
    (this.Chat() !== null ? this.Chat()!.unpack() : null)
  );
}


unpackTo(_o: SN_FriendChatSendT): void {
  _o.Chat = (this.Chat() !== null ? this.Chat()!.unpack() : null);
}
}

export class SN_FriendChatSendT implements flatbuffers.IGeneratedObject {
constructor(
  public Chat: SNFriendChatDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Chat = (this.Chat !== null ? this.Chat!.pack(builder) : 0);

  return SN_FriendChatSend.createSN_FriendChatSend(builder,
    Chat
  );
}
}

export class CQ_FriendChatDelete implements flatbuffers.IUnpackableObject<CQ_FriendChatDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendChatDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendChatDelete(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatDelete):CQ_FriendChatDelete {
  return (obj || new CQ_FriendChatDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendChatDelete(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChatDelete):CQ_FriendChatDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendChatDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendChatDelete';
}

static startCQ_FriendChatDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endCQ_FriendChatDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendChatDelete(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  CQ_FriendChatDelete.startCQ_FriendChatDelete(builder);
  CQ_FriendChatDelete.add_FriendUID(builder, FriendUID);
  return CQ_FriendChatDelete.endCQ_FriendChatDelete(builder);
}

unpack(): CQ_FriendChatDeleteT {
  return new CQ_FriendChatDeleteT(
    this.FriendUID()
  );
}


unpackTo(_o: CQ_FriendChatDeleteT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class CQ_FriendChatDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendChatDelete.createCQ_FriendChatDelete(builder,
    this.FriendUID
  );
}
}

export class SA_FriendChatDelete implements flatbuffers.IUnpackableObject<SA_FriendChatDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendChatDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendChatDelete(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatDelete):SA_FriendChatDelete {
  return (obj || new SA_FriendChatDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendChatDelete(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChatDelete):SA_FriendChatDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendChatDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendChatDelete';
}

static startSA_FriendChatDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endSA_FriendChatDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendChatDelete(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  SA_FriendChatDelete.startSA_FriendChatDelete(builder);
  SA_FriendChatDelete.add_FriendUID(builder, FriendUID);
  return SA_FriendChatDelete.endSA_FriendChatDelete(builder);
}

unpack(): SA_FriendChatDeleteT {
  return new SA_FriendChatDeleteT(
    this.FriendUID()
  );
}


unpackTo(_o: SA_FriendChatDeleteT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class SA_FriendChatDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_FriendChatDelete.createSA_FriendChatDelete(builder,
    this.FriendUID
  );
}
}

export class SN_FriendChatDelete implements flatbuffers.IUnpackableObject<SN_FriendChatDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_FriendChatDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_FriendChatDelete(bb:flatbuffers.ByteBuffer, obj?:SN_FriendChatDelete):SN_FriendChatDelete {
  return (obj || new SN_FriendChatDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_FriendChatDelete(bb:flatbuffers.ByteBuffer, obj?:SN_FriendChatDelete):SN_FriendChatDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_FriendChatDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_FriendChatDelete';
}

static startSN_FriendChatDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endSN_FriendChatDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_FriendChatDelete(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  SN_FriendChatDelete.startSN_FriendChatDelete(builder);
  SN_FriendChatDelete.add_FriendUID(builder, FriendUID);
  return SN_FriendChatDelete.endSN_FriendChatDelete(builder);
}

unpack(): SN_FriendChatDeleteT {
  return new SN_FriendChatDeleteT(
    this.FriendUID()
  );
}


unpackTo(_o: SN_FriendChatDeleteT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class SN_FriendChatDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_FriendChatDelete.createSN_FriendChatDelete(builder,
    this.FriendUID
  );
}
}

export class CQ_FriendList implements flatbuffers.IUnpackableObject<CQ_FriendListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendList):CQ_FriendList {
  return (obj || new CQ_FriendList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendList):CQ_FriendList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendList';
}

static startCQ_FriendList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_FriendList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_FriendList.startCQ_FriendList(builder);
  return CQ_FriendList.endCQ_FriendList(builder);
}

unpack(): CQ_FriendListT {
  return new CQ_FriendListT();
}


unpackTo(_o: CQ_FriendListT): void {}
}

export class CQ_FriendListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendList.createCQ_FriendList(builder);
}
}

export class SA_FriendList implements flatbuffers.IUnpackableObject<SA_FriendListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendList):SA_FriendList {
  return (obj || new SA_FriendList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendList):SA_FriendList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendList(index: number, obj?:FriendData):FriendData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

FriendList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendList';
}

static startSA_FriendList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendList(builder:flatbuffers.Builder, FriendListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FriendListOffset, 0);
}

static create_FriendList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_FriendList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_FriendList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendList(builder:flatbuffers.Builder, FriendListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_FriendList.startSA_FriendList(builder);
  SA_FriendList.add_FriendList(builder, FriendListOffset);
  return SA_FriendList.endSA_FriendList(builder);
}

unpack(): SA_FriendListT {
  return new SA_FriendListT(
    this.bb!.createObjList<FriendData, FriendDataT>(this.FriendList.bind(this), this.FriendList_Length())
  );
}


unpackTo(_o: SA_FriendListT): void {
  _o.FriendList = this.bb!.createObjList<FriendData, FriendDataT>(this.FriendList.bind(this), this.FriendList_Length());
}
}

export class SA_FriendListT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendList: (FriendDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendList = SA_FriendList.create_FriendList_Vector(builder, builder.createObjectOffsetList(this.FriendList));

  return SA_FriendList.createSA_FriendList(builder,
    FriendList
  );
}
}

export class CQ_FriendRequestList implements flatbuffers.IUnpackableObject<CQ_FriendRequestListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendRequestList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendRequestList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendRequestList):CQ_FriendRequestList {
  return (obj || new CQ_FriendRequestList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendRequestList(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendRequestList):CQ_FriendRequestList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendRequestList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendRequestList';
}

static startCQ_FriendRequestList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_FriendRequestList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendRequestList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_FriendRequestList.startCQ_FriendRequestList(builder);
  return CQ_FriendRequestList.endCQ_FriendRequestList(builder);
}

unpack(): CQ_FriendRequestListT {
  return new CQ_FriendRequestListT();
}


unpackTo(_o: CQ_FriendRequestListT): void {}
}

export class CQ_FriendRequestListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendRequestList.createCQ_FriendRequestList(builder);
}
}

export class SA_FriendRequestList implements flatbuffers.IUnpackableObject<SA_FriendRequestListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendRequestList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendRequestList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendRequestList):SA_FriendRequestList {
  return (obj || new SA_FriendRequestList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendRequestList(bb:flatbuffers.ByteBuffer, obj?:SA_FriendRequestList):SA_FriendRequestList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendRequestList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendRequestList(index: number, obj?:FriendRequestData):FriendRequestData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendRequestData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

FriendRequestList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendRequestList';
}

static startSA_FriendRequestList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendRequestList(builder:flatbuffers.Builder, FriendRequestListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FriendRequestListOffset, 0);
}

static create_FriendRequestList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_FriendRequestList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_FriendRequestList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendRequestList(builder:flatbuffers.Builder, FriendRequestListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_FriendRequestList.startSA_FriendRequestList(builder);
  SA_FriendRequestList.add_FriendRequestList(builder, FriendRequestListOffset);
  return SA_FriendRequestList.endSA_FriendRequestList(builder);
}

unpack(): SA_FriendRequestListT {
  return new SA_FriendRequestListT(
    this.bb!.createObjList<FriendRequestData, FriendRequestDataT>(this.FriendRequestList.bind(this), this.FriendRequestList_Length())
  );
}


unpackTo(_o: SA_FriendRequestListT): void {
  _o.FriendRequestList = this.bb!.createObjList<FriendRequestData, FriendRequestDataT>(this.FriendRequestList.bind(this), this.FriendRequestList_Length());
}
}

export class SA_FriendRequestListT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendRequestList: (FriendRequestDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendRequestList = SA_FriendRequestList.create_FriendRequestList_Vector(builder, builder.createObjectOffsetList(this.FriendRequestList));

  return SA_FriendRequestList.createSA_FriendRequestList(builder,
    FriendRequestList
  );
}
}

export class CQ_FriendRequest implements flatbuffers.IUnpackableObject<CQ_FriendRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendRequest(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendRequest):CQ_FriendRequest {
  return (obj || new CQ_FriendRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendRequest(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendRequest):CQ_FriendRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendNickName():string|null
FriendNickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
FriendNickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendRequest';
}

static startCQ_FriendRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendNickName(builder:flatbuffers.Builder, FriendNickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FriendNickNameOffset, 0);
}

static endCQ_FriendRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendRequest(builder:flatbuffers.Builder, FriendNickNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_FriendRequest.startCQ_FriendRequest(builder);
  CQ_FriendRequest.add_FriendNickName(builder, FriendNickNameOffset);
  return CQ_FriendRequest.endCQ_FriendRequest(builder);
}

unpack(): CQ_FriendRequestT {
  return new CQ_FriendRequestT(
    this.FriendNickName()
  );
}


unpackTo(_o: CQ_FriendRequestT): void {
  _o.FriendNickName = this.FriendNickName();
}
}

export class CQ_FriendRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendNickName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendNickName = (this.FriendNickName !== null ? builder.createString(this.FriendNickName!) : 0);

  return CQ_FriendRequest.createCQ_FriendRequest(builder,
    FriendNickName
  );
}
}

export class SA_FriendRequest implements flatbuffers.IUnpackableObject<SA_FriendRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendRequest(bb:flatbuffers.ByteBuffer, obj?:SA_FriendRequest):SA_FriendRequest {
  return (obj || new SA_FriendRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendRequest(bb:flatbuffers.ByteBuffer, obj?:SA_FriendRequest):SA_FriendRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendRequest';
}

static startSA_FriendRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_FriendRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_FriendRequest.startSA_FriendRequest(builder);
  return SA_FriendRequest.endSA_FriendRequest(builder);
}

unpack(): SA_FriendRequestT {
  return new SA_FriendRequestT();
}


unpackTo(_o: SA_FriendRequestT): void {}
}

export class SA_FriendRequestT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_FriendRequest.createSA_FriendRequest(builder);
}
}

export class SN_FriendRequest implements flatbuffers.IUnpackableObject<SN_FriendRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_FriendRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_FriendRequest(bb:flatbuffers.ByteBuffer, obj?:SN_FriendRequest):SN_FriendRequest {
  return (obj || new SN_FriendRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_FriendRequest(bb:flatbuffers.ByteBuffer, obj?:SN_FriendRequest):SN_FriendRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_FriendRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendRequest(obj?:FriendRequestData):FriendRequestData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendRequestData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_FriendRequest';
}

static startSN_FriendRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendRequest(builder:flatbuffers.Builder, FriendRequestOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FriendRequestOffset, 0);
}

static endSN_FriendRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_FriendRequest(builder:flatbuffers.Builder, FriendRequestOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_FriendRequest.startSN_FriendRequest(builder);
  SN_FriendRequest.add_FriendRequest(builder, FriendRequestOffset);
  return SN_FriendRequest.endSN_FriendRequest(builder);
}

unpack(): SN_FriendRequestT {
  return new SN_FriendRequestT(
    (this.FriendRequest() !== null ? this.FriendRequest()!.unpack() : null)
  );
}


unpackTo(_o: SN_FriendRequestT): void {
  _o.FriendRequest = (this.FriendRequest() !== null ? this.FriendRequest()!.unpack() : null);
}
}

export class SN_FriendRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendRequest: FriendRequestDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendRequest = (this.FriendRequest !== null ? this.FriendRequest!.pack(builder) : 0);

  return SN_FriendRequest.createSN_FriendRequest(builder,
    FriendRequest
  );
}
}

export class CQ_FriendAccept implements flatbuffers.IUnpackableObject<CQ_FriendAcceptT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendAccept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendAccept(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendAccept):CQ_FriendAccept {
  return (obj || new CQ_FriendAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendAccept(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendAccept):CQ_FriendAccept {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendAccept';
}

static startCQ_FriendAccept(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endCQ_FriendAccept(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendAccept(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  CQ_FriendAccept.startCQ_FriendAccept(builder);
  CQ_FriendAccept.add_FriendUID(builder, FriendUID);
  return CQ_FriendAccept.endCQ_FriendAccept(builder);
}

unpack(): CQ_FriendAcceptT {
  return new CQ_FriendAcceptT(
    this.FriendUID()
  );
}


unpackTo(_o: CQ_FriendAcceptT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class CQ_FriendAcceptT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendAccept.createCQ_FriendAccept(builder,
    this.FriendUID
  );
}
}

export class SA_FriendAccept implements flatbuffers.IUnpackableObject<SA_FriendAcceptT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendAccept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendAccept(bb:flatbuffers.ByteBuffer, obj?:SA_FriendAccept):SA_FriendAccept {
  return (obj || new SA_FriendAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendAccept(bb:flatbuffers.ByteBuffer, obj?:SA_FriendAccept):SA_FriendAccept {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendInfo(obj?:FriendData):FriendData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendAccept';
}

static startSA_FriendAccept(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendInfo(builder:flatbuffers.Builder, FriendInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FriendInfoOffset, 0);
}

static endSA_FriendAccept(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendAccept(builder:flatbuffers.Builder, FriendInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_FriendAccept.startSA_FriendAccept(builder);
  SA_FriendAccept.add_FriendInfo(builder, FriendInfoOffset);
  return SA_FriendAccept.endSA_FriendAccept(builder);
}

unpack(): SA_FriendAcceptT {
  return new SA_FriendAcceptT(
    (this.FriendInfo() !== null ? this.FriendInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_FriendAcceptT): void {
  _o.FriendInfo = (this.FriendInfo() !== null ? this.FriendInfo()!.unpack() : null);
}
}

export class SA_FriendAcceptT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendInfo: FriendDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendInfo = (this.FriendInfo !== null ? this.FriendInfo!.pack(builder) : 0);

  return SA_FriendAccept.createSA_FriendAccept(builder,
    FriendInfo
  );
}
}

export class SN_FriendAccept implements flatbuffers.IUnpackableObject<SN_FriendAcceptT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_FriendAccept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_FriendAccept(bb:flatbuffers.ByteBuffer, obj?:SN_FriendAccept):SN_FriendAccept {
  return (obj || new SN_FriendAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_FriendAccept(bb:flatbuffers.ByteBuffer, obj?:SN_FriendAccept):SN_FriendAccept {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_FriendAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendInfo(obj?:FriendData):FriendData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FriendData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_FriendAccept';
}

static startSN_FriendAccept(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendInfo(builder:flatbuffers.Builder, FriendInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FriendInfoOffset, 0);
}

static endSN_FriendAccept(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_FriendAccept(builder:flatbuffers.Builder, FriendInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_FriendAccept.startSN_FriendAccept(builder);
  SN_FriendAccept.add_FriendInfo(builder, FriendInfoOffset);
  return SN_FriendAccept.endSN_FriendAccept(builder);
}

unpack(): SN_FriendAcceptT {
  return new SN_FriendAcceptT(
    (this.FriendInfo() !== null ? this.FriendInfo()!.unpack() : null)
  );
}


unpackTo(_o: SN_FriendAcceptT): void {
  _o.FriendInfo = (this.FriendInfo() !== null ? this.FriendInfo()!.unpack() : null);
}
}

export class SN_FriendAcceptT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendInfo: FriendDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendInfo = (this.FriendInfo !== null ? this.FriendInfo!.pack(builder) : 0);

  return SN_FriendAccept.createSN_FriendAccept(builder,
    FriendInfo
  );
}
}

export class CQ_FriendReject implements flatbuffers.IUnpackableObject<CQ_FriendRejectT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendReject {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendReject(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendReject):CQ_FriendReject {
  return (obj || new CQ_FriendReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendReject(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendReject):CQ_FriendReject {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendReject';
}

static startCQ_FriendReject(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endCQ_FriendReject(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendReject(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  CQ_FriendReject.startCQ_FriendReject(builder);
  CQ_FriendReject.add_FriendUID(builder, FriendUID);
  return CQ_FriendReject.endCQ_FriendReject(builder);
}

unpack(): CQ_FriendRejectT {
  return new CQ_FriendRejectT(
    this.FriendUID()
  );
}


unpackTo(_o: CQ_FriendRejectT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class CQ_FriendRejectT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendReject.createCQ_FriendReject(builder,
    this.FriendUID
  );
}
}

export class SA_FriendReject implements flatbuffers.IUnpackableObject<SA_FriendRejectT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendReject {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendReject(bb:flatbuffers.ByteBuffer, obj?:SA_FriendReject):SA_FriendReject {
  return (obj || new SA_FriendReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendReject(bb:flatbuffers.ByteBuffer, obj?:SA_FriendReject):SA_FriendReject {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendReject()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendReject';
}

static startSA_FriendReject(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endSA_FriendReject(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendReject(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  SA_FriendReject.startSA_FriendReject(builder);
  SA_FriendReject.add_FriendUID(builder, FriendUID);
  return SA_FriendReject.endSA_FriendReject(builder);
}

unpack(): SA_FriendRejectT {
  return new SA_FriendRejectT(
    this.FriendUID()
  );
}


unpackTo(_o: SA_FriendRejectT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class SA_FriendRejectT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_FriendReject.createSA_FriendReject(builder,
    this.FriendUID
  );
}
}

export class CQ_FriendDelete implements flatbuffers.IUnpackableObject<CQ_FriendDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendDelete(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendDelete):CQ_FriendDelete {
  return (obj || new CQ_FriendDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendDelete(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendDelete):CQ_FriendDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendDelete';
}

static startCQ_FriendDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endCQ_FriendDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendDelete(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  CQ_FriendDelete.startCQ_FriendDelete(builder);
  CQ_FriendDelete.add_FriendUID(builder, FriendUID);
  return CQ_FriendDelete.endCQ_FriendDelete(builder);
}

unpack(): CQ_FriendDeleteT {
  return new CQ_FriendDeleteT(
    this.FriendUID()
  );
}


unpackTo(_o: CQ_FriendDeleteT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class CQ_FriendDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_FriendDelete.createCQ_FriendDelete(builder,
    this.FriendUID
  );
}
}

export class SA_FriendDelete implements flatbuffers.IUnpackableObject<SA_FriendDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendDelete(bb:flatbuffers.ByteBuffer, obj?:SA_FriendDelete):SA_FriendDelete {
  return (obj || new SA_FriendDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendDelete(bb:flatbuffers.ByteBuffer, obj?:SA_FriendDelete):SA_FriendDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendDelete';
}

static startSA_FriendDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endSA_FriendDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendDelete(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  SA_FriendDelete.startSA_FriendDelete(builder);
  SA_FriendDelete.add_FriendUID(builder, FriendUID);
  return SA_FriendDelete.endSA_FriendDelete(builder);
}

unpack(): SA_FriendDeleteT {
  return new SA_FriendDeleteT(
    this.FriendUID()
  );
}


unpackTo(_o: SA_FriendDeleteT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class SA_FriendDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_FriendDelete.createSA_FriendDelete(builder,
    this.FriendUID
  );
}
}

export class SN_FriendDelete implements flatbuffers.IUnpackableObject<SN_FriendDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_FriendDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_FriendDelete(bb:flatbuffers.ByteBuffer, obj?:SN_FriendDelete):SN_FriendDelete {
  return (obj || new SN_FriendDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_FriendDelete(bb:flatbuffers.ByteBuffer, obj?:SN_FriendDelete):SN_FriendDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_FriendDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_FriendDelete';
}

static startSN_FriendDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static endSN_FriendDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_FriendDelete(builder:flatbuffers.Builder, FriendUID:number):flatbuffers.Offset {
  SN_FriendDelete.startSN_FriendDelete(builder);
  SN_FriendDelete.add_FriendUID(builder, FriendUID);
  return SN_FriendDelete.endSN_FriendDelete(builder);
}

unpack(): SN_FriendDeleteT {
  return new SN_FriendDeleteT(
    this.FriendUID()
  );
}


unpackTo(_o: SN_FriendDeleteT): void {
  _o.FriendUID = this.FriendUID();
}
}

export class SN_FriendDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_FriendDelete.createSN_FriendDelete(builder,
    this.FriendUID
  );
}
}

export class SN_FriendState implements flatbuffers.IUnpackableObject<SN_FriendStateT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_FriendState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_FriendState(bb:flatbuffers.ByteBuffer, obj?:SN_FriendState):SN_FriendState {
  return (obj || new SN_FriendState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_FriendState(bb:flatbuffers.ByteBuffer, obj?:SN_FriendState):SN_FriendState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_FriendState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

UserState():EUserState {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EUserState.None;
}

IsActive():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

LogoutAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_FriendState';
}

static startSN_FriendState(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_UserState(builder:flatbuffers.Builder, UserState:EUserState) {
  builder.addFieldInt8(1, UserState, EUserState.None);
}

static add_IsActive(builder:flatbuffers.Builder, IsActive:boolean) {
  builder.addFieldInt8(2, +IsActive, +false);
}

static add_LogoutAt(builder:flatbuffers.Builder, LogoutAt:number) {
  builder.addFieldInt32(3, LogoutAt, 0);
}

static endSN_FriendState(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_FriendState(builder:flatbuffers.Builder, UID:number, UserState:EUserState, IsActive:boolean, LogoutAt:number):flatbuffers.Offset {
  SN_FriendState.startSN_FriendState(builder);
  SN_FriendState.add_UID(builder, UID);
  SN_FriendState.add_UserState(builder, UserState);
  SN_FriendState.add_IsActive(builder, IsActive);
  SN_FriendState.add_LogoutAt(builder, LogoutAt);
  return SN_FriendState.endSN_FriendState(builder);
}

unpack(): SN_FriendStateT {
  return new SN_FriendStateT(
    this.UID(),
    this.UserState(),
    this.IsActive(),
    this.LogoutAt()
  );
}


unpackTo(_o: SN_FriendStateT): void {
  _o.UID = this.UID();
  _o.UserState = this.UserState();
  _o.IsActive = this.IsActive();
  _o.LogoutAt = this.LogoutAt();
}
}

export class SN_FriendStateT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public UserState: EUserState = EUserState.None,
  public IsActive: boolean = false,
  public LogoutAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_FriendState.createSN_FriendState(builder,
    this.UID,
    this.UserState,
    this.IsActive,
    this.LogoutAt
  );
}
}

export class CQ_ProfileList implements flatbuffers.IUnpackableObject<CQ_ProfileListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ProfileList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ProfileList(bb:flatbuffers.ByteBuffer, obj?:CQ_ProfileList):CQ_ProfileList {
  return (obj || new CQ_ProfileList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ProfileList(bb:flatbuffers.ByteBuffer, obj?:CQ_ProfileList):CQ_ProfileList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ProfileList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ProfileList';
}

static startCQ_ProfileList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ProfileList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ProfileList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ProfileList.startCQ_ProfileList(builder);
  return CQ_ProfileList.endCQ_ProfileList(builder);
}

unpack(): CQ_ProfileListT {
  return new CQ_ProfileListT();
}


unpackTo(_o: CQ_ProfileListT): void {}
}

export class CQ_ProfileListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ProfileList.createCQ_ProfileList(builder);
}
}

export class SA_ProfileList implements flatbuffers.IUnpackableObject<SA_ProfileListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ProfileList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ProfileList(bb:flatbuffers.ByteBuffer, obj?:SA_ProfileList):SA_ProfileList {
  return (obj || new SA_ProfileList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ProfileList(bb:flatbuffers.ByteBuffer, obj?:SA_ProfileList):SA_ProfileList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ProfileList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ProfileList(index: number, obj?:ProfileData):ProfileData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ProfileData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ProfileList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ProfileList';
}

static startSA_ProfileList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ProfileList(builder:flatbuffers.Builder, ProfileListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ProfileListOffset, 0);
}

static start_ProfileList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_ProfileList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ProfileList(builder:flatbuffers.Builder, ProfileListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ProfileList.startSA_ProfileList(builder);
  SA_ProfileList.add_ProfileList(builder, ProfileListOffset);
  return SA_ProfileList.endSA_ProfileList(builder);
}

unpack(): SA_ProfileListT {
  return new SA_ProfileListT(
    this.bb!.createObjList<ProfileData, ProfileDataT>(this.ProfileList.bind(this), this.ProfileList_Length())
  );
}


unpackTo(_o: SA_ProfileListT): void {
  _o.ProfileList = this.bb!.createObjList<ProfileData, ProfileDataT>(this.ProfileList.bind(this), this.ProfileList_Length());
}
}

export class SA_ProfileListT implements flatbuffers.IGeneratedObject {
constructor(
  public ProfileList: (ProfileDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ProfileList = builder.createStructOffsetList(this.ProfileList, SA_ProfileList.start_ProfileList_Vector);

  return SA_ProfileList.createSA_ProfileList(builder,
    ProfileList
  );
}
}

export class CQ_ProfileChange implements flatbuffers.IUnpackableObject<CQ_ProfileChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ProfileChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ProfileChange(bb:flatbuffers.ByteBuffer, obj?:CQ_ProfileChange):CQ_ProfileChange {
  return (obj || new CQ_ProfileChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ProfileChange(bb:flatbuffers.ByteBuffer, obj?:CQ_ProfileChange):CQ_ProfileChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ProfileChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ProfileChange';
}

static startCQ_ProfileChange(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(0, EntitlementID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(1, ProfileBGID, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(2, ProfileIconID, 0);
}

static endCQ_ProfileChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ProfileChange(builder:flatbuffers.Builder, EntitlementID:number, ProfileBGID:number, ProfileIconID:number):flatbuffers.Offset {
  CQ_ProfileChange.startCQ_ProfileChange(builder);
  CQ_ProfileChange.add_EntitlementID(builder, EntitlementID);
  CQ_ProfileChange.add_ProfileBGID(builder, ProfileBGID);
  CQ_ProfileChange.add_ProfileIconID(builder, ProfileIconID);
  return CQ_ProfileChange.endCQ_ProfileChange(builder);
}

unpack(): CQ_ProfileChangeT {
  return new CQ_ProfileChangeT(
    this.EntitlementID(),
    this.ProfileBGID(),
    this.ProfileIconID()
  );
}


unpackTo(_o: CQ_ProfileChangeT): void {
  _o.EntitlementID = this.EntitlementID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.ProfileIconID = this.ProfileIconID();
}
}

export class CQ_ProfileChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public EntitlementID: number = 0,
  public ProfileBGID: number = 0,
  public ProfileIconID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ProfileChange.createCQ_ProfileChange(builder,
    this.EntitlementID,
    this.ProfileBGID,
    this.ProfileIconID
  );
}
}

export class SA_ProfileChange implements flatbuffers.IUnpackableObject<SA_ProfileChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ProfileChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ProfileChange(bb:flatbuffers.ByteBuffer, obj?:SA_ProfileChange):SA_ProfileChange {
  return (obj || new SA_ProfileChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ProfileChange(bb:flatbuffers.ByteBuffer, obj?:SA_ProfileChange):SA_ProfileChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ProfileChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ProfileChange';
}

static startSA_ProfileChange(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(0, EntitlementID, 0);
}

static add_ProfileBGID(builder:flatbuffers.Builder, ProfileBGID:number) {
  builder.addFieldInt32(1, ProfileBGID, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(2, ProfileIconID, 0);
}

static endSA_ProfileChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ProfileChange(builder:flatbuffers.Builder, EntitlementID:number, ProfileBGID:number, ProfileIconID:number):flatbuffers.Offset {
  SA_ProfileChange.startSA_ProfileChange(builder);
  SA_ProfileChange.add_EntitlementID(builder, EntitlementID);
  SA_ProfileChange.add_ProfileBGID(builder, ProfileBGID);
  SA_ProfileChange.add_ProfileIconID(builder, ProfileIconID);
  return SA_ProfileChange.endSA_ProfileChange(builder);
}

unpack(): SA_ProfileChangeT {
  return new SA_ProfileChangeT(
    this.EntitlementID(),
    this.ProfileBGID(),
    this.ProfileIconID()
  );
}


unpackTo(_o: SA_ProfileChangeT): void {
  _o.EntitlementID = this.EntitlementID();
  _o.ProfileBGID = this.ProfileBGID();
  _o.ProfileIconID = this.ProfileIconID();
}
}

export class SA_ProfileChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public EntitlementID: number = 0,
  public ProfileBGID: number = 0,
  public ProfileIconID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_ProfileChange.createSA_ProfileChange(builder,
    this.EntitlementID,
    this.ProfileBGID,
    this.ProfileIconID
  );
}
}

export class CQ_UserDeviceProviderChange implements flatbuffers.IUnpackableObject<CQ_UserDeviceProviderChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_UserDeviceProviderChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_UserDeviceProviderChange(bb:flatbuffers.ByteBuffer, obj?:CQ_UserDeviceProviderChange):CQ_UserDeviceProviderChange {
  return (obj || new CQ_UserDeviceProviderChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_UserDeviceProviderChange(bb:flatbuffers.ByteBuffer, obj?:CQ_UserDeviceProviderChange):CQ_UserDeviceProviderChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_UserDeviceProviderChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ProviderList(index: number):EProvider|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
}

ProviderList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ProviderList_Array():Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_UserDeviceProviderChange';
}

static startCQ_UserDeviceProviderChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ProviderList(builder:flatbuffers.Builder, ProviderListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ProviderListOffset, 0);
}

static create_ProviderList_Vector(builder:flatbuffers.Builder, data:EProvider[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]!);
  }
  return builder.endVector();
}

static start_ProviderList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static endCQ_UserDeviceProviderChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_UserDeviceProviderChange(builder:flatbuffers.Builder, ProviderListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_UserDeviceProviderChange.startCQ_UserDeviceProviderChange(builder);
  CQ_UserDeviceProviderChange.add_ProviderList(builder, ProviderListOffset);
  return CQ_UserDeviceProviderChange.endCQ_UserDeviceProviderChange(builder);
}

unpack(): CQ_UserDeviceProviderChangeT {
  return new CQ_UserDeviceProviderChangeT(
    this.bb!.createScalarList<EProvider>(this.ProviderList.bind(this), this.ProviderList_Length())
  );
}


unpackTo(_o: CQ_UserDeviceProviderChangeT): void {
  _o.ProviderList = this.bb!.createScalarList<EProvider>(this.ProviderList.bind(this), this.ProviderList_Length());
}
}

export class CQ_UserDeviceProviderChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public ProviderList: (EProvider)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ProviderList = CQ_UserDeviceProviderChange.create_ProviderList_Vector(builder, this.ProviderList);

  return CQ_UserDeviceProviderChange.createCQ_UserDeviceProviderChange(builder,
    ProviderList
  );
}
}

export class SA_UserDeviceProviderChange implements flatbuffers.IUnpackableObject<SA_UserDeviceProviderChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_UserDeviceProviderChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_UserDeviceProviderChange(bb:flatbuffers.ByteBuffer, obj?:SA_UserDeviceProviderChange):SA_UserDeviceProviderChange {
  return (obj || new SA_UserDeviceProviderChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_UserDeviceProviderChange(bb:flatbuffers.ByteBuffer, obj?:SA_UserDeviceProviderChange):SA_UserDeviceProviderChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_UserDeviceProviderChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_UserDeviceProviderChange';
}

static startSA_UserDeviceProviderChange(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_UserDeviceProviderChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_UserDeviceProviderChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_UserDeviceProviderChange.startSA_UserDeviceProviderChange(builder);
  return SA_UserDeviceProviderChange.endSA_UserDeviceProviderChange(builder);
}

unpack(): SA_UserDeviceProviderChangeT {
  return new SA_UserDeviceProviderChangeT();
}


unpackTo(_o: SA_UserDeviceProviderChangeT): void {}
}

export class SA_UserDeviceProviderChangeT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_UserDeviceProviderChange.createSA_UserDeviceProviderChange(builder);
}
}

export class CQ_AchievementList implements flatbuffers.IUnpackableObject<CQ_AchievementListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_AchievementList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_AchievementList(bb:flatbuffers.ByteBuffer, obj?:CQ_AchievementList):CQ_AchievementList {
  return (obj || new CQ_AchievementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_AchievementList(bb:flatbuffers.ByteBuffer, obj?:CQ_AchievementList):CQ_AchievementList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_AchievementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_AchievementList';
}

static startCQ_AchievementList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_AchievementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_AchievementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_AchievementList.startCQ_AchievementList(builder);
  return CQ_AchievementList.endCQ_AchievementList(builder);
}

unpack(): CQ_AchievementListT {
  return new CQ_AchievementListT();
}


unpackTo(_o: CQ_AchievementListT): void {}
}

export class CQ_AchievementListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_AchievementList.createCQ_AchievementList(builder);
}
}

export class SA_AchievementList implements flatbuffers.IUnpackableObject<SA_AchievementListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_AchievementList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_AchievementList(bb:flatbuffers.ByteBuffer, obj?:SA_AchievementList):SA_AchievementList {
  return (obj || new SA_AchievementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_AchievementList(bb:flatbuffers.ByteBuffer, obj?:SA_AchievementList):SA_AchievementList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_AchievementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AchievementList(index: number, obj?:AchievementData):AchievementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AchievementData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

AchievementList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_AchievementList';
}

static startSA_AchievementList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AchievementList(builder:flatbuffers.Builder, AchievementListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AchievementListOffset, 0);
}

static start_AchievementList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_AchievementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_AchievementList(builder:flatbuffers.Builder, AchievementListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_AchievementList.startSA_AchievementList(builder);
  SA_AchievementList.add_AchievementList(builder, AchievementListOffset);
  return SA_AchievementList.endSA_AchievementList(builder);
}

unpack(): SA_AchievementListT {
  return new SA_AchievementListT(
    this.bb!.createObjList<AchievementData, AchievementDataT>(this.AchievementList.bind(this), this.AchievementList_Length())
  );
}


unpackTo(_o: SA_AchievementListT): void {
  _o.AchievementList = this.bb!.createObjList<AchievementData, AchievementDataT>(this.AchievementList.bind(this), this.AchievementList_Length());
}
}

export class SA_AchievementListT implements flatbuffers.IGeneratedObject {
constructor(
  public AchievementList: (AchievementDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AchievementList = builder.createStructOffsetList(this.AchievementList, SA_AchievementList.start_AchievementList_Vector);

  return SA_AchievementList.createSA_AchievementList(builder,
    AchievementList
  );
}
}

export class SN_AchievementList implements flatbuffers.IUnpackableObject<SN_AchievementListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_AchievementList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_AchievementList(bb:flatbuffers.ByteBuffer, obj?:SN_AchievementList):SN_AchievementList {
  return (obj || new SN_AchievementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_AchievementList(bb:flatbuffers.ByteBuffer, obj?:SN_AchievementList):SN_AchievementList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_AchievementList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AchievementList(index: number, obj?:AchievementData):AchievementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AchievementData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

AchievementList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_AchievementList';
}

static startSN_AchievementList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AchievementList(builder:flatbuffers.Builder, AchievementListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, AchievementListOffset, 0);
}

static start_AchievementList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSN_AchievementList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_AchievementList(builder:flatbuffers.Builder, AchievementListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_AchievementList.startSN_AchievementList(builder);
  SN_AchievementList.add_AchievementList(builder, AchievementListOffset);
  return SN_AchievementList.endSN_AchievementList(builder);
}

unpack(): SN_AchievementListT {
  return new SN_AchievementListT(
    this.bb!.createObjList<AchievementData, AchievementDataT>(this.AchievementList.bind(this), this.AchievementList_Length())
  );
}


unpackTo(_o: SN_AchievementListT): void {
  _o.AchievementList = this.bb!.createObjList<AchievementData, AchievementDataT>(this.AchievementList.bind(this), this.AchievementList_Length());
}
}

export class SN_AchievementListT implements flatbuffers.IGeneratedObject {
constructor(
  public AchievementList: (AchievementDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AchievementList = builder.createStructOffsetList(this.AchievementList, SN_AchievementList.start_AchievementList_Vector);

  return SN_AchievementList.createSN_AchievementList(builder,
    AchievementList
  );
}
}

export class CQ_AchievementReward implements flatbuffers.IUnpackableObject<CQ_AchievementRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_AchievementReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_AchievementReward(bb:flatbuffers.ByteBuffer, obj?:CQ_AchievementReward):CQ_AchievementReward {
  return (obj || new CQ_AchievementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_AchievementReward(bb:flatbuffers.ByteBuffer, obj?:CQ_AchievementReward):CQ_AchievementReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_AchievementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AchievementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_AchievementReward';
}

static startCQ_AchievementReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_AchievementID(builder:flatbuffers.Builder, AchievementID:number) {
  builder.addFieldInt32(0, AchievementID, 0);
}

static endCQ_AchievementReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_AchievementReward(builder:flatbuffers.Builder, AchievementID:number):flatbuffers.Offset {
  CQ_AchievementReward.startCQ_AchievementReward(builder);
  CQ_AchievementReward.add_AchievementID(builder, AchievementID);
  return CQ_AchievementReward.endCQ_AchievementReward(builder);
}

unpack(): CQ_AchievementRewardT {
  return new CQ_AchievementRewardT(
    this.AchievementID()
  );
}


unpackTo(_o: CQ_AchievementRewardT): void {
  _o.AchievementID = this.AchievementID();
}
}

export class CQ_AchievementRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public AchievementID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_AchievementReward.createCQ_AchievementReward(builder,
    this.AchievementID
  );
}
}

export class SA_AchievementReward implements flatbuffers.IUnpackableObject<SA_AchievementRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_AchievementReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_AchievementReward(bb:flatbuffers.ByteBuffer, obj?:SA_AchievementReward):SA_AchievementReward {
  return (obj || new SA_AchievementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_AchievementReward(bb:flatbuffers.ByteBuffer, obj?:SA_AchievementReward):SA_AchievementReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_AchievementReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Achievement(obj?:AchievementData):AchievementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AchievementData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_AchievementReward';
}

static startSA_AchievementReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Achievement(builder:flatbuffers.Builder, AchievementOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, AchievementOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_AchievementReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_AchievementReward(builder:flatbuffers.Builder, AchievementOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_AchievementReward.startSA_AchievementReward(builder);
  SA_AchievementReward.add_Achievement(builder, AchievementOffset);
  SA_AchievementReward.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_AchievementReward.endSA_AchievementReward(builder);
}

unpack(): SA_AchievementRewardT {
  return new SA_AchievementRewardT(
    (this.Achievement() !== null ? this.Achievement()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_AchievementRewardT): void {
  _o.Achievement = (this.Achievement() !== null ? this.Achievement()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_AchievementRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public Achievement: AchievementDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_AchievementReward.start_ChangeAssetList_Vector);

  return SA_AchievementReward.createSA_AchievementReward(builder,
    (this.Achievement !== null ? this.Achievement!.pack(builder) : 0),
    ChangeAssetList
  );
}
}

export class CQ_WeaponCategoryList implements flatbuffers.IUnpackableObject<CQ_WeaponCategoryListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WeaponCategoryList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WeaponCategoryList(bb:flatbuffers.ByteBuffer, obj?:CQ_WeaponCategoryList):CQ_WeaponCategoryList {
  return (obj || new CQ_WeaponCategoryList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WeaponCategoryList(bb:flatbuffers.ByteBuffer, obj?:CQ_WeaponCategoryList):CQ_WeaponCategoryList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WeaponCategoryList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WeaponCategoryList';
}

static startCQ_WeaponCategoryList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_WeaponCategoryList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WeaponCategoryList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_WeaponCategoryList.startCQ_WeaponCategoryList(builder);
  return CQ_WeaponCategoryList.endCQ_WeaponCategoryList(builder);
}

unpack(): CQ_WeaponCategoryListT {
  return new CQ_WeaponCategoryListT();
}


unpackTo(_o: CQ_WeaponCategoryListT): void {}
}

export class CQ_WeaponCategoryListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_WeaponCategoryList.createCQ_WeaponCategoryList(builder);
}
}

export class SA_WeaponCategoryList implements flatbuffers.IUnpackableObject<SA_WeaponCategoryListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WeaponCategoryList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WeaponCategoryList(bb:flatbuffers.ByteBuffer, obj?:SA_WeaponCategoryList):SA_WeaponCategoryList {
  return (obj || new SA_WeaponCategoryList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WeaponCategoryList(bb:flatbuffers.ByteBuffer, obj?:SA_WeaponCategoryList):SA_WeaponCategoryList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WeaponCategoryList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

WeaponCategoryList(index: number, obj?:WeaponCategoryData):WeaponCategoryData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new WeaponCategoryData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

WeaponCategoryList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WeaponCategoryList';
}

static startSA_WeaponCategoryList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_WeaponCategoryList(builder:flatbuffers.Builder, WeaponCategoryListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, WeaponCategoryListOffset, 0);
}

static start_WeaponCategoryList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_WeaponCategoryList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_WeaponCategoryList(builder:flatbuffers.Builder, WeaponCategoryListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_WeaponCategoryList.startSA_WeaponCategoryList(builder);
  SA_WeaponCategoryList.add_WeaponCategoryList(builder, WeaponCategoryListOffset);
  return SA_WeaponCategoryList.endSA_WeaponCategoryList(builder);
}

unpack(): SA_WeaponCategoryListT {
  return new SA_WeaponCategoryListT(
    this.bb!.createObjList<WeaponCategoryData, WeaponCategoryDataT>(this.WeaponCategoryList.bind(this), this.WeaponCategoryList_Length())
  );
}


unpackTo(_o: SA_WeaponCategoryListT): void {
  _o.WeaponCategoryList = this.bb!.createObjList<WeaponCategoryData, WeaponCategoryDataT>(this.WeaponCategoryList.bind(this), this.WeaponCategoryList_Length());
}
}

export class SA_WeaponCategoryListT implements flatbuffers.IGeneratedObject {
constructor(
  public WeaponCategoryList: (WeaponCategoryDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const WeaponCategoryList = builder.createStructOffsetList(this.WeaponCategoryList, SA_WeaponCategoryList.start_WeaponCategoryList_Vector);

  return SA_WeaponCategoryList.createSA_WeaponCategoryList(builder,
    WeaponCategoryList
  );
}
}

export class CQ_WeaponCategoryUpgrade implements flatbuffers.IUnpackableObject<CQ_WeaponCategoryUpgradeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WeaponCategoryUpgrade {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WeaponCategoryUpgrade(bb:flatbuffers.ByteBuffer, obj?:CQ_WeaponCategoryUpgrade):CQ_WeaponCategoryUpgrade {
  return (obj || new CQ_WeaponCategoryUpgrade()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WeaponCategoryUpgrade(bb:flatbuffers.ByteBuffer, obj?:CQ_WeaponCategoryUpgrade):CQ_WeaponCategoryUpgrade {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WeaponCategoryUpgrade()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

WeaponCategoryID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

UseItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

UseItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WeaponCategoryUpgrade';
}

static startCQ_WeaponCategoryUpgrade(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_WeaponCategoryID(builder:flatbuffers.Builder, WeaponCategoryID:number) {
  builder.addFieldInt32(0, WeaponCategoryID, 0);
}

static add_UseItemList(builder:flatbuffers.Builder, UseItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, UseItemListOffset, 0);
}

static start_UseItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endCQ_WeaponCategoryUpgrade(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WeaponCategoryUpgrade(builder:flatbuffers.Builder, WeaponCategoryID:number, UseItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_WeaponCategoryUpgrade.startCQ_WeaponCategoryUpgrade(builder);
  CQ_WeaponCategoryUpgrade.add_WeaponCategoryID(builder, WeaponCategoryID);
  CQ_WeaponCategoryUpgrade.add_UseItemList(builder, UseItemListOffset);
  return CQ_WeaponCategoryUpgrade.endCQ_WeaponCategoryUpgrade(builder);
}

unpack(): CQ_WeaponCategoryUpgradeT {
  return new CQ_WeaponCategoryUpgradeT(
    this.WeaponCategoryID(),
    this.bb!.createObjList<ItemData, ItemDataT>(this.UseItemList.bind(this), this.UseItemList_Length())
  );
}


unpackTo(_o: CQ_WeaponCategoryUpgradeT): void {
  _o.WeaponCategoryID = this.WeaponCategoryID();
  _o.UseItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.UseItemList.bind(this), this.UseItemList_Length());
}
}

export class CQ_WeaponCategoryUpgradeT implements flatbuffers.IGeneratedObject {
constructor(
  public WeaponCategoryID: number = 0,
  public UseItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const UseItemList = builder.createStructOffsetList(this.UseItemList, CQ_WeaponCategoryUpgrade.start_UseItemList_Vector);

  return CQ_WeaponCategoryUpgrade.createCQ_WeaponCategoryUpgrade(builder,
    this.WeaponCategoryID,
    UseItemList
  );
}
}

export class SA_WeaponCategoryUpgrade implements flatbuffers.IUnpackableObject<SA_WeaponCategoryUpgradeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WeaponCategoryUpgrade {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WeaponCategoryUpgrade(bb:flatbuffers.ByteBuffer, obj?:SA_WeaponCategoryUpgrade):SA_WeaponCategoryUpgrade {
  return (obj || new SA_WeaponCategoryUpgrade()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WeaponCategoryUpgrade(bb:flatbuffers.ByteBuffer, obj?:SA_WeaponCategoryUpgrade):SA_WeaponCategoryUpgrade {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WeaponCategoryUpgrade()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

WeaponCategory(obj?:WeaponCategoryData):WeaponCategoryData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new WeaponCategoryData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WeaponCategoryUpgrade';
}

static startSA_WeaponCategoryUpgrade(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_WeaponCategory(builder:flatbuffers.Builder, WeaponCategoryOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, WeaponCategoryOffset, 0);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_WeaponCategoryUpgrade(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_WeaponCategoryUpgrade(builder:flatbuffers.Builder, WeaponCategoryOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_WeaponCategoryUpgrade.startSA_WeaponCategoryUpgrade(builder);
  SA_WeaponCategoryUpgrade.add_WeaponCategory(builder, WeaponCategoryOffset);
  SA_WeaponCategoryUpgrade.add_ChangeItemList(builder, ChangeItemListOffset);
  SA_WeaponCategoryUpgrade.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_WeaponCategoryUpgrade.endSA_WeaponCategoryUpgrade(builder);
}

unpack(): SA_WeaponCategoryUpgradeT {
  return new SA_WeaponCategoryUpgradeT(
    (this.WeaponCategory() !== null ? this.WeaponCategory()!.unpack() : null),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length()),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_WeaponCategoryUpgradeT): void {
  _o.WeaponCategory = (this.WeaponCategory() !== null ? this.WeaponCategory()!.unpack() : null);
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_WeaponCategoryUpgradeT implements flatbuffers.IGeneratedObject {
constructor(
  public WeaponCategory: WeaponCategoryDataT|null = null,
  public ChangeItemList: (ItemDataT)[] = [],
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_WeaponCategoryUpgrade.start_ChangeItemList_Vector);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_WeaponCategoryUpgrade.start_ChangeAssetList_Vector);

  return SA_WeaponCategoryUpgrade.createSA_WeaponCategoryUpgrade(builder,
    (this.WeaponCategory !== null ? this.WeaponCategory!.pack(builder) : 0),
    ChangeItemList,
    ChangeAssetList
  );
}
}

export class NoticeBannerData implements flatbuffers.IUnpackableObject<NoticeBannerDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NoticeBannerData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNoticeBannerData(bb:flatbuffers.ByteBuffer, obj?:NoticeBannerData):NoticeBannerData {
  return (obj || new NoticeBannerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNoticeBannerData(bb:flatbuffers.ByteBuffer, obj?:NoticeBannerData):NoticeBannerData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NoticeBannerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BannerID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

StartAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EndAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Title():string|null
Title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.NoticeBannerData';
}

static startNoticeBannerData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_BannerID(builder:flatbuffers.Builder, BannerID:number) {
  builder.addFieldInt32(0, BannerID, 0);
}

static add_StartAt(builder:flatbuffers.Builder, StartAt:number) {
  builder.addFieldInt32(1, StartAt, 0);
}

static add_EndAt(builder:flatbuffers.Builder, EndAt:number) {
  builder.addFieldInt32(2, EndAt, 0);
}

static add_Title(builder:flatbuffers.Builder, TitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, TitleOffset, 0);
}

static endNoticeBannerData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createNoticeBannerData(builder:flatbuffers.Builder, BannerID:number, StartAt:number, EndAt:number, TitleOffset:flatbuffers.Offset):flatbuffers.Offset {
  NoticeBannerData.startNoticeBannerData(builder);
  NoticeBannerData.add_BannerID(builder, BannerID);
  NoticeBannerData.add_StartAt(builder, StartAt);
  NoticeBannerData.add_EndAt(builder, EndAt);
  NoticeBannerData.add_Title(builder, TitleOffset);
  return NoticeBannerData.endNoticeBannerData(builder);
}

unpack(): NoticeBannerDataT {
  return new NoticeBannerDataT(
    this.BannerID(),
    this.StartAt(),
    this.EndAt(),
    this.Title()
  );
}


unpackTo(_o: NoticeBannerDataT): void {
  _o.BannerID = this.BannerID();
  _o.StartAt = this.StartAt();
  _o.EndAt = this.EndAt();
  _o.Title = this.Title();
}
}

export class NoticeBannerDataT implements flatbuffers.IGeneratedObject {
constructor(
  public BannerID: number = 0,
  public StartAt: number = 0,
  public EndAt: number = 0,
  public Title: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Title = (this.Title !== null ? builder.createString(this.Title!) : 0);

  return NoticeBannerData.createNoticeBannerData(builder,
    this.BannerID,
    this.StartAt,
    this.EndAt,
    Title
  );
}
}

export class CQ_NoticeBannerList implements flatbuffers.IUnpackableObject<CQ_NoticeBannerListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_NoticeBannerList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_NoticeBannerList(bb:flatbuffers.ByteBuffer, obj?:CQ_NoticeBannerList):CQ_NoticeBannerList {
  return (obj || new CQ_NoticeBannerList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_NoticeBannerList(bb:flatbuffers.ByteBuffer, obj?:CQ_NoticeBannerList):CQ_NoticeBannerList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_NoticeBannerList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_NoticeBannerList';
}

static startCQ_NoticeBannerList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_NoticeBannerList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_NoticeBannerList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_NoticeBannerList.startCQ_NoticeBannerList(builder);
  return CQ_NoticeBannerList.endCQ_NoticeBannerList(builder);
}

unpack(): CQ_NoticeBannerListT {
  return new CQ_NoticeBannerListT();
}


unpackTo(_o: CQ_NoticeBannerListT): void {}
}

export class CQ_NoticeBannerListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_NoticeBannerList.createCQ_NoticeBannerList(builder);
}
}

export class SA_NoticeBannerList implements flatbuffers.IUnpackableObject<SA_NoticeBannerListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_NoticeBannerList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_NoticeBannerList(bb:flatbuffers.ByteBuffer, obj?:SA_NoticeBannerList):SA_NoticeBannerList {
  return (obj || new SA_NoticeBannerList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_NoticeBannerList(bb:flatbuffers.ByteBuffer, obj?:SA_NoticeBannerList):SA_NoticeBannerList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_NoticeBannerList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BannerList(index: number, obj?:NoticeBannerData):NoticeBannerData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NoticeBannerData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

BannerList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_NoticeBannerList';
}

static startSA_NoticeBannerList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_BannerList(builder:flatbuffers.Builder, BannerListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, BannerListOffset, 0);
}

static create_BannerList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_BannerList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_NoticeBannerList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_NoticeBannerList(builder:flatbuffers.Builder, BannerListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_NoticeBannerList.startSA_NoticeBannerList(builder);
  SA_NoticeBannerList.add_BannerList(builder, BannerListOffset);
  return SA_NoticeBannerList.endSA_NoticeBannerList(builder);
}

unpack(): SA_NoticeBannerListT {
  return new SA_NoticeBannerListT(
    this.bb!.createObjList<NoticeBannerData, NoticeBannerDataT>(this.BannerList.bind(this), this.BannerList_Length())
  );
}


unpackTo(_o: SA_NoticeBannerListT): void {
  _o.BannerList = this.bb!.createObjList<NoticeBannerData, NoticeBannerDataT>(this.BannerList.bind(this), this.BannerList_Length());
}
}

export class SA_NoticeBannerListT implements flatbuffers.IGeneratedObject {
constructor(
  public BannerList: (NoticeBannerDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const BannerList = SA_NoticeBannerList.create_BannerList_Vector(builder, builder.createObjectOffsetList(this.BannerList));

  return SA_NoticeBannerList.createSA_NoticeBannerList(builder,
    BannerList
  );
}
}

export class CQ_NoticeBannerMessage implements flatbuffers.IUnpackableObject<CQ_NoticeBannerMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_NoticeBannerMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_NoticeBannerMessage(bb:flatbuffers.ByteBuffer, obj?:CQ_NoticeBannerMessage):CQ_NoticeBannerMessage {
  return (obj || new CQ_NoticeBannerMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_NoticeBannerMessage(bb:flatbuffers.ByteBuffer, obj?:CQ_NoticeBannerMessage):CQ_NoticeBannerMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_NoticeBannerMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BannerID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_NoticeBannerMessage';
}

static startCQ_NoticeBannerMessage(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_BannerID(builder:flatbuffers.Builder, BannerID:number) {
  builder.addFieldInt32(0, BannerID, 0);
}

static endCQ_NoticeBannerMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_NoticeBannerMessage(builder:flatbuffers.Builder, BannerID:number):flatbuffers.Offset {
  CQ_NoticeBannerMessage.startCQ_NoticeBannerMessage(builder);
  CQ_NoticeBannerMessage.add_BannerID(builder, BannerID);
  return CQ_NoticeBannerMessage.endCQ_NoticeBannerMessage(builder);
}

unpack(): CQ_NoticeBannerMessageT {
  return new CQ_NoticeBannerMessageT(
    this.BannerID()
  );
}


unpackTo(_o: CQ_NoticeBannerMessageT): void {
  _o.BannerID = this.BannerID();
}
}

export class CQ_NoticeBannerMessageT implements flatbuffers.IGeneratedObject {
constructor(
  public BannerID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_NoticeBannerMessage.createCQ_NoticeBannerMessage(builder,
    this.BannerID
  );
}
}

export class SA_NoticeBannerMessage implements flatbuffers.IUnpackableObject<SA_NoticeBannerMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_NoticeBannerMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_NoticeBannerMessage(bb:flatbuffers.ByteBuffer, obj?:SA_NoticeBannerMessage):SA_NoticeBannerMessage {
  return (obj || new SA_NoticeBannerMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_NoticeBannerMessage(bb:flatbuffers.ByteBuffer, obj?:SA_NoticeBannerMessage):SA_NoticeBannerMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_NoticeBannerMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

BannerID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

StartAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EndAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ImageURL():string|null
ImageURL(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ImageURL(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Title():string|null
Title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_NoticeBannerMessage';
}

static startSA_NoticeBannerMessage(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_BannerID(builder:flatbuffers.Builder, BannerID:number) {
  builder.addFieldInt32(0, BannerID, 0);
}

static add_StartAt(builder:flatbuffers.Builder, StartAt:number) {
  builder.addFieldInt32(1, StartAt, 0);
}

static add_EndAt(builder:flatbuffers.Builder, EndAt:number) {
  builder.addFieldInt32(2, EndAt, 0);
}

static add_ImageURL(builder:flatbuffers.Builder, ImageURLOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ImageURLOffset, 0);
}

static add_Title(builder:flatbuffers.Builder, TitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, TitleOffset, 0);
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, MessageOffset, 0);
}

static endSA_NoticeBannerMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_NoticeBannerMessage(builder:flatbuffers.Builder, BannerID:number, StartAt:number, EndAt:number, ImageURLOffset:flatbuffers.Offset, TitleOffset:flatbuffers.Offset, MessageOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_NoticeBannerMessage.startSA_NoticeBannerMessage(builder);
  SA_NoticeBannerMessage.add_BannerID(builder, BannerID);
  SA_NoticeBannerMessage.add_StartAt(builder, StartAt);
  SA_NoticeBannerMessage.add_EndAt(builder, EndAt);
  SA_NoticeBannerMessage.add_ImageURL(builder, ImageURLOffset);
  SA_NoticeBannerMessage.add_Title(builder, TitleOffset);
  SA_NoticeBannerMessage.add_Message(builder, MessageOffset);
  return SA_NoticeBannerMessage.endSA_NoticeBannerMessage(builder);
}

unpack(): SA_NoticeBannerMessageT {
  return new SA_NoticeBannerMessageT(
    this.BannerID(),
    this.StartAt(),
    this.EndAt(),
    this.ImageURL(),
    this.Title(),
    this.Message()
  );
}


unpackTo(_o: SA_NoticeBannerMessageT): void {
  _o.BannerID = this.BannerID();
  _o.StartAt = this.StartAt();
  _o.EndAt = this.EndAt();
  _o.ImageURL = this.ImageURL();
  _o.Title = this.Title();
  _o.Message = this.Message();
}
}

export class SA_NoticeBannerMessageT implements flatbuffers.IGeneratedObject {
constructor(
  public BannerID: number = 0,
  public StartAt: number = 0,
  public EndAt: number = 0,
  public ImageURL: string|Uint8Array|null = null,
  public Title: string|Uint8Array|null = null,
  public Message: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ImageURL = (this.ImageURL !== null ? builder.createString(this.ImageURL!) : 0);
  const Title = (this.Title !== null ? builder.createString(this.Title!) : 0);
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);

  return SA_NoticeBannerMessage.createSA_NoticeBannerMessage(builder,
    this.BannerID,
    this.StartAt,
    this.EndAt,
    ImageURL,
    Title,
    Message
  );
}
}

export class CQ_LastPlayInfo implements flatbuffers.IUnpackableObject<CQ_LastPlayInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_LastPlayInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_LastPlayInfo(bb:flatbuffers.ByteBuffer, obj?:CQ_LastPlayInfo):CQ_LastPlayInfo {
  return (obj || new CQ_LastPlayInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_LastPlayInfo(bb:flatbuffers.ByteBuffer, obj?:CQ_LastPlayInfo):CQ_LastPlayInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_LastPlayInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_LastPlayInfo';
}

static startCQ_LastPlayInfo(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_LastPlayInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_LastPlayInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_LastPlayInfo.startCQ_LastPlayInfo(builder);
  return CQ_LastPlayInfo.endCQ_LastPlayInfo(builder);
}

unpack(): CQ_LastPlayInfoT {
  return new CQ_LastPlayInfoT();
}


unpackTo(_o: CQ_LastPlayInfoT): void {}
}

export class CQ_LastPlayInfoT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_LastPlayInfo.createCQ_LastPlayInfo(builder);
}
}

export class SA_LastPlayInfo implements flatbuffers.IUnpackableObject<SA_LastPlayInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_LastPlayInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_LastPlayInfo(bb:flatbuffers.ByteBuffer, obj?:SA_LastPlayInfo):SA_LastPlayInfo {
  return (obj || new SA_LastPlayInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_LastPlayInfo(bb:flatbuffers.ByteBuffer, obj?:SA_LastPlayInfo):SA_LastPlayInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_LastPlayInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

ServerUrl():string|null
ServerUrl(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ServerUrl(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsForceReconnect():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_LastPlayInfo';
}

static startSA_LastPlayInfo(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(0, ContentsType, EContentsType.None);
}

static add_ServerUrl(builder:flatbuffers.Builder, ServerUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ServerUrlOffset, 0);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MatchIDOffset, 0);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, TeamIDOffset, 0);
}

static add_IsForceReconnect(builder:flatbuffers.Builder, IsForceReconnect:boolean) {
  builder.addFieldInt8(4, +IsForceReconnect, +false);
}

static endSA_LastPlayInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_LastPlayInfo(builder:flatbuffers.Builder, ContentsType:EContentsType, ServerUrlOffset:flatbuffers.Offset, MatchIDOffset:flatbuffers.Offset, TeamIDOffset:flatbuffers.Offset, IsForceReconnect:boolean):flatbuffers.Offset {
  SA_LastPlayInfo.startSA_LastPlayInfo(builder);
  SA_LastPlayInfo.add_ContentsType(builder, ContentsType);
  SA_LastPlayInfo.add_ServerUrl(builder, ServerUrlOffset);
  SA_LastPlayInfo.add_MatchID(builder, MatchIDOffset);
  SA_LastPlayInfo.add_TeamID(builder, TeamIDOffset);
  SA_LastPlayInfo.add_IsForceReconnect(builder, IsForceReconnect);
  return SA_LastPlayInfo.endSA_LastPlayInfo(builder);
}

unpack(): SA_LastPlayInfoT {
  return new SA_LastPlayInfoT(
    this.ContentsType(),
    this.ServerUrl(),
    this.MatchID(),
    this.TeamID(),
    this.IsForceReconnect()
  );
}


unpackTo(_o: SA_LastPlayInfoT): void {
  _o.ContentsType = this.ContentsType();
  _o.ServerUrl = this.ServerUrl();
  _o.MatchID = this.MatchID();
  _o.TeamID = this.TeamID();
  _o.IsForceReconnect = this.IsForceReconnect();
}
}

export class SA_LastPlayInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public ContentsType: EContentsType = EContentsType.None,
  public ServerUrl: string|Uint8Array|null = null,
  public MatchID: string|Uint8Array|null = null,
  public TeamID: string|Uint8Array|null = null,
  public IsForceReconnect: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ServerUrl = (this.ServerUrl !== null ? builder.createString(this.ServerUrl!) : 0);
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);

  return SA_LastPlayInfo.createSA_LastPlayInfo(builder,
    this.ContentsType,
    ServerUrl,
    MatchID,
    TeamID,
    this.IsForceReconnect
  );
}
}

export class CQ_GlitchStoreHistory implements flatbuffers.IUnpackableObject<CQ_GlitchStoreHistoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GlitchStoreHistory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GlitchStoreHistory(bb:flatbuffers.ByteBuffer, obj?:CQ_GlitchStoreHistory):CQ_GlitchStoreHistory {
  return (obj || new CQ_GlitchStoreHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GlitchStoreHistory(bb:flatbuffers.ByteBuffer, obj?:CQ_GlitchStoreHistory):CQ_GlitchStoreHistory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GlitchStoreHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GlitchStoreHistory';
}

static startCQ_GlitchStoreHistory(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_GlitchStoreHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GlitchStoreHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_GlitchStoreHistory.startCQ_GlitchStoreHistory(builder);
  return CQ_GlitchStoreHistory.endCQ_GlitchStoreHistory(builder);
}

unpack(): CQ_GlitchStoreHistoryT {
  return new CQ_GlitchStoreHistoryT();
}


unpackTo(_o: CQ_GlitchStoreHistoryT): void {}
}

export class CQ_GlitchStoreHistoryT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GlitchStoreHistory.createCQ_GlitchStoreHistory(builder);
}
}

export class SA_GlitchStoreHistory implements flatbuffers.IUnpackableObject<SA_GlitchStoreHistoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GlitchStoreHistory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GlitchStoreHistory(bb:flatbuffers.ByteBuffer, obj?:SA_GlitchStoreHistory):SA_GlitchStoreHistory {
  return (obj || new SA_GlitchStoreHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GlitchStoreHistory(bb:flatbuffers.ByteBuffer, obj?:SA_GlitchStoreHistory):SA_GlitchStoreHistory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GlitchStoreHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

StoreIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

StoreIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GlitchStoreHistory';
}

static startSA_GlitchStoreHistory(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_StoreIDList(builder:flatbuffers.Builder, StoreIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, StoreIDListOffset, 0);
}

static create_StoreIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_StoreIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_StoreIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_StoreIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_GlitchStoreHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GlitchStoreHistory(builder:flatbuffers.Builder, StoreIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_GlitchStoreHistory.startSA_GlitchStoreHistory(builder);
  SA_GlitchStoreHistory.add_StoreIDList(builder, StoreIDListOffset);
  return SA_GlitchStoreHistory.endSA_GlitchStoreHistory(builder);
}

unpack(): SA_GlitchStoreHistoryT {
  return new SA_GlitchStoreHistoryT(
    this.bb!.createScalarList<number>(this.StoreIDList.bind(this), this.StoreIDList_Length())
  );
}


unpackTo(_o: SA_GlitchStoreHistoryT): void {
  _o.StoreIDList = this.bb!.createScalarList<number>(this.StoreIDList.bind(this), this.StoreIDList_Length());
}
}

export class SA_GlitchStoreHistoryT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const StoreIDList = SA_GlitchStoreHistory.create_StoreIDList_Vector(builder, this.StoreIDList);

  return SA_GlitchStoreHistory.createSA_GlitchStoreHistory(builder,
    StoreIDList
  );
}
}

export class SN_GlitchStoreHistory implements flatbuffers.IUnpackableObject<SN_GlitchStoreHistoryT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_GlitchStoreHistory {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_GlitchStoreHistory(bb:flatbuffers.ByteBuffer, obj?:SN_GlitchStoreHistory):SN_GlitchStoreHistory {
  return (obj || new SN_GlitchStoreHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_GlitchStoreHistory(bb:flatbuffers.ByteBuffer, obj?:SN_GlitchStoreHistory):SN_GlitchStoreHistory {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_GlitchStoreHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

StoreIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

StoreIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_GlitchStoreHistory';
}

static startSN_GlitchStoreHistory(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_StoreIDList(builder:flatbuffers.Builder, StoreIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, StoreIDListOffset, 0);
}

static create_StoreIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_StoreIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_StoreIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_StoreIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSN_GlitchStoreHistory(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_GlitchStoreHistory(builder:flatbuffers.Builder, StoreIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_GlitchStoreHistory.startSN_GlitchStoreHistory(builder);
  SN_GlitchStoreHistory.add_StoreIDList(builder, StoreIDListOffset);
  return SN_GlitchStoreHistory.endSN_GlitchStoreHistory(builder);
}

unpack(): SN_GlitchStoreHistoryT {
  return new SN_GlitchStoreHistoryT(
    this.bb!.createScalarList<number>(this.StoreIDList.bind(this), this.StoreIDList_Length())
  );
}


unpackTo(_o: SN_GlitchStoreHistoryT): void {
  _o.StoreIDList = this.bb!.createScalarList<number>(this.StoreIDList.bind(this), this.StoreIDList_Length());
}
}

export class SN_GlitchStoreHistoryT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const StoreIDList = SN_GlitchStoreHistory.create_StoreIDList_Vector(builder, this.StoreIDList);

  return SN_GlitchStoreHistory.createSN_GlitchStoreHistory(builder,
    StoreIDList
  );
}
}

export class CQ_GlitchStoreBuy implements flatbuffers.IUnpackableObject<CQ_GlitchStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GlitchStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GlitchStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_GlitchStoreBuy):CQ_GlitchStoreBuy {
  return (obj || new CQ_GlitchStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GlitchStoreBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_GlitchStoreBuy):CQ_GlitchStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GlitchStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GlitchStoreBuy';
}

static startCQ_GlitchStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static endCQ_GlitchStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GlitchStoreBuy(builder:flatbuffers.Builder, StoreID:number):flatbuffers.Offset {
  CQ_GlitchStoreBuy.startCQ_GlitchStoreBuy(builder);
  CQ_GlitchStoreBuy.add_StoreID(builder, StoreID);
  return CQ_GlitchStoreBuy.endCQ_GlitchStoreBuy(builder);
}

unpack(): CQ_GlitchStoreBuyT {
  return new CQ_GlitchStoreBuyT(
    this.StoreID()
  );
}


unpackTo(_o: CQ_GlitchStoreBuyT): void {
  _o.StoreID = this.StoreID();
}
}

export class CQ_GlitchStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GlitchStoreBuy.createCQ_GlitchStoreBuy(builder,
    this.StoreID
  );
}
}

export class SA_GlitchStoreBuy implements flatbuffers.IUnpackableObject<SA_GlitchStoreBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GlitchStoreBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GlitchStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_GlitchStoreBuy):SA_GlitchStoreBuy {
  return (obj || new SA_GlitchStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GlitchStoreBuy(bb:flatbuffers.ByteBuffer, obj?:SA_GlitchStoreBuy):SA_GlitchStoreBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GlitchStoreBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChangeAsset(obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeArtifact(obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ArtifactData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangePet(obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GlitchStoreBuy';
}

static startSA_GlitchStoreBuy(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static add_ChangeAsset(builder:flatbuffers.Builder, ChangeAssetOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, ChangeAssetOffset, 0);
}

static add_ChangeArtifact(builder:flatbuffers.Builder, ChangeArtifactOffset:flatbuffers.Offset) {
  builder.addFieldStruct(2, ChangeArtifactOffset, 0);
}

static add_ChangePet(builder:flatbuffers.Builder, ChangePetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, ChangePetOffset, 0);
}

static endSA_GlitchStoreBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_GlitchStoreBuyT {
  return new SA_GlitchStoreBuyT(
    this.StoreID(),
    (this.ChangeAsset() !== null ? this.ChangeAsset()!.unpack() : null),
    (this.ChangeArtifact() !== null ? this.ChangeArtifact()!.unpack() : null),
    (this.ChangePet() !== null ? this.ChangePet()!.unpack() : null)
  );
}


unpackTo(_o: SA_GlitchStoreBuyT): void {
  _o.StoreID = this.StoreID();
  _o.ChangeAsset = (this.ChangeAsset() !== null ? this.ChangeAsset()!.unpack() : null);
  _o.ChangeArtifact = (this.ChangeArtifact() !== null ? this.ChangeArtifact()!.unpack() : null);
  _o.ChangePet = (this.ChangePet() !== null ? this.ChangePet()!.unpack() : null);
}
}

export class SA_GlitchStoreBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public ChangeAsset: AssetDataT|null = null,
  public ChangeArtifact: ArtifactDataT|null = null,
  public ChangePet: PetDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangePet = (this.ChangePet !== null ? this.ChangePet!.pack(builder) : 0);

  SA_GlitchStoreBuy.startSA_GlitchStoreBuy(builder);
  SA_GlitchStoreBuy.add_StoreID(builder, this.StoreID);
  SA_GlitchStoreBuy.add_ChangeAsset(builder, (this.ChangeAsset !== null ? this.ChangeAsset!.pack(builder) : 0));
  SA_GlitchStoreBuy.add_ChangeArtifact(builder, (this.ChangeArtifact !== null ? this.ChangeArtifact!.pack(builder) : 0));
  SA_GlitchStoreBuy.add_ChangePet(builder, ChangePet);

  return SA_GlitchStoreBuy.endSA_GlitchStoreBuy(builder);
}
}

export class CQ_RecommendUserList implements flatbuffers.IUnpackableObject<CQ_RecommendUserListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RecommendUserList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RecommendUserList(bb:flatbuffers.ByteBuffer, obj?:CQ_RecommendUserList):CQ_RecommendUserList {
  return (obj || new CQ_RecommendUserList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RecommendUserList(bb:flatbuffers.ByteBuffer, obj?:CQ_RecommendUserList):CQ_RecommendUserList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RecommendUserList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RecommendUserList';
}

static startCQ_RecommendUserList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_RecommendUserList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RecommendUserList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_RecommendUserList.startCQ_RecommendUserList(builder);
  return CQ_RecommendUserList.endCQ_RecommendUserList(builder);
}

unpack(): CQ_RecommendUserListT {
  return new CQ_RecommendUserListT();
}


unpackTo(_o: CQ_RecommendUserListT): void {}
}

export class CQ_RecommendUserListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RecommendUserList.createCQ_RecommendUserList(builder);
}
}

export class SA_RecommendUserList implements flatbuffers.IUnpackableObject<SA_RecommendUserListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RecommendUserList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RecommendUserList(bb:flatbuffers.ByteBuffer, obj?:SA_RecommendUserList):SA_RecommendUserList {
  return (obj || new SA_RecommendUserList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RecommendUserList(bb:flatbuffers.ByteBuffer, obj?:SA_RecommendUserList):SA_RecommendUserList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RecommendUserList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RecommendUserList(index: number, obj?:RecommendUserInfo):RecommendUserInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new RecommendUserInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

RecommendUserList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RecommendUserList';
}

static startSA_RecommendUserList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_RecommendUserList(builder:flatbuffers.Builder, RecommendUserListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RecommendUserListOffset, 0);
}

static create_RecommendUserList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_RecommendUserList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_RecommendUserList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RecommendUserList(builder:flatbuffers.Builder, RecommendUserListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_RecommendUserList.startSA_RecommendUserList(builder);
  SA_RecommendUserList.add_RecommendUserList(builder, RecommendUserListOffset);
  return SA_RecommendUserList.endSA_RecommendUserList(builder);
}

unpack(): SA_RecommendUserListT {
  return new SA_RecommendUserListT(
    this.bb!.createObjList<RecommendUserInfo, RecommendUserInfoT>(this.RecommendUserList.bind(this), this.RecommendUserList_Length())
  );
}


unpackTo(_o: SA_RecommendUserListT): void {
  _o.RecommendUserList = this.bb!.createObjList<RecommendUserInfo, RecommendUserInfoT>(this.RecommendUserList.bind(this), this.RecommendUserList_Length());
}
}

export class SA_RecommendUserListT implements flatbuffers.IGeneratedObject {
constructor(
  public RecommendUserList: (RecommendUserInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RecommendUserList = SA_RecommendUserList.create_RecommendUserList_Vector(builder, builder.createObjectOffsetList(this.RecommendUserList));

  return SA_RecommendUserList.createSA_RecommendUserList(builder,
    RecommendUserList
  );
}
}

export class CQ_RpgTutorialComplete implements flatbuffers.IUnpackableObject<CQ_RpgTutorialCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_RpgTutorialComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_RpgTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgTutorialComplete):CQ_RpgTutorialComplete {
  return (obj || new CQ_RpgTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_RpgTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:CQ_RpgTutorialComplete):CQ_RpgTutorialComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_RpgTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_RpgTutorialComplete';
}

static startCQ_RpgTutorialComplete(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_RpgTutorialComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_RpgTutorialComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_RpgTutorialComplete.startCQ_RpgTutorialComplete(builder);
  return CQ_RpgTutorialComplete.endCQ_RpgTutorialComplete(builder);
}

unpack(): CQ_RpgTutorialCompleteT {
  return new CQ_RpgTutorialCompleteT();
}


unpackTo(_o: CQ_RpgTutorialCompleteT): void {}
}

export class CQ_RpgTutorialCompleteT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_RpgTutorialComplete.createCQ_RpgTutorialComplete(builder);
}
}

export class SA_RpgTutorialComplete implements flatbuffers.IUnpackableObject<SA_RpgTutorialCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_RpgTutorialComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_RpgTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:SA_RpgTutorialComplete):SA_RpgTutorialComplete {
  return (obj || new SA_RpgTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_RpgTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:SA_RpgTutorialComplete):SA_RpgTutorialComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_RpgTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IsGlitchTutorialComplete():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

LastClearChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_RpgTutorialComplete';
}

static startSA_RpgTutorialComplete(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_IsGlitchTutorialComplete(builder:flatbuffers.Builder, IsGlitchTutorialComplete:boolean) {
  builder.addFieldInt8(0, +IsGlitchTutorialComplete, +false);
}

static add_LastClearChapterID(builder:flatbuffers.Builder, LastClearChapterID:number) {
  builder.addFieldInt32(1, LastClearChapterID, 0);
}

static endSA_RpgTutorialComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_RpgTutorialComplete(builder:flatbuffers.Builder, IsGlitchTutorialComplete:boolean, LastClearChapterID:number):flatbuffers.Offset {
  SA_RpgTutorialComplete.startSA_RpgTutorialComplete(builder);
  SA_RpgTutorialComplete.add_IsGlitchTutorialComplete(builder, IsGlitchTutorialComplete);
  SA_RpgTutorialComplete.add_LastClearChapterID(builder, LastClearChapterID);
  return SA_RpgTutorialComplete.endSA_RpgTutorialComplete(builder);
}

unpack(): SA_RpgTutorialCompleteT {
  return new SA_RpgTutorialCompleteT(
    this.IsGlitchTutorialComplete(),
    this.LastClearChapterID()
  );
}


unpackTo(_o: SA_RpgTutorialCompleteT): void {
  _o.IsGlitchTutorialComplete = this.IsGlitchTutorialComplete();
  _o.LastClearChapterID = this.LastClearChapterID();
}
}

export class SA_RpgTutorialCompleteT implements flatbuffers.IGeneratedObject {
constructor(
  public IsGlitchTutorialComplete: boolean = false,
  public LastClearChapterID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_RpgTutorialComplete.createSA_RpgTutorialComplete(builder,
    this.IsGlitchTutorialComplete,
    this.LastClearChapterID
  );
}
}

export class CQ_ChattingMessage implements flatbuffers.IUnpackableObject<CQ_ChattingMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ChattingMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ChattingMessage(bb:flatbuffers.ByteBuffer, obj?:CQ_ChattingMessage):CQ_ChattingMessage {
  return (obj || new CQ_ChattingMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ChattingMessage(bb:flatbuffers.ByteBuffer, obj?:CQ_ChattingMessage):CQ_ChattingMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ChattingMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChatType():EChatType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EChatType.None;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ChattingMessage';
}

static startCQ_ChattingMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_ChatType(builder:flatbuffers.Builder, ChatType:EChatType) {
  builder.addFieldInt8(0, ChatType, EChatType.None);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(1, ProfileIconID, 0);
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MessageOffset, 0);
}

static endCQ_ChattingMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ChattingMessage(builder:flatbuffers.Builder, ChatType:EChatType, ProfileIconID:number, MessageOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ChattingMessage.startCQ_ChattingMessage(builder);
  CQ_ChattingMessage.add_ChatType(builder, ChatType);
  CQ_ChattingMessage.add_ProfileIconID(builder, ProfileIconID);
  CQ_ChattingMessage.add_Message(builder, MessageOffset);
  return CQ_ChattingMessage.endCQ_ChattingMessage(builder);
}

unpack(): CQ_ChattingMessageT {
  return new CQ_ChattingMessageT(
    this.ChatType(),
    this.ProfileIconID(),
    this.Message()
  );
}


unpackTo(_o: CQ_ChattingMessageT): void {
  _o.ChatType = this.ChatType();
  _o.ProfileIconID = this.ProfileIconID();
  _o.Message = this.Message();
}
}

export class CQ_ChattingMessageT implements flatbuffers.IGeneratedObject {
constructor(
  public ChatType: EChatType = EChatType.None,
  public ProfileIconID: number = 0,
  public Message: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);

  return CQ_ChattingMessage.createCQ_ChattingMessage(builder,
    this.ChatType,
    this.ProfileIconID,
    Message
  );
}
}

export class SA_ChattingMessage implements flatbuffers.IUnpackableObject<SA_ChattingMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ChattingMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ChattingMessage(bb:flatbuffers.ByteBuffer, obj?:SA_ChattingMessage):SA_ChattingMessage {
  return (obj || new SA_ChattingMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ChattingMessage(bb:flatbuffers.ByteBuffer, obj?:SA_ChattingMessage):SA_ChattingMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ChattingMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ChattingMessage';
}

static startSA_ChattingMessage(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_ChattingMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ChattingMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_ChattingMessage.startSA_ChattingMessage(builder);
  return SA_ChattingMessage.endSA_ChattingMessage(builder);
}

unpack(): SA_ChattingMessageT {
  return new SA_ChattingMessageT();
}


unpackTo(_o: SA_ChattingMessageT): void {}
}

export class SA_ChattingMessageT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_ChattingMessage.createSA_ChattingMessage(builder);
}
}

export class SN_ChattingMessage implements flatbuffers.IUnpackableObject<SN_ChattingMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_ChattingMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_ChattingMessage(bb:flatbuffers.ByteBuffer, obj?:SN_ChattingMessage):SN_ChattingMessage {
  return (obj || new SN_ChattingMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_ChattingMessage(bb:flatbuffers.ByteBuffer, obj?:SN_ChattingMessage):SN_ChattingMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_ChattingMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NickName():string|null
NickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChatType():EChatType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EChatType.None;
}

Message():string|null
Message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Timestamp():string|null
Timestamp(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Timestamp(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_ChattingMessage';
}

static startSN_ChattingMessage(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_NickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickNameOffset, 0);
}

static add_ProfileIconID(builder:flatbuffers.Builder, ProfileIconID:number) {
  builder.addFieldInt32(2, ProfileIconID, 0);
}

static add_ChatType(builder:flatbuffers.Builder, ChatType:EChatType) {
  builder.addFieldInt8(3, ChatType, EChatType.None);
}

static add_Message(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, MessageOffset, 0);
}

static add_Timestamp(builder:flatbuffers.Builder, TimestampOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, TimestampOffset, 0);
}

static endSN_ChattingMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_ChattingMessage(builder:flatbuffers.Builder, UID:number, NickNameOffset:flatbuffers.Offset, ProfileIconID:number, ChatType:EChatType, MessageOffset:flatbuffers.Offset, TimestampOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_ChattingMessage.startSN_ChattingMessage(builder);
  SN_ChattingMessage.add_UID(builder, UID);
  SN_ChattingMessage.add_NickName(builder, NickNameOffset);
  SN_ChattingMessage.add_ProfileIconID(builder, ProfileIconID);
  SN_ChattingMessage.add_ChatType(builder, ChatType);
  SN_ChattingMessage.add_Message(builder, MessageOffset);
  SN_ChattingMessage.add_Timestamp(builder, TimestampOffset);
  return SN_ChattingMessage.endSN_ChattingMessage(builder);
}

unpack(): SN_ChattingMessageT {
  return new SN_ChattingMessageT(
    this.UID(),
    this.NickName(),
    this.ProfileIconID(),
    this.ChatType(),
    this.Message(),
    this.Timestamp()
  );
}


unpackTo(_o: SN_ChattingMessageT): void {
  _o.UID = this.UID();
  _o.NickName = this.NickName();
  _o.ProfileIconID = this.ProfileIconID();
  _o.ChatType = this.ChatType();
  _o.Message = this.Message();
  _o.Timestamp = this.Timestamp();
}
}

export class SN_ChattingMessageT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public NickName: string|Uint8Array|null = null,
  public ProfileIconID: number = 0,
  public ChatType: EChatType = EChatType.None,
  public Message: string|Uint8Array|null = null,
  public Timestamp: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NickName = (this.NickName !== null ? builder.createString(this.NickName!) : 0);
  const Message = (this.Message !== null ? builder.createString(this.Message!) : 0);
  const Timestamp = (this.Timestamp !== null ? builder.createString(this.Timestamp!) : 0);

  return SN_ChattingMessage.createSN_ChattingMessage(builder,
    this.UID,
    NickName,
    this.ProfileIconID,
    this.ChatType,
    Message,
    Timestamp
  );
}
}

export class CQ_ChattingChannelJoin implements flatbuffers.IUnpackableObject<CQ_ChattingChannelJoinT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ChattingChannelJoin {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ChattingChannelJoin(bb:flatbuffers.ByteBuffer, obj?:CQ_ChattingChannelJoin):CQ_ChattingChannelJoin {
  return (obj || new CQ_ChattingChannelJoin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ChattingChannelJoin(bb:flatbuffers.ByteBuffer, obj?:CQ_ChattingChannelJoin):CQ_ChattingChannelJoin {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ChattingChannelJoin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChannelID():string|null
ChannelID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ChannelID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ChattingChannelJoin';
}

static startCQ_ChattingChannelJoin(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChannelID(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChannelIDOffset, 0);
}

static endCQ_ChattingChannelJoin(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ChattingChannelJoin(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ChattingChannelJoin.startCQ_ChattingChannelJoin(builder);
  CQ_ChattingChannelJoin.add_ChannelID(builder, ChannelIDOffset);
  return CQ_ChattingChannelJoin.endCQ_ChattingChannelJoin(builder);
}

unpack(): CQ_ChattingChannelJoinT {
  return new CQ_ChattingChannelJoinT(
    this.ChannelID()
  );
}


unpackTo(_o: CQ_ChattingChannelJoinT): void {
  _o.ChannelID = this.ChannelID();
}
}

export class CQ_ChattingChannelJoinT implements flatbuffers.IGeneratedObject {
constructor(
  public ChannelID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChannelID = (this.ChannelID !== null ? builder.createString(this.ChannelID!) : 0);

  return CQ_ChattingChannelJoin.createCQ_ChattingChannelJoin(builder,
    ChannelID
  );
}
}

export class SA_ChattingChannelJoin implements flatbuffers.IUnpackableObject<SA_ChattingChannelJoinT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ChattingChannelJoin {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ChattingChannelJoin(bb:flatbuffers.ByteBuffer, obj?:SA_ChattingChannelJoin):SA_ChattingChannelJoin {
  return (obj || new SA_ChattingChannelJoin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ChattingChannelJoin(bb:flatbuffers.ByteBuffer, obj?:SA_ChattingChannelJoin):SA_ChattingChannelJoin {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ChattingChannelJoin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChannelID():string|null
ChannelID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ChannelID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ChattingChannelJoin';
}

static startSA_ChattingChannelJoin(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChannelID(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChannelIDOffset, 0);
}

static endSA_ChattingChannelJoin(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ChattingChannelJoin(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ChattingChannelJoin.startSA_ChattingChannelJoin(builder);
  SA_ChattingChannelJoin.add_ChannelID(builder, ChannelIDOffset);
  return SA_ChattingChannelJoin.endSA_ChattingChannelJoin(builder);
}

unpack(): SA_ChattingChannelJoinT {
  return new SA_ChattingChannelJoinT(
    this.ChannelID()
  );
}


unpackTo(_o: SA_ChattingChannelJoinT): void {
  _o.ChannelID = this.ChannelID();
}
}

export class SA_ChattingChannelJoinT implements flatbuffers.IGeneratedObject {
constructor(
  public ChannelID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChannelID = (this.ChannelID !== null ? builder.createString(this.ChannelID!) : 0);

  return SA_ChattingChannelJoin.createSA_ChattingChannelJoin(builder,
    ChannelID
  );
}
}

export class CQ_ChattingChannelLeave implements flatbuffers.IUnpackableObject<CQ_ChattingChannelLeaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ChattingChannelLeave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ChattingChannelLeave(bb:flatbuffers.ByteBuffer, obj?:CQ_ChattingChannelLeave):CQ_ChattingChannelLeave {
  return (obj || new CQ_ChattingChannelLeave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ChattingChannelLeave(bb:flatbuffers.ByteBuffer, obj?:CQ_ChattingChannelLeave):CQ_ChattingChannelLeave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ChattingChannelLeave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChannelID():string|null
ChannelID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ChannelID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ChattingChannelLeave';
}

static startCQ_ChattingChannelLeave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChannelID(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChannelIDOffset, 0);
}

static endCQ_ChattingChannelLeave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ChattingChannelLeave(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ChattingChannelLeave.startCQ_ChattingChannelLeave(builder);
  CQ_ChattingChannelLeave.add_ChannelID(builder, ChannelIDOffset);
  return CQ_ChattingChannelLeave.endCQ_ChattingChannelLeave(builder);
}

unpack(): CQ_ChattingChannelLeaveT {
  return new CQ_ChattingChannelLeaveT(
    this.ChannelID()
  );
}


unpackTo(_o: CQ_ChattingChannelLeaveT): void {
  _o.ChannelID = this.ChannelID();
}
}

export class CQ_ChattingChannelLeaveT implements flatbuffers.IGeneratedObject {
constructor(
  public ChannelID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChannelID = (this.ChannelID !== null ? builder.createString(this.ChannelID!) : 0);

  return CQ_ChattingChannelLeave.createCQ_ChattingChannelLeave(builder,
    ChannelID
  );
}
}

export class SA_ChattingChannelLeave implements flatbuffers.IUnpackableObject<SA_ChattingChannelLeaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ChattingChannelLeave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ChattingChannelLeave(bb:flatbuffers.ByteBuffer, obj?:SA_ChattingChannelLeave):SA_ChattingChannelLeave {
  return (obj || new SA_ChattingChannelLeave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ChattingChannelLeave(bb:flatbuffers.ByteBuffer, obj?:SA_ChattingChannelLeave):SA_ChattingChannelLeave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ChattingChannelLeave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChannelID():string|null
ChannelID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ChannelID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ChattingChannelLeave';
}

static startSA_ChattingChannelLeave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChannelID(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ChannelIDOffset, 0);
}

static endSA_ChattingChannelLeave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ChattingChannelLeave(builder:flatbuffers.Builder, ChannelIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ChattingChannelLeave.startSA_ChattingChannelLeave(builder);
  SA_ChattingChannelLeave.add_ChannelID(builder, ChannelIDOffset);
  return SA_ChattingChannelLeave.endSA_ChattingChannelLeave(builder);
}

unpack(): SA_ChattingChannelLeaveT {
  return new SA_ChattingChannelLeaveT(
    this.ChannelID()
  );
}


unpackTo(_o: SA_ChattingChannelLeaveT): void {
  _o.ChannelID = this.ChannelID();
}
}

export class SA_ChattingChannelLeaveT implements flatbuffers.IGeneratedObject {
constructor(
  public ChannelID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChannelID = (this.ChannelID !== null ? builder.createString(this.ChannelID!) : 0);

  return SA_ChattingChannelLeave.createSA_ChattingChannelLeave(builder,
    ChannelID
  );
}
}

export class SN_Notice implements flatbuffers.IUnpackableObject<SN_NoticeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_Notice {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_Notice(bb:flatbuffers.ByteBuffer, obj?:SN_Notice):SN_Notice {
  return (obj || new SN_Notice()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_Notice(bb:flatbuffers.ByteBuffer, obj?:SN_Notice):SN_Notice {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_Notice()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NoticeMessage():string|null
NoticeMessage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NoticeMessage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NoticeType():ENoticeType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ENoticeType.None;
}

VisibleTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

VisibleCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_Notice';
}

static startSN_Notice(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_NoticeMessage(builder:flatbuffers.Builder, NoticeMessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, NoticeMessageOffset, 0);
}

static add_NoticeType(builder:flatbuffers.Builder, NoticeType:ENoticeType) {
  builder.addFieldInt8(1, NoticeType, ENoticeType.None);
}

static add_VisibleTime(builder:flatbuffers.Builder, VisibleTime:number) {
  builder.addFieldFloat32(2, VisibleTime, 0.0);
}

static add_VisibleCount(builder:flatbuffers.Builder, VisibleCount:number) {
  builder.addFieldInt32(3, VisibleCount, 0);
}

static endSN_Notice(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_Notice(builder:flatbuffers.Builder, NoticeMessageOffset:flatbuffers.Offset, NoticeType:ENoticeType, VisibleTime:number, VisibleCount:number):flatbuffers.Offset {
  SN_Notice.startSN_Notice(builder);
  SN_Notice.add_NoticeMessage(builder, NoticeMessageOffset);
  SN_Notice.add_NoticeType(builder, NoticeType);
  SN_Notice.add_VisibleTime(builder, VisibleTime);
  SN_Notice.add_VisibleCount(builder, VisibleCount);
  return SN_Notice.endSN_Notice(builder);
}

unpack(): SN_NoticeT {
  return new SN_NoticeT(
    this.NoticeMessage(),
    this.NoticeType(),
    this.VisibleTime(),
    this.VisibleCount()
  );
}


unpackTo(_o: SN_NoticeT): void {
  _o.NoticeMessage = this.NoticeMessage();
  _o.NoticeType = this.NoticeType();
  _o.VisibleTime = this.VisibleTime();
  _o.VisibleCount = this.VisibleCount();
}
}

export class SN_NoticeT implements flatbuffers.IGeneratedObject {
constructor(
  public NoticeMessage: string|Uint8Array|null = null,
  public NoticeType: ENoticeType = ENoticeType.None,
  public VisibleTime: number = 0.0,
  public VisibleCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NoticeMessage = (this.NoticeMessage !== null ? builder.createString(this.NoticeMessage!) : 0);

  return SN_Notice.createSN_Notice(builder,
    NoticeMessage,
    this.NoticeType,
    this.VisibleTime,
    this.VisibleCount
  );
}
}

export class CQ_GoldClashTutorialComplete implements flatbuffers.IUnpackableObject<CQ_GoldClashTutorialCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GoldClashTutorialComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GoldClashTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:CQ_GoldClashTutorialComplete):CQ_GoldClashTutorialComplete {
  return (obj || new CQ_GoldClashTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GoldClashTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:CQ_GoldClashTutorialComplete):CQ_GoldClashTutorialComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GoldClashTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GoldClashTutorialComplete';
}

static startCQ_GoldClashTutorialComplete(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_GoldClashTutorialComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GoldClashTutorialComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_GoldClashTutorialComplete.startCQ_GoldClashTutorialComplete(builder);
  return CQ_GoldClashTutorialComplete.endCQ_GoldClashTutorialComplete(builder);
}

unpack(): CQ_GoldClashTutorialCompleteT {
  return new CQ_GoldClashTutorialCompleteT();
}


unpackTo(_o: CQ_GoldClashTutorialCompleteT): void {}
}

export class CQ_GoldClashTutorialCompleteT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GoldClashTutorialComplete.createCQ_GoldClashTutorialComplete(builder);
}
}

export class SA_GoldClashTutorialComplete implements flatbuffers.IUnpackableObject<SA_GoldClashTutorialCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GoldClashTutorialComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GoldClashTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:SA_GoldClashTutorialComplete):SA_GoldClashTutorialComplete {
  return (obj || new SA_GoldClashTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GoldClashTutorialComplete(bb:flatbuffers.ByteBuffer, obj?:SA_GoldClashTutorialComplete):SA_GoldClashTutorialComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GoldClashTutorialComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

GoldClashTutorialComplete():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GoldClashTutorialComplete';
}

static startSA_GoldClashTutorialComplete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_GoldClashTutorialComplete(builder:flatbuffers.Builder, GoldClashTutorialComplete:boolean) {
  builder.addFieldInt8(0, +GoldClashTutorialComplete, +false);
}

static endSA_GoldClashTutorialComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GoldClashTutorialComplete(builder:flatbuffers.Builder, GoldClashTutorialComplete:boolean):flatbuffers.Offset {
  SA_GoldClashTutorialComplete.startSA_GoldClashTutorialComplete(builder);
  SA_GoldClashTutorialComplete.add_GoldClashTutorialComplete(builder, GoldClashTutorialComplete);
  return SA_GoldClashTutorialComplete.endSA_GoldClashTutorialComplete(builder);
}

unpack(): SA_GoldClashTutorialCompleteT {
  return new SA_GoldClashTutorialCompleteT(
    this.GoldClashTutorialComplete()
  );
}


unpackTo(_o: SA_GoldClashTutorialCompleteT): void {
  _o.GoldClashTutorialComplete = this.GoldClashTutorialComplete();
}
}

export class SA_GoldClashTutorialCompleteT implements flatbuffers.IGeneratedObject {
constructor(
  public GoldClashTutorialComplete: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_GoldClashTutorialComplete.createSA_GoldClashTutorialComplete(builder,
    this.GoldClashTutorialComplete
  );
}
}

export class CQ_GuideMissionList implements flatbuffers.IUnpackableObject<CQ_GuideMissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GuideMissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GuideMissionList(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionList):CQ_GuideMissionList {
  return (obj || new CQ_GuideMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GuideMissionList(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionList):CQ_GuideMissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GuideMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GuideMissionList';
}

static startCQ_GuideMissionList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_GuideMissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GuideMissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_GuideMissionList.startCQ_GuideMissionList(builder);
  return CQ_GuideMissionList.endCQ_GuideMissionList(builder);
}

unpack(): CQ_GuideMissionListT {
  return new CQ_GuideMissionListT();
}


unpackTo(_o: CQ_GuideMissionListT): void {}
}

export class CQ_GuideMissionListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GuideMissionList.createCQ_GuideMissionList(builder);
}
}

export class SA_GuideMissionList implements flatbuffers.IUnpackableObject<SA_GuideMissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GuideMissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GuideMissionList(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionList):SA_GuideMissionList {
  return (obj || new SA_GuideMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GuideMissionList(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionList):SA_GuideMissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GuideMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

LastReceiveID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuideMissionList(index: number, obj?:GuideMissionData):GuideMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new GuideMissionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

GuideMissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GuideMissionList';
}

static startSA_GuideMissionList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_LastReceiveID(builder:flatbuffers.Builder, LastReceiveID:number) {
  builder.addFieldInt32(0, LastReceiveID, 0);
}

static add_GuideMissionList(builder:flatbuffers.Builder, GuideMissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, GuideMissionListOffset, 0);
}

static start_GuideMissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_GuideMissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GuideMissionList(builder:flatbuffers.Builder, LastReceiveID:number, GuideMissionListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_GuideMissionList.startSA_GuideMissionList(builder);
  SA_GuideMissionList.add_LastReceiveID(builder, LastReceiveID);
  SA_GuideMissionList.add_GuideMissionList(builder, GuideMissionListOffset);
  return SA_GuideMissionList.endSA_GuideMissionList(builder);
}

unpack(): SA_GuideMissionListT {
  return new SA_GuideMissionListT(
    this.LastReceiveID(),
    this.bb!.createObjList<GuideMissionData, GuideMissionDataT>(this.GuideMissionList.bind(this), this.GuideMissionList_Length())
  );
}


unpackTo(_o: SA_GuideMissionListT): void {
  _o.LastReceiveID = this.LastReceiveID();
  _o.GuideMissionList = this.bb!.createObjList<GuideMissionData, GuideMissionDataT>(this.GuideMissionList.bind(this), this.GuideMissionList_Length());
}
}

export class SA_GuideMissionListT implements flatbuffers.IGeneratedObject {
constructor(
  public LastReceiveID: number = 0,
  public GuideMissionList: (GuideMissionDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const GuideMissionList = builder.createStructOffsetList(this.GuideMissionList, SA_GuideMissionList.start_GuideMissionList_Vector);

  return SA_GuideMissionList.createSA_GuideMissionList(builder,
    this.LastReceiveID,
    GuideMissionList
  );
}
}

export class SN_GuideMissionList implements flatbuffers.IUnpackableObject<SN_GuideMissionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_GuideMissionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_GuideMissionList(bb:flatbuffers.ByteBuffer, obj?:SN_GuideMissionList):SN_GuideMissionList {
  return (obj || new SN_GuideMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_GuideMissionList(bb:flatbuffers.ByteBuffer, obj?:SN_GuideMissionList):SN_GuideMissionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_GuideMissionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

GuideMission(obj?:GuideMissionData):GuideMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new GuideMissionData()).__init(this.bb_pos + offset, this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_GuideMissionList';
}

static startSN_GuideMissionList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_GuideMission(builder:flatbuffers.Builder, GuideMissionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, GuideMissionOffset, 0);
}

static endSN_GuideMissionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_GuideMissionList(builder:flatbuffers.Builder, GuideMissionOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_GuideMissionList.startSN_GuideMissionList(builder);
  SN_GuideMissionList.add_GuideMission(builder, GuideMissionOffset);
  return SN_GuideMissionList.endSN_GuideMissionList(builder);
}

unpack(): SN_GuideMissionListT {
  return new SN_GuideMissionListT(
    (this.GuideMission() !== null ? this.GuideMission()!.unpack() : null)
  );
}


unpackTo(_o: SN_GuideMissionListT): void {
  _o.GuideMission = (this.GuideMission() !== null ? this.GuideMission()!.unpack() : null);
}
}

export class SN_GuideMissionListT implements flatbuffers.IGeneratedObject {
constructor(
  public GuideMission: GuideMissionDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_GuideMissionList.createSN_GuideMissionList(builder,
    (this.GuideMission !== null ? this.GuideMission!.pack(builder) : 0)
  );
}
}

export class CQ_GuideMissionReward implements flatbuffers.IUnpackableObject<CQ_GuideMissionRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GuideMissionReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GuideMissionReward(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionReward):CQ_GuideMissionReward {
  return (obj || new CQ_GuideMissionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GuideMissionReward(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionReward):CQ_GuideMissionReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GuideMissionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MissionID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GuideMissionReward';
}

static startCQ_GuideMissionReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MissionID(builder:flatbuffers.Builder, MissionID:number) {
  builder.addFieldInt32(0, MissionID, 0);
}

static endCQ_GuideMissionReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GuideMissionReward(builder:flatbuffers.Builder, MissionID:number):flatbuffers.Offset {
  CQ_GuideMissionReward.startCQ_GuideMissionReward(builder);
  CQ_GuideMissionReward.add_MissionID(builder, MissionID);
  return CQ_GuideMissionReward.endCQ_GuideMissionReward(builder);
}

unpack(): CQ_GuideMissionRewardT {
  return new CQ_GuideMissionRewardT(
    this.MissionID()
  );
}


unpackTo(_o: CQ_GuideMissionRewardT): void {
  _o.MissionID = this.MissionID();
}
}

export class CQ_GuideMissionRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public MissionID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GuideMissionReward.createCQ_GuideMissionReward(builder,
    this.MissionID
  );
}
}

export class SA_GuideMissionReward implements flatbuffers.IUnpackableObject<SA_GuideMissionRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GuideMissionReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GuideMissionReward(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionReward):SA_GuideMissionReward {
  return (obj || new SA_GuideMissionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GuideMissionReward(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionReward):SA_GuideMissionReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GuideMissionReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NextMission(obj?:GuideMissionData):GuideMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new GuideMissionData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GuideMissionReward';
}

static startSA_GuideMissionReward(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_NextMission(builder:flatbuffers.Builder, NextMissionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, NextMissionOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_GuideMissionReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GuideMissionReward(builder:flatbuffers.Builder, NextMissionOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_GuideMissionReward.startSA_GuideMissionReward(builder);
  SA_GuideMissionReward.add_NextMission(builder, NextMissionOffset);
  SA_GuideMissionReward.add_ChangeAssetList(builder, ChangeAssetListOffset);
  SA_GuideMissionReward.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_GuideMissionReward.endSA_GuideMissionReward(builder);
}

unpack(): SA_GuideMissionRewardT {
  return new SA_GuideMissionRewardT(
    (this.NextMission() !== null ? this.NextMission()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length()),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_GuideMissionRewardT): void {
  _o.NextMission = (this.NextMission() !== null ? this.NextMission()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_GuideMissionRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public NextMission: GuideMissionDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = [],
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_GuideMissionReward.start_ChangeAssetList_Vector);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_GuideMissionReward.start_ChangeItemList_Vector);

  return SA_GuideMissionReward.createSA_GuideMissionReward(builder,
    (this.NextMission !== null ? this.NextMission!.pack(builder) : 0),
    ChangeAssetList,
    ChangeItemList
  );
}
}

export class CQ_GuideMissionStepReward implements flatbuffers.IUnpackableObject<CQ_GuideMissionStepRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GuideMissionStepReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GuideMissionStepReward(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionStepReward):CQ_GuideMissionStepReward {
  return (obj || new CQ_GuideMissionStepReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GuideMissionStepReward(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionStepReward):CQ_GuideMissionStepReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GuideMissionStepReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StepID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GuideMissionStepReward';
}

static startCQ_GuideMissionStepReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_StepID(builder:flatbuffers.Builder, StepID:number) {
  builder.addFieldInt32(0, StepID, 0);
}

static endCQ_GuideMissionStepReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GuideMissionStepReward(builder:flatbuffers.Builder, StepID:number):flatbuffers.Offset {
  CQ_GuideMissionStepReward.startCQ_GuideMissionStepReward(builder);
  CQ_GuideMissionStepReward.add_StepID(builder, StepID);
  return CQ_GuideMissionStepReward.endCQ_GuideMissionStepReward(builder);
}

unpack(): CQ_GuideMissionStepRewardT {
  return new CQ_GuideMissionStepRewardT(
    this.StepID()
  );
}


unpackTo(_o: CQ_GuideMissionStepRewardT): void {
  _o.StepID = this.StepID();
}
}

export class CQ_GuideMissionStepRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public StepID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GuideMissionStepReward.createCQ_GuideMissionStepReward(builder,
    this.StepID
  );
}
}

export class SA_GuideMissionStepReward implements flatbuffers.IUnpackableObject<SA_GuideMissionStepRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GuideMissionStepReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GuideMissionStepReward(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionStepReward):SA_GuideMissionStepReward {
  return (obj || new SA_GuideMissionStepReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GuideMissionStepReward(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionStepReward):SA_GuideMissionStepReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GuideMissionStepReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

LastReceiveID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GuideMissionStepReward';
}

static startSA_GuideMissionStepReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_LastReceiveID(builder:flatbuffers.Builder, LastReceiveID:number) {
  builder.addFieldInt32(0, LastReceiveID, 0);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static endSA_GuideMissionStepReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_GuideMissionStepRewardT {
  return new SA_GuideMissionStepRewardT(
    this.LastReceiveID(),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_GuideMissionStepRewardT): void {
  _o.LastReceiveID = this.LastReceiveID();
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_GuideMissionStepRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public LastReceiveID: number = 0,
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_GuideMissionStepReward.startSA_GuideMissionStepReward(builder);
  SA_GuideMissionStepReward.add_LastReceiveID(builder, this.LastReceiveID);
  SA_GuideMissionStepReward.add_RewardInfo(builder, RewardInfo);

  return SA_GuideMissionStepReward.endSA_GuideMissionStepReward(builder);
}
}

export class CQ_GuideMissionComplete implements flatbuffers.IUnpackableObject<CQ_GuideMissionCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_GuideMissionComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_GuideMissionComplete(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionComplete):CQ_GuideMissionComplete {
  return (obj || new CQ_GuideMissionComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_GuideMissionComplete(bb:flatbuffers.ByteBuffer, obj?:CQ_GuideMissionComplete):CQ_GuideMissionComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_GuideMissionComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MissionID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_GuideMissionComplete';
}

static startCQ_GuideMissionComplete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_MissionID(builder:flatbuffers.Builder, MissionID:number) {
  builder.addFieldInt32(0, MissionID, 0);
}

static endCQ_GuideMissionComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_GuideMissionComplete(builder:flatbuffers.Builder, MissionID:number):flatbuffers.Offset {
  CQ_GuideMissionComplete.startCQ_GuideMissionComplete(builder);
  CQ_GuideMissionComplete.add_MissionID(builder, MissionID);
  return CQ_GuideMissionComplete.endCQ_GuideMissionComplete(builder);
}

unpack(): CQ_GuideMissionCompleteT {
  return new CQ_GuideMissionCompleteT(
    this.MissionID()
  );
}


unpackTo(_o: CQ_GuideMissionCompleteT): void {
  _o.MissionID = this.MissionID();
}
}

export class CQ_GuideMissionCompleteT implements flatbuffers.IGeneratedObject {
constructor(
  public MissionID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_GuideMissionComplete.createCQ_GuideMissionComplete(builder,
    this.MissionID
  );
}
}

export class SA_GuideMissionComplete implements flatbuffers.IUnpackableObject<SA_GuideMissionCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_GuideMissionComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_GuideMissionComplete(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionComplete):SA_GuideMissionComplete {
  return (obj || new SA_GuideMissionComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_GuideMissionComplete(bb:flatbuffers.ByteBuffer, obj?:SA_GuideMissionComplete):SA_GuideMissionComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_GuideMissionComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Mission(obj?:GuideMissionData):GuideMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new GuideMissionData()).__init(this.bb_pos + offset, this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_GuideMissionComplete';
}

static startSA_GuideMissionComplete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Mission(builder:flatbuffers.Builder, MissionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, MissionOffset, 0);
}

static endSA_GuideMissionComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_GuideMissionComplete(builder:flatbuffers.Builder, MissionOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_GuideMissionComplete.startSA_GuideMissionComplete(builder);
  SA_GuideMissionComplete.add_Mission(builder, MissionOffset);
  return SA_GuideMissionComplete.endSA_GuideMissionComplete(builder);
}

unpack(): SA_GuideMissionCompleteT {
  return new SA_GuideMissionCompleteT(
    (this.Mission() !== null ? this.Mission()!.unpack() : null)
  );
}


unpackTo(_o: SA_GuideMissionCompleteT): void {
  _o.Mission = (this.Mission() !== null ? this.Mission()!.unpack() : null);
}
}

export class SA_GuideMissionCompleteT implements flatbuffers.IGeneratedObject {
constructor(
  public Mission: GuideMissionDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_GuideMissionComplete.createSA_GuideMissionComplete(builder,
    (this.Mission !== null ? this.Mission!.pack(builder) : 0)
  );
}
}

export class CQ_ModifyNickName implements flatbuffers.IUnpackableObject<CQ_ModifyNickNameT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ModifyNickName {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ModifyNickName(bb:flatbuffers.ByteBuffer, obj?:CQ_ModifyNickName):CQ_ModifyNickName {
  return (obj || new CQ_ModifyNickName()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ModifyNickName(bb:flatbuffers.ByteBuffer, obj?:CQ_ModifyNickName):CQ_ModifyNickName {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ModifyNickName()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NickName():string|null
NickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ModifyNickName';
}

static startCQ_ModifyNickName(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_NickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, NickNameOffset, 0);
}

static endCQ_ModifyNickName(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ModifyNickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ModifyNickName.startCQ_ModifyNickName(builder);
  CQ_ModifyNickName.add_NickName(builder, NickNameOffset);
  return CQ_ModifyNickName.endCQ_ModifyNickName(builder);
}

unpack(): CQ_ModifyNickNameT {
  return new CQ_ModifyNickNameT(
    this.NickName()
  );
}


unpackTo(_o: CQ_ModifyNickNameT): void {
  _o.NickName = this.NickName();
}
}

export class CQ_ModifyNickNameT implements flatbuffers.IGeneratedObject {
constructor(
  public NickName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NickName = (this.NickName !== null ? builder.createString(this.NickName!) : 0);

  return CQ_ModifyNickName.createCQ_ModifyNickName(builder,
    NickName
  );
}
}

export class SA_ModifyNickName implements flatbuffers.IUnpackableObject<SA_ModifyNickNameT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ModifyNickName {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ModifyNickName(bb:flatbuffers.ByteBuffer, obj?:SA_ModifyNickName):SA_ModifyNickName {
  return (obj || new SA_ModifyNickName()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ModifyNickName(bb:flatbuffers.ByteBuffer, obj?:SA_ModifyNickName):SA_ModifyNickName {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ModifyNickName()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NickName():string|null
NickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ModifyNickName';
}

static startSA_ModifyNickName(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_NickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, NickNameOffset, 0);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_ModifyNickName(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ModifyNickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ModifyNickName.startSA_ModifyNickName(builder);
  SA_ModifyNickName.add_NickName(builder, NickNameOffset);
  SA_ModifyNickName.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_ModifyNickName.endSA_ModifyNickName(builder);
}

unpack(): SA_ModifyNickNameT {
  return new SA_ModifyNickNameT(
    this.NickName(),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_ModifyNickNameT): void {
  _o.NickName = this.NickName();
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_ModifyNickNameT implements flatbuffers.IGeneratedObject {
constructor(
  public NickName: string|Uint8Array|null = null,
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NickName = (this.NickName !== null ? builder.createString(this.NickName!) : 0);
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_ModifyNickName.start_ChangeItemList_Vector);

  return SA_ModifyNickName.createSA_ModifyNickName(builder,
    NickName,
    ChangeItemList
  );
}
}

export class SN_ModifyNickName implements flatbuffers.IUnpackableObject<SN_ModifyNickNameT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_ModifyNickName {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_ModifyNickName(bb:flatbuffers.ByteBuffer, obj?:SN_ModifyNickName):SN_ModifyNickName {
  return (obj || new SN_ModifyNickName()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_ModifyNickName(bb:flatbuffers.ByteBuffer, obj?:SN_ModifyNickName):SN_ModifyNickName {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_ModifyNickName()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NickName():string|null
NickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_ModifyNickName';
}

static startSN_ModifyNickName(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_NickName(builder:flatbuffers.Builder, NickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickNameOffset, 0);
}

static endSN_ModifyNickName(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_ModifyNickName(builder:flatbuffers.Builder, UID:number, NickNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_ModifyNickName.startSN_ModifyNickName(builder);
  SN_ModifyNickName.add_UID(builder, UID);
  SN_ModifyNickName.add_NickName(builder, NickNameOffset);
  return SN_ModifyNickName.endSN_ModifyNickName(builder);
}

unpack(): SN_ModifyNickNameT {
  return new SN_ModifyNickNameT(
    this.UID(),
    this.NickName()
  );
}


unpackTo(_o: SN_ModifyNickNameT): void {
  _o.UID = this.UID();
  _o.NickName = this.NickName();
}
}

export class SN_ModifyNickNameT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public NickName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NickName = (this.NickName !== null ? builder.createString(this.NickName!) : 0);

  return SN_ModifyNickName.createSN_ModifyNickName(builder,
    this.UID,
    NickName
  );
}
}

export class CQ_CharacterPassBuyHero implements flatbuffers.IUnpackableObject<CQ_CharacterPassBuyHeroT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_CharacterPassBuyHero {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_CharacterPassBuyHero(bb:flatbuffers.ByteBuffer, obj?:CQ_CharacterPassBuyHero):CQ_CharacterPassBuyHero {
  return (obj || new CQ_CharacterPassBuyHero()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_CharacterPassBuyHero(bb:flatbuffers.ByteBuffer, obj?:CQ_CharacterPassBuyHero):CQ_CharacterPassBuyHero {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_CharacterPassBuyHero()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PassID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AssetID():EUserAssetType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : EUserAssetType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_CharacterPassBuyHero';
}

static startCQ_CharacterPassBuyHero(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PassID(builder:flatbuffers.Builder, PassID:number) {
  builder.addFieldInt32(0, PassID, 0);
}

static add_AssetID(builder:flatbuffers.Builder, AssetID:EUserAssetType) {
  builder.addFieldInt32(1, AssetID, EUserAssetType.None);
}

static endCQ_CharacterPassBuyHero(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_CharacterPassBuyHero(builder:flatbuffers.Builder, PassID:number, AssetID:EUserAssetType):flatbuffers.Offset {
  CQ_CharacterPassBuyHero.startCQ_CharacterPassBuyHero(builder);
  CQ_CharacterPassBuyHero.add_PassID(builder, PassID);
  CQ_CharacterPassBuyHero.add_AssetID(builder, AssetID);
  return CQ_CharacterPassBuyHero.endCQ_CharacterPassBuyHero(builder);
}

unpack(): CQ_CharacterPassBuyHeroT {
  return new CQ_CharacterPassBuyHeroT(
    this.PassID(),
    this.AssetID()
  );
}


unpackTo(_o: CQ_CharacterPassBuyHeroT): void {
  _o.PassID = this.PassID();
  _o.AssetID = this.AssetID();
}
}

export class CQ_CharacterPassBuyHeroT implements flatbuffers.IGeneratedObject {
constructor(
  public PassID: number = 0,
  public AssetID: EUserAssetType = EUserAssetType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_CharacterPassBuyHero.createCQ_CharacterPassBuyHero(builder,
    this.PassID,
    this.AssetID
  );
}
}

export class SA_CharacterPassBuyHero implements flatbuffers.IUnpackableObject<SA_CharacterPassBuyHeroT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_CharacterPassBuyHero {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_CharacterPassBuyHero(bb:flatbuffers.ByteBuffer, obj?:SA_CharacterPassBuyHero):SA_CharacterPassBuyHero {
  return (obj || new SA_CharacterPassBuyHero()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_CharacterPassBuyHero(bb:flatbuffers.ByteBuffer, obj?:SA_CharacterPassBuyHero):SA_CharacterPassBuyHero {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_CharacterPassBuyHero()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

newHero(obj?:NewHeroData):NewHeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NewHeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_CharacterPassBuyHero';
}

static startSA_CharacterPassBuyHero(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_newHero(builder:flatbuffers.Builder, newHeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, newHeroOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_CharacterPassBuyHero(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_CharacterPassBuyHero(builder:flatbuffers.Builder, newHeroOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_CharacterPassBuyHero.startSA_CharacterPassBuyHero(builder);
  SA_CharacterPassBuyHero.add_newHero(builder, newHeroOffset);
  SA_CharacterPassBuyHero.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_CharacterPassBuyHero.endSA_CharacterPassBuyHero(builder);
}

unpack(): SA_CharacterPassBuyHeroT {
  return new SA_CharacterPassBuyHeroT(
    (this.newHero() !== null ? this.newHero()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_CharacterPassBuyHeroT): void {
  _o.newHero = (this.newHero() !== null ? this.newHero()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_CharacterPassBuyHeroT implements flatbuffers.IGeneratedObject {
constructor(
  public newHero: NewHeroDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const newHero = (this.newHero !== null ? this.newHero!.pack(builder) : 0);
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_CharacterPassBuyHero.start_ChangeAssetList_Vector);

  return SA_CharacterPassBuyHero.createSA_CharacterPassBuyHero(builder,
    newHero,
    ChangeAssetList
  );
}
}

export class CQ_ExpressionList implements flatbuffers.IUnpackableObject<CQ_ExpressionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ExpressionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ExpressionList(bb:flatbuffers.ByteBuffer, obj?:CQ_ExpressionList):CQ_ExpressionList {
  return (obj || new CQ_ExpressionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ExpressionList(bb:flatbuffers.ByteBuffer, obj?:CQ_ExpressionList):CQ_ExpressionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ExpressionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ExpressionList';
}

static startCQ_ExpressionList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ExpressionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ExpressionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ExpressionList.startCQ_ExpressionList(builder);
  return CQ_ExpressionList.endCQ_ExpressionList(builder);
}

unpack(): CQ_ExpressionListT {
  return new CQ_ExpressionListT();
}


unpackTo(_o: CQ_ExpressionListT): void {}
}

export class CQ_ExpressionListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ExpressionList.createCQ_ExpressionList(builder);
}
}

export class SA_ExpressionList implements flatbuffers.IUnpackableObject<SA_ExpressionListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ExpressionList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ExpressionList(bb:flatbuffers.ByteBuffer, obj?:SA_ExpressionList):SA_ExpressionList {
  return (obj || new SA_ExpressionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ExpressionList(bb:flatbuffers.ByteBuffer, obj?:SA_ExpressionList):SA_ExpressionList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ExpressionList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExpressionList(index: number, obj?:ExpressionData):ExpressionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ExpressionData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ExpressionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ExpressionList';
}

static startSA_ExpressionList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ExpressionList(builder:flatbuffers.Builder, ExpressionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ExpressionListOffset, 0);
}

static start_ExpressionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_ExpressionList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ExpressionList(builder:flatbuffers.Builder, ExpressionListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ExpressionList.startSA_ExpressionList(builder);
  SA_ExpressionList.add_ExpressionList(builder, ExpressionListOffset);
  return SA_ExpressionList.endSA_ExpressionList(builder);
}

unpack(): SA_ExpressionListT {
  return new SA_ExpressionListT(
    this.bb!.createObjList<ExpressionData, ExpressionDataT>(this.ExpressionList.bind(this), this.ExpressionList_Length())
  );
}


unpackTo(_o: SA_ExpressionListT): void {
  _o.ExpressionList = this.bb!.createObjList<ExpressionData, ExpressionDataT>(this.ExpressionList.bind(this), this.ExpressionList_Length());
}
}

export class SA_ExpressionListT implements flatbuffers.IGeneratedObject {
constructor(
  public ExpressionList: (ExpressionDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ExpressionList = builder.createStructOffsetList(this.ExpressionList, SA_ExpressionList.start_ExpressionList_Vector);

  return SA_ExpressionList.createSA_ExpressionList(builder,
    ExpressionList
  );
}
}

export class CQ_ExpressionPresetList implements flatbuffers.IUnpackableObject<CQ_ExpressionPresetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ExpressionPresetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ExpressionPresetList(bb:flatbuffers.ByteBuffer, obj?:CQ_ExpressionPresetList):CQ_ExpressionPresetList {
  return (obj || new CQ_ExpressionPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ExpressionPresetList(bb:flatbuffers.ByteBuffer, obj?:CQ_ExpressionPresetList):CQ_ExpressionPresetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ExpressionPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ExpressionPresetList';
}

static startCQ_ExpressionPresetList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ExpressionPresetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ExpressionPresetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ExpressionPresetList.startCQ_ExpressionPresetList(builder);
  return CQ_ExpressionPresetList.endCQ_ExpressionPresetList(builder);
}

unpack(): CQ_ExpressionPresetListT {
  return new CQ_ExpressionPresetListT();
}


unpackTo(_o: CQ_ExpressionPresetListT): void {}
}

export class CQ_ExpressionPresetListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ExpressionPresetList.createCQ_ExpressionPresetList(builder);
}
}

export class SA_ExpressionPresetList implements flatbuffers.IUnpackableObject<SA_ExpressionPresetListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ExpressionPresetList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ExpressionPresetList(bb:flatbuffers.ByteBuffer, obj?:SA_ExpressionPresetList):SA_ExpressionPresetList {
  return (obj || new SA_ExpressionPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ExpressionPresetList(bb:flatbuffers.ByteBuffer, obj?:SA_ExpressionPresetList):SA_ExpressionPresetList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ExpressionPresetList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExpressionPresetList(index: number, obj?:ExpressionPresetData):ExpressionPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ExpressionPresetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

ExpressionPresetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ExpressionPresetList';
}

static startSA_ExpressionPresetList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ExpressionPresetList(builder:flatbuffers.Builder, ExpressionPresetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ExpressionPresetListOffset, 0);
}

static create_ExpressionPresetList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_ExpressionPresetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSA_ExpressionPresetList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ExpressionPresetList(builder:flatbuffers.Builder, ExpressionPresetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ExpressionPresetList.startSA_ExpressionPresetList(builder);
  SA_ExpressionPresetList.add_ExpressionPresetList(builder, ExpressionPresetListOffset);
  return SA_ExpressionPresetList.endSA_ExpressionPresetList(builder);
}

unpack(): SA_ExpressionPresetListT {
  return new SA_ExpressionPresetListT(
    this.bb!.createObjList<ExpressionPresetData, ExpressionPresetDataT>(this.ExpressionPresetList.bind(this), this.ExpressionPresetList_Length())
  );
}


unpackTo(_o: SA_ExpressionPresetListT): void {
  _o.ExpressionPresetList = this.bb!.createObjList<ExpressionPresetData, ExpressionPresetDataT>(this.ExpressionPresetList.bind(this), this.ExpressionPresetList_Length());
}
}

export class SA_ExpressionPresetListT implements flatbuffers.IGeneratedObject {
constructor(
  public ExpressionPresetList: (ExpressionPresetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ExpressionPresetList = SA_ExpressionPresetList.create_ExpressionPresetList_Vector(builder, builder.createObjectOffsetList(this.ExpressionPresetList));

  return SA_ExpressionPresetList.createSA_ExpressionPresetList(builder,
    ExpressionPresetList
  );
}
}

export class CQ_ExpressionPresetSave implements flatbuffers.IUnpackableObject<CQ_ExpressionPresetSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ExpressionPresetSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ExpressionPresetSave(bb:flatbuffers.ByteBuffer, obj?:CQ_ExpressionPresetSave):CQ_ExpressionPresetSave {
  return (obj || new CQ_ExpressionPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ExpressionPresetSave(bb:flatbuffers.ByteBuffer, obj?:CQ_ExpressionPresetSave):CQ_ExpressionPresetSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ExpressionPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExpressionPreset(obj?:ExpressionPresetData):ExpressionPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ExpressionPresetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ExpressionPresetSave';
}

static startCQ_ExpressionPresetSave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ExpressionPreset(builder:flatbuffers.Builder, ExpressionPresetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ExpressionPresetOffset, 0);
}

static endCQ_ExpressionPresetSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ExpressionPresetSave(builder:flatbuffers.Builder, ExpressionPresetOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ExpressionPresetSave.startCQ_ExpressionPresetSave(builder);
  CQ_ExpressionPresetSave.add_ExpressionPreset(builder, ExpressionPresetOffset);
  return CQ_ExpressionPresetSave.endCQ_ExpressionPresetSave(builder);
}

unpack(): CQ_ExpressionPresetSaveT {
  return new CQ_ExpressionPresetSaveT(
    (this.ExpressionPreset() !== null ? this.ExpressionPreset()!.unpack() : null)
  );
}


unpackTo(_o: CQ_ExpressionPresetSaveT): void {
  _o.ExpressionPreset = (this.ExpressionPreset() !== null ? this.ExpressionPreset()!.unpack() : null);
}
}

export class CQ_ExpressionPresetSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public ExpressionPreset: ExpressionPresetDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ExpressionPreset = (this.ExpressionPreset !== null ? this.ExpressionPreset!.pack(builder) : 0);

  return CQ_ExpressionPresetSave.createCQ_ExpressionPresetSave(builder,
    ExpressionPreset
  );
}
}

export class SA_ExpressionPresetSave implements flatbuffers.IUnpackableObject<SA_ExpressionPresetSaveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ExpressionPresetSave {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ExpressionPresetSave(bb:flatbuffers.ByteBuffer, obj?:SA_ExpressionPresetSave):SA_ExpressionPresetSave {
  return (obj || new SA_ExpressionPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ExpressionPresetSave(bb:flatbuffers.ByteBuffer, obj?:SA_ExpressionPresetSave):SA_ExpressionPresetSave {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ExpressionPresetSave()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExpressionPreset(obj?:ExpressionPresetData):ExpressionPresetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ExpressionPresetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ExpressionPresetSave';
}

static startSA_ExpressionPresetSave(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ExpressionPreset(builder:flatbuffers.Builder, ExpressionPresetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ExpressionPresetOffset, 0);
}

static endSA_ExpressionPresetSave(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ExpressionPresetSave(builder:flatbuffers.Builder, ExpressionPresetOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ExpressionPresetSave.startSA_ExpressionPresetSave(builder);
  SA_ExpressionPresetSave.add_ExpressionPreset(builder, ExpressionPresetOffset);
  return SA_ExpressionPresetSave.endSA_ExpressionPresetSave(builder);
}

unpack(): SA_ExpressionPresetSaveT {
  return new SA_ExpressionPresetSaveT(
    (this.ExpressionPreset() !== null ? this.ExpressionPreset()!.unpack() : null)
  );
}


unpackTo(_o: SA_ExpressionPresetSaveT): void {
  _o.ExpressionPreset = (this.ExpressionPreset() !== null ? this.ExpressionPreset()!.unpack() : null);
}
}

export class SA_ExpressionPresetSaveT implements flatbuffers.IGeneratedObject {
constructor(
  public ExpressionPreset: ExpressionPresetDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ExpressionPreset = (this.ExpressionPreset !== null ? this.ExpressionPreset!.pack(builder) : 0);

  return SA_ExpressionPresetSave.createSA_ExpressionPresetSave(builder,
    ExpressionPreset
  );
}
}

export class CQ_BillingCheck implements flatbuffers.IUnpackableObject<CQ_BillingCheckT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_BillingCheck {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_BillingCheck(bb:flatbuffers.ByteBuffer, obj?:CQ_BillingCheck):CQ_BillingCheck {
  return (obj || new CQ_BillingCheck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_BillingCheck(bb:flatbuffers.ByteBuffer, obj?:CQ_BillingCheck):CQ_BillingCheck {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_BillingCheck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoreID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

StoveProductID():string|null
StoveProductID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
StoveProductID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_BillingCheck';
}

static startCQ_BillingCheck(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_StoreID(builder:flatbuffers.Builder, StoreID:number) {
  builder.addFieldInt32(0, StoreID, 0);
}

static add_StoveProductID(builder:flatbuffers.Builder, StoveProductIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, StoveProductIDOffset, 0);
}

static endCQ_BillingCheck(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_BillingCheck(builder:flatbuffers.Builder, StoreID:number, StoveProductIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_BillingCheck.startCQ_BillingCheck(builder);
  CQ_BillingCheck.add_StoreID(builder, StoreID);
  CQ_BillingCheck.add_StoveProductID(builder, StoveProductIDOffset);
  return CQ_BillingCheck.endCQ_BillingCheck(builder);
}

unpack(): CQ_BillingCheckT {
  return new CQ_BillingCheckT(
    this.StoreID(),
    this.StoveProductID()
  );
}


unpackTo(_o: CQ_BillingCheckT): void {
  _o.StoreID = this.StoreID();
  _o.StoveProductID = this.StoveProductID();
}
}

export class CQ_BillingCheckT implements flatbuffers.IGeneratedObject {
constructor(
  public StoreID: number = 0,
  public StoveProductID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const StoveProductID = (this.StoveProductID !== null ? builder.createString(this.StoveProductID!) : 0);

  return CQ_BillingCheck.createCQ_BillingCheck(builder,
    this.StoreID,
    StoveProductID
  );
}
}

export class SA_BillingCheck implements flatbuffers.IUnpackableObject<SA_BillingCheckT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_BillingCheck {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_BillingCheck(bb:flatbuffers.ByteBuffer, obj?:SA_BillingCheck):SA_BillingCheck {
  return (obj || new SA_BillingCheck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_BillingCheck(bb:flatbuffers.ByteBuffer, obj?:SA_BillingCheck):SA_BillingCheck {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_BillingCheck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StoveProductID():string|null
StoveProductID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
StoveProductID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_BillingCheck';
}

static startSA_BillingCheck(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_StoveProductID(builder:flatbuffers.Builder, StoveProductIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, StoveProductIDOffset, 0);
}

static endSA_BillingCheck(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_BillingCheck(builder:flatbuffers.Builder, StoveProductIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_BillingCheck.startSA_BillingCheck(builder);
  SA_BillingCheck.add_StoveProductID(builder, StoveProductIDOffset);
  return SA_BillingCheck.endSA_BillingCheck(builder);
}

unpack(): SA_BillingCheckT {
  return new SA_BillingCheckT(
    this.StoveProductID()
  );
}


unpackTo(_o: SA_BillingCheckT): void {
  _o.StoveProductID = this.StoveProductID();
}
}

export class SA_BillingCheckT implements flatbuffers.IGeneratedObject {
constructor(
  public StoveProductID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const StoveProductID = (this.StoveProductID !== null ? builder.createString(this.StoveProductID!) : 0);

  return SA_BillingCheck.createSA_BillingCheck(builder,
    StoveProductID
  );
}
}

export class SN_BillingComplete implements flatbuffers.IUnpackableObject<SN_BillingCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_BillingComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_BillingComplete(bb:flatbuffers.ByteBuffer, obj?:SN_BillingComplete):SN_BillingComplete {
  return (obj || new SN_BillingComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_BillingComplete(bb:flatbuffers.ByteBuffer, obj?:SN_BillingComplete):SN_BillingComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_BillingComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TID():string|null
TID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

StoveProductID():string|null
StoveProductID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
StoveProductID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

OriginalTID():string|null
OriginalTID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
OriginalTID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

WonderStoreInfo(obj?:WonderStoreData):WonderStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new WonderStoreData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

SeasonPassInfo(obj?:SeasonPassData):SeasonPassData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new SeasonPassData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_BillingComplete';
}

static startSN_BillingComplete(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_TID(builder:flatbuffers.Builder, TIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TIDOffset, 0);
}

static add_StoveProductID(builder:flatbuffers.Builder, StoveProductIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, StoveProductIDOffset, 0);
}

static add_OriginalTID(builder:flatbuffers.Builder, OriginalTIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, OriginalTIDOffset, 0);
}

static add_WonderStoreInfo(builder:flatbuffers.Builder, WonderStoreInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, WonderStoreInfoOffset, 0);
}

static add_SeasonPassInfo(builder:flatbuffers.Builder, SeasonPassInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, SeasonPassInfoOffset, 0);
}

static endSN_BillingComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SN_BillingCompleteT {
  return new SN_BillingCompleteT(
    this.TID(),
    this.StoveProductID(),
    this.OriginalTID(),
    (this.WonderStoreInfo() !== null ? this.WonderStoreInfo()!.unpack() : null),
    (this.SeasonPassInfo() !== null ? this.SeasonPassInfo()!.unpack() : null)
  );
}


unpackTo(_o: SN_BillingCompleteT): void {
  _o.TID = this.TID();
  _o.StoveProductID = this.StoveProductID();
  _o.OriginalTID = this.OriginalTID();
  _o.WonderStoreInfo = (this.WonderStoreInfo() !== null ? this.WonderStoreInfo()!.unpack() : null);
  _o.SeasonPassInfo = (this.SeasonPassInfo() !== null ? this.SeasonPassInfo()!.unpack() : null);
}
}

export class SN_BillingCompleteT implements flatbuffers.IGeneratedObject {
constructor(
  public TID: string|Uint8Array|null = null,
  public StoveProductID: string|Uint8Array|null = null,
  public OriginalTID: string|Uint8Array|null = null,
  public WonderStoreInfo: WonderStoreDataT|null = null,
  public SeasonPassInfo: SeasonPassDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TID = (this.TID !== null ? builder.createString(this.TID!) : 0);
  const StoveProductID = (this.StoveProductID !== null ? builder.createString(this.StoveProductID!) : 0);
  const OriginalTID = (this.OriginalTID !== null ? builder.createString(this.OriginalTID!) : 0);
  const WonderStoreInfo = (this.WonderStoreInfo !== null ? this.WonderStoreInfo!.pack(builder) : 0);
  const SeasonPassInfo = (this.SeasonPassInfo !== null ? this.SeasonPassInfo!.pack(builder) : 0);

  SN_BillingComplete.startSN_BillingComplete(builder);
  SN_BillingComplete.add_TID(builder, TID);
  SN_BillingComplete.add_StoveProductID(builder, StoveProductID);
  SN_BillingComplete.add_OriginalTID(builder, OriginalTID);
  SN_BillingComplete.add_WonderStoreInfo(builder, WonderStoreInfo);
  SN_BillingComplete.add_SeasonPassInfo(builder, SeasonPassInfo);

  return SN_BillingComplete.endSN_BillingComplete(builder);
}
}

export class SN_SubscriptionStateChange implements flatbuffers.IUnpackableObject<SN_SubscriptionStateChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_SubscriptionStateChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_SubscriptionStateChange(bb:flatbuffers.ByteBuffer, obj?:SN_SubscriptionStateChange):SN_SubscriptionStateChange {
  return (obj || new SN_SubscriptionStateChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_SubscriptionStateChange(bb:flatbuffers.ByteBuffer, obj?:SN_SubscriptionStateChange):SN_SubscriptionStateChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_SubscriptionStateChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SubStatusCode():string|null
SubStatusCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
SubStatusCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

WonderStoreInfo(obj?:WonderStoreData):WonderStoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new WonderStoreData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_SubscriptionStateChange';
}

static startSN_SubscriptionStateChange(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_SubStatusCode(builder:flatbuffers.Builder, SubStatusCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SubStatusCodeOffset, 0);
}

static add_WonderStoreInfo(builder:flatbuffers.Builder, WonderStoreInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, WonderStoreInfoOffset, 0);
}

static endSN_SubscriptionStateChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SN_SubscriptionStateChangeT {
  return new SN_SubscriptionStateChangeT(
    this.SubStatusCode(),
    (this.WonderStoreInfo() !== null ? this.WonderStoreInfo()!.unpack() : null)
  );
}


unpackTo(_o: SN_SubscriptionStateChangeT): void {
  _o.SubStatusCode = this.SubStatusCode();
  _o.WonderStoreInfo = (this.WonderStoreInfo() !== null ? this.WonderStoreInfo()!.unpack() : null);
}
}

export class SN_SubscriptionStateChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public SubStatusCode: string|Uint8Array|null = null,
  public WonderStoreInfo: WonderStoreDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SubStatusCode = (this.SubStatusCode !== null ? builder.createString(this.SubStatusCode!) : 0);
  const WonderStoreInfo = (this.WonderStoreInfo !== null ? this.WonderStoreInfo!.pack(builder) : 0);

  SN_SubscriptionStateChange.startSN_SubscriptionStateChange(builder);
  SN_SubscriptionStateChange.add_SubStatusCode(builder, SubStatusCode);
  SN_SubscriptionStateChange.add_WonderStoreInfo(builder, WonderStoreInfo);

  return SN_SubscriptionStateChange.endSN_SubscriptionStateChange(builder);
}
}

export class CQ_ADVList implements flatbuffers.IUnpackableObject<CQ_ADVListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ADVList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ADVList(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVList):CQ_ADVList {
  return (obj || new CQ_ADVList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ADVList(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVList):CQ_ADVList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ADVList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ADVList';
}

static startCQ_ADVList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_ADVList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ADVList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_ADVList.startCQ_ADVList(builder);
  return CQ_ADVList.endCQ_ADVList(builder);
}

unpack(): CQ_ADVListT {
  return new CQ_ADVListT();
}


unpackTo(_o: CQ_ADVListT): void {}
}

export class CQ_ADVListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ADVList.createCQ_ADVList(builder);
}
}

export class SA_ADVList implements flatbuffers.IUnpackableObject<SA_ADVListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ADVList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ADVList(bb:flatbuffers.ByteBuffer, obj?:SA_ADVList):SA_ADVList {
  return (obj || new SA_ADVList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ADVList(bb:flatbuffers.ByteBuffer, obj?:SA_ADVList):SA_ADVList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ADVList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NextResetAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ReceivedExtraRewardID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ADVList(index: number, obj?:AdvertisementData):AdvertisementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new AdvertisementData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ADVList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ADVList';
}

static startSA_ADVList(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_NextResetAt(builder:flatbuffers.Builder, NextResetAt:number) {
  builder.addFieldInt32(0, NextResetAt, 0);
}

static add_ReceivedExtraRewardID(builder:flatbuffers.Builder, ReceivedExtraRewardID:number) {
  builder.addFieldInt32(1, ReceivedExtraRewardID, 0);
}

static add_ADVList(builder:flatbuffers.Builder, ADVListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ADVListOffset, 0);
}

static start_ADVList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_ADVList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ADVList(builder:flatbuffers.Builder, NextResetAt:number, ReceivedExtraRewardID:number, ADVListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ADVList.startSA_ADVList(builder);
  SA_ADVList.add_NextResetAt(builder, NextResetAt);
  SA_ADVList.add_ReceivedExtraRewardID(builder, ReceivedExtraRewardID);
  SA_ADVList.add_ADVList(builder, ADVListOffset);
  return SA_ADVList.endSA_ADVList(builder);
}

unpack(): SA_ADVListT {
  return new SA_ADVListT(
    this.NextResetAt(),
    this.ReceivedExtraRewardID(),
    this.bb!.createObjList<AdvertisementData, AdvertisementDataT>(this.ADVList.bind(this), this.ADVList_Length())
  );
}


unpackTo(_o: SA_ADVListT): void {
  _o.NextResetAt = this.NextResetAt();
  _o.ReceivedExtraRewardID = this.ReceivedExtraRewardID();
  _o.ADVList = this.bb!.createObjList<AdvertisementData, AdvertisementDataT>(this.ADVList.bind(this), this.ADVList_Length());
}
}

export class SA_ADVListT implements flatbuffers.IGeneratedObject {
constructor(
  public NextResetAt: number = 0,
  public ReceivedExtraRewardID: number = 0,
  public ADVList: (AdvertisementDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ADVList = builder.createStructOffsetList(this.ADVList, SA_ADVList.start_ADVList_Vector);

  return SA_ADVList.createSA_ADVList(builder,
    this.NextResetAt,
    this.ReceivedExtraRewardID,
    ADVList
  );
}
}

export class CQ_ADVWatchingStart implements flatbuffers.IUnpackableObject<CQ_ADVWatchingStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ADVWatchingStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ADVWatchingStart(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVWatchingStart):CQ_ADVWatchingStart {
  return (obj || new CQ_ADVWatchingStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ADVWatchingStart(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVWatchingStart):CQ_ADVWatchingStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ADVWatchingStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ADVID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ADVWatchingStart';
}

static startCQ_ADVWatchingStart(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ADVID(builder:flatbuffers.Builder, ADVID:number) {
  builder.addFieldInt32(0, ADVID, 0);
}

static endCQ_ADVWatchingStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ADVWatchingStart(builder:flatbuffers.Builder, ADVID:number):flatbuffers.Offset {
  CQ_ADVWatchingStart.startCQ_ADVWatchingStart(builder);
  CQ_ADVWatchingStart.add_ADVID(builder, ADVID);
  return CQ_ADVWatchingStart.endCQ_ADVWatchingStart(builder);
}

unpack(): CQ_ADVWatchingStartT {
  return new CQ_ADVWatchingStartT(
    this.ADVID()
  );
}


unpackTo(_o: CQ_ADVWatchingStartT): void {
  _o.ADVID = this.ADVID();
}
}

export class CQ_ADVWatchingStartT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ADVWatchingStart.createCQ_ADVWatchingStart(builder,
    this.ADVID
  );
}
}

export class SA_ADVWatchingStart implements flatbuffers.IUnpackableObject<SA_ADVWatchingStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ADVWatchingStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ADVWatchingStart(bb:flatbuffers.ByteBuffer, obj?:SA_ADVWatchingStart):SA_ADVWatchingStart {
  return (obj || new SA_ADVWatchingStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ADVWatchingStart(bb:flatbuffers.ByteBuffer, obj?:SA_ADVWatchingStart):SA_ADVWatchingStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ADVWatchingStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ADVID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ADVWatchingStart';
}

static startSA_ADVWatchingStart(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ADVID(builder:flatbuffers.Builder, ADVID:number) {
  builder.addFieldInt32(0, ADVID, 0);
}

static endSA_ADVWatchingStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ADVWatchingStart(builder:flatbuffers.Builder, ADVID:number):flatbuffers.Offset {
  SA_ADVWatchingStart.startSA_ADVWatchingStart(builder);
  SA_ADVWatchingStart.add_ADVID(builder, ADVID);
  return SA_ADVWatchingStart.endSA_ADVWatchingStart(builder);
}

unpack(): SA_ADVWatchingStartT {
  return new SA_ADVWatchingStartT(
    this.ADVID()
  );
}


unpackTo(_o: SA_ADVWatchingStartT): void {
  _o.ADVID = this.ADVID();
}
}

export class SA_ADVWatchingStartT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_ADVWatchingStart.createSA_ADVWatchingStart(builder,
    this.ADVID
  );
}
}

export class CQ_ADVWatchingEnd implements flatbuffers.IUnpackableObject<CQ_ADVWatchingEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ADVWatchingEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ADVWatchingEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVWatchingEnd):CQ_ADVWatchingEnd {
  return (obj || new CQ_ADVWatchingEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ADVWatchingEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVWatchingEnd):CQ_ADVWatchingEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ADVWatchingEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ADVID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ADVWatchingEnd';
}

static startCQ_ADVWatchingEnd(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ADVID(builder:flatbuffers.Builder, ADVID:number) {
  builder.addFieldInt32(0, ADVID, 0);
}

static endCQ_ADVWatchingEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ADVWatchingEnd(builder:flatbuffers.Builder, ADVID:number):flatbuffers.Offset {
  CQ_ADVWatchingEnd.startCQ_ADVWatchingEnd(builder);
  CQ_ADVWatchingEnd.add_ADVID(builder, ADVID);
  return CQ_ADVWatchingEnd.endCQ_ADVWatchingEnd(builder);
}

unpack(): CQ_ADVWatchingEndT {
  return new CQ_ADVWatchingEndT(
    this.ADVID()
  );
}


unpackTo(_o: CQ_ADVWatchingEndT): void {
  _o.ADVID = this.ADVID();
}
}

export class CQ_ADVWatchingEndT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ADVWatchingEnd.createCQ_ADVWatchingEnd(builder,
    this.ADVID
  );
}
}

export class SA_ADVWatchingEnd implements flatbuffers.IUnpackableObject<SA_ADVWatchingEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ADVWatchingEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ADVWatchingEnd(bb:flatbuffers.ByteBuffer, obj?:SA_ADVWatchingEnd):SA_ADVWatchingEnd {
  return (obj || new SA_ADVWatchingEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ADVWatchingEnd(bb:flatbuffers.ByteBuffer, obj?:SA_ADVWatchingEnd):SA_ADVWatchingEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ADVWatchingEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ADVList(obj?:AdvertisementData):AdvertisementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AdvertisementData()).__init(this.bb_pos + offset, this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ADVWatchingEnd';
}

static startSA_ADVWatchingEnd(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ADVList(builder:flatbuffers.Builder, ADVListOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, ADVListOffset, 0);
}

static endSA_ADVWatchingEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_ADVWatchingEnd(builder:flatbuffers.Builder, ADVListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_ADVWatchingEnd.startSA_ADVWatchingEnd(builder);
  SA_ADVWatchingEnd.add_ADVList(builder, ADVListOffset);
  return SA_ADVWatchingEnd.endSA_ADVWatchingEnd(builder);
}

unpack(): SA_ADVWatchingEndT {
  return new SA_ADVWatchingEndT(
    (this.ADVList() !== null ? this.ADVList()!.unpack() : null)
  );
}


unpackTo(_o: SA_ADVWatchingEndT): void {
  _o.ADVList = (this.ADVList() !== null ? this.ADVList()!.unpack() : null);
}
}

export class SA_ADVWatchingEndT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVList: AdvertisementDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_ADVWatchingEnd.createSA_ADVWatchingEnd(builder,
    (this.ADVList !== null ? this.ADVList!.pack(builder) : 0)
  );
}
}

export class CQ_ADVWatchingReward implements flatbuffers.IUnpackableObject<CQ_ADVWatchingRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ADVWatchingReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ADVWatchingReward(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVWatchingReward):CQ_ADVWatchingReward {
  return (obj || new CQ_ADVWatchingReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ADVWatchingReward(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVWatchingReward):CQ_ADVWatchingReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ADVWatchingReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ADVIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

ADVIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ADVIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ADVWatchingReward';
}

static startCQ_ADVWatchingReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ADVIDList(builder:flatbuffers.Builder, ADVIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ADVIDListOffset, 0);
}

static create_ADVIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ADVIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ADVIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_ADVIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_ADVWatchingReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ADVWatchingReward(builder:flatbuffers.Builder, ADVIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_ADVWatchingReward.startCQ_ADVWatchingReward(builder);
  CQ_ADVWatchingReward.add_ADVIDList(builder, ADVIDListOffset);
  return CQ_ADVWatchingReward.endCQ_ADVWatchingReward(builder);
}

unpack(): CQ_ADVWatchingRewardT {
  return new CQ_ADVWatchingRewardT(
    this.bb!.createScalarList<number>(this.ADVIDList.bind(this), this.ADVIDList_Length())
  );
}


unpackTo(_o: CQ_ADVWatchingRewardT): void {
  _o.ADVIDList = this.bb!.createScalarList<number>(this.ADVIDList.bind(this), this.ADVIDList_Length());
}
}

export class CQ_ADVWatchingRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ADVIDList = CQ_ADVWatchingReward.create_ADVIDList_Vector(builder, this.ADVIDList);

  return CQ_ADVWatchingReward.createCQ_ADVWatchingReward(builder,
    ADVIDList
  );
}
}

export class SA_ADVWatchingReward implements flatbuffers.IUnpackableObject<SA_ADVWatchingRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ADVWatchingReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ADVWatchingReward(bb:flatbuffers.ByteBuffer, obj?:SA_ADVWatchingReward):SA_ADVWatchingReward {
  return (obj || new SA_ADVWatchingReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ADVWatchingReward(bb:flatbuffers.ByteBuffer, obj?:SA_ADVWatchingReward):SA_ADVWatchingReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ADVWatchingReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ADVList(index: number, obj?:AdvertisementData):AdvertisementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AdvertisementData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ADVList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ADVWatchingReward';
}

static startSA_ADVWatchingReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ADVList(builder:flatbuffers.Builder, ADVListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ADVListOffset, 0);
}

static start_ADVList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static endSA_ADVWatchingReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_ADVWatchingRewardT {
  return new SA_ADVWatchingRewardT(
    this.bb!.createObjList<AdvertisementData, AdvertisementDataT>(this.ADVList.bind(this), this.ADVList_Length()),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_ADVWatchingRewardT): void {
  _o.ADVList = this.bb!.createObjList<AdvertisementData, AdvertisementDataT>(this.ADVList.bind(this), this.ADVList_Length());
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_ADVWatchingRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public ADVList: (AdvertisementDataT)[] = [],
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ADVList = builder.createStructOffsetList(this.ADVList, SA_ADVWatchingReward.start_ADVList_Vector);
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_ADVWatchingReward.startSA_ADVWatchingReward(builder);
  SA_ADVWatchingReward.add_ADVList(builder, ADVList);
  SA_ADVWatchingReward.add_RewardInfo(builder, RewardInfo);

  return SA_ADVWatchingReward.endSA_ADVWatchingReward(builder);
}
}

export class CQ_ADVExtraReward implements flatbuffers.IUnpackableObject<CQ_ADVExtraRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_ADVExtraReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_ADVExtraReward(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVExtraReward):CQ_ADVExtraReward {
  return (obj || new CQ_ADVExtraReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_ADVExtraReward(bb:flatbuffers.ByteBuffer, obj?:CQ_ADVExtraReward):CQ_ADVExtraReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_ADVExtraReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExtraRewardID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_ADVExtraReward';
}

static startCQ_ADVExtraReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ExtraRewardID(builder:flatbuffers.Builder, ExtraRewardID:number) {
  builder.addFieldInt32(0, ExtraRewardID, 0);
}

static endCQ_ADVExtraReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_ADVExtraReward(builder:flatbuffers.Builder, ExtraRewardID:number):flatbuffers.Offset {
  CQ_ADVExtraReward.startCQ_ADVExtraReward(builder);
  CQ_ADVExtraReward.add_ExtraRewardID(builder, ExtraRewardID);
  return CQ_ADVExtraReward.endCQ_ADVExtraReward(builder);
}

unpack(): CQ_ADVExtraRewardT {
  return new CQ_ADVExtraRewardT(
    this.ExtraRewardID()
  );
}


unpackTo(_o: CQ_ADVExtraRewardT): void {
  _o.ExtraRewardID = this.ExtraRewardID();
}
}

export class CQ_ADVExtraRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public ExtraRewardID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_ADVExtraReward.createCQ_ADVExtraReward(builder,
    this.ExtraRewardID
  );
}
}

export class SA_ADVExtraReward implements flatbuffers.IUnpackableObject<SA_ADVExtraRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_ADVExtraReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_ADVExtraReward(bb:flatbuffers.ByteBuffer, obj?:SA_ADVExtraReward):SA_ADVExtraReward {
  return (obj || new SA_ADVExtraReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_ADVExtraReward(bb:flatbuffers.ByteBuffer, obj?:SA_ADVExtraReward):SA_ADVExtraReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_ADVExtraReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ReceivedExtraRewardID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_ADVExtraReward';
}

static startSA_ADVExtraReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ReceivedExtraRewardID(builder:flatbuffers.Builder, ReceivedExtraRewardID:number) {
  builder.addFieldInt32(0, ReceivedExtraRewardID, 0);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static endSA_ADVExtraReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_ADVExtraRewardT {
  return new SA_ADVExtraRewardT(
    this.ReceivedExtraRewardID(),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_ADVExtraRewardT): void {
  _o.ReceivedExtraRewardID = this.ReceivedExtraRewardID();
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_ADVExtraRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public ReceivedExtraRewardID: number = 0,
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_ADVExtraReward.startSA_ADVExtraReward(builder);
  SA_ADVExtraReward.add_ReceivedExtraRewardID(builder, this.ReceivedExtraRewardID);
  SA_ADVExtraReward.add_RewardInfo(builder, RewardInfo);

  return SA_ADVExtraReward.endSA_ADVExtraReward(builder);
}
}

export class SN_CouponComplete implements flatbuffers.IUnpackableObject<SN_CouponCompleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_CouponComplete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_CouponComplete(bb:flatbuffers.ByteBuffer, obj?:SN_CouponComplete):SN_CouponComplete {
  return (obj || new SN_CouponComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_CouponComplete(bb:flatbuffers.ByteBuffer, obj?:SN_CouponComplete):SN_CouponComplete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_CouponComplete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TID():string|null
TID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ItemID():string|null
ItemID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ItemID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ItemCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_CouponComplete';
}

static startSN_CouponComplete(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_TID(builder:flatbuffers.Builder, TIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TIDOffset, 0);
}

static add_ItemID(builder:flatbuffers.Builder, ItemIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ItemIDOffset, 0);
}

static add_ItemCount(builder:flatbuffers.Builder, ItemCount:number) {
  builder.addFieldInt32(2, ItemCount, 0);
}

static endSN_CouponComplete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_CouponComplete(builder:flatbuffers.Builder, TIDOffset:flatbuffers.Offset, ItemIDOffset:flatbuffers.Offset, ItemCount:number):flatbuffers.Offset {
  SN_CouponComplete.startSN_CouponComplete(builder);
  SN_CouponComplete.add_TID(builder, TIDOffset);
  SN_CouponComplete.add_ItemID(builder, ItemIDOffset);
  SN_CouponComplete.add_ItemCount(builder, ItemCount);
  return SN_CouponComplete.endSN_CouponComplete(builder);
}

unpack(): SN_CouponCompleteT {
  return new SN_CouponCompleteT(
    this.TID(),
    this.ItemID(),
    this.ItemCount()
  );
}


unpackTo(_o: SN_CouponCompleteT): void {
  _o.TID = this.TID();
  _o.ItemID = this.ItemID();
  _o.ItemCount = this.ItemCount();
}
}

export class SN_CouponCompleteT implements flatbuffers.IGeneratedObject {
constructor(
  public TID: string|Uint8Array|null = null,
  public ItemID: string|Uint8Array|null = null,
  public ItemCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TID = (this.TID !== null ? builder.createString(this.TID!) : 0);
  const ItemID = (this.ItemID !== null ? builder.createString(this.ItemID!) : 0);

  return SN_CouponComplete.createSN_CouponComplete(builder,
    TID,
    ItemID,
    this.ItemCount
  );
}
}

export class LobbyToDedi_OpenWorldUserData implements flatbuffers.IUnpackableObject<LobbyToDedi_OpenWorldUserDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_OpenWorldUserData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_OpenWorldUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_OpenWorldUserData):LobbyToDedi_OpenWorldUserData {
  return (obj || new LobbyToDedi_OpenWorldUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_OpenWorldUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_OpenWorldUserData):LobbyToDedi_OpenWorldUserData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_OpenWorldUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

EquipPetID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

VehicleID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LastPosition():string|null
LastPosition(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LastPosition(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NotExistsUser():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_OpenWorldUserData';
}

static startLobbyToDedi_OpenWorldUserData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, BodySkinOffset, 0);
}

static add_EquipPetID(builder:flatbuffers.Builder, EquipPetID:number) {
  builder.addFieldInt32(5, EquipPetID, 0);
}

static add_VehicleID(builder:flatbuffers.Builder, VehicleID:number) {
  builder.addFieldInt32(6, VehicleID, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(7, EntitlementID, 0);
}

static add_LastPosition(builder:flatbuffers.Builder, LastPositionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, LastPositionOffset, 0);
}

static add_NotExistsUser(builder:flatbuffers.Builder, NotExistsUser:boolean) {
  builder.addFieldInt8(9, +NotExistsUser, +false);
}

static endLobbyToDedi_OpenWorldUserData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): LobbyToDedi_OpenWorldUserDataT {
  return new LobbyToDedi_OpenWorldUserDataT(
    this.UID(),
    this.Nick(),
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null),
    this.EquipPetID(),
    this.VehicleID(),
    this.EntitlementID(),
    this.LastPosition(),
    this.NotExistsUser()
  );
}


unpackTo(_o: LobbyToDedi_OpenWorldUserDataT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
  _o.EquipPetID = this.EquipPetID();
  _o.VehicleID = this.VehicleID();
  _o.EntitlementID = this.EntitlementID();
  _o.LastPosition = this.LastPosition();
  _o.NotExistsUser = this.NotExistsUser();
}
}

export class LobbyToDedi_OpenWorldUserDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null,
  public EquipPetID: number = 0,
  public VehicleID: number = 0,
  public EntitlementID: number = 0,
  public LastPosition: string|Uint8Array|null = null,
  public NotExistsUser: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);
  const LastPosition = (this.LastPosition !== null ? builder.createString(this.LastPosition!) : 0);

  LobbyToDedi_OpenWorldUserData.startLobbyToDedi_OpenWorldUserData(builder);
  LobbyToDedi_OpenWorldUserData.add_UID(builder, this.UID);
  LobbyToDedi_OpenWorldUserData.add_Nick(builder, Nick);
  LobbyToDedi_OpenWorldUserData.add_Hero(builder, Hero);
  LobbyToDedi_OpenWorldUserData.add_HairSkin(builder, HairSkin);
  LobbyToDedi_OpenWorldUserData.add_BodySkin(builder, BodySkin);
  LobbyToDedi_OpenWorldUserData.add_EquipPetID(builder, this.EquipPetID);
  LobbyToDedi_OpenWorldUserData.add_VehicleID(builder, this.VehicleID);
  LobbyToDedi_OpenWorldUserData.add_EntitlementID(builder, this.EntitlementID);
  LobbyToDedi_OpenWorldUserData.add_LastPosition(builder, LastPosition);
  LobbyToDedi_OpenWorldUserData.add_NotExistsUser(builder, this.NotExistsUser);

  return LobbyToDedi_OpenWorldUserData.endLobbyToDedi_OpenWorldUserData(builder);
}
}

export class LobbyToDedi_GoldClashUserData implements flatbuffers.IUnpackableObject<LobbyToDedi_GoldClashUserDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_GoldClashUserData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_GoldClashUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_GoldClashUserData):LobbyToDedi_GoldClashUserData {
  return (obj || new LobbyToDedi_GoldClashUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_GoldClashUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_GoldClashUserData):LobbyToDedi_GoldClashUserData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_GoldClashUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

ArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DeckArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

DeckArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

Pet(obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

WinningStreak():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RankingPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ExpressionID(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

ExpressionID_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ExpressionID_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

NotExistsUser():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_GoldClashUserData';
}

static startLobbyToDedi_GoldClashUserData(builder:flatbuffers.Builder) {
  builder.startObject(14);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, TeamIDOffset, 0);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, BodySkinOffset, 0);
}

static add_ArtifactList(builder:flatbuffers.Builder, ArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ArtifactListOffset, 0);
}

static start_ArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static add_DeckArtifactList(builder:flatbuffers.Builder, DeckArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, DeckArtifactListOffset, 0);
}

static start_DeckArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static add_Pet(builder:flatbuffers.Builder, PetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, PetOffset, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(9, EntitlementID, 0);
}

static add_WinningStreak(builder:flatbuffers.Builder, WinningStreak:number) {
  builder.addFieldInt32(10, WinningStreak, 0);
}

static add_RankingPoint(builder:flatbuffers.Builder, RankingPoint:number) {
  builder.addFieldInt32(11, RankingPoint, 0);
}

static add_ExpressionID(builder:flatbuffers.Builder, ExpressionIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, ExpressionIDOffset, 0);
}

static create_ExpressionID_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_ExpressionID_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_ExpressionID_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_ExpressionID_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_NotExistsUser(builder:flatbuffers.Builder, NotExistsUser:boolean) {
  builder.addFieldInt8(13, +NotExistsUser, +false);
}

static endLobbyToDedi_GoldClashUserData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): LobbyToDedi_GoldClashUserDataT {
  return new LobbyToDedi_GoldClashUserDataT(
    this.UID(),
    this.Nick(),
    this.TeamID(),
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null),
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ArtifactList.bind(this), this.ArtifactList_Length()),
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.DeckArtifactList.bind(this), this.DeckArtifactList_Length()),
    (this.Pet() !== null ? this.Pet()!.unpack() : null),
    this.EntitlementID(),
    this.WinningStreak(),
    this.RankingPoint(),
    this.bb!.createScalarList<number>(this.ExpressionID.bind(this), this.ExpressionID_Length()),
    this.NotExistsUser()
  );
}


unpackTo(_o: LobbyToDedi_GoldClashUserDataT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.TeamID = this.TeamID();
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
  _o.ArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ArtifactList.bind(this), this.ArtifactList_Length());
  _o.DeckArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.DeckArtifactList.bind(this), this.DeckArtifactList_Length());
  _o.Pet = (this.Pet() !== null ? this.Pet()!.unpack() : null);
  _o.EntitlementID = this.EntitlementID();
  _o.WinningStreak = this.WinningStreak();
  _o.RankingPoint = this.RankingPoint();
  _o.ExpressionID = this.bb!.createScalarList<number>(this.ExpressionID.bind(this), this.ExpressionID_Length());
  _o.NotExistsUser = this.NotExistsUser();
}
}

export class LobbyToDedi_GoldClashUserDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public TeamID: string|Uint8Array|null = null,
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null,
  public ArtifactList: (ArtifactDataT)[] = [],
  public DeckArtifactList: (ArtifactDataT)[] = [],
  public Pet: PetDataT|null = null,
  public EntitlementID: number = 0,
  public WinningStreak: number = 0,
  public RankingPoint: number = 0,
  public ExpressionID: (number)[] = [],
  public NotExistsUser: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);
  const ArtifactList = builder.createStructOffsetList(this.ArtifactList, LobbyToDedi_GoldClashUserData.start_ArtifactList_Vector);
  const DeckArtifactList = builder.createStructOffsetList(this.DeckArtifactList, LobbyToDedi_GoldClashUserData.start_DeckArtifactList_Vector);
  const Pet = (this.Pet !== null ? this.Pet!.pack(builder) : 0);
  const ExpressionID = LobbyToDedi_GoldClashUserData.create_ExpressionID_Vector(builder, this.ExpressionID);

  LobbyToDedi_GoldClashUserData.startLobbyToDedi_GoldClashUserData(builder);
  LobbyToDedi_GoldClashUserData.add_UID(builder, this.UID);
  LobbyToDedi_GoldClashUserData.add_Nick(builder, Nick);
  LobbyToDedi_GoldClashUserData.add_TeamID(builder, TeamID);
  LobbyToDedi_GoldClashUserData.add_Hero(builder, Hero);
  LobbyToDedi_GoldClashUserData.add_HairSkin(builder, HairSkin);
  LobbyToDedi_GoldClashUserData.add_BodySkin(builder, BodySkin);
  LobbyToDedi_GoldClashUserData.add_ArtifactList(builder, ArtifactList);
  LobbyToDedi_GoldClashUserData.add_DeckArtifactList(builder, DeckArtifactList);
  LobbyToDedi_GoldClashUserData.add_Pet(builder, Pet);
  LobbyToDedi_GoldClashUserData.add_EntitlementID(builder, this.EntitlementID);
  LobbyToDedi_GoldClashUserData.add_WinningStreak(builder, this.WinningStreak);
  LobbyToDedi_GoldClashUserData.add_RankingPoint(builder, this.RankingPoint);
  LobbyToDedi_GoldClashUserData.add_ExpressionID(builder, ExpressionID);
  LobbyToDedi_GoldClashUserData.add_NotExistsUser(builder, this.NotExistsUser);

  return LobbyToDedi_GoldClashUserData.endLobbyToDedi_GoldClashUserData(builder);
}
}

export class LobbyToDedi_RaidUserData implements flatbuffers.IUnpackableObject<LobbyToDedi_RaidUserDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_RaidUserData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_RaidUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_RaidUserData):LobbyToDedi_RaidUserData {
  return (obj || new LobbyToDedi_RaidUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_RaidUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_RaidUserData):LobbyToDedi_RaidUserData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_RaidUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

ArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

DeckArtifactList(index: number, obj?:ArtifactData):ArtifactData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new ArtifactData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

DeckArtifactList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NotExistsUser():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_RaidUserData';
}

static startLobbyToDedi_RaidUserData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, TeamIDOffset, 0);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, BodySkinOffset, 0);
}

static add_ArtifactList(builder:flatbuffers.Builder, ArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ArtifactListOffset, 0);
}

static start_ArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static add_DeckArtifactList(builder:flatbuffers.Builder, DeckArtifactListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, DeckArtifactListOffset, 0);
}

static start_DeckArtifactList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(8, EntitlementID, 0);
}

static add_NotExistsUser(builder:flatbuffers.Builder, NotExistsUser:boolean) {
  builder.addFieldInt8(9, +NotExistsUser, +false);
}

static endLobbyToDedi_RaidUserData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): LobbyToDedi_RaidUserDataT {
  return new LobbyToDedi_RaidUserDataT(
    this.UID(),
    this.Nick(),
    this.TeamID(),
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null),
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ArtifactList.bind(this), this.ArtifactList_Length()),
    this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.DeckArtifactList.bind(this), this.DeckArtifactList_Length()),
    this.EntitlementID(),
    this.NotExistsUser()
  );
}


unpackTo(_o: LobbyToDedi_RaidUserDataT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.TeamID = this.TeamID();
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
  _o.ArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.ArtifactList.bind(this), this.ArtifactList_Length());
  _o.DeckArtifactList = this.bb!.createObjList<ArtifactData, ArtifactDataT>(this.DeckArtifactList.bind(this), this.DeckArtifactList_Length());
  _o.EntitlementID = this.EntitlementID();
  _o.NotExistsUser = this.NotExistsUser();
}
}

export class LobbyToDedi_RaidUserDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public TeamID: string|Uint8Array|null = null,
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null,
  public ArtifactList: (ArtifactDataT)[] = [],
  public DeckArtifactList: (ArtifactDataT)[] = [],
  public EntitlementID: number = 0,
  public NotExistsUser: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);
  const ArtifactList = builder.createStructOffsetList(this.ArtifactList, LobbyToDedi_RaidUserData.start_ArtifactList_Vector);
  const DeckArtifactList = builder.createStructOffsetList(this.DeckArtifactList, LobbyToDedi_RaidUserData.start_DeckArtifactList_Vector);

  LobbyToDedi_RaidUserData.startLobbyToDedi_RaidUserData(builder);
  LobbyToDedi_RaidUserData.add_UID(builder, this.UID);
  LobbyToDedi_RaidUserData.add_Nick(builder, Nick);
  LobbyToDedi_RaidUserData.add_TeamID(builder, TeamID);
  LobbyToDedi_RaidUserData.add_Hero(builder, Hero);
  LobbyToDedi_RaidUserData.add_HairSkin(builder, HairSkin);
  LobbyToDedi_RaidUserData.add_BodySkin(builder, BodySkin);
  LobbyToDedi_RaidUserData.add_ArtifactList(builder, ArtifactList);
  LobbyToDedi_RaidUserData.add_DeckArtifactList(builder, DeckArtifactList);
  LobbyToDedi_RaidUserData.add_EntitlementID(builder, this.EntitlementID);
  LobbyToDedi_RaidUserData.add_NotExistsUser(builder, this.NotExistsUser);

  return LobbyToDedi_RaidUserData.endLobbyToDedi_RaidUserData(builder);
}
}

export class AISpawnInfo implements flatbuffers.IUnpackableObject<AISpawnInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AISpawnInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAISpawnInfo(bb:flatbuffers.ByteBuffer, obj?:AISpawnInfo):AISpawnInfo {
  return (obj || new AISpawnInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAISpawnInfo(bb:flatbuffers.ByteBuffer, obj?:AISpawnInfo):AISpawnInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AISpawnInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

HeroAITableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.AISpawnInfo';
}

static startAISpawnInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, TeamIDOffset, 0);
}

static add_HeroAITableID(builder:flatbuffers.Builder, HeroAITableID:number) {
  builder.addFieldInt32(1, HeroAITableID, 0);
}

static endAISpawnInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAISpawnInfo(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset, HeroAITableID:number):flatbuffers.Offset {
  AISpawnInfo.startAISpawnInfo(builder);
  AISpawnInfo.add_TeamID(builder, TeamIDOffset);
  AISpawnInfo.add_HeroAITableID(builder, HeroAITableID);
  return AISpawnInfo.endAISpawnInfo(builder);
}

unpack(): AISpawnInfoT {
  return new AISpawnInfoT(
    this.TeamID(),
    this.HeroAITableID()
  );
}


unpackTo(_o: AISpawnInfoT): void {
  _o.TeamID = this.TeamID();
  _o.HeroAITableID = this.HeroAITableID();
}
}

export class AISpawnInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public TeamID: string|Uint8Array|null = null,
  public HeroAITableID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);

  return AISpawnInfo.createAISpawnInfo(builder,
    TeamID,
    this.HeroAITableID
  );
}
}

export class PlayerSpawnInfo implements flatbuffers.IUnpackableObject<PlayerSpawnInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayerSpawnInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlayerSpawnInfo(bb:flatbuffers.ByteBuffer, obj?:PlayerSpawnInfo):PlayerSpawnInfo {
  return (obj || new PlayerSpawnInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlayerSpawnInfo(bb:flatbuffers.ByteBuffer, obj?:PlayerSpawnInfo):PlayerSpawnInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlayerSpawnInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LobbyID():string|null
LobbyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
LobbyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.PlayerSpawnInfo';
}

static startPlayerSpawnInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_LobbyID(builder:flatbuffers.Builder, LobbyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, LobbyIDOffset, 0);
}

static endPlayerSpawnInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlayerSpawnInfo(builder:flatbuffers.Builder, UID:number, LobbyIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  PlayerSpawnInfo.startPlayerSpawnInfo(builder);
  PlayerSpawnInfo.add_UID(builder, UID);
  PlayerSpawnInfo.add_LobbyID(builder, LobbyIDOffset);
  return PlayerSpawnInfo.endPlayerSpawnInfo(builder);
}

unpack(): PlayerSpawnInfoT {
  return new PlayerSpawnInfoT(
    this.UID(),
    this.LobbyID()
  );
}


unpackTo(_o: PlayerSpawnInfoT): void {
  _o.UID = this.UID();
  _o.LobbyID = this.LobbyID();
}
}

export class PlayerSpawnInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public LobbyID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const LobbyID = (this.LobbyID !== null ? builder.createString(this.LobbyID!) : 0);

  return PlayerSpawnInfo.createPlayerSpawnInfo(builder,
    this.UID,
    LobbyID
  );
}
}

export class LobbyToDedi_SetGameSetting implements flatbuffers.IUnpackableObject<LobbyToDedi_SetGameSettingT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_SetGameSetting {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_SetGameSetting(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_SetGameSetting):LobbyToDedi_SetGameSetting {
  return (obj || new LobbyToDedi_SetGameSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_SetGameSetting(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_SetGameSetting):LobbyToDedi_SetGameSetting {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_SetGameSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TeamMembers():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AISpawnList(index: number, obj?:AISpawnInfo):AISpawnInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AISpawnInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

AISpawnList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsCustomMatch():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

TeamCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RunningTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PlayerSpawnList(index: number, obj?:PlayerSpawnInfo):PlayerSpawnInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new PlayerSpawnInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

PlayerSpawnList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_SetGameSetting';
}

static startLobbyToDedi_SetGameSetting(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_TeamMembers(builder:flatbuffers.Builder, TeamMembers:number) {
  builder.addFieldInt32(0, TeamMembers, 0);
}

static add_AISpawnList(builder:flatbuffers.Builder, AISpawnListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, AISpawnListOffset, 0);
}

static create_AISpawnList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_AISpawnList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MatchIDOffset, 0);
}

static add_IsCustomMatch(builder:flatbuffers.Builder, IsCustomMatch:boolean) {
  builder.addFieldInt8(3, +IsCustomMatch, +false);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(4, MatchingTableID, 0);
}

static add_TeamCount(builder:flatbuffers.Builder, TeamCount:number) {
  builder.addFieldInt32(5, TeamCount, 0);
}

static add_RunningTime(builder:flatbuffers.Builder, RunningTime:number) {
  builder.addFieldInt32(6, RunningTime, 0);
}

static add_PlayerSpawnList(builder:flatbuffers.Builder, PlayerSpawnListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, PlayerSpawnListOffset, 0);
}

static create_PlayerSpawnList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_PlayerSpawnList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endLobbyToDedi_SetGameSetting(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToDedi_SetGameSetting(builder:flatbuffers.Builder, TeamMembers:number, AISpawnListOffset:flatbuffers.Offset, MatchIDOffset:flatbuffers.Offset, IsCustomMatch:boolean, MatchingTableID:number, TeamCount:number, RunningTime:number, PlayerSpawnListOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToDedi_SetGameSetting.startLobbyToDedi_SetGameSetting(builder);
  LobbyToDedi_SetGameSetting.add_TeamMembers(builder, TeamMembers);
  LobbyToDedi_SetGameSetting.add_AISpawnList(builder, AISpawnListOffset);
  LobbyToDedi_SetGameSetting.add_MatchID(builder, MatchIDOffset);
  LobbyToDedi_SetGameSetting.add_IsCustomMatch(builder, IsCustomMatch);
  LobbyToDedi_SetGameSetting.add_MatchingTableID(builder, MatchingTableID);
  LobbyToDedi_SetGameSetting.add_TeamCount(builder, TeamCount);
  LobbyToDedi_SetGameSetting.add_RunningTime(builder, RunningTime);
  LobbyToDedi_SetGameSetting.add_PlayerSpawnList(builder, PlayerSpawnListOffset);
  return LobbyToDedi_SetGameSetting.endLobbyToDedi_SetGameSetting(builder);
}

unpack(): LobbyToDedi_SetGameSettingT {
  return new LobbyToDedi_SetGameSettingT(
    this.TeamMembers(),
    this.bb!.createObjList<AISpawnInfo, AISpawnInfoT>(this.AISpawnList.bind(this), this.AISpawnList_Length()),
    this.MatchID(),
    this.IsCustomMatch(),
    this.MatchingTableID(),
    this.TeamCount(),
    this.RunningTime(),
    this.bb!.createObjList<PlayerSpawnInfo, PlayerSpawnInfoT>(this.PlayerSpawnList.bind(this), this.PlayerSpawnList_Length())
  );
}


unpackTo(_o: LobbyToDedi_SetGameSettingT): void {
  _o.TeamMembers = this.TeamMembers();
  _o.AISpawnList = this.bb!.createObjList<AISpawnInfo, AISpawnInfoT>(this.AISpawnList.bind(this), this.AISpawnList_Length());
  _o.MatchID = this.MatchID();
  _o.IsCustomMatch = this.IsCustomMatch();
  _o.MatchingTableID = this.MatchingTableID();
  _o.TeamCount = this.TeamCount();
  _o.RunningTime = this.RunningTime();
  _o.PlayerSpawnList = this.bb!.createObjList<PlayerSpawnInfo, PlayerSpawnInfoT>(this.PlayerSpawnList.bind(this), this.PlayerSpawnList_Length());
}
}

export class LobbyToDedi_SetGameSettingT implements flatbuffers.IGeneratedObject {
constructor(
  public TeamMembers: number = 0,
  public AISpawnList: (AISpawnInfoT)[] = [],
  public MatchID: string|Uint8Array|null = null,
  public IsCustomMatch: boolean = false,
  public MatchingTableID: number = 0,
  public TeamCount: number = 0,
  public RunningTime: number = 0,
  public PlayerSpawnList: (PlayerSpawnInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const AISpawnList = LobbyToDedi_SetGameSetting.create_AISpawnList_Vector(builder, builder.createObjectOffsetList(this.AISpawnList));
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);
  const PlayerSpawnList = LobbyToDedi_SetGameSetting.create_PlayerSpawnList_Vector(builder, builder.createObjectOffsetList(this.PlayerSpawnList));

  return LobbyToDedi_SetGameSetting.createLobbyToDedi_SetGameSetting(builder,
    this.TeamMembers,
    AISpawnList,
    MatchID,
    this.IsCustomMatch,
    this.MatchingTableID,
    this.TeamCount,
    this.RunningTime,
    PlayerSpawnList
  );
}
}

export class LobbyToDedi_ExecCommand implements flatbuffers.IUnpackableObject<LobbyToDedi_ExecCommandT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_ExecCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_ExecCommand(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_ExecCommand):LobbyToDedi_ExecCommand {
  return (obj || new LobbyToDedi_ExecCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_ExecCommand(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_ExecCommand):LobbyToDedi_ExecCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_ExecCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ExecCommand():string|null
ExecCommand(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ExecCommand(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_ExecCommand';
}

static startLobbyToDedi_ExecCommand(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ExecCommand(builder:flatbuffers.Builder, ExecCommandOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ExecCommandOffset, 0);
}

static endLobbyToDedi_ExecCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToDedi_ExecCommand(builder:flatbuffers.Builder, ExecCommandOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToDedi_ExecCommand.startLobbyToDedi_ExecCommand(builder);
  LobbyToDedi_ExecCommand.add_ExecCommand(builder, ExecCommandOffset);
  return LobbyToDedi_ExecCommand.endLobbyToDedi_ExecCommand(builder);
}

unpack(): LobbyToDedi_ExecCommandT {
  return new LobbyToDedi_ExecCommandT(
    this.ExecCommand()
  );
}


unpackTo(_o: LobbyToDedi_ExecCommandT): void {
  _o.ExecCommand = this.ExecCommand();
}
}

export class LobbyToDedi_ExecCommandT implements flatbuffers.IGeneratedObject {
constructor(
  public ExecCommand: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ExecCommand = (this.ExecCommand !== null ? builder.createString(this.ExecCommand!) : 0);

  return LobbyToDedi_ExecCommand.createLobbyToDedi_ExecCommand(builder,
    ExecCommand
  );
}
}

export class LobbyToDedi_OpenWorldTime implements flatbuffers.IUnpackableObject<LobbyToDedi_OpenWorldTimeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_OpenWorldTime {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_OpenWorldTime(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_OpenWorldTime):LobbyToDedi_OpenWorldTime {
  return (obj || new LobbyToDedi_OpenWorldTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_OpenWorldTime(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_OpenWorldTime):LobbyToDedi_OpenWorldTime {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_OpenWorldTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

StartAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Minutes():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Multiply():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_OpenWorldTime';
}

static startLobbyToDedi_OpenWorldTime(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_StartAt(builder:flatbuffers.Builder, StartAt:number) {
  builder.addFieldInt32(0, StartAt, 0);
}

static add_Minutes(builder:flatbuffers.Builder, Minutes:number) {
  builder.addFieldInt32(1, Minutes, 0);
}

static add_Multiply(builder:flatbuffers.Builder, Multiply:number) {
  builder.addFieldFloat32(2, Multiply, 0.0);
}

static endLobbyToDedi_OpenWorldTime(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToDedi_OpenWorldTime(builder:flatbuffers.Builder, StartAt:number, Minutes:number, Multiply:number):flatbuffers.Offset {
  LobbyToDedi_OpenWorldTime.startLobbyToDedi_OpenWorldTime(builder);
  LobbyToDedi_OpenWorldTime.add_StartAt(builder, StartAt);
  LobbyToDedi_OpenWorldTime.add_Minutes(builder, Minutes);
  LobbyToDedi_OpenWorldTime.add_Multiply(builder, Multiply);
  return LobbyToDedi_OpenWorldTime.endLobbyToDedi_OpenWorldTime(builder);
}

unpack(): LobbyToDedi_OpenWorldTimeT {
  return new LobbyToDedi_OpenWorldTimeT(
    this.StartAt(),
    this.Minutes(),
    this.Multiply()
  );
}


unpackTo(_o: LobbyToDedi_OpenWorldTimeT): void {
  _o.StartAt = this.StartAt();
  _o.Minutes = this.Minutes();
  _o.Multiply = this.Multiply();
}
}

export class LobbyToDedi_OpenWorldTimeT implements flatbuffers.IGeneratedObject {
constructor(
  public StartAt: number = 0,
  public Minutes: number = 0,
  public Multiply: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return LobbyToDedi_OpenWorldTime.createLobbyToDedi_OpenWorldTime(builder,
    this.StartAt,
    this.Minutes,
    this.Multiply
  );
}
}

export class LobbyToDedi_EntitlementAdd implements flatbuffers.IUnpackableObject<LobbyToDedi_EntitlementAddT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_EntitlementAdd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_EntitlementAdd(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_EntitlementAdd):LobbyToDedi_EntitlementAdd {
  return (obj || new LobbyToDedi_EntitlementAdd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_EntitlementAdd(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_EntitlementAdd):LobbyToDedi_EntitlementAdd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_EntitlementAdd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

EntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_EntitlementAdd';
}

static startLobbyToDedi_EntitlementAdd(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_EntitlementID(builder:flatbuffers.Builder, EntitlementID:number) {
  builder.addFieldInt32(1, EntitlementID, 0);
}

static endLobbyToDedi_EntitlementAdd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToDedi_EntitlementAdd(builder:flatbuffers.Builder, UID:number, EntitlementID:number):flatbuffers.Offset {
  LobbyToDedi_EntitlementAdd.startLobbyToDedi_EntitlementAdd(builder);
  LobbyToDedi_EntitlementAdd.add_UID(builder, UID);
  LobbyToDedi_EntitlementAdd.add_EntitlementID(builder, EntitlementID);
  return LobbyToDedi_EntitlementAdd.endLobbyToDedi_EntitlementAdd(builder);
}

unpack(): LobbyToDedi_EntitlementAddT {
  return new LobbyToDedi_EntitlementAddT(
    this.UID(),
    this.EntitlementID()
  );
}


unpackTo(_o: LobbyToDedi_EntitlementAddT): void {
  _o.UID = this.UID();
  _o.EntitlementID = this.EntitlementID();
}
}

export class LobbyToDedi_EntitlementAddT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public EntitlementID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return LobbyToDedi_EntitlementAdd.createLobbyToDedi_EntitlementAdd(builder,
    this.UID,
    this.EntitlementID
  );
}
}

export class LobbyToDedi_WaitRoomUserData implements flatbuffers.IUnpackableObject<LobbyToDedi_WaitRoomUserDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_WaitRoomUserData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_WaitRoomUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_WaitRoomUserData):LobbyToDedi_WaitRoomUserData {
  return (obj || new LobbyToDedi_WaitRoomUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_WaitRoomUserData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_WaitRoomUserData):LobbyToDedi_WaitRoomUserData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_WaitRoomUserData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Nick():string|null
Nick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Nick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

EquipPetID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

NotExistsUser():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_WaitRoomUserData';
}

static startLobbyToDedi_WaitRoomUserData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Nick(builder:flatbuffers.Builder, NickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NickOffset, 0);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, TeamIDOffset, 0);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, BodySkinOffset, 0);
}

static add_EquipPetID(builder:flatbuffers.Builder, EquipPetID:number) {
  builder.addFieldInt32(6, EquipPetID, 0);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(7, BigInt(PetUniqueID), BigInt(0));
}

static add_NotExistsUser(builder:flatbuffers.Builder, NotExistsUser:boolean) {
  builder.addFieldInt8(8, +NotExistsUser, +false);
}

static endLobbyToDedi_WaitRoomUserData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): LobbyToDedi_WaitRoomUserDataT {
  return new LobbyToDedi_WaitRoomUserDataT(
    this.UID(),
    this.Nick(),
    this.TeamID(),
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null),
    this.EquipPetID(),
    this.PetUniqueID(),
    this.NotExistsUser()
  );
}


unpackTo(_o: LobbyToDedi_WaitRoomUserDataT): void {
  _o.UID = this.UID();
  _o.Nick = this.Nick();
  _o.TeamID = this.TeamID();
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
  _o.EquipPetID = this.EquipPetID();
  _o.PetUniqueID = this.PetUniqueID();
  _o.NotExistsUser = this.NotExistsUser();
}
}

export class LobbyToDedi_WaitRoomUserDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Nick: string|Uint8Array|null = null,
  public TeamID: string|Uint8Array|null = null,
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null,
  public EquipPetID: number = 0,
  public PetUniqueID: number = 0,
  public NotExistsUser: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Nick = (this.Nick !== null ? builder.createString(this.Nick!) : 0);
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);

  LobbyToDedi_WaitRoomUserData.startLobbyToDedi_WaitRoomUserData(builder);
  LobbyToDedi_WaitRoomUserData.add_UID(builder, this.UID);
  LobbyToDedi_WaitRoomUserData.add_Nick(builder, Nick);
  LobbyToDedi_WaitRoomUserData.add_TeamID(builder, TeamID);
  LobbyToDedi_WaitRoomUserData.add_Hero(builder, Hero);
  LobbyToDedi_WaitRoomUserData.add_HairSkin(builder, HairSkin);
  LobbyToDedi_WaitRoomUserData.add_BodySkin(builder, BodySkin);
  LobbyToDedi_WaitRoomUserData.add_EquipPetID(builder, this.EquipPetID);
  LobbyToDedi_WaitRoomUserData.add_PetUniqueID(builder, this.PetUniqueID);
  LobbyToDedi_WaitRoomUserData.add_NotExistsUser(builder, this.NotExistsUser);

  return LobbyToDedi_WaitRoomUserData.endLobbyToDedi_WaitRoomUserData(builder);
}
}

export class LobbyToDedi_WaitRoomFinish implements flatbuffers.IUnpackableObject<LobbyToDedi_WaitRoomFinishT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_WaitRoomFinish {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_WaitRoomFinish(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_WaitRoomFinish):LobbyToDedi_WaitRoomFinish {
  return (obj || new LobbyToDedi_WaitRoomFinish()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_WaitRoomFinish(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_WaitRoomFinish):LobbyToDedi_WaitRoomFinish {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_WaitRoomFinish()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_WaitRoomFinish';
}

static startLobbyToDedi_WaitRoomFinish(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static endLobbyToDedi_WaitRoomFinish(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToDedi_WaitRoomFinish(builder:flatbuffers.Builder, UID:number):flatbuffers.Offset {
  LobbyToDedi_WaitRoomFinish.startLobbyToDedi_WaitRoomFinish(builder);
  LobbyToDedi_WaitRoomFinish.add_UID(builder, UID);
  return LobbyToDedi_WaitRoomFinish.endLobbyToDedi_WaitRoomFinish(builder);
}

unpack(): LobbyToDedi_WaitRoomFinishT {
  return new LobbyToDedi_WaitRoomFinishT(
    this.UID()
  );
}


unpackTo(_o: LobbyToDedi_WaitRoomFinishT): void {
  _o.UID = this.UID();
}
}

export class LobbyToDedi_WaitRoomFinishT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return LobbyToDedi_WaitRoomFinish.createLobbyToDedi_WaitRoomFinish(builder,
    this.UID
  );
}
}

export class LobbyToDedi_HeroData implements flatbuffers.IUnpackableObject<LobbyToDedi_HeroDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_HeroData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_HeroData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_HeroData):LobbyToDedi_HeroData {
  return (obj || new LobbyToDedi_HeroData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_HeroData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_HeroData):LobbyToDedi_HeroData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_HeroData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Hero(obj?:HeroData):HeroData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new HeroData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

HairSkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

BodySkin(obj?:HeroSkinData):HeroSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroSkinData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_HeroData';
}

static startLobbyToDedi_HeroData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_Hero(builder:flatbuffers.Builder, HeroOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, HeroOffset, 0);
}

static add_HairSkin(builder:flatbuffers.Builder, HairSkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, HairSkinOffset, 0);
}

static add_BodySkin(builder:flatbuffers.Builder, BodySkinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, BodySkinOffset, 0);
}

static endLobbyToDedi_HeroData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): LobbyToDedi_HeroDataT {
  return new LobbyToDedi_HeroDataT(
    this.UID(),
    (this.Hero() !== null ? this.Hero()!.unpack() : null),
    (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null),
    (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null)
  );
}


unpackTo(_o: LobbyToDedi_HeroDataT): void {
  _o.UID = this.UID();
  _o.Hero = (this.Hero() !== null ? this.Hero()!.unpack() : null);
  _o.HairSkin = (this.HairSkin() !== null ? this.HairSkin()!.unpack() : null);
  _o.BodySkin = (this.BodySkin() !== null ? this.BodySkin()!.unpack() : null);
}
}

export class LobbyToDedi_HeroDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public Hero: HeroDataT|null = null,
  public HairSkin: HeroSkinDataT|null = null,
  public BodySkin: HeroSkinDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Hero = (this.Hero !== null ? this.Hero!.pack(builder) : 0);
  const HairSkin = (this.HairSkin !== null ? this.HairSkin!.pack(builder) : 0);
  const BodySkin = (this.BodySkin !== null ? this.BodySkin!.pack(builder) : 0);

  LobbyToDedi_HeroData.startLobbyToDedi_HeroData(builder);
  LobbyToDedi_HeroData.add_UID(builder, this.UID);
  LobbyToDedi_HeroData.add_Hero(builder, Hero);
  LobbyToDedi_HeroData.add_HairSkin(builder, HairSkin);
  LobbyToDedi_HeroData.add_BodySkin(builder, BodySkin);

  return LobbyToDedi_HeroData.endLobbyToDedi_HeroData(builder);
}
}

export class LobbyToDedi_HeroSkinPresetData implements flatbuffers.IUnpackableObject<LobbyToDedi_HeroSkinPresetDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToDedi_HeroSkinPresetData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToDedi_HeroSkinPresetData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_HeroSkinPresetData):LobbyToDedi_HeroSkinPresetData {
  return (obj || new LobbyToDedi_HeroSkinPresetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToDedi_HeroSkinPresetData(bb:flatbuffers.ByteBuffer, obj?:LobbyToDedi_HeroSkinPresetData):LobbyToDedi_HeroSkinPresetData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToDedi_HeroSkinPresetData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

PresetData(obj?:HeroSkinPresetSlotData):HeroSkinPresetSlotData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new HeroSkinPresetSlotData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToDedi_HeroSkinPresetData';
}

static startLobbyToDedi_HeroSkinPresetData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(1, HeroID, 0);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(2, SlotID, 0);
}

static add_PresetData(builder:flatbuffers.Builder, PresetDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, PresetDataOffset, 0);
}

static endLobbyToDedi_HeroSkinPresetData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): LobbyToDedi_HeroSkinPresetDataT {
  return new LobbyToDedi_HeroSkinPresetDataT(
    this.UID(),
    this.HeroID(),
    this.SlotID(),
    (this.PresetData() !== null ? this.PresetData()!.unpack() : null)
  );
}


unpackTo(_o: LobbyToDedi_HeroSkinPresetDataT): void {
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.SlotID = this.SlotID();
  _o.PresetData = (this.PresetData() !== null ? this.PresetData()!.unpack() : null);
}
}

export class LobbyToDedi_HeroSkinPresetDataT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public HeroID: number = 0,
  public SlotID: number = 0,
  public PresetData: HeroSkinPresetSlotDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PresetData = (this.PresetData !== null ? this.PresetData!.pack(builder) : 0);

  LobbyToDedi_HeroSkinPresetData.startLobbyToDedi_HeroSkinPresetData(builder);
  LobbyToDedi_HeroSkinPresetData.add_UID(builder, this.UID);
  LobbyToDedi_HeroSkinPresetData.add_HeroID(builder, this.HeroID);
  LobbyToDedi_HeroSkinPresetData.add_SlotID(builder, this.SlotID);
  LobbyToDedi_HeroSkinPresetData.add_PresetData(builder, PresetData);

  return LobbyToDedi_HeroSkinPresetData.endLobbyToDedi_HeroSkinPresetData(builder);
}
}

export class GoldClashStartInfo implements flatbuffers.IUnpackableObject<GoldClashStartInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GoldClashStartInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGoldClashStartInfo(bb:flatbuffers.ByteBuffer, obj?:GoldClashStartInfo):GoldClashStartInfo {
  return (obj || new GoldClashStartInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGoldClashStartInfo(bb:flatbuffers.ByteBuffer, obj?:GoldClashStartInfo):GoldClashStartInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GoldClashStartInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AIJoinState():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MyTeamAICount():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.GoldClashStartInfo';
}

static startGoldClashStartInfo(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(1, HeroID, 0);
}

static add_AIJoinState(builder:flatbuffers.Builder, AIJoinState:number) {
  builder.addFieldInt32(2, AIJoinState, 0);
}

static add_MyTeamAICount(builder:flatbuffers.Builder, MyTeamAICount:number) {
  builder.addFieldInt32(3, MyTeamAICount, 0);
}

static endGoldClashStartInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGoldClashStartInfo(builder:flatbuffers.Builder, UID:number, HeroID:number, AIJoinState:number, MyTeamAICount:number):flatbuffers.Offset {
  GoldClashStartInfo.startGoldClashStartInfo(builder);
  GoldClashStartInfo.add_UID(builder, UID);
  GoldClashStartInfo.add_HeroID(builder, HeroID);
  GoldClashStartInfo.add_AIJoinState(builder, AIJoinState);
  GoldClashStartInfo.add_MyTeamAICount(builder, MyTeamAICount);
  return GoldClashStartInfo.endGoldClashStartInfo(builder);
}

unpack(): GoldClashStartInfoT {
  return new GoldClashStartInfoT(
    this.UID(),
    this.HeroID(),
    this.AIJoinState(),
    this.MyTeamAICount()
  );
}


unpackTo(_o: GoldClashStartInfoT): void {
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.AIJoinState = this.AIJoinState();
  _o.MyTeamAICount = this.MyTeamAICount();
}
}

export class GoldClashStartInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public HeroID: number = 0,
  public AIJoinState: number = 0,
  public MyTeamAICount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return GoldClashStartInfo.createGoldClashStartInfo(builder,
    this.UID,
    this.HeroID,
    this.AIJoinState,
    this.MyTeamAICount
  );
}
}

export class DediToLobby_GoldClashStart implements flatbuffers.IUnpackableObject<DediToLobby_GoldClashStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_GoldClashStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_GoldClashStart(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_GoldClashStart):DediToLobby_GoldClashStart {
  return (obj || new DediToLobby_GoldClashStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_GoldClashStart(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_GoldClashStart):DediToLobby_GoldClashStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_GoldClashStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

StartInfo(obj?:GoldClashStartInfo):GoldClashStartInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new GoldClashStartInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_GoldClashStart';
}

static startDediToLobby_GoldClashStart(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DedicatedIDOffset, 0);
}

static add_StartInfo(builder:flatbuffers.Builder, StartInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, StartInfoOffset, 0);
}

static endDediToLobby_GoldClashStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): DediToLobby_GoldClashStartT {
  return new DediToLobby_GoldClashStartT(
    this.DedicatedID(),
    (this.StartInfo() !== null ? this.StartInfo()!.unpack() : null)
  );
}


unpackTo(_o: DediToLobby_GoldClashStartT): void {
  _o.DedicatedID = this.DedicatedID();
  _o.StartInfo = (this.StartInfo() !== null ? this.StartInfo()!.unpack() : null);
}
}

export class DediToLobby_GoldClashStartT implements flatbuffers.IGeneratedObject {
constructor(
  public DedicatedID: string|Uint8Array|null = null,
  public StartInfo: GoldClashStartInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const StartInfo = (this.StartInfo !== null ? this.StartInfo!.pack(builder) : 0);

  DediToLobby_GoldClashStart.startDediToLobby_GoldClashStart(builder);
  DediToLobby_GoldClashStart.add_DedicatedID(builder, DedicatedID);
  DediToLobby_GoldClashStart.add_StartInfo(builder, StartInfo);

  return DediToLobby_GoldClashStart.endDediToLobby_GoldClashStart(builder);
}
}

export class GoldClashFinishInfo implements flatbuffers.IUnpackableObject<GoldClashFinishInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GoldClashFinishInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGoldClashFinishInfo(bb:flatbuffers.ByteBuffer, obj?:GoldClashFinishInfo):GoldClashFinishInfo {
  return (obj || new GoldClashFinishInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGoldClashFinishInfo(bb:flatbuffers.ByteBuffer, obj?:GoldClashFinishInfo):GoldClashFinishInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GoldClashFinishInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsWinTeam():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

RankingPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuideMissionCompleteList(index: number):EGuideMissionType|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;
}

GuideMissionCompleteList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

GuideMissionCompleteList_Array():Uint16Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

MissionList(index: number, obj?:MissionAddCountData):MissionAddCountData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new MissionAddCountData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

MissionList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

LogList(index: number, obj?:BiskitLog):BiskitLog|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new BiskitLog()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

LogList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

IsCustomGame():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

IsDodge():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Kill():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Death():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Gold():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Deal():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Heal():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

Damage():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsMvp():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

Ranking():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.GoldClashFinishInfo';
}

static startGoldClashFinishInfo(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(1, HeroID, 0);
}

static add_IsWinTeam(builder:flatbuffers.Builder, IsWinTeam:boolean) {
  builder.addFieldInt8(2, +IsWinTeam, +false);
}

static add_RankingPoint(builder:flatbuffers.Builder, RankingPoint:number) {
  builder.addFieldInt32(3, RankingPoint, 0);
}

static add_GuideMissionCompleteList(builder:flatbuffers.Builder, GuideMissionCompleteListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, GuideMissionCompleteListOffset, 0);
}

static create_GuideMissionCompleteList_Vector(builder:flatbuffers.Builder, data:EGuideMissionType[]):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]!);
  }
  return builder.endVector();
}

static start_GuideMissionCompleteList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
}

static add_MissionList(builder:flatbuffers.Builder, MissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, MissionListOffset, 0);
}

static start_MissionList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static add_LogList(builder:flatbuffers.Builder, LogListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, LogListOffset, 0);
}

static create_LogList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_LogList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static add_IsCustomGame(builder:flatbuffers.Builder, IsCustomGame:boolean) {
  builder.addFieldInt8(7, +IsCustomGame, +false);
}

static add_IsDodge(builder:flatbuffers.Builder, IsDodge:boolean) {
  builder.addFieldInt8(8, +IsDodge, +false);
}

static add_Kill(builder:flatbuffers.Builder, Kill:number) {
  builder.addFieldInt32(9, Kill, 0);
}

static add_Death(builder:flatbuffers.Builder, Death:number) {
  builder.addFieldInt32(10, Death, 0);
}

static add_Gold(builder:flatbuffers.Builder, Gold:number) {
  builder.addFieldInt32(11, Gold, 0);
}

static add_Deal(builder:flatbuffers.Builder, Deal:number) {
  builder.addFieldInt32(12, Deal, 0);
}

static add_Heal(builder:flatbuffers.Builder, Heal:number) {
  builder.addFieldInt32(13, Heal, 0);
}

static add_Damage(builder:flatbuffers.Builder, Damage:number) {
  builder.addFieldInt32(14, Damage, 0);
}

static add_IsMvp(builder:flatbuffers.Builder, IsMvp:boolean) {
  builder.addFieldInt8(15, +IsMvp, +false);
}

static add_Ranking(builder:flatbuffers.Builder, Ranking:number) {
  builder.addFieldInt8(16, Ranking, 0);
}

static endGoldClashFinishInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGoldClashFinishInfo(builder:flatbuffers.Builder, UID:number, HeroID:number, IsWinTeam:boolean, RankingPoint:number, GuideMissionCompleteListOffset:flatbuffers.Offset, MissionListOffset:flatbuffers.Offset, LogListOffset:flatbuffers.Offset, IsCustomGame:boolean, IsDodge:boolean, Kill:number, Death:number, Gold:number, Deal:number, Heal:number, Damage:number, IsMvp:boolean, Ranking:number):flatbuffers.Offset {
  GoldClashFinishInfo.startGoldClashFinishInfo(builder);
  GoldClashFinishInfo.add_UID(builder, UID);
  GoldClashFinishInfo.add_HeroID(builder, HeroID);
  GoldClashFinishInfo.add_IsWinTeam(builder, IsWinTeam);
  GoldClashFinishInfo.add_RankingPoint(builder, RankingPoint);
  GoldClashFinishInfo.add_GuideMissionCompleteList(builder, GuideMissionCompleteListOffset);
  GoldClashFinishInfo.add_MissionList(builder, MissionListOffset);
  GoldClashFinishInfo.add_LogList(builder, LogListOffset);
  GoldClashFinishInfo.add_IsCustomGame(builder, IsCustomGame);
  GoldClashFinishInfo.add_IsDodge(builder, IsDodge);
  GoldClashFinishInfo.add_Kill(builder, Kill);
  GoldClashFinishInfo.add_Death(builder, Death);
  GoldClashFinishInfo.add_Gold(builder, Gold);
  GoldClashFinishInfo.add_Deal(builder, Deal);
  GoldClashFinishInfo.add_Heal(builder, Heal);
  GoldClashFinishInfo.add_Damage(builder, Damage);
  GoldClashFinishInfo.add_IsMvp(builder, IsMvp);
  GoldClashFinishInfo.add_Ranking(builder, Ranking);
  return GoldClashFinishInfo.endGoldClashFinishInfo(builder);
}

unpack(): GoldClashFinishInfoT {
  return new GoldClashFinishInfoT(
    this.UID(),
    this.HeroID(),
    this.IsWinTeam(),
    this.RankingPoint(),
    this.bb!.createScalarList<EGuideMissionType>(this.GuideMissionCompleteList.bind(this), this.GuideMissionCompleteList_Length()),
    this.bb!.createObjList<MissionAddCountData, MissionAddCountDataT>(this.MissionList.bind(this), this.MissionList_Length()),
    this.bb!.createObjList<BiskitLog, BiskitLogT>(this.LogList.bind(this), this.LogList_Length()),
    this.IsCustomGame(),
    this.IsDodge(),
    this.Kill(),
    this.Death(),
    this.Gold(),
    this.Deal(),
    this.Heal(),
    this.Damage(),
    this.IsMvp(),
    this.Ranking()
  );
}


unpackTo(_o: GoldClashFinishInfoT): void {
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.IsWinTeam = this.IsWinTeam();
  _o.RankingPoint = this.RankingPoint();
  _o.GuideMissionCompleteList = this.bb!.createScalarList<EGuideMissionType>(this.GuideMissionCompleteList.bind(this), this.GuideMissionCompleteList_Length());
  _o.MissionList = this.bb!.createObjList<MissionAddCountData, MissionAddCountDataT>(this.MissionList.bind(this), this.MissionList_Length());
  _o.LogList = this.bb!.createObjList<BiskitLog, BiskitLogT>(this.LogList.bind(this), this.LogList_Length());
  _o.IsCustomGame = this.IsCustomGame();
  _o.IsDodge = this.IsDodge();
  _o.Kill = this.Kill();
  _o.Death = this.Death();
  _o.Gold = this.Gold();
  _o.Deal = this.Deal();
  _o.Heal = this.Heal();
  _o.Damage = this.Damage();
  _o.IsMvp = this.IsMvp();
  _o.Ranking = this.Ranking();
}
}

export class GoldClashFinishInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public HeroID: number = 0,
  public IsWinTeam: boolean = false,
  public RankingPoint: number = 0,
  public GuideMissionCompleteList: (EGuideMissionType)[] = [],
  public MissionList: (MissionAddCountDataT)[] = [],
  public LogList: (BiskitLogT)[] = [],
  public IsCustomGame: boolean = false,
  public IsDodge: boolean = false,
  public Kill: number = 0,
  public Death: number = 0,
  public Gold: number = 0,
  public Deal: number = 0,
  public Heal: number = 0,
  public Damage: number = 0,
  public IsMvp: boolean = false,
  public Ranking: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const GuideMissionCompleteList = GoldClashFinishInfo.create_GuideMissionCompleteList_Vector(builder, this.GuideMissionCompleteList);
  const MissionList = builder.createStructOffsetList(this.MissionList, GoldClashFinishInfo.start_MissionList_Vector);
  const LogList = GoldClashFinishInfo.create_LogList_Vector(builder, builder.createObjectOffsetList(this.LogList));

  return GoldClashFinishInfo.createGoldClashFinishInfo(builder,
    this.UID,
    this.HeroID,
    this.IsWinTeam,
    this.RankingPoint,
    GuideMissionCompleteList,
    MissionList,
    LogList,
    this.IsCustomGame,
    this.IsDodge,
    this.Kill,
    this.Death,
    this.Gold,
    this.Deal,
    this.Heal,
    this.Damage,
    this.IsMvp,
    this.Ranking
  );
}
}

export class DediToLobby_GoldClashFinish implements flatbuffers.IUnpackableObject<DediToLobby_GoldClashFinishT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_GoldClashFinish {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_GoldClashFinish(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_GoldClashFinish):DediToLobby_GoldClashFinish {
  return (obj || new DediToLobby_GoldClashFinish()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_GoldClashFinish(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_GoldClashFinish):DediToLobby_GoldClashFinish {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_GoldClashFinish()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

FinishInfo(obj?:GoldClashFinishInfo):GoldClashFinishInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new GoldClashFinishInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_GoldClashFinish';
}

static startDediToLobby_GoldClashFinish(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DedicatedIDOffset, 0);
}

static add_FinishInfo(builder:flatbuffers.Builder, FinishInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, FinishInfoOffset, 0);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MatchIDOffset, 0);
}

static endDediToLobby_GoldClashFinish(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): DediToLobby_GoldClashFinishT {
  return new DediToLobby_GoldClashFinishT(
    this.DedicatedID(),
    (this.FinishInfo() !== null ? this.FinishInfo()!.unpack() : null),
    this.MatchID()
  );
}


unpackTo(_o: DediToLobby_GoldClashFinishT): void {
  _o.DedicatedID = this.DedicatedID();
  _o.FinishInfo = (this.FinishInfo() !== null ? this.FinishInfo()!.unpack() : null);
  _o.MatchID = this.MatchID();
}
}

export class DediToLobby_GoldClashFinishT implements flatbuffers.IGeneratedObject {
constructor(
  public DedicatedID: string|Uint8Array|null = null,
  public FinishInfo: GoldClashFinishInfoT|null = null,
  public MatchID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const FinishInfo = (this.FinishInfo !== null ? this.FinishInfo!.pack(builder) : 0);
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);

  DediToLobby_GoldClashFinish.startDediToLobby_GoldClashFinish(builder);
  DediToLobby_GoldClashFinish.add_DedicatedID(builder, DedicatedID);
  DediToLobby_GoldClashFinish.add_FinishInfo(builder, FinishInfo);
  DediToLobby_GoldClashFinish.add_MatchID(builder, MatchID);

  return DediToLobby_GoldClashFinish.endDediToLobby_GoldClashFinish(builder);
}
}

export class RaidStartInfo implements flatbuffers.IUnpackableObject<RaidStartInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RaidStartInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRaidStartInfo(bb:flatbuffers.ByteBuffer, obj?:RaidStartInfo):RaidStartInfo {
  return (obj || new RaidStartInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRaidStartInfo(bb:flatbuffers.ByteBuffer, obj?:RaidStartInfo):RaidStartInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RaidStartInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RaidMapID():string|null
RaidMapID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RaidMapID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.RaidStartInfo';
}

static startRaidStartInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(1, HeroID, 0);
}

static add_RaidMapID(builder:flatbuffers.Builder, RaidMapIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RaidMapIDOffset, 0);
}

static endRaidStartInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRaidStartInfo(builder:flatbuffers.Builder, UID:number, HeroID:number, RaidMapIDOffset:flatbuffers.Offset):flatbuffers.Offset {
  RaidStartInfo.startRaidStartInfo(builder);
  RaidStartInfo.add_UID(builder, UID);
  RaidStartInfo.add_HeroID(builder, HeroID);
  RaidStartInfo.add_RaidMapID(builder, RaidMapIDOffset);
  return RaidStartInfo.endRaidStartInfo(builder);
}

unpack(): RaidStartInfoT {
  return new RaidStartInfoT(
    this.UID(),
    this.HeroID(),
    this.RaidMapID()
  );
}


unpackTo(_o: RaidStartInfoT): void {
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.RaidMapID = this.RaidMapID();
}
}

export class RaidStartInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public HeroID: number = 0,
  public RaidMapID: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RaidMapID = (this.RaidMapID !== null ? builder.createString(this.RaidMapID!) : 0);

  return RaidStartInfo.createRaidStartInfo(builder,
    this.UID,
    this.HeroID,
    RaidMapID
  );
}
}

export class DediToLobby_RaidStart implements flatbuffers.IUnpackableObject<DediToLobby_RaidStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_RaidStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_RaidStart(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_RaidStart):DediToLobby_RaidStart {
  return (obj || new DediToLobby_RaidStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_RaidStart(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_RaidStart):DediToLobby_RaidStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_RaidStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

StartInfo(obj?:RaidStartInfo):RaidStartInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RaidStartInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_RaidStart';
}

static startDediToLobby_RaidStart(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DedicatedIDOffset, 0);
}

static add_StartInfo(builder:flatbuffers.Builder, StartInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, StartInfoOffset, 0);
}

static endDediToLobby_RaidStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): DediToLobby_RaidStartT {
  return new DediToLobby_RaidStartT(
    this.DedicatedID(),
    (this.StartInfo() !== null ? this.StartInfo()!.unpack() : null)
  );
}


unpackTo(_o: DediToLobby_RaidStartT): void {
  _o.DedicatedID = this.DedicatedID();
  _o.StartInfo = (this.StartInfo() !== null ? this.StartInfo()!.unpack() : null);
}
}

export class DediToLobby_RaidStartT implements flatbuffers.IGeneratedObject {
constructor(
  public DedicatedID: string|Uint8Array|null = null,
  public StartInfo: RaidStartInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const StartInfo = (this.StartInfo !== null ? this.StartInfo!.pack(builder) : 0);

  DediToLobby_RaidStart.startDediToLobby_RaidStart(builder);
  DediToLobby_RaidStart.add_DedicatedID(builder, DedicatedID);
  DediToLobby_RaidStart.add_StartInfo(builder, StartInfo);

  return DediToLobby_RaidStart.endDediToLobby_RaidStart(builder);
}
}

export class RaidFinishInfo implements flatbuffers.IUnpackableObject<RaidFinishInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RaidFinishInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRaidFinishInfo(bb:flatbuffers.ByteBuffer, obj?:RaidFinishInfo):RaidFinishInfo {
  return (obj || new RaidFinishInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRaidFinishInfo(bb:flatbuffers.ByteBuffer, obj?:RaidFinishInfo):RaidFinishInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RaidFinishInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RaidMapID():string|null
RaidMapID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RaidMapID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsSuccess():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

IsDie():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

DieReason():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

AttackerID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AttackerName():string|null
AttackerName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
AttackerName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ItemID():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ItemCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RankingPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

LogList(index: number, obj?:BiskitLog):BiskitLog|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new BiskitLog()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

LogList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.RaidFinishInfo';
}

static startRaidFinishInfo(builder:flatbuffers.Builder) {
  builder.startObject(12);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(0, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(1, HeroID, 0);
}

static add_RaidMapID(builder:flatbuffers.Builder, RaidMapIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RaidMapIDOffset, 0);
}

static add_IsSuccess(builder:flatbuffers.Builder, IsSuccess:boolean) {
  builder.addFieldInt8(3, +IsSuccess, +false);
}

static add_IsDie(builder:flatbuffers.Builder, IsDie:boolean) {
  builder.addFieldInt8(4, +IsDie, +false);
}

static add_DieReason(builder:flatbuffers.Builder, DieReason:number) {
  builder.addFieldInt8(5, DieReason, 0);
}

static add_AttackerID(builder:flatbuffers.Builder, AttackerID:number) {
  builder.addFieldInt32(6, AttackerID, 0);
}

static add_AttackerName(builder:flatbuffers.Builder, AttackerNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, AttackerNameOffset, 0);
}

static add_ItemID(builder:flatbuffers.Builder, ItemID:number) {
  builder.addFieldInt32(8, ItemID, 0);
}

static add_ItemCount(builder:flatbuffers.Builder, ItemCount:number) {
  builder.addFieldInt32(9, ItemCount, 0);
}

static add_RankingPoint(builder:flatbuffers.Builder, RankingPoint:number) {
  builder.addFieldInt32(10, RankingPoint, 0);
}

static add_LogList(builder:flatbuffers.Builder, LogListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, LogListOffset, 0);
}

static create_LogList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_LogList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endRaidFinishInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRaidFinishInfo(builder:flatbuffers.Builder, UID:number, HeroID:number, RaidMapIDOffset:flatbuffers.Offset, IsSuccess:boolean, IsDie:boolean, DieReason:number, AttackerID:number, AttackerNameOffset:flatbuffers.Offset, ItemID:number, ItemCount:number, RankingPoint:number, LogListOffset:flatbuffers.Offset):flatbuffers.Offset {
  RaidFinishInfo.startRaidFinishInfo(builder);
  RaidFinishInfo.add_UID(builder, UID);
  RaidFinishInfo.add_HeroID(builder, HeroID);
  RaidFinishInfo.add_RaidMapID(builder, RaidMapIDOffset);
  RaidFinishInfo.add_IsSuccess(builder, IsSuccess);
  RaidFinishInfo.add_IsDie(builder, IsDie);
  RaidFinishInfo.add_DieReason(builder, DieReason);
  RaidFinishInfo.add_AttackerID(builder, AttackerID);
  RaidFinishInfo.add_AttackerName(builder, AttackerNameOffset);
  RaidFinishInfo.add_ItemID(builder, ItemID);
  RaidFinishInfo.add_ItemCount(builder, ItemCount);
  RaidFinishInfo.add_RankingPoint(builder, RankingPoint);
  RaidFinishInfo.add_LogList(builder, LogListOffset);
  return RaidFinishInfo.endRaidFinishInfo(builder);
}

unpack(): RaidFinishInfoT {
  return new RaidFinishInfoT(
    this.UID(),
    this.HeroID(),
    this.RaidMapID(),
    this.IsSuccess(),
    this.IsDie(),
    this.DieReason(),
    this.AttackerID(),
    this.AttackerName(),
    this.ItemID(),
    this.ItemCount(),
    this.RankingPoint(),
    this.bb!.createObjList<BiskitLog, BiskitLogT>(this.LogList.bind(this), this.LogList_Length())
  );
}


unpackTo(_o: RaidFinishInfoT): void {
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.RaidMapID = this.RaidMapID();
  _o.IsSuccess = this.IsSuccess();
  _o.IsDie = this.IsDie();
  _o.DieReason = this.DieReason();
  _o.AttackerID = this.AttackerID();
  _o.AttackerName = this.AttackerName();
  _o.ItemID = this.ItemID();
  _o.ItemCount = this.ItemCount();
  _o.RankingPoint = this.RankingPoint();
  _o.LogList = this.bb!.createObjList<BiskitLog, BiskitLogT>(this.LogList.bind(this), this.LogList_Length());
}
}

export class RaidFinishInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public UID: number = 0,
  public HeroID: number = 0,
  public RaidMapID: string|Uint8Array|null = null,
  public IsSuccess: boolean = false,
  public IsDie: boolean = false,
  public DieReason: number = 0,
  public AttackerID: number = 0,
  public AttackerName: string|Uint8Array|null = null,
  public ItemID: number = 0,
  public ItemCount: number = 0,
  public RankingPoint: number = 0,
  public LogList: (BiskitLogT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RaidMapID = (this.RaidMapID !== null ? builder.createString(this.RaidMapID!) : 0);
  const AttackerName = (this.AttackerName !== null ? builder.createString(this.AttackerName!) : 0);
  const LogList = RaidFinishInfo.create_LogList_Vector(builder, builder.createObjectOffsetList(this.LogList));

  return RaidFinishInfo.createRaidFinishInfo(builder,
    this.UID,
    this.HeroID,
    RaidMapID,
    this.IsSuccess,
    this.IsDie,
    this.DieReason,
    this.AttackerID,
    AttackerName,
    this.ItemID,
    this.ItemCount,
    this.RankingPoint,
    LogList
  );
}
}

export class DediToLobby_RaidFinish implements flatbuffers.IUnpackableObject<DediToLobby_RaidFinishT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_RaidFinish {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_RaidFinish(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_RaidFinish):DediToLobby_RaidFinish {
  return (obj || new DediToLobby_RaidFinish()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_RaidFinish(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_RaidFinish):DediToLobby_RaidFinish {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_RaidFinish()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

FinishInfo(obj?:RaidFinishInfo):RaidFinishInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RaidFinishInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_RaidFinish';
}

static startDediToLobby_RaidFinish(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DedicatedIDOffset, 0);
}

static add_FinishInfo(builder:flatbuffers.Builder, FinishInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, FinishInfoOffset, 0);
}

static endDediToLobby_RaidFinish(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): DediToLobby_RaidFinishT {
  return new DediToLobby_RaidFinishT(
    this.DedicatedID(),
    (this.FinishInfo() !== null ? this.FinishInfo()!.unpack() : null)
  );
}


unpackTo(_o: DediToLobby_RaidFinishT): void {
  _o.DedicatedID = this.DedicatedID();
  _o.FinishInfo = (this.FinishInfo() !== null ? this.FinishInfo()!.unpack() : null);
}
}

export class DediToLobby_RaidFinishT implements flatbuffers.IGeneratedObject {
constructor(
  public DedicatedID: string|Uint8Array|null = null,
  public FinishInfo: RaidFinishInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const FinishInfo = (this.FinishInfo !== null ? this.FinishInfo!.pack(builder) : 0);

  DediToLobby_RaidFinish.startDediToLobby_RaidFinish(builder);
  DediToLobby_RaidFinish.add_DedicatedID(builder, DedicatedID);
  DediToLobby_RaidFinish.add_FinishInfo(builder, FinishInfo);

  return DediToLobby_RaidFinish.endDediToLobby_RaidFinish(builder);
}
}

export class DediToLobby_OpenWorldTime implements flatbuffers.IUnpackableObject<DediToLobby_OpenWorldTimeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_OpenWorldTime {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_OpenWorldTime(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_OpenWorldTime):DediToLobby_OpenWorldTime {
  return (obj || new DediToLobby_OpenWorldTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_OpenWorldTime(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_OpenWorldTime):DediToLobby_OpenWorldTime {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_OpenWorldTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_OpenWorldTime';
}

static startDediToLobby_OpenWorldTime(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static endDediToLobby_OpenWorldTime(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_OpenWorldTime(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset):flatbuffers.Offset {
  DediToLobby_OpenWorldTime.startDediToLobby_OpenWorldTime(builder);
  DediToLobby_OpenWorldTime.add_Destination(builder, DestinationOffset);
  return DediToLobby_OpenWorldTime.endDediToLobby_OpenWorldTime(builder);
}

unpack(): DediToLobby_OpenWorldTimeT {
  return new DediToLobby_OpenWorldTimeT(
    this.Destination()
  );
}


unpackTo(_o: DediToLobby_OpenWorldTimeT): void {
  _o.Destination = this.Destination();
}
}

export class DediToLobby_OpenWorldTimeT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);

  return DediToLobby_OpenWorldTime.createDediToLobby_OpenWorldTime(builder,
    Destination
  );
}
}

export class DediToLobby_OpenWorldUserData_Req implements flatbuffers.IUnpackableObject<DediToLobby_OpenWorldUserData_ReqT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_OpenWorldUserData_Req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_OpenWorldUserData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_OpenWorldUserData_Req):DediToLobby_OpenWorldUserData_Req {
  return (obj || new DediToLobby_OpenWorldUserData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_OpenWorldUserData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_OpenWorldUserData_Req):DediToLobby_OpenWorldUserData_Req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_OpenWorldUserData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_OpenWorldUserData_Req';
}

static startDediToLobby_OpenWorldUserData_Req(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static endDediToLobby_OpenWorldUserData_Req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_OpenWorldUserData_Req(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset, UID:number):flatbuffers.Offset {
  DediToLobby_OpenWorldUserData_Req.startDediToLobby_OpenWorldUserData_Req(builder);
  DediToLobby_OpenWorldUserData_Req.add_Destination(builder, DestinationOffset);
  DediToLobby_OpenWorldUserData_Req.add_UID(builder, UID);
  return DediToLobby_OpenWorldUserData_Req.endDediToLobby_OpenWorldUserData_Req(builder);
}

unpack(): DediToLobby_OpenWorldUserData_ReqT {
  return new DediToLobby_OpenWorldUserData_ReqT(
    this.Destination(),
    this.UID()
  );
}


unpackTo(_o: DediToLobby_OpenWorldUserData_ReqT): void {
  _o.Destination = this.Destination();
  _o.UID = this.UID();
}
}

export class DediToLobby_OpenWorldUserData_ReqT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null,
  public UID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);

  return DediToLobby_OpenWorldUserData_Req.createDediToLobby_OpenWorldUserData_Req(builder,
    Destination,
    this.UID
  );
}
}

export class DediToLobby_GoldClashUserData_Req implements flatbuffers.IUnpackableObject<DediToLobby_GoldClashUserData_ReqT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_GoldClashUserData_Req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_GoldClashUserData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_GoldClashUserData_Req):DediToLobby_GoldClashUserData_Req {
  return (obj || new DediToLobby_GoldClashUserData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_GoldClashUserData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_GoldClashUserData_Req):DediToLobby_GoldClashUserData_Req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_GoldClashUserData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_GoldClashUserData_Req';
}

static startDediToLobby_GoldClashUserData_Req(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static endDediToLobby_GoldClashUserData_Req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_GoldClashUserData_Req(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset, UID:number):flatbuffers.Offset {
  DediToLobby_GoldClashUserData_Req.startDediToLobby_GoldClashUserData_Req(builder);
  DediToLobby_GoldClashUserData_Req.add_Destination(builder, DestinationOffset);
  DediToLobby_GoldClashUserData_Req.add_UID(builder, UID);
  return DediToLobby_GoldClashUserData_Req.endDediToLobby_GoldClashUserData_Req(builder);
}

unpack(): DediToLobby_GoldClashUserData_ReqT {
  return new DediToLobby_GoldClashUserData_ReqT(
    this.Destination(),
    this.UID()
  );
}


unpackTo(_o: DediToLobby_GoldClashUserData_ReqT): void {
  _o.Destination = this.Destination();
  _o.UID = this.UID();
}
}

export class DediToLobby_GoldClashUserData_ReqT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null,
  public UID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);

  return DediToLobby_GoldClashUserData_Req.createDediToLobby_GoldClashUserData_Req(builder,
    Destination,
    this.UID
  );
}
}

export class DediToLobby_WaitRoomUserData_Req implements flatbuffers.IUnpackableObject<DediToLobby_WaitRoomUserData_ReqT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_WaitRoomUserData_Req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_WaitRoomUserData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_WaitRoomUserData_Req):DediToLobby_WaitRoomUserData_Req {
  return (obj || new DediToLobby_WaitRoomUserData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_WaitRoomUserData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_WaitRoomUserData_Req):DediToLobby_WaitRoomUserData_Req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_WaitRoomUserData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_WaitRoomUserData_Req';
}

static startDediToLobby_WaitRoomUserData_Req(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static endDediToLobby_WaitRoomUserData_Req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_WaitRoomUserData_Req(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset, UID:number):flatbuffers.Offset {
  DediToLobby_WaitRoomUserData_Req.startDediToLobby_WaitRoomUserData_Req(builder);
  DediToLobby_WaitRoomUserData_Req.add_Destination(builder, DestinationOffset);
  DediToLobby_WaitRoomUserData_Req.add_UID(builder, UID);
  return DediToLobby_WaitRoomUserData_Req.endDediToLobby_WaitRoomUserData_Req(builder);
}

unpack(): DediToLobby_WaitRoomUserData_ReqT {
  return new DediToLobby_WaitRoomUserData_ReqT(
    this.Destination(),
    this.UID()
  );
}


unpackTo(_o: DediToLobby_WaitRoomUserData_ReqT): void {
  _o.Destination = this.Destination();
  _o.UID = this.UID();
}
}

export class DediToLobby_WaitRoomUserData_ReqT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null,
  public UID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);

  return DediToLobby_WaitRoomUserData_Req.createDediToLobby_WaitRoomUserData_Req(builder,
    Destination,
    this.UID
  );
}
}

export class DediToLobby_WaitRoomFinish_Req implements flatbuffers.IUnpackableObject<DediToLobby_WaitRoomFinish_ReqT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_WaitRoomFinish_Req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_WaitRoomFinish_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_WaitRoomFinish_Req):DediToLobby_WaitRoomFinish_Req {
  return (obj || new DediToLobby_WaitRoomFinish_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_WaitRoomFinish_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_WaitRoomFinish_Req):DediToLobby_WaitRoomFinish_Req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_WaitRoomFinish_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroSkinPresetSlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

ArtifactDeckSlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

PetUniqueID():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? Number(this.bb!.readInt64(this.bb_pos + offset)) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_WaitRoomFinish_Req';
}

static startDediToLobby_WaitRoomFinish_Req(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(1, ContentsType, EContentsType.None);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MatchIDOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(3, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(4, HeroID, 0);
}

static add_HeroSkinPresetSlotID(builder:flatbuffers.Builder, HeroSkinPresetSlotID:number) {
  builder.addFieldInt8(5, HeroSkinPresetSlotID, 0);
}

static add_ArtifactDeckSlotID(builder:flatbuffers.Builder, ArtifactDeckSlotID:number) {
  builder.addFieldInt8(6, ArtifactDeckSlotID, 0);
}

static add_PetUniqueID(builder:flatbuffers.Builder, PetUniqueID:number) {
  builder.addFieldInt64(7, BigInt(PetUniqueID), BigInt(0));
}

static endDediToLobby_WaitRoomFinish_Req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_WaitRoomFinish_Req(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset, ContentsType:EContentsType, MatchIDOffset:flatbuffers.Offset, UID:number, HeroID:number, HeroSkinPresetSlotID:number, ArtifactDeckSlotID:number, PetUniqueID:number):flatbuffers.Offset {
  DediToLobby_WaitRoomFinish_Req.startDediToLobby_WaitRoomFinish_Req(builder);
  DediToLobby_WaitRoomFinish_Req.add_Destination(builder, DestinationOffset);
  DediToLobby_WaitRoomFinish_Req.add_ContentsType(builder, ContentsType);
  DediToLobby_WaitRoomFinish_Req.add_MatchID(builder, MatchIDOffset);
  DediToLobby_WaitRoomFinish_Req.add_UID(builder, UID);
  DediToLobby_WaitRoomFinish_Req.add_HeroID(builder, HeroID);
  DediToLobby_WaitRoomFinish_Req.add_HeroSkinPresetSlotID(builder, HeroSkinPresetSlotID);
  DediToLobby_WaitRoomFinish_Req.add_ArtifactDeckSlotID(builder, ArtifactDeckSlotID);
  DediToLobby_WaitRoomFinish_Req.add_PetUniqueID(builder, PetUniqueID);
  return DediToLobby_WaitRoomFinish_Req.endDediToLobby_WaitRoomFinish_Req(builder);
}

unpack(): DediToLobby_WaitRoomFinish_ReqT {
  return new DediToLobby_WaitRoomFinish_ReqT(
    this.Destination(),
    this.ContentsType(),
    this.MatchID(),
    this.UID(),
    this.HeroID(),
    this.HeroSkinPresetSlotID(),
    this.ArtifactDeckSlotID(),
    this.PetUniqueID()
  );
}


unpackTo(_o: DediToLobby_WaitRoomFinish_ReqT): void {
  _o.Destination = this.Destination();
  _o.ContentsType = this.ContentsType();
  _o.MatchID = this.MatchID();
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.HeroSkinPresetSlotID = this.HeroSkinPresetSlotID();
  _o.ArtifactDeckSlotID = this.ArtifactDeckSlotID();
  _o.PetUniqueID = this.PetUniqueID();
}
}

export class DediToLobby_WaitRoomFinish_ReqT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null,
  public ContentsType: EContentsType = EContentsType.None,
  public MatchID: string|Uint8Array|null = null,
  public UID: number = 0,
  public HeroID: number = 0,
  public HeroSkinPresetSlotID: number = 0,
  public ArtifactDeckSlotID: number = 0,
  public PetUniqueID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);

  return DediToLobby_WaitRoomFinish_Req.createDediToLobby_WaitRoomFinish_Req(builder,
    Destination,
    this.ContentsType,
    MatchID,
    this.UID,
    this.HeroID,
    this.HeroSkinPresetSlotID,
    this.ArtifactDeckSlotID,
    this.PetUniqueID
  );
}
}

export class DediToLobby_HeroData_Req implements flatbuffers.IUnpackableObject<DediToLobby_HeroData_ReqT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_HeroData_Req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_HeroData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_HeroData_Req):DediToLobby_HeroData_Req {
  return (obj || new DediToLobby_HeroData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_HeroData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_HeroData_Req):DediToLobby_HeroData_Req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_HeroData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_HeroData_Req';
}

static startDediToLobby_HeroData_Req(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(2, HeroID, 0);
}

static endDediToLobby_HeroData_Req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_HeroData_Req(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset, UID:number, HeroID:number):flatbuffers.Offset {
  DediToLobby_HeroData_Req.startDediToLobby_HeroData_Req(builder);
  DediToLobby_HeroData_Req.add_Destination(builder, DestinationOffset);
  DediToLobby_HeroData_Req.add_UID(builder, UID);
  DediToLobby_HeroData_Req.add_HeroID(builder, HeroID);
  return DediToLobby_HeroData_Req.endDediToLobby_HeroData_Req(builder);
}

unpack(): DediToLobby_HeroData_ReqT {
  return new DediToLobby_HeroData_ReqT(
    this.Destination(),
    this.UID(),
    this.HeroID()
  );
}


unpackTo(_o: DediToLobby_HeroData_ReqT): void {
  _o.Destination = this.Destination();
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
}
}

export class DediToLobby_HeroData_ReqT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null,
  public UID: number = 0,
  public HeroID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);

  return DediToLobby_HeroData_Req.createDediToLobby_HeroData_Req(builder,
    Destination,
    this.UID,
    this.HeroID
  );
}
}

export class DediToLobby_HeroSkinPresetData_Req implements flatbuffers.IUnpackableObject<DediToLobby_HeroSkinPresetData_ReqT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DediToLobby_HeroSkinPresetData_Req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDediToLobby_HeroSkinPresetData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_HeroSkinPresetData_Req):DediToLobby_HeroSkinPresetData_Req {
  return (obj || new DediToLobby_HeroSkinPresetData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDediToLobby_HeroSkinPresetData_Req(bb:flatbuffers.ByteBuffer, obj?:DediToLobby_HeroSkinPresetData_Req):DediToLobby_HeroSkinPresetData_Req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DediToLobby_HeroSkinPresetData_Req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Destination():string|null
Destination(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
Destination(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

UID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

HeroSkinPresetSlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.DediToLobby_HeroSkinPresetData_Req';
}

static startDediToLobby_HeroSkinPresetData_Req(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static add_Destination(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, DestinationOffset, 0);
}

static add_UID(builder:flatbuffers.Builder, UID:number) {
  builder.addFieldInt32(1, UID, 0);
}

static add_HeroID(builder:flatbuffers.Builder, HeroID:number) {
  builder.addFieldInt32(2, HeroID, 0);
}

static add_HeroSkinPresetSlotID(builder:flatbuffers.Builder, HeroSkinPresetSlotID:number) {
  builder.addFieldInt8(3, HeroSkinPresetSlotID, 0);
}

static endDediToLobby_HeroSkinPresetData_Req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDediToLobby_HeroSkinPresetData_Req(builder:flatbuffers.Builder, DestinationOffset:flatbuffers.Offset, UID:number, HeroID:number, HeroSkinPresetSlotID:number):flatbuffers.Offset {
  DediToLobby_HeroSkinPresetData_Req.startDediToLobby_HeroSkinPresetData_Req(builder);
  DediToLobby_HeroSkinPresetData_Req.add_Destination(builder, DestinationOffset);
  DediToLobby_HeroSkinPresetData_Req.add_UID(builder, UID);
  DediToLobby_HeroSkinPresetData_Req.add_HeroID(builder, HeroID);
  DediToLobby_HeroSkinPresetData_Req.add_HeroSkinPresetSlotID(builder, HeroSkinPresetSlotID);
  return DediToLobby_HeroSkinPresetData_Req.endDediToLobby_HeroSkinPresetData_Req(builder);
}

unpack(): DediToLobby_HeroSkinPresetData_ReqT {
  return new DediToLobby_HeroSkinPresetData_ReqT(
    this.Destination(),
    this.UID(),
    this.HeroID(),
    this.HeroSkinPresetSlotID()
  );
}


unpackTo(_o: DediToLobby_HeroSkinPresetData_ReqT): void {
  _o.Destination = this.Destination();
  _o.UID = this.UID();
  _o.HeroID = this.HeroID();
  _o.HeroSkinPresetSlotID = this.HeroSkinPresetSlotID();
}
}

export class DediToLobby_HeroSkinPresetData_ReqT implements flatbuffers.IGeneratedObject {
constructor(
  public Destination: string|Uint8Array|null = null,
  public UID: number = 0,
  public HeroID: number = 0,
  public HeroSkinPresetSlotID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const Destination = (this.Destination !== null ? builder.createString(this.Destination!) : 0);

  return DediToLobby_HeroSkinPresetData_Req.createDediToLobby_HeroSkinPresetData_Req(builder,
    Destination,
    this.UID,
    this.HeroID,
    this.HeroSkinPresetSlotID
  );
}
}

export class LobbyToLobby_PartyLeaveToMaster implements flatbuffers.IUnpackableObject<LobbyToLobby_PartyLeaveToMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_PartyLeaveToMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_PartyLeaveToMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_PartyLeaveToMaster):LobbyToLobby_PartyLeaveToMaster {
  return (obj || new LobbyToLobby_PartyLeaveToMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_PartyLeaveToMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_PartyLeaveToMaster):LobbyToLobby_PartyLeaveToMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_PartyLeaveToMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PartyID():string|null
PartyID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PartyID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LeaveMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_PartyLeaveToMaster';
}

static startLobbyToLobby_PartyLeaveToMaster(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_PartyID(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PartyIDOffset, 0);
}

static add_LeaveMemberUID(builder:flatbuffers.Builder, LeaveMemberUID:number) {
  builder.addFieldInt32(1, LeaveMemberUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MasterNickOffset, 0);
}

static endLobbyToLobby_PartyLeaveToMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_PartyLeaveToMaster(builder:flatbuffers.Builder, PartyIDOffset:flatbuffers.Offset, LeaveMemberUID:number, MasterNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToLobby_PartyLeaveToMaster.startLobbyToLobby_PartyLeaveToMaster(builder);
  LobbyToLobby_PartyLeaveToMaster.add_PartyID(builder, PartyIDOffset);
  LobbyToLobby_PartyLeaveToMaster.add_LeaveMemberUID(builder, LeaveMemberUID);
  LobbyToLobby_PartyLeaveToMaster.add_MasterNick(builder, MasterNickOffset);
  return LobbyToLobby_PartyLeaveToMaster.endLobbyToLobby_PartyLeaveToMaster(builder);
}

unpack(): LobbyToLobby_PartyLeaveToMasterT {
  return new LobbyToLobby_PartyLeaveToMasterT(
    this.PartyID(),
    this.LeaveMemberUID(),
    this.MasterNick()
  );
}


unpackTo(_o: LobbyToLobby_PartyLeaveToMasterT): void {
  _o.PartyID = this.PartyID();
  _o.LeaveMemberUID = this.LeaveMemberUID();
  _o.MasterNick = this.MasterNick();
}
}

export class LobbyToLobby_PartyLeaveToMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public PartyID: string|Uint8Array|null = null,
  public LeaveMemberUID: number = 0,
  public MasterNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PartyID = (this.PartyID !== null ? builder.createString(this.PartyID!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return LobbyToLobby_PartyLeaveToMaster.createLobbyToLobby_PartyLeaveToMaster(builder,
    PartyID,
    this.LeaveMemberUID,
    MasterNick
  );
}
}

export class LobbyToLobby_CustomGameLeaveToMaster implements flatbuffers.IUnpackableObject<LobbyToLobby_CustomGameLeaveToMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_CustomGameLeaveToMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_CustomGameLeaveToMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_CustomGameLeaveToMaster):LobbyToLobby_CustomGameLeaveToMaster {
  return (obj || new LobbyToLobby_CustomGameLeaveToMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_CustomGameLeaveToMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_CustomGameLeaveToMaster):LobbyToLobby_CustomGameLeaveToMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_CustomGameLeaveToMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RoomID():string|null
RoomID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
RoomID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

LeaveMemberUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MasterNick():string|null
MasterNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MasterNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_CustomGameLeaveToMaster';
}

static startLobbyToLobby_CustomGameLeaveToMaster(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_RoomID(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RoomIDOffset, 0);
}

static add_LeaveMemberUID(builder:flatbuffers.Builder, LeaveMemberUID:number) {
  builder.addFieldInt32(1, LeaveMemberUID, 0);
}

static add_MasterNick(builder:flatbuffers.Builder, MasterNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, MasterNickOffset, 0);
}

static endLobbyToLobby_CustomGameLeaveToMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_CustomGameLeaveToMaster(builder:flatbuffers.Builder, RoomIDOffset:flatbuffers.Offset, LeaveMemberUID:number, MasterNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToLobby_CustomGameLeaveToMaster.startLobbyToLobby_CustomGameLeaveToMaster(builder);
  LobbyToLobby_CustomGameLeaveToMaster.add_RoomID(builder, RoomIDOffset);
  LobbyToLobby_CustomGameLeaveToMaster.add_LeaveMemberUID(builder, LeaveMemberUID);
  LobbyToLobby_CustomGameLeaveToMaster.add_MasterNick(builder, MasterNickOffset);
  return LobbyToLobby_CustomGameLeaveToMaster.endLobbyToLobby_CustomGameLeaveToMaster(builder);
}

unpack(): LobbyToLobby_CustomGameLeaveToMasterT {
  return new LobbyToLobby_CustomGameLeaveToMasterT(
    this.RoomID(),
    this.LeaveMemberUID(),
    this.MasterNick()
  );
}


unpackTo(_o: LobbyToLobby_CustomGameLeaveToMasterT): void {
  _o.RoomID = this.RoomID();
  _o.LeaveMemberUID = this.LeaveMemberUID();
  _o.MasterNick = this.MasterNick();
}
}

export class LobbyToLobby_CustomGameLeaveToMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public RoomID: string|Uint8Array|null = null,
  public LeaveMemberUID: number = 0,
  public MasterNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RoomID = (this.RoomID !== null ? builder.createString(this.RoomID!) : 0);
  const MasterNick = (this.MasterNick !== null ? builder.createString(this.MasterNick!) : 0);

  return LobbyToLobby_CustomGameLeaveToMaster.createLobbyToLobby_CustomGameLeaveToMaster(builder,
    RoomID,
    this.LeaveMemberUID,
    MasterNick
  );
}
}

export class LobbyToLobby_CustomGameFollowMaster implements flatbuffers.IUnpackableObject<LobbyToLobby_CustomGameFollowMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_CustomGameFollowMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_CustomGameFollowMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_CustomGameFollowMaster):LobbyToLobby_CustomGameFollowMaster {
  return (obj || new LobbyToLobby_CustomGameFollowMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_CustomGameFollowMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_CustomGameFollowMaster):LobbyToLobby_CustomGameFollowMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_CustomGameFollowMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

GuestUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestNick():string|null
GuestNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GuestNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GuestEntitlementID():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestProfileIconID():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

GuestProfileBGID():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_CustomGameFollowMaster';
}

static startLobbyToLobby_CustomGameFollowMaster(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static add_GuestUID(builder:flatbuffers.Builder, GuestUID:number) {
  builder.addFieldInt32(0, GuestUID, 0);
}

static add_GuestNick(builder:flatbuffers.Builder, GuestNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, GuestNickOffset, 0);
}

static add_GuestEntitlementID(builder:flatbuffers.Builder, GuestEntitlementID:number) {
  builder.addFieldInt32(2, GuestEntitlementID, 0);
}

static add_GuestProfileIconID(builder:flatbuffers.Builder, GuestProfileIconID:number) {
  builder.addFieldInt32(3, GuestProfileIconID, 0);
}

static add_GuestProfileBGID(builder:flatbuffers.Builder, GuestProfileBGID:number) {
  builder.addFieldInt32(4, GuestProfileBGID, 0);
}

static endLobbyToLobby_CustomGameFollowMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_CustomGameFollowMaster(builder:flatbuffers.Builder, GuestUID:number, GuestNickOffset:flatbuffers.Offset, GuestEntitlementID:number, GuestProfileIconID:number, GuestProfileBGID:number):flatbuffers.Offset {
  LobbyToLobby_CustomGameFollowMaster.startLobbyToLobby_CustomGameFollowMaster(builder);
  LobbyToLobby_CustomGameFollowMaster.add_GuestUID(builder, GuestUID);
  LobbyToLobby_CustomGameFollowMaster.add_GuestNick(builder, GuestNickOffset);
  LobbyToLobby_CustomGameFollowMaster.add_GuestEntitlementID(builder, GuestEntitlementID);
  LobbyToLobby_CustomGameFollowMaster.add_GuestProfileIconID(builder, GuestProfileIconID);
  LobbyToLobby_CustomGameFollowMaster.add_GuestProfileBGID(builder, GuestProfileBGID);
  return LobbyToLobby_CustomGameFollowMaster.endLobbyToLobby_CustomGameFollowMaster(builder);
}

unpack(): LobbyToLobby_CustomGameFollowMasterT {
  return new LobbyToLobby_CustomGameFollowMasterT(
    this.GuestUID(),
    this.GuestNick(),
    this.GuestEntitlementID(),
    this.GuestProfileIconID(),
    this.GuestProfileBGID()
  );
}


unpackTo(_o: LobbyToLobby_CustomGameFollowMasterT): void {
  _o.GuestUID = this.GuestUID();
  _o.GuestNick = this.GuestNick();
  _o.GuestEntitlementID = this.GuestEntitlementID();
  _o.GuestProfileIconID = this.GuestProfileIconID();
  _o.GuestProfileBGID = this.GuestProfileBGID();
}
}

export class LobbyToLobby_CustomGameFollowMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public GuestUID: number = 0,
  public GuestNick: string|Uint8Array|null = null,
  public GuestEntitlementID: number = 0,
  public GuestProfileIconID: number = 0,
  public GuestProfileBGID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const GuestNick = (this.GuestNick !== null ? builder.createString(this.GuestNick!) : 0);

  return LobbyToLobby_CustomGameFollowMaster.createLobbyToLobby_CustomGameFollowMaster(builder,
    this.GuestUID,
    GuestNick,
    this.GuestEntitlementID,
    this.GuestProfileIconID,
    this.GuestProfileBGID
  );
}
}

export class LobbyToLobby_MatchingStartMatch implements flatbuffers.IUnpackableObject<LobbyToLobby_MatchingStartMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_MatchingStartMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_MatchingStartMatch):LobbyToLobby_MatchingStartMatch {
  return (obj || new LobbyToLobby_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_MatchingStartMatch(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_MatchingStartMatch):LobbyToLobby_MatchingStartMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_MatchingStartMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

PlayerIDList(index: number):string
PlayerIDList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
PlayerIDList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

PlayerIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_MatchingStartMatch';
}

static startLobbyToLobby_MatchingStartMatch(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static add_PlayerIDList(builder:flatbuffers.Builder, PlayerIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, PlayerIDListOffset, 0);
}

static create_PlayerIDList_Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static start_PlayerIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endLobbyToLobby_MatchingStartMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_MatchingStartMatch(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset, PlayerIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToLobby_MatchingStartMatch.startLobbyToLobby_MatchingStartMatch(builder);
  LobbyToLobby_MatchingStartMatch.add_MatchingTableID(builder, MatchingTableID);
  LobbyToLobby_MatchingStartMatch.add_MatchTicket(builder, MatchTicketOffset);
  LobbyToLobby_MatchingStartMatch.add_PlayerIDList(builder, PlayerIDListOffset);
  return LobbyToLobby_MatchingStartMatch.endLobbyToLobby_MatchingStartMatch(builder);
}

unpack(): LobbyToLobby_MatchingStartMatchT {
  return new LobbyToLobby_MatchingStartMatchT(
    this.MatchingTableID(),
    this.MatchTicket(),
    this.bb!.createScalarList<string>(this.PlayerIDList.bind(this), this.PlayerIDList_Length())
  );
}


unpackTo(_o: LobbyToLobby_MatchingStartMatchT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
  _o.PlayerIDList = this.bb!.createScalarList<string>(this.PlayerIDList.bind(this), this.PlayerIDList_Length());
}
}

export class LobbyToLobby_MatchingStartMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null,
  public PlayerIDList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);
  const PlayerIDList = LobbyToLobby_MatchingStartMatch.create_PlayerIDList_Vector(builder, builder.createObjectOffsetList(this.PlayerIDList));

  return LobbyToLobby_MatchingStartMatch.createLobbyToLobby_MatchingStartMatch(builder,
    this.MatchingTableID,
    MatchTicket,
    PlayerIDList
  );
}
}

export class LobbyToLobby_MatchingStopMatchToMaster implements flatbuffers.IUnpackableObject<LobbyToLobby_MatchingStopMatchToMasterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_MatchingStopMatchToMaster {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_MatchingStopMatchToMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_MatchingStopMatchToMaster):LobbyToLobby_MatchingStopMatchToMaster {
  return (obj || new LobbyToLobby_MatchingStopMatchToMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_MatchingStopMatchToMaster(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_MatchingStopMatchToMaster):LobbyToLobby_MatchingStopMatchToMaster {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_MatchingStopMatchToMaster()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchTicket():string|null
MatchTicket(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchTicket(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_MatchingStopMatchToMaster';
}

static startLobbyToLobby_MatchingStopMatchToMaster(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchTicket(builder:flatbuffers.Builder, MatchTicketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchTicketOffset, 0);
}

static endLobbyToLobby_MatchingStopMatchToMaster(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_MatchingStopMatchToMaster(builder:flatbuffers.Builder, MatchingTableID:number, MatchTicketOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToLobby_MatchingStopMatchToMaster.startLobbyToLobby_MatchingStopMatchToMaster(builder);
  LobbyToLobby_MatchingStopMatchToMaster.add_MatchingTableID(builder, MatchingTableID);
  LobbyToLobby_MatchingStopMatchToMaster.add_MatchTicket(builder, MatchTicketOffset);
  return LobbyToLobby_MatchingStopMatchToMaster.endLobbyToLobby_MatchingStopMatchToMaster(builder);
}

unpack(): LobbyToLobby_MatchingStopMatchToMasterT {
  return new LobbyToLobby_MatchingStopMatchToMasterT(
    this.MatchingTableID(),
    this.MatchTicket()
  );
}


unpackTo(_o: LobbyToLobby_MatchingStopMatchToMasterT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchTicket = this.MatchTicket();
}
}

export class LobbyToLobby_MatchingStopMatchToMasterT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchTicket: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchTicket = (this.MatchTicket !== null ? builder.createString(this.MatchTicket!) : 0);

  return LobbyToLobby_MatchingStopMatchToMaster.createLobbyToLobby_MatchingStopMatchToMaster(builder,
    this.MatchingTableID,
    MatchTicket
  );
}
}

export class LobbyToLobby_EnterMultiMode implements flatbuffers.IUnpackableObject<LobbyToLobby_EnterMultiModeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_EnterMultiMode {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_EnterMultiMode(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_EnterMultiMode):LobbyToLobby_EnterMultiMode {
  return (obj || new LobbyToLobby_EnterMultiMode()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_EnterMultiMode(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_EnterMultiMode):LobbyToLobby_EnterMultiMode {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_EnterMultiMode()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

MatchingTableID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

MatchID():string|null
MatchID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
MatchID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ContentsType():EContentsType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EContentsType.None;
}

TeamID():string|null
TeamID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TeamID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ServerUrl():string|null
ServerUrl(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ServerUrl(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

DedicatedID():string|null
DedicatedID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DedicatedID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

PlayerSessionID():string|null
PlayerSessionID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
PlayerSessionID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

GameSessionID():string|null
GameSessionID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GameSessionID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IsCustomGame():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_EnterMultiMode';
}

static startLobbyToLobby_EnterMultiMode(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static add_MatchingTableID(builder:flatbuffers.Builder, MatchingTableID:number) {
  builder.addFieldInt32(0, MatchingTableID, 0);
}

static add_MatchID(builder:flatbuffers.Builder, MatchIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, MatchIDOffset, 0);
}

static add_ContentsType(builder:flatbuffers.Builder, ContentsType:EContentsType) {
  builder.addFieldInt8(2, ContentsType, EContentsType.None);
}

static add_TeamID(builder:flatbuffers.Builder, TeamIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, TeamIDOffset, 0);
}

static add_ServerUrl(builder:flatbuffers.Builder, ServerUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ServerUrlOffset, 0);
}

static add_DedicatedID(builder:flatbuffers.Builder, DedicatedIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, DedicatedIDOffset, 0);
}

static add_PlayerSessionID(builder:flatbuffers.Builder, PlayerSessionIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, PlayerSessionIDOffset, 0);
}

static add_GameSessionID(builder:flatbuffers.Builder, GameSessionIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, GameSessionIDOffset, 0);
}

static add_IsCustomGame(builder:flatbuffers.Builder, IsCustomGame:boolean) {
  builder.addFieldInt8(8, +IsCustomGame, +false);
}

static endLobbyToLobby_EnterMultiMode(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_EnterMultiMode(builder:flatbuffers.Builder, MatchingTableID:number, MatchIDOffset:flatbuffers.Offset, ContentsType:EContentsType, TeamIDOffset:flatbuffers.Offset, ServerUrlOffset:flatbuffers.Offset, DedicatedIDOffset:flatbuffers.Offset, PlayerSessionIDOffset:flatbuffers.Offset, GameSessionIDOffset:flatbuffers.Offset, IsCustomGame:boolean):flatbuffers.Offset {
  LobbyToLobby_EnterMultiMode.startLobbyToLobby_EnterMultiMode(builder);
  LobbyToLobby_EnterMultiMode.add_MatchingTableID(builder, MatchingTableID);
  LobbyToLobby_EnterMultiMode.add_MatchID(builder, MatchIDOffset);
  LobbyToLobby_EnterMultiMode.add_ContentsType(builder, ContentsType);
  LobbyToLobby_EnterMultiMode.add_TeamID(builder, TeamIDOffset);
  LobbyToLobby_EnterMultiMode.add_ServerUrl(builder, ServerUrlOffset);
  LobbyToLobby_EnterMultiMode.add_DedicatedID(builder, DedicatedIDOffset);
  LobbyToLobby_EnterMultiMode.add_PlayerSessionID(builder, PlayerSessionIDOffset);
  LobbyToLobby_EnterMultiMode.add_GameSessionID(builder, GameSessionIDOffset);
  LobbyToLobby_EnterMultiMode.add_IsCustomGame(builder, IsCustomGame);
  return LobbyToLobby_EnterMultiMode.endLobbyToLobby_EnterMultiMode(builder);
}

unpack(): LobbyToLobby_EnterMultiModeT {
  return new LobbyToLobby_EnterMultiModeT(
    this.MatchingTableID(),
    this.MatchID(),
    this.ContentsType(),
    this.TeamID(),
    this.ServerUrl(),
    this.DedicatedID(),
    this.PlayerSessionID(),
    this.GameSessionID(),
    this.IsCustomGame()
  );
}


unpackTo(_o: LobbyToLobby_EnterMultiModeT): void {
  _o.MatchingTableID = this.MatchingTableID();
  _o.MatchID = this.MatchID();
  _o.ContentsType = this.ContentsType();
  _o.TeamID = this.TeamID();
  _o.ServerUrl = this.ServerUrl();
  _o.DedicatedID = this.DedicatedID();
  _o.PlayerSessionID = this.PlayerSessionID();
  _o.GameSessionID = this.GameSessionID();
  _o.IsCustomGame = this.IsCustomGame();
}
}

export class LobbyToLobby_EnterMultiModeT implements flatbuffers.IGeneratedObject {
constructor(
  public MatchingTableID: number = 0,
  public MatchID: string|Uint8Array|null = null,
  public ContentsType: EContentsType = EContentsType.None,
  public TeamID: string|Uint8Array|null = null,
  public ServerUrl: string|Uint8Array|null = null,
  public DedicatedID: string|Uint8Array|null = null,
  public PlayerSessionID: string|Uint8Array|null = null,
  public GameSessionID: string|Uint8Array|null = null,
  public IsCustomGame: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const MatchID = (this.MatchID !== null ? builder.createString(this.MatchID!) : 0);
  const TeamID = (this.TeamID !== null ? builder.createString(this.TeamID!) : 0);
  const ServerUrl = (this.ServerUrl !== null ? builder.createString(this.ServerUrl!) : 0);
  const DedicatedID = (this.DedicatedID !== null ? builder.createString(this.DedicatedID!) : 0);
  const PlayerSessionID = (this.PlayerSessionID !== null ? builder.createString(this.PlayerSessionID!) : 0);
  const GameSessionID = (this.GameSessionID !== null ? builder.createString(this.GameSessionID!) : 0);

  return LobbyToLobby_EnterMultiMode.createLobbyToLobby_EnterMultiMode(builder,
    this.MatchingTableID,
    MatchID,
    this.ContentsType,
    TeamID,
    ServerUrl,
    DedicatedID,
    PlayerSessionID,
    GameSessionID,
    this.IsCustomGame
  );
}
}

export class PenaltyReportPoint implements flatbuffers.IUnpackableObject<PenaltyReportPointT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PenaltyReportPoint {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

ReportState():EPenaltyReportState {
  return this.bb!.readUint8(this.bb_pos);
}

PenaltyPoint():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static getFullyQualifiedName():string {
  return 'Lobby.PenaltyReportPoint';
}

static sizeOf():number {
  return 8;
}

static createPenaltyReportPoint(builder:flatbuffers.Builder, ReportState: EPenaltyReportState, PenaltyPoint: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(PenaltyPoint);
  builder.pad(3);
  builder.writeInt8(ReportState);
  return builder.offset();
}


unpack(): PenaltyReportPointT {
  return new PenaltyReportPointT(
    this.ReportState(),
    this.PenaltyPoint()
  );
}


unpackTo(_o: PenaltyReportPointT): void {
  _o.ReportState = this.ReportState();
  _o.PenaltyPoint = this.PenaltyPoint();
}
}

export class PenaltyReportPointT implements flatbuffers.IGeneratedObject {
constructor(
  public ReportState: EPenaltyReportState = EPenaltyReportState.None,
  public PenaltyPoint: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PenaltyReportPoint.createPenaltyReportPoint(builder,
    this.ReportState,
    this.PenaltyPoint
  );
}
}

export class LobbyToLobby_PenaltyReport implements flatbuffers.IUnpackableObject<LobbyToLobby_PenaltyReportT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LobbyToLobby_PenaltyReport {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLobbyToLobby_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_PenaltyReport):LobbyToLobby_PenaltyReport {
  return (obj || new LobbyToLobby_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLobbyToLobby_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:LobbyToLobby_PenaltyReport):LobbyToLobby_PenaltyReport {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LobbyToLobby_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ReportStateList(index: number, obj?:PenaltyReportPoint):PenaltyReportPoint|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PenaltyReportPoint()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ReportStateList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.LobbyToLobby_PenaltyReport';
}

static startLobbyToLobby_PenaltyReport(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ReportStateList(builder:flatbuffers.Builder, ReportStateListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ReportStateListOffset, 0);
}

static start_ReportStateList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endLobbyToLobby_PenaltyReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLobbyToLobby_PenaltyReport(builder:flatbuffers.Builder, ReportStateListOffset:flatbuffers.Offset):flatbuffers.Offset {
  LobbyToLobby_PenaltyReport.startLobbyToLobby_PenaltyReport(builder);
  LobbyToLobby_PenaltyReport.add_ReportStateList(builder, ReportStateListOffset);
  return LobbyToLobby_PenaltyReport.endLobbyToLobby_PenaltyReport(builder);
}

unpack(): LobbyToLobby_PenaltyReportT {
  return new LobbyToLobby_PenaltyReportT(
    this.bb!.createObjList<PenaltyReportPoint, PenaltyReportPointT>(this.ReportStateList.bind(this), this.ReportStateList_Length())
  );
}


unpackTo(_o: LobbyToLobby_PenaltyReportT): void {
  _o.ReportStateList = this.bb!.createObjList<PenaltyReportPoint, PenaltyReportPointT>(this.ReportStateList.bind(this), this.ReportStateList_Length());
}
}

export class LobbyToLobby_PenaltyReportT implements flatbuffers.IGeneratedObject {
constructor(
  public ReportStateList: (PenaltyReportPointT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ReportStateList = builder.createStructOffsetList(this.ReportStateList, LobbyToLobby_PenaltyReport.start_ReportStateList_Vector);

  return LobbyToLobby_PenaltyReport.createLobbyToLobby_PenaltyReport(builder,
    ReportStateList
  );
}
}

export class CQ_FriendChannelMove implements flatbuffers.IUnpackableObject<CQ_FriendChannelMoveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_FriendChannelMove {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_FriendChannelMove(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChannelMove):CQ_FriendChannelMove {
  return (obj || new CQ_FriendChannelMove()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_FriendChannelMove(bb:flatbuffers.ByteBuffer, obj?:CQ_FriendChannelMove):CQ_FriendChannelMove {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_FriendChannelMove()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

FriendUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

FriendUserName():string|null
FriendUserName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
FriendUserName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_FriendChannelMove';
}

static startCQ_FriendChannelMove(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_FriendUID(builder:flatbuffers.Builder, FriendUID:number) {
  builder.addFieldInt32(0, FriendUID, 0);
}

static add_FriendUserName(builder:flatbuffers.Builder, FriendUserNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, FriendUserNameOffset, 0);
}

static endCQ_FriendChannelMove(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_FriendChannelMove(builder:flatbuffers.Builder, FriendUID:number, FriendUserNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_FriendChannelMove.startCQ_FriendChannelMove(builder);
  CQ_FriendChannelMove.add_FriendUID(builder, FriendUID);
  CQ_FriendChannelMove.add_FriendUserName(builder, FriendUserNameOffset);
  return CQ_FriendChannelMove.endCQ_FriendChannelMove(builder);
}

unpack(): CQ_FriendChannelMoveT {
  return new CQ_FriendChannelMoveT(
    this.FriendUID(),
    this.FriendUserName()
  );
}


unpackTo(_o: CQ_FriendChannelMoveT): void {
  _o.FriendUID = this.FriendUID();
  _o.FriendUserName = this.FriendUserName();
}
}

export class CQ_FriendChannelMoveT implements flatbuffers.IGeneratedObject {
constructor(
  public FriendUID: number = 0,
  public FriendUserName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FriendUserName = (this.FriendUserName !== null ? builder.createString(this.FriendUserName!) : 0);

  return CQ_FriendChannelMove.createCQ_FriendChannelMove(builder,
    this.FriendUID,
    FriendUserName
  );
}
}

export class SA_FriendChannelMove implements flatbuffers.IUnpackableObject<SA_FriendChannelMoveT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_FriendChannelMove {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_FriendChannelMove(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChannelMove):SA_FriendChannelMove {
  return (obj || new SA_FriendChannelMove()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_FriendChannelMove(bb:flatbuffers.ByteBuffer, obj?:SA_FriendChannelMove):SA_FriendChannelMove {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_FriendChannelMove()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_FriendChannelMove';
}

static startSA_FriendChannelMove(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_FriendChannelMove(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_FriendChannelMove(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_FriendChannelMove.startSA_FriendChannelMove(builder);
  return SA_FriendChannelMove.endSA_FriendChannelMove(builder);
}

unpack(): SA_FriendChannelMoveT {
  return new SA_FriendChannelMoveT();
}


unpackTo(_o: SA_FriendChannelMoveT): void {}
}

export class SA_FriendChannelMoveT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_FriendChannelMove.createSA_FriendChannelMove(builder);
}
}

export class CQ_PenaltyList implements flatbuffers.IUnpackableObject<CQ_PenaltyListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PenaltyList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PenaltyList(bb:flatbuffers.ByteBuffer, obj?:CQ_PenaltyList):CQ_PenaltyList {
  return (obj || new CQ_PenaltyList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PenaltyList(bb:flatbuffers.ByteBuffer, obj?:CQ_PenaltyList):CQ_PenaltyList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PenaltyList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PenaltyList';
}

static startCQ_PenaltyList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_PenaltyList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PenaltyList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_PenaltyList.startCQ_PenaltyList(builder);
  return CQ_PenaltyList.endCQ_PenaltyList(builder);
}

unpack(): CQ_PenaltyListT {
  return new CQ_PenaltyListT();
}


unpackTo(_o: CQ_PenaltyListT): void {}
}

export class CQ_PenaltyListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PenaltyList.createCQ_PenaltyList(builder);
}
}

export class SA_PenaltyList implements flatbuffers.IUnpackableObject<SA_PenaltyListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PenaltyList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PenaltyList(bb:flatbuffers.ByteBuffer, obj?:SA_PenaltyList):SA_PenaltyList {
  return (obj || new SA_PenaltyList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PenaltyList(bb:flatbuffers.ByteBuffer, obj?:SA_PenaltyList):SA_PenaltyList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PenaltyList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PenaltyList(index: number, obj?:PenaltyInfo):PenaltyInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PenaltyInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;
}

PenaltyList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

NewNick():string|null
NewNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NewNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PenaltyList';
}

static startSA_PenaltyList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PenaltyList(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PenaltyListOffset, 0);
}

static start_PenaltyList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(24, numElems, 4);
}

static add_NewNick(builder:flatbuffers.Builder, NewNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewNickOffset, 0);
}

static endSA_PenaltyList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PenaltyList(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset, NewNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PenaltyList.startSA_PenaltyList(builder);
  SA_PenaltyList.add_PenaltyList(builder, PenaltyListOffset);
  SA_PenaltyList.add_NewNick(builder, NewNickOffset);
  return SA_PenaltyList.endSA_PenaltyList(builder);
}

unpack(): SA_PenaltyListT {
  return new SA_PenaltyListT(
    this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length()),
    this.NewNick()
  );
}


unpackTo(_o: SA_PenaltyListT): void {
  _o.PenaltyList = this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length());
  _o.NewNick = this.NewNick();
}
}

export class SA_PenaltyListT implements flatbuffers.IGeneratedObject {
constructor(
  public PenaltyList: (PenaltyInfoT)[] = [],
  public NewNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PenaltyList = builder.createStructOffsetList(this.PenaltyList, SA_PenaltyList.start_PenaltyList_Vector);
  const NewNick = (this.NewNick !== null ? builder.createString(this.NewNick!) : 0);

  return SA_PenaltyList.createSA_PenaltyList(builder,
    PenaltyList,
    NewNick
  );
}
}

export class CQ_PenaltyReport implements flatbuffers.IUnpackableObject<CQ_PenaltyReportT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PenaltyReport {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:CQ_PenaltyReport):CQ_PenaltyReport {
  return (obj || new CQ_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:CQ_PenaltyReport):CQ_PenaltyReport {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ReportStateList(index: number):EPenaltyReportState|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
}

ReportStateList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ReportStateList_Array():Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PenaltyReport';
}

static startCQ_PenaltyReport(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_ReportStateList(builder:flatbuffers.Builder, ReportStateListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ReportStateListOffset, 0);
}

static create_ReportStateList_Vector(builder:flatbuffers.Builder, data:EPenaltyReportState[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]!);
  }
  return builder.endVector();
}

static start_ReportStateList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static endCQ_PenaltyReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PenaltyReport(builder:flatbuffers.Builder, TargetUID:number, ReportStateListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_PenaltyReport.startCQ_PenaltyReport(builder);
  CQ_PenaltyReport.add_TargetUID(builder, TargetUID);
  CQ_PenaltyReport.add_ReportStateList(builder, ReportStateListOffset);
  return CQ_PenaltyReport.endCQ_PenaltyReport(builder);
}

unpack(): CQ_PenaltyReportT {
  return new CQ_PenaltyReportT(
    this.TargetUID(),
    this.bb!.createScalarList<EPenaltyReportState>(this.ReportStateList.bind(this), this.ReportStateList_Length())
  );
}


unpackTo(_o: CQ_PenaltyReportT): void {
  _o.TargetUID = this.TargetUID();
  _o.ReportStateList = this.bb!.createScalarList<EPenaltyReportState>(this.ReportStateList.bind(this), this.ReportStateList_Length());
}
}

export class CQ_PenaltyReportT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public ReportStateList: (EPenaltyReportState)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ReportStateList = CQ_PenaltyReport.create_ReportStateList_Vector(builder, this.ReportStateList);

  return CQ_PenaltyReport.createCQ_PenaltyReport(builder,
    this.TargetUID,
    ReportStateList
  );
}
}

export class SA_PenaltyReport implements flatbuffers.IUnpackableObject<SA_PenaltyReportT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PenaltyReport {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:SA_PenaltyReport):SA_PenaltyReport {
  return (obj || new SA_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:SA_PenaltyReport):SA_PenaltyReport {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PenaltyReport';
}

static startSA_PenaltyReport(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_PenaltyReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PenaltyReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_PenaltyReport.startSA_PenaltyReport(builder);
  return SA_PenaltyReport.endSA_PenaltyReport(builder);
}

unpack(): SA_PenaltyReportT {
  return new SA_PenaltyReportT();
}


unpackTo(_o: SA_PenaltyReportT): void {}
}

export class SA_PenaltyReportT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_PenaltyReport.createSA_PenaltyReport(builder);
}
}

export class SN_PenaltyReport implements flatbuffers.IUnpackableObject<SN_PenaltyReportT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_PenaltyReport {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:SN_PenaltyReport):SN_PenaltyReport {
  return (obj || new SN_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_PenaltyReport(bb:flatbuffers.ByteBuffer, obj?:SN_PenaltyReport):SN_PenaltyReport {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_PenaltyReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PenaltyList(index: number, obj?:PenaltyInfo):PenaltyInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PenaltyInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;
}

PenaltyList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

NewNick():string|null
NewNick(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NewNick(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_PenaltyReport';
}

static startSN_PenaltyReport(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_PenaltyList(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, PenaltyListOffset, 0);
}

static start_PenaltyList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(24, numElems, 4);
}

static add_NewNick(builder:flatbuffers.Builder, NewNickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewNickOffset, 0);
}

static endSN_PenaltyReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_PenaltyReport(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset, NewNickOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_PenaltyReport.startSN_PenaltyReport(builder);
  SN_PenaltyReport.add_PenaltyList(builder, PenaltyListOffset);
  SN_PenaltyReport.add_NewNick(builder, NewNickOffset);
  return SN_PenaltyReport.endSN_PenaltyReport(builder);
}

unpack(): SN_PenaltyReportT {
  return new SN_PenaltyReportT(
    this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length()),
    this.NewNick()
  );
}


unpackTo(_o: SN_PenaltyReportT): void {
  _o.PenaltyList = this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length());
  _o.NewNick = this.NewNick();
}
}

export class SN_PenaltyReportT implements flatbuffers.IGeneratedObject {
constructor(
  public PenaltyList: (PenaltyInfoT)[] = [],
  public NewNick: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PenaltyList = builder.createStructOffsetList(this.PenaltyList, SN_PenaltyReport.start_PenaltyList_Vector);
  const NewNick = (this.NewNick !== null ? builder.createString(this.NewNick!) : 0);

  return SN_PenaltyReport.createSN_PenaltyReport(builder,
    PenaltyList,
    NewNick
  );
}
}

export class SN_MatchingDelayMatch implements flatbuffers.IUnpackableObject<SN_MatchingDelayMatchT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_MatchingDelayMatch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_MatchingDelayMatch(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingDelayMatch):SN_MatchingDelayMatch {
  return (obj || new SN_MatchingDelayMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_MatchingDelayMatch(bb:flatbuffers.ByteBuffer, obj?:SN_MatchingDelayMatch):SN_MatchingDelayMatch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_MatchingDelayMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

PenaltyExpireAt():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_MatchingDelayMatch';
}

static startSN_MatchingDelayMatch(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_PenaltyExpireAt(builder:flatbuffers.Builder, PenaltyExpireAt:number) {
  builder.addFieldInt32(0, PenaltyExpireAt, 0);
}

static endSN_MatchingDelayMatch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_MatchingDelayMatch(builder:flatbuffers.Builder, PenaltyExpireAt:number):flatbuffers.Offset {
  SN_MatchingDelayMatch.startSN_MatchingDelayMatch(builder);
  SN_MatchingDelayMatch.add_PenaltyExpireAt(builder, PenaltyExpireAt);
  return SN_MatchingDelayMatch.endSN_MatchingDelayMatch(builder);
}

unpack(): SN_MatchingDelayMatchT {
  return new SN_MatchingDelayMatchT(
    this.PenaltyExpireAt()
  );
}


unpackTo(_o: SN_MatchingDelayMatchT): void {
  _o.PenaltyExpireAt = this.PenaltyExpireAt();
}
}

export class SN_MatchingDelayMatchT implements flatbuffers.IGeneratedObject {
constructor(
  public PenaltyExpireAt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_MatchingDelayMatch.createSN_MatchingDelayMatch(builder,
    this.PenaltyExpireAt
  );
}
}

export class CQ_NicePlayer implements flatbuffers.IUnpackableObject<CQ_NicePlayerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_NicePlayer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_NicePlayer(bb:flatbuffers.ByteBuffer, obj?:CQ_NicePlayer):CQ_NicePlayer {
  return (obj || new CQ_NicePlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_NicePlayer(bb:flatbuffers.ByteBuffer, obj?:CQ_NicePlayer):CQ_NicePlayer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_NicePlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_NicePlayer';
}

static startCQ_NicePlayer(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_NicePlayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_NicePlayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_NicePlayer.startCQ_NicePlayer(builder);
  return CQ_NicePlayer.endCQ_NicePlayer(builder);
}

unpack(): CQ_NicePlayerT {
  return new CQ_NicePlayerT();
}


unpackTo(_o: CQ_NicePlayerT): void {}
}

export class CQ_NicePlayerT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_NicePlayer.createCQ_NicePlayer(builder);
}
}

export class SA_NicePlayer implements flatbuffers.IUnpackableObject<SA_NicePlayerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_NicePlayer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_NicePlayer(bb:flatbuffers.ByteBuffer, obj?:SA_NicePlayer):SA_NicePlayer {
  return (obj || new SA_NicePlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_NicePlayer(bb:flatbuffers.ByteBuffer, obj?:SA_NicePlayer):SA_NicePlayer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_NicePlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

NiceLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NicePoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

IsLevelUp():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_NicePlayer';
}

static startSA_NicePlayer(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_NiceLevel(builder:flatbuffers.Builder, NiceLevel:number) {
  builder.addFieldInt32(0, NiceLevel, 0);
}

static add_NicePoint(builder:flatbuffers.Builder, NicePoint:number) {
  builder.addFieldInt32(1, NicePoint, 0);
}

static add_IsLevelUp(builder:flatbuffers.Builder, IsLevelUp:boolean) {
  builder.addFieldInt8(2, +IsLevelUp, +false);
}

static endSA_NicePlayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_NicePlayer(builder:flatbuffers.Builder, NiceLevel:number, NicePoint:number, IsLevelUp:boolean):flatbuffers.Offset {
  SA_NicePlayer.startSA_NicePlayer(builder);
  SA_NicePlayer.add_NiceLevel(builder, NiceLevel);
  SA_NicePlayer.add_NicePoint(builder, NicePoint);
  SA_NicePlayer.add_IsLevelUp(builder, IsLevelUp);
  return SA_NicePlayer.endSA_NicePlayer(builder);
}

unpack(): SA_NicePlayerT {
  return new SA_NicePlayerT(
    this.NiceLevel(),
    this.NicePoint(),
    this.IsLevelUp()
  );
}


unpackTo(_o: SA_NicePlayerT): void {
  _o.NiceLevel = this.NiceLevel();
  _o.NicePoint = this.NicePoint();
  _o.IsLevelUp = this.IsLevelUp();
}
}

export class SA_NicePlayerT implements flatbuffers.IGeneratedObject {
constructor(
  public NiceLevel: number = 0,
  public NicePoint: number = 0,
  public IsLevelUp: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_NicePlayer.createSA_NicePlayer(builder,
    this.NiceLevel,
    this.NicePoint,
    this.IsLevelUp
  );
}
}

export class CQ_NicePlayerReport implements flatbuffers.IUnpackableObject<CQ_NicePlayerReportT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_NicePlayerReport {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_NicePlayerReport(bb:flatbuffers.ByteBuffer, obj?:CQ_NicePlayerReport):CQ_NicePlayerReport {
  return (obj || new CQ_NicePlayerReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_NicePlayerReport(bb:flatbuffers.ByteBuffer, obj?:CQ_NicePlayerReport):CQ_NicePlayerReport {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_NicePlayerReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UIDList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

UIDList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

UIDList_Array():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_NicePlayerReport';
}

static startCQ_NicePlayerReport(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_UIDList(builder:flatbuffers.Builder, UIDListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, UIDListOffset, 0);
}

static create_UIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static create_UIDList_Vector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static create_UIDList_Vector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static start_UIDList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCQ_NicePlayerReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_NicePlayerReport(builder:flatbuffers.Builder, UIDListOffset:flatbuffers.Offset):flatbuffers.Offset {
  CQ_NicePlayerReport.startCQ_NicePlayerReport(builder);
  CQ_NicePlayerReport.add_UIDList(builder, UIDListOffset);
  return CQ_NicePlayerReport.endCQ_NicePlayerReport(builder);
}

unpack(): CQ_NicePlayerReportT {
  return new CQ_NicePlayerReportT(
    this.bb!.createScalarList<number>(this.UIDList.bind(this), this.UIDList_Length())
  );
}


unpackTo(_o: CQ_NicePlayerReportT): void {
  _o.UIDList = this.bb!.createScalarList<number>(this.UIDList.bind(this), this.UIDList_Length());
}
}

export class CQ_NicePlayerReportT implements flatbuffers.IGeneratedObject {
constructor(
  public UIDList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const UIDList = CQ_NicePlayerReport.create_UIDList_Vector(builder, this.UIDList);

  return CQ_NicePlayerReport.createCQ_NicePlayerReport(builder,
    UIDList
  );
}
}

export class SA_NicePlayerReport implements flatbuffers.IUnpackableObject<SA_NicePlayerReportT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_NicePlayerReport {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_NicePlayerReport(bb:flatbuffers.ByteBuffer, obj?:SA_NicePlayerReport):SA_NicePlayerReport {
  return (obj || new SA_NicePlayerReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_NicePlayerReport(bb:flatbuffers.ByteBuffer, obj?:SA_NicePlayerReport):SA_NicePlayerReport {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_NicePlayerReport()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_NicePlayerReport';
}

static startSA_NicePlayerReport(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSA_NicePlayerReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_NicePlayerReport(builder:flatbuffers.Builder):flatbuffers.Offset {
  SA_NicePlayerReport.startSA_NicePlayerReport(builder);
  return SA_NicePlayerReport.endSA_NicePlayerReport(builder);
}

unpack(): SA_NicePlayerReportT {
  return new SA_NicePlayerReportT();
}


unpackTo(_o: SA_NicePlayerReportT): void {}
}

export class SA_NicePlayerReportT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_NicePlayerReport.createSA_NicePlayerReport(builder);
}
}

export class CQ_PlayRecordGoldClashList implements flatbuffers.IUnpackableObject<CQ_PlayRecordGoldClashListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PlayRecordGoldClashList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PlayRecordGoldClashList(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordGoldClashList):CQ_PlayRecordGoldClashList {
  return (obj || new CQ_PlayRecordGoldClashList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PlayRecordGoldClashList(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordGoldClashList):CQ_PlayRecordGoldClashList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PlayRecordGoldClashList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SeasonID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PlayRecordGoldClashList';
}

static startCQ_PlayRecordGoldClashList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SeasonID(builder:flatbuffers.Builder, SeasonID:number) {
  builder.addFieldInt32(0, SeasonID, 0);
}

static endCQ_PlayRecordGoldClashList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PlayRecordGoldClashList(builder:flatbuffers.Builder, SeasonID:number):flatbuffers.Offset {
  CQ_PlayRecordGoldClashList.startCQ_PlayRecordGoldClashList(builder);
  CQ_PlayRecordGoldClashList.add_SeasonID(builder, SeasonID);
  return CQ_PlayRecordGoldClashList.endCQ_PlayRecordGoldClashList(builder);
}

unpack(): CQ_PlayRecordGoldClashListT {
  return new CQ_PlayRecordGoldClashListT(
    this.SeasonID()
  );
}


unpackTo(_o: CQ_PlayRecordGoldClashListT): void {
  _o.SeasonID = this.SeasonID();
}
}

export class CQ_PlayRecordGoldClashListT implements flatbuffers.IGeneratedObject {
constructor(
  public SeasonID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PlayRecordGoldClashList.createCQ_PlayRecordGoldClashList(builder,
    this.SeasonID
  );
}
}

export class SA_PlayRecordGoldClashList implements flatbuffers.IUnpackableObject<SA_PlayRecordGoldClashListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PlayRecordGoldClashList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PlayRecordGoldClashList(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordGoldClashList):SA_PlayRecordGoldClashList {
  return (obj || new SA_PlayRecordGoldClashList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PlayRecordGoldClashList(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordGoldClashList):SA_PlayRecordGoldClashList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PlayRecordGoldClashList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RecordList(index: number, obj?:PlayRecordGoldClashData):PlayRecordGoldClashData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PlayRecordGoldClashData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;
}

RecordList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

SeasonID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PlayRecordGoldClashList';
}

static startSA_PlayRecordGoldClashList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RecordList(builder:flatbuffers.Builder, RecordListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RecordListOffset, 0);
}

static start_RecordList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(44, numElems, 4);
}

static add_SeasonID(builder:flatbuffers.Builder, SeasonID:number) {
  builder.addFieldInt32(1, SeasonID, 0);
}

static endSA_PlayRecordGoldClashList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PlayRecordGoldClashList(builder:flatbuffers.Builder, RecordListOffset:flatbuffers.Offset, SeasonID:number):flatbuffers.Offset {
  SA_PlayRecordGoldClashList.startSA_PlayRecordGoldClashList(builder);
  SA_PlayRecordGoldClashList.add_RecordList(builder, RecordListOffset);
  SA_PlayRecordGoldClashList.add_SeasonID(builder, SeasonID);
  return SA_PlayRecordGoldClashList.endSA_PlayRecordGoldClashList(builder);
}

unpack(): SA_PlayRecordGoldClashListT {
  return new SA_PlayRecordGoldClashListT(
    this.bb!.createObjList<PlayRecordGoldClashData, PlayRecordGoldClashDataT>(this.RecordList.bind(this), this.RecordList_Length()),
    this.SeasonID()
  );
}


unpackTo(_o: SA_PlayRecordGoldClashListT): void {
  _o.RecordList = this.bb!.createObjList<PlayRecordGoldClashData, PlayRecordGoldClashDataT>(this.RecordList.bind(this), this.RecordList_Length());
  _o.SeasonID = this.SeasonID();
}
}

export class SA_PlayRecordGoldClashListT implements flatbuffers.IGeneratedObject {
constructor(
  public RecordList: (PlayRecordGoldClashDataT)[] = [],
  public SeasonID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RecordList = builder.createStructOffsetList(this.RecordList, SA_PlayRecordGoldClashList.start_RecordList_Vector);

  return SA_PlayRecordGoldClashList.createSA_PlayRecordGoldClashList(builder,
    RecordList,
    this.SeasonID
  );
}
}

export class CQ_PlayRecordGoldClashListOther implements flatbuffers.IUnpackableObject<CQ_PlayRecordGoldClashListOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PlayRecordGoldClashListOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PlayRecordGoldClashListOther(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordGoldClashListOther):CQ_PlayRecordGoldClashListOther {
  return (obj || new CQ_PlayRecordGoldClashListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PlayRecordGoldClashListOther(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordGoldClashListOther):CQ_PlayRecordGoldClashListOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PlayRecordGoldClashListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PlayRecordGoldClashListOther';
}

static startCQ_PlayRecordGoldClashListOther(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_SeasonID(builder:flatbuffers.Builder, SeasonID:number) {
  builder.addFieldInt32(1, SeasonID, 0);
}

static endCQ_PlayRecordGoldClashListOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PlayRecordGoldClashListOther(builder:flatbuffers.Builder, TargetUID:number, SeasonID:number):flatbuffers.Offset {
  CQ_PlayRecordGoldClashListOther.startCQ_PlayRecordGoldClashListOther(builder);
  CQ_PlayRecordGoldClashListOther.add_TargetUID(builder, TargetUID);
  CQ_PlayRecordGoldClashListOther.add_SeasonID(builder, SeasonID);
  return CQ_PlayRecordGoldClashListOther.endCQ_PlayRecordGoldClashListOther(builder);
}

unpack(): CQ_PlayRecordGoldClashListOtherT {
  return new CQ_PlayRecordGoldClashListOtherT(
    this.TargetUID(),
    this.SeasonID()
  );
}


unpackTo(_o: CQ_PlayRecordGoldClashListOtherT): void {
  _o.TargetUID = this.TargetUID();
  _o.SeasonID = this.SeasonID();
}
}

export class CQ_PlayRecordGoldClashListOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public SeasonID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PlayRecordGoldClashListOther.createCQ_PlayRecordGoldClashListOther(builder,
    this.TargetUID,
    this.SeasonID
  );
}
}

export class SA_PlayRecordGoldClashListOther implements flatbuffers.IUnpackableObject<SA_PlayRecordGoldClashListOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PlayRecordGoldClashListOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PlayRecordGoldClashListOther(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordGoldClashListOther):SA_PlayRecordGoldClashListOther {
  return (obj || new SA_PlayRecordGoldClashListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PlayRecordGoldClashListOther(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordGoldClashListOther):SA_PlayRecordGoldClashListOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PlayRecordGoldClashListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

SeasonID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RecordList(index: number, obj?:PlayRecordGoldClashData):PlayRecordGoldClashData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new PlayRecordGoldClashData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;
}

RecordList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PlayRecordGoldClashListOther';
}

static startSA_PlayRecordGoldClashListOther(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_SeasonID(builder:flatbuffers.Builder, SeasonID:number) {
  builder.addFieldInt32(1, SeasonID, 0);
}

static add_RecordList(builder:flatbuffers.Builder, RecordListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RecordListOffset, 0);
}

static start_RecordList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(44, numElems, 4);
}

static endSA_PlayRecordGoldClashListOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PlayRecordGoldClashListOther(builder:flatbuffers.Builder, TargetUID:number, SeasonID:number, RecordListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PlayRecordGoldClashListOther.startSA_PlayRecordGoldClashListOther(builder);
  SA_PlayRecordGoldClashListOther.add_TargetUID(builder, TargetUID);
  SA_PlayRecordGoldClashListOther.add_SeasonID(builder, SeasonID);
  SA_PlayRecordGoldClashListOther.add_RecordList(builder, RecordListOffset);
  return SA_PlayRecordGoldClashListOther.endSA_PlayRecordGoldClashListOther(builder);
}

unpack(): SA_PlayRecordGoldClashListOtherT {
  return new SA_PlayRecordGoldClashListOtherT(
    this.TargetUID(),
    this.SeasonID(),
    this.bb!.createObjList<PlayRecordGoldClashData, PlayRecordGoldClashDataT>(this.RecordList.bind(this), this.RecordList_Length())
  );
}


unpackTo(_o: SA_PlayRecordGoldClashListOtherT): void {
  _o.TargetUID = this.TargetUID();
  _o.SeasonID = this.SeasonID();
  _o.RecordList = this.bb!.createObjList<PlayRecordGoldClashData, PlayRecordGoldClashDataT>(this.RecordList.bind(this), this.RecordList_Length());
}
}

export class SA_PlayRecordGoldClashListOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public SeasonID: number = 0,
  public RecordList: (PlayRecordGoldClashDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RecordList = builder.createStructOffsetList(this.RecordList, SA_PlayRecordGoldClashListOther.start_RecordList_Vector);

  return SA_PlayRecordGoldClashListOther.createSA_PlayRecordGoldClashListOther(builder,
    this.TargetUID,
    this.SeasonID,
    RecordList
  );
}
}

export class CQ_PlayRecordRpgList implements flatbuffers.IUnpackableObject<CQ_PlayRecordRpgListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PlayRecordRpgList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PlayRecordRpgList(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordRpgList):CQ_PlayRecordRpgList {
  return (obj || new CQ_PlayRecordRpgList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PlayRecordRpgList(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordRpgList):CQ_PlayRecordRpgList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PlayRecordRpgList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PlayRecordRpgList';
}

static startCQ_PlayRecordRpgList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(0, ChapterID, 0);
}

static endCQ_PlayRecordRpgList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PlayRecordRpgList(builder:flatbuffers.Builder, ChapterID:number):flatbuffers.Offset {
  CQ_PlayRecordRpgList.startCQ_PlayRecordRpgList(builder);
  CQ_PlayRecordRpgList.add_ChapterID(builder, ChapterID);
  return CQ_PlayRecordRpgList.endCQ_PlayRecordRpgList(builder);
}

unpack(): CQ_PlayRecordRpgListT {
  return new CQ_PlayRecordRpgListT(
    this.ChapterID()
  );
}


unpackTo(_o: CQ_PlayRecordRpgListT): void {
  _o.ChapterID = this.ChapterID();
}
}

export class CQ_PlayRecordRpgListT implements flatbuffers.IGeneratedObject {
constructor(
  public ChapterID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PlayRecordRpgList.createCQ_PlayRecordRpgList(builder,
    this.ChapterID
  );
}
}

export class SA_PlayRecordRpgList implements flatbuffers.IUnpackableObject<SA_PlayRecordRpgListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PlayRecordRpgList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PlayRecordRpgList(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordRpgList):SA_PlayRecordRpgList {
  return (obj || new SA_PlayRecordRpgList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PlayRecordRpgList(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordRpgList):SA_PlayRecordRpgList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PlayRecordRpgList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

RecordList(index: number, obj?:PlayRecordRpgData):PlayRecordRpgData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PlayRecordRpgData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 32, this.bb!) : null;
}

RecordList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PlayRecordRpgList';
}

static startSA_PlayRecordRpgList(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_RecordList(builder:flatbuffers.Builder, RecordListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, RecordListOffset, 0);
}

static start_RecordList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(32, numElems, 4);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(1, ChapterID, 0);
}

static endSA_PlayRecordRpgList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PlayRecordRpgList(builder:flatbuffers.Builder, RecordListOffset:flatbuffers.Offset, ChapterID:number):flatbuffers.Offset {
  SA_PlayRecordRpgList.startSA_PlayRecordRpgList(builder);
  SA_PlayRecordRpgList.add_RecordList(builder, RecordListOffset);
  SA_PlayRecordRpgList.add_ChapterID(builder, ChapterID);
  return SA_PlayRecordRpgList.endSA_PlayRecordRpgList(builder);
}

unpack(): SA_PlayRecordRpgListT {
  return new SA_PlayRecordRpgListT(
    this.bb!.createObjList<PlayRecordRpgData, PlayRecordRpgDataT>(this.RecordList.bind(this), this.RecordList_Length()),
    this.ChapterID()
  );
}


unpackTo(_o: SA_PlayRecordRpgListT): void {
  _o.RecordList = this.bb!.createObjList<PlayRecordRpgData, PlayRecordRpgDataT>(this.RecordList.bind(this), this.RecordList_Length());
  _o.ChapterID = this.ChapterID();
}
}

export class SA_PlayRecordRpgListT implements flatbuffers.IGeneratedObject {
constructor(
  public RecordList: (PlayRecordRpgDataT)[] = [],
  public ChapterID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RecordList = builder.createStructOffsetList(this.RecordList, SA_PlayRecordRpgList.start_RecordList_Vector);

  return SA_PlayRecordRpgList.createSA_PlayRecordRpgList(builder,
    RecordList,
    this.ChapterID
  );
}
}

export class CQ_PlayRecordRpgListOther implements flatbuffers.IUnpackableObject<CQ_PlayRecordRpgListOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PlayRecordRpgListOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PlayRecordRpgListOther(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordRpgListOther):CQ_PlayRecordRpgListOther {
  return (obj || new CQ_PlayRecordRpgListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PlayRecordRpgListOther(bb:flatbuffers.ByteBuffer, obj?:CQ_PlayRecordRpgListOther):CQ_PlayRecordRpgListOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PlayRecordRpgListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PlayRecordRpgListOther';
}

static startCQ_PlayRecordRpgListOther(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(1, ChapterID, 0);
}

static endCQ_PlayRecordRpgListOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PlayRecordRpgListOther(builder:flatbuffers.Builder, TargetUID:number, ChapterID:number):flatbuffers.Offset {
  CQ_PlayRecordRpgListOther.startCQ_PlayRecordRpgListOther(builder);
  CQ_PlayRecordRpgListOther.add_TargetUID(builder, TargetUID);
  CQ_PlayRecordRpgListOther.add_ChapterID(builder, ChapterID);
  return CQ_PlayRecordRpgListOther.endCQ_PlayRecordRpgListOther(builder);
}

unpack(): CQ_PlayRecordRpgListOtherT {
  return new CQ_PlayRecordRpgListOtherT(
    this.TargetUID(),
    this.ChapterID()
  );
}


unpackTo(_o: CQ_PlayRecordRpgListOtherT): void {
  _o.TargetUID = this.TargetUID();
  _o.ChapterID = this.ChapterID();
}
}

export class CQ_PlayRecordRpgListOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public ChapterID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PlayRecordRpgListOther.createCQ_PlayRecordRpgListOther(builder,
    this.TargetUID,
    this.ChapterID
  );
}
}

export class SA_PlayRecordRpgListOther implements flatbuffers.IUnpackableObject<SA_PlayRecordRpgListOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PlayRecordRpgListOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PlayRecordRpgListOther(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordRpgListOther):SA_PlayRecordRpgListOther {
  return (obj || new SA_PlayRecordRpgListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PlayRecordRpgListOther(bb:flatbuffers.ByteBuffer, obj?:SA_PlayRecordRpgListOther):SA_PlayRecordRpgListOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PlayRecordRpgListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ChapterID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

RecordList(index: number, obj?:PlayRecordRpgData):PlayRecordRpgData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new PlayRecordRpgData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 32, this.bb!) : null;
}

RecordList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PlayRecordRpgListOther';
}

static startSA_PlayRecordRpgListOther(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_ChapterID(builder:flatbuffers.Builder, ChapterID:number) {
  builder.addFieldInt32(1, ChapterID, 0);
}

static add_RecordList(builder:flatbuffers.Builder, RecordListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, RecordListOffset, 0);
}

static start_RecordList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(32, numElems, 4);
}

static endSA_PlayRecordRpgListOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PlayRecordRpgListOther(builder:flatbuffers.Builder, TargetUID:number, ChapterID:number, RecordListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PlayRecordRpgListOther.startSA_PlayRecordRpgListOther(builder);
  SA_PlayRecordRpgListOther.add_TargetUID(builder, TargetUID);
  SA_PlayRecordRpgListOther.add_ChapterID(builder, ChapterID);
  SA_PlayRecordRpgListOther.add_RecordList(builder, RecordListOffset);
  return SA_PlayRecordRpgListOther.endSA_PlayRecordRpgListOther(builder);
}

unpack(): SA_PlayRecordRpgListOtherT {
  return new SA_PlayRecordRpgListOtherT(
    this.TargetUID(),
    this.ChapterID(),
    this.bb!.createObjList<PlayRecordRpgData, PlayRecordRpgDataT>(this.RecordList.bind(this), this.RecordList_Length())
  );
}


unpackTo(_o: SA_PlayRecordRpgListOtherT): void {
  _o.TargetUID = this.TargetUID();
  _o.ChapterID = this.ChapterID();
  _o.RecordList = this.bb!.createObjList<PlayRecordRpgData, PlayRecordRpgDataT>(this.RecordList.bind(this), this.RecordList_Length());
}
}

export class SA_PlayRecordRpgListOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public ChapterID: number = 0,
  public RecordList: (PlayRecordRpgDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RecordList = builder.createStructOffsetList(this.RecordList, SA_PlayRecordRpgListOther.start_RecordList_Vector);

  return SA_PlayRecordRpgListOther.createSA_PlayRecordRpgListOther(builder,
    this.TargetUID,
    this.ChapterID,
    RecordList
  );
}
}

export class CQ_UserIntroduceChange implements flatbuffers.IUnpackableObject<CQ_UserIntroduceChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_UserIntroduceChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_UserIntroduceChange(bb:flatbuffers.ByteBuffer, obj?:CQ_UserIntroduceChange):CQ_UserIntroduceChange {
  return (obj || new CQ_UserIntroduceChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_UserIntroduceChange(bb:flatbuffers.ByteBuffer, obj?:CQ_UserIntroduceChange):CQ_UserIntroduceChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_UserIntroduceChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IntroduceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_UserIntroduceChange';
}

static startCQ_UserIntroduceChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IntroduceID(builder:flatbuffers.Builder, IntroduceID:number) {
  builder.addFieldInt32(0, IntroduceID, 0);
}

static endCQ_UserIntroduceChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_UserIntroduceChange(builder:flatbuffers.Builder, IntroduceID:number):flatbuffers.Offset {
  CQ_UserIntroduceChange.startCQ_UserIntroduceChange(builder);
  CQ_UserIntroduceChange.add_IntroduceID(builder, IntroduceID);
  return CQ_UserIntroduceChange.endCQ_UserIntroduceChange(builder);
}

unpack(): CQ_UserIntroduceChangeT {
  return new CQ_UserIntroduceChangeT(
    this.IntroduceID()
  );
}


unpackTo(_o: CQ_UserIntroduceChangeT): void {
  _o.IntroduceID = this.IntroduceID();
}
}

export class CQ_UserIntroduceChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public IntroduceID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_UserIntroduceChange.createCQ_UserIntroduceChange(builder,
    this.IntroduceID
  );
}
}

export class SA_UserIntroduceChange implements flatbuffers.IUnpackableObject<SA_UserIntroduceChangeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_UserIntroduceChange {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_UserIntroduceChange(bb:flatbuffers.ByteBuffer, obj?:SA_UserIntroduceChange):SA_UserIntroduceChange {
  return (obj || new SA_UserIntroduceChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_UserIntroduceChange(bb:flatbuffers.ByteBuffer, obj?:SA_UserIntroduceChange):SA_UserIntroduceChange {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_UserIntroduceChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IntroduceID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_UserIntroduceChange';
}

static startSA_UserIntroduceChange(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IntroduceID(builder:flatbuffers.Builder, IntroduceID:number) {
  builder.addFieldInt32(0, IntroduceID, 0);
}

static endSA_UserIntroduceChange(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_UserIntroduceChange(builder:flatbuffers.Builder, IntroduceID:number):flatbuffers.Offset {
  SA_UserIntroduceChange.startSA_UserIntroduceChange(builder);
  SA_UserIntroduceChange.add_IntroduceID(builder, IntroduceID);
  return SA_UserIntroduceChange.endSA_UserIntroduceChange(builder);
}

unpack(): SA_UserIntroduceChangeT {
  return new SA_UserIntroduceChangeT(
    this.IntroduceID()
  );
}


unpackTo(_o: SA_UserIntroduceChangeT): void {
  _o.IntroduceID = this.IntroduceID();
}
}

export class SA_UserIntroduceChangeT implements flatbuffers.IGeneratedObject {
constructor(
  public IntroduceID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_UserIntroduceChange.createSA_UserIntroduceChange(builder,
    this.IntroduceID
  );
}
}

export class CQ_UserAccountOther implements flatbuffers.IUnpackableObject<CQ_UserAccountOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_UserAccountOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_UserAccountOther(bb:flatbuffers.ByteBuffer, obj?:CQ_UserAccountOther):CQ_UserAccountOther {
  return (obj || new CQ_UserAccountOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_UserAccountOther(bb:flatbuffers.ByteBuffer, obj?:CQ_UserAccountOther):CQ_UserAccountOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_UserAccountOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_UserAccountOther';
}

static startCQ_UserAccountOther(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static endCQ_UserAccountOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_UserAccountOther(builder:flatbuffers.Builder, TargetUID:number):flatbuffers.Offset {
  CQ_UserAccountOther.startCQ_UserAccountOther(builder);
  CQ_UserAccountOther.add_TargetUID(builder, TargetUID);
  return CQ_UserAccountOther.endCQ_UserAccountOther(builder);
}

unpack(): CQ_UserAccountOtherT {
  return new CQ_UserAccountOtherT(
    this.TargetUID()
  );
}


unpackTo(_o: CQ_UserAccountOtherT): void {
  _o.TargetUID = this.TargetUID();
}
}

export class CQ_UserAccountOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_UserAccountOther.createCQ_UserAccountOther(builder,
    this.TargetUID
  );
}
}

export class SA_UserAccountOther implements flatbuffers.IUnpackableObject<SA_UserAccountOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_UserAccountOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_UserAccountOther(bb:flatbuffers.ByteBuffer, obj?:SA_UserAccountOther):SA_UserAccountOther {
  return (obj || new SA_UserAccountOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_UserAccountOther(bb:flatbuffers.ByteBuffer, obj?:SA_UserAccountOther):SA_UserAccountOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_UserAccountOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

UserAccount(obj?:UserInfo):UserInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new UserInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_UserAccountOther';
}

static startSA_UserAccountOther(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_UserAccount(builder:flatbuffers.Builder, UserAccountOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, UserAccountOffset, 0);
}

static endSA_UserAccountOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_UserAccountOther(builder:flatbuffers.Builder, UserAccountOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_UserAccountOther.startSA_UserAccountOther(builder);
  SA_UserAccountOther.add_UserAccount(builder, UserAccountOffset);
  return SA_UserAccountOther.endSA_UserAccountOther(builder);
}

unpack(): SA_UserAccountOtherT {
  return new SA_UserAccountOtherT(
    (this.UserAccount() !== null ? this.UserAccount()!.unpack() : null)
  );
}


unpackTo(_o: SA_UserAccountOtherT): void {
  _o.UserAccount = (this.UserAccount() !== null ? this.UserAccount()!.unpack() : null);
}
}

export class SA_UserAccountOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public UserAccount: UserInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const UserAccount = (this.UserAccount !== null ? this.UserAccount!.pack(builder) : 0);

  return SA_UserAccountOther.createSA_UserAccountOther(builder,
    UserAccount
  );
}
}

export class CQ_PenaltyListOther implements flatbuffers.IUnpackableObject<CQ_PenaltyListOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_PenaltyListOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_PenaltyListOther(bb:flatbuffers.ByteBuffer, obj?:CQ_PenaltyListOther):CQ_PenaltyListOther {
  return (obj || new CQ_PenaltyListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_PenaltyListOther(bb:flatbuffers.ByteBuffer, obj?:CQ_PenaltyListOther):CQ_PenaltyListOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_PenaltyListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_PenaltyListOther';
}

static startCQ_PenaltyListOther(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static endCQ_PenaltyListOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_PenaltyListOther(builder:flatbuffers.Builder, TargetUID:number):flatbuffers.Offset {
  CQ_PenaltyListOther.startCQ_PenaltyListOther(builder);
  CQ_PenaltyListOther.add_TargetUID(builder, TargetUID);
  return CQ_PenaltyListOther.endCQ_PenaltyListOther(builder);
}

unpack(): CQ_PenaltyListOtherT {
  return new CQ_PenaltyListOtherT(
    this.TargetUID()
  );
}


unpackTo(_o: CQ_PenaltyListOtherT): void {
  _o.TargetUID = this.TargetUID();
}
}

export class CQ_PenaltyListOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_PenaltyListOther.createCQ_PenaltyListOther(builder,
    this.TargetUID
  );
}
}

export class SA_PenaltyListOther implements flatbuffers.IUnpackableObject<SA_PenaltyListOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_PenaltyListOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_PenaltyListOther(bb:flatbuffers.ByteBuffer, obj?:SA_PenaltyListOther):SA_PenaltyListOther {
  return (obj || new SA_PenaltyListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_PenaltyListOther(bb:flatbuffers.ByteBuffer, obj?:SA_PenaltyListOther):SA_PenaltyListOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_PenaltyListOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PenaltyList(index: number, obj?:PenaltyInfo):PenaltyInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new PenaltyInfo()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;
}

PenaltyList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_PenaltyListOther';
}

static startSA_PenaltyListOther(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_PenaltyList(builder:flatbuffers.Builder, PenaltyListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, PenaltyListOffset, 0);
}

static start_PenaltyList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(24, numElems, 4);
}

static endSA_PenaltyListOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_PenaltyListOther(builder:flatbuffers.Builder, TargetUID:number, PenaltyListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_PenaltyListOther.startSA_PenaltyListOther(builder);
  SA_PenaltyListOther.add_TargetUID(builder, TargetUID);
  SA_PenaltyListOther.add_PenaltyList(builder, PenaltyListOffset);
  return SA_PenaltyListOther.endSA_PenaltyListOther(builder);
}

unpack(): SA_PenaltyListOtherT {
  return new SA_PenaltyListOtherT(
    this.TargetUID(),
    this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length())
  );
}


unpackTo(_o: SA_PenaltyListOtherT): void {
  _o.TargetUID = this.TargetUID();
  _o.PenaltyList = this.bb!.createObjList<PenaltyInfo, PenaltyInfoT>(this.PenaltyList.bind(this), this.PenaltyList_Length());
}
}

export class SA_PenaltyListOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public PenaltyList: (PenaltyInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const PenaltyList = builder.createStructOffsetList(this.PenaltyList, SA_PenaltyListOther.start_PenaltyList_Vector);

  return SA_PenaltyListOther.createSA_PenaltyListOther(builder,
    this.TargetUID,
    PenaltyList
  );
}
}

export class CQ_NicePlayerOther implements flatbuffers.IUnpackableObject<CQ_NicePlayerOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_NicePlayerOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_NicePlayerOther(bb:flatbuffers.ByteBuffer, obj?:CQ_NicePlayerOther):CQ_NicePlayerOther {
  return (obj || new CQ_NicePlayerOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_NicePlayerOther(bb:flatbuffers.ByteBuffer, obj?:CQ_NicePlayerOther):CQ_NicePlayerOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_NicePlayerOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_NicePlayerOther';
}

static startCQ_NicePlayerOther(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static endCQ_NicePlayerOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_NicePlayerOther(builder:flatbuffers.Builder, TargetUID:number):flatbuffers.Offset {
  CQ_NicePlayerOther.startCQ_NicePlayerOther(builder);
  CQ_NicePlayerOther.add_TargetUID(builder, TargetUID);
  return CQ_NicePlayerOther.endCQ_NicePlayerOther(builder);
}

unpack(): CQ_NicePlayerOtherT {
  return new CQ_NicePlayerOtherT(
    this.TargetUID()
  );
}


unpackTo(_o: CQ_NicePlayerOtherT): void {
  _o.TargetUID = this.TargetUID();
}
}

export class CQ_NicePlayerOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_NicePlayerOther.createCQ_NicePlayerOther(builder,
    this.TargetUID
  );
}
}

export class SA_NicePlayerOther implements flatbuffers.IUnpackableObject<SA_NicePlayerOtherT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_NicePlayerOther {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_NicePlayerOther(bb:flatbuffers.ByteBuffer, obj?:SA_NicePlayerOther):SA_NicePlayerOther {
  return (obj || new SA_NicePlayerOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_NicePlayerOther(bb:flatbuffers.ByteBuffer, obj?:SA_NicePlayerOther):SA_NicePlayerOther {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_NicePlayerOther()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

TargetUID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NiceLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

NicePoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_NicePlayerOther';
}

static startSA_NicePlayerOther(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_TargetUID(builder:flatbuffers.Builder, TargetUID:number) {
  builder.addFieldInt32(0, TargetUID, 0);
}

static add_NiceLevel(builder:flatbuffers.Builder, NiceLevel:number) {
  builder.addFieldInt32(1, NiceLevel, 0);
}

static add_NicePoint(builder:flatbuffers.Builder, NicePoint:number) {
  builder.addFieldInt32(2, NicePoint, 0);
}

static endSA_NicePlayerOther(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_NicePlayerOther(builder:flatbuffers.Builder, TargetUID:number, NiceLevel:number, NicePoint:number):flatbuffers.Offset {
  SA_NicePlayerOther.startSA_NicePlayerOther(builder);
  SA_NicePlayerOther.add_TargetUID(builder, TargetUID);
  SA_NicePlayerOther.add_NiceLevel(builder, NiceLevel);
  SA_NicePlayerOther.add_NicePoint(builder, NicePoint);
  return SA_NicePlayerOther.endSA_NicePlayerOther(builder);
}

unpack(): SA_NicePlayerOtherT {
  return new SA_NicePlayerOtherT(
    this.TargetUID(),
    this.NiceLevel(),
    this.NicePoint()
  );
}


unpackTo(_o: SA_NicePlayerOtherT): void {
  _o.TargetUID = this.TargetUID();
  _o.NiceLevel = this.NiceLevel();
  _o.NicePoint = this.NicePoint();
}
}

export class SA_NicePlayerOtherT implements flatbuffers.IGeneratedObject {
constructor(
  public TargetUID: number = 0,
  public NiceLevel: number = 0,
  public NicePoint: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_NicePlayerOther.createSA_NicePlayerOther(builder,
    this.TargetUID,
    this.NiceLevel,
    this.NicePoint
  );
}
}

export class CQ_WonderCubeList implements flatbuffers.IUnpackableObject<CQ_WonderCubeListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WonderCubeList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WonderCubeList(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderCubeList):CQ_WonderCubeList {
  return (obj || new CQ_WonderCubeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WonderCubeList(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderCubeList):CQ_WonderCubeList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WonderCubeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WonderCubeList';
}

static startCQ_WonderCubeList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_WonderCubeList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WonderCubeList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_WonderCubeList.startCQ_WonderCubeList(builder);
  return CQ_WonderCubeList.endCQ_WonderCubeList(builder);
}

unpack(): CQ_WonderCubeListT {
  return new CQ_WonderCubeListT();
}


unpackTo(_o: CQ_WonderCubeListT): void {}
}

export class CQ_WonderCubeListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_WonderCubeList.createCQ_WonderCubeList(builder);
}
}

export class SA_WonderCubeList implements flatbuffers.IUnpackableObject<SA_WonderCubeListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WonderCubeList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WonderCubeList(bb:flatbuffers.ByteBuffer, obj?:SA_WonderCubeList):SA_WonderCubeList {
  return (obj || new SA_WonderCubeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WonderCubeList(bb:flatbuffers.ByteBuffer, obj?:SA_WonderCubeList):SA_WonderCubeList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WonderCubeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

WonderCubeList(index: number, obj?:WonderCubeData):WonderCubeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new WonderCubeData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

WonderCubeList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WonderCubeList';
}

static startSA_WonderCubeList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_WonderCubeList(builder:flatbuffers.Builder, WonderCubeListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, WonderCubeListOffset, 0);
}

static start_WonderCubeList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_WonderCubeList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_WonderCubeList(builder:flatbuffers.Builder, WonderCubeListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_WonderCubeList.startSA_WonderCubeList(builder);
  SA_WonderCubeList.add_WonderCubeList(builder, WonderCubeListOffset);
  return SA_WonderCubeList.endSA_WonderCubeList(builder);
}

unpack(): SA_WonderCubeListT {
  return new SA_WonderCubeListT(
    this.bb!.createObjList<WonderCubeData, WonderCubeDataT>(this.WonderCubeList.bind(this), this.WonderCubeList_Length())
  );
}


unpackTo(_o: SA_WonderCubeListT): void {
  _o.WonderCubeList = this.bb!.createObjList<WonderCubeData, WonderCubeDataT>(this.WonderCubeList.bind(this), this.WonderCubeList_Length());
}
}

export class SA_WonderCubeListT implements flatbuffers.IGeneratedObject {
constructor(
  public WonderCubeList: (WonderCubeDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const WonderCubeList = builder.createStructOffsetList(this.WonderCubeList, SA_WonderCubeList.start_WonderCubeList_Vector);

  return SA_WonderCubeList.createSA_WonderCubeList(builder,
    WonderCubeList
  );
}
}

export class CQ_WonderCubeReward implements flatbuffers.IUnpackableObject<CQ_WonderCubeRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WonderCubeReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WonderCubeReward(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderCubeReward):CQ_WonderCubeReward {
  return (obj || new CQ_WonderCubeReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WonderCubeReward(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderCubeReward):CQ_WonderCubeReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WonderCubeReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WonderCubeReward';
}

static startCQ_WonderCubeReward(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(0, SlotID, 0);
}

static endCQ_WonderCubeReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WonderCubeReward(builder:flatbuffers.Builder, SlotID:number):flatbuffers.Offset {
  CQ_WonderCubeReward.startCQ_WonderCubeReward(builder);
  CQ_WonderCubeReward.add_SlotID(builder, SlotID);
  return CQ_WonderCubeReward.endCQ_WonderCubeReward(builder);
}

unpack(): CQ_WonderCubeRewardT {
  return new CQ_WonderCubeRewardT(
    this.SlotID()
  );
}


unpackTo(_o: CQ_WonderCubeRewardT): void {
  _o.SlotID = this.SlotID();
}
}

export class CQ_WonderCubeRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_WonderCubeReward.createCQ_WonderCubeReward(builder,
    this.SlotID
  );
}
}

export class SA_WonderCubeReward implements flatbuffers.IUnpackableObject<SA_WonderCubeRewardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WonderCubeReward {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WonderCubeReward(bb:flatbuffers.ByteBuffer, obj?:SA_WonderCubeReward):SA_WonderCubeReward {
  return (obj || new SA_WonderCubeReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WonderCubeReward(bb:flatbuffers.ByteBuffer, obj?:SA_WonderCubeReward):SA_WonderCubeReward {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WonderCubeReward()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

RewardInfo(obj?:RewardData):RewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new RewardData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WonderCubeReward';
}

static startSA_WonderCubeReward(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(0, SlotID, 0);
}

static add_RewardInfo(builder:flatbuffers.Builder, RewardInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, RewardInfoOffset, 0);
}

static endSA_WonderCubeReward(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_WonderCubeRewardT {
  return new SA_WonderCubeRewardT(
    this.SlotID(),
    (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null)
  );
}


unpackTo(_o: SA_WonderCubeRewardT): void {
  _o.SlotID = this.SlotID();
  _o.RewardInfo = (this.RewardInfo() !== null ? this.RewardInfo()!.unpack() : null);
}
}

export class SA_WonderCubeRewardT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotID: number = 0,
  public RewardInfo: RewardDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const RewardInfo = (this.RewardInfo !== null ? this.RewardInfo!.pack(builder) : 0);

  SA_WonderCubeReward.startSA_WonderCubeReward(builder);
  SA_WonderCubeReward.add_SlotID(builder, this.SlotID);
  SA_WonderCubeReward.add_RewardInfo(builder, RewardInfo);

  return SA_WonderCubeReward.endSA_WonderCubeReward(builder);
}
}

export class SN_WonderCubeNew implements flatbuffers.IUnpackableObject<SN_WonderCubeNewT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_WonderCubeNew {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_WonderCubeNew(bb:flatbuffers.ByteBuffer, obj?:SN_WonderCubeNew):SN_WonderCubeNew {
  return (obj || new SN_WonderCubeNew()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_WonderCubeNew(bb:flatbuffers.ByteBuffer, obj?:SN_WonderCubeNew):SN_WonderCubeNew {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_WonderCubeNew()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeWonderCube(obj?:WonderCubeData):WonderCubeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new WonderCubeData()).__init(this.bb_pos + offset, this.bb!) : null;
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_WonderCubeNew';
}

static startSN_WonderCubeNew(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_ChangeWonderCube(builder:flatbuffers.Builder, ChangeWonderCubeOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, ChangeWonderCubeOffset, 0);
}

static endSN_WonderCubeNew(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_WonderCubeNew(builder:flatbuffers.Builder, ChangeWonderCubeOffset:flatbuffers.Offset):flatbuffers.Offset {
  SN_WonderCubeNew.startSN_WonderCubeNew(builder);
  SN_WonderCubeNew.add_ChangeWonderCube(builder, ChangeWonderCubeOffset);
  return SN_WonderCubeNew.endSN_WonderCubeNew(builder);
}

unpack(): SN_WonderCubeNewT {
  return new SN_WonderCubeNewT(
    (this.ChangeWonderCube() !== null ? this.ChangeWonderCube()!.unpack() : null)
  );
}


unpackTo(_o: SN_WonderCubeNewT): void {
  _o.ChangeWonderCube = (this.ChangeWonderCube() !== null ? this.ChangeWonderCube()!.unpack() : null);
}
}

export class SN_WonderCubeNewT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeWonderCube: WonderCubeDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_WonderCubeNew.createSN_WonderCubeNew(builder,
    (this.ChangeWonderCube !== null ? this.ChangeWonderCube!.pack(builder) : 0)
  );
}
}

export class CQ_WonderCubeDelete implements flatbuffers.IUnpackableObject<CQ_WonderCubeDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_WonderCubeDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_WonderCubeDelete(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderCubeDelete):CQ_WonderCubeDelete {
  return (obj || new CQ_WonderCubeDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_WonderCubeDelete(bb:flatbuffers.ByteBuffer, obj?:CQ_WonderCubeDelete):CQ_WonderCubeDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_WonderCubeDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_WonderCubeDelete';
}

static startCQ_WonderCubeDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(0, SlotID, 0);
}

static endCQ_WonderCubeDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_WonderCubeDelete(builder:flatbuffers.Builder, SlotID:number):flatbuffers.Offset {
  CQ_WonderCubeDelete.startCQ_WonderCubeDelete(builder);
  CQ_WonderCubeDelete.add_SlotID(builder, SlotID);
  return CQ_WonderCubeDelete.endCQ_WonderCubeDelete(builder);
}

unpack(): CQ_WonderCubeDeleteT {
  return new CQ_WonderCubeDeleteT(
    this.SlotID()
  );
}


unpackTo(_o: CQ_WonderCubeDeleteT): void {
  _o.SlotID = this.SlotID();
}
}

export class CQ_WonderCubeDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_WonderCubeDelete.createCQ_WonderCubeDelete(builder,
    this.SlotID
  );
}
}

export class SA_WonderCubeDelete implements flatbuffers.IUnpackableObject<SA_WonderCubeDeleteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_WonderCubeDelete {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_WonderCubeDelete(bb:flatbuffers.ByteBuffer, obj?:SA_WonderCubeDelete):SA_WonderCubeDelete {
  return (obj || new SA_WonderCubeDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_WonderCubeDelete(bb:flatbuffers.ByteBuffer, obj?:SA_WonderCubeDelete):SA_WonderCubeDelete {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_WonderCubeDelete()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

SlotID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_WonderCubeDelete';
}

static startSA_WonderCubeDelete(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_SlotID(builder:flatbuffers.Builder, SlotID:number) {
  builder.addFieldInt8(0, SlotID, 0);
}

static endSA_WonderCubeDelete(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_WonderCubeDelete(builder:flatbuffers.Builder, SlotID:number):flatbuffers.Offset {
  SA_WonderCubeDelete.startSA_WonderCubeDelete(builder);
  SA_WonderCubeDelete.add_SlotID(builder, SlotID);
  return SA_WonderCubeDelete.endSA_WonderCubeDelete(builder);
}

unpack(): SA_WonderCubeDeleteT {
  return new SA_WonderCubeDeleteT(
    this.SlotID()
  );
}


unpackTo(_o: SA_WonderCubeDeleteT): void {
  _o.SlotID = this.SlotID();
}
}

export class SA_WonderCubeDeleteT implements flatbuffers.IGeneratedObject {
constructor(
  public SlotID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SA_WonderCubeDelete.createSA_WonderCubeDelete(builder,
    this.SlotID
  );
}
}

export class CQ_IncubationList implements flatbuffers.IUnpackableObject<CQ_IncubationListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_IncubationList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_IncubationList(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationList):CQ_IncubationList {
  return (obj || new CQ_IncubationList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_IncubationList(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationList):CQ_IncubationList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_IncubationList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_IncubationList';
}

static startCQ_IncubationList(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endCQ_IncubationList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_IncubationList(builder:flatbuffers.Builder):flatbuffers.Offset {
  CQ_IncubationList.startCQ_IncubationList(builder);
  return CQ_IncubationList.endCQ_IncubationList(builder);
}

unpack(): CQ_IncubationListT {
  return new CQ_IncubationListT();
}


unpackTo(_o: CQ_IncubationListT): void {}
}

export class CQ_IncubationListT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_IncubationList.createCQ_IncubationList(builder);
}
}

export class SA_IncubationList implements flatbuffers.IUnpackableObject<SA_IncubationListT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_IncubationList {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_IncubationList(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationList):SA_IncubationList {
  return (obj || new SA_IncubationList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_IncubationList(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationList):SA_IncubationList {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_IncubationList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IncubatorList(index: number, obj?:IncubationData):IncubationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new IncubationData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
}

IncubatorList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_IncubationList';
}

static startSA_IncubationList(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IncubatorList(builder:flatbuffers.Builder, IncubatorListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, IncubatorListOffset, 0);
}

static start_IncubatorList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(16, numElems, 4);
}

static endSA_IncubationList(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_IncubationList(builder:flatbuffers.Builder, IncubatorListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_IncubationList.startSA_IncubationList(builder);
  SA_IncubationList.add_IncubatorList(builder, IncubatorListOffset);
  return SA_IncubationList.endSA_IncubationList(builder);
}

unpack(): SA_IncubationListT {
  return new SA_IncubationListT(
    this.bb!.createObjList<IncubationData, IncubationDataT>(this.IncubatorList.bind(this), this.IncubatorList_Length())
  );
}


unpackTo(_o: SA_IncubationListT): void {
  _o.IncubatorList = this.bb!.createObjList<IncubationData, IncubationDataT>(this.IncubatorList.bind(this), this.IncubatorList_Length());
}
}

export class SA_IncubationListT implements flatbuffers.IGeneratedObject {
constructor(
  public IncubatorList: (IncubationDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const IncubatorList = builder.createStructOffsetList(this.IncubatorList, SA_IncubationList.start_IncubatorList_Vector);

  return SA_IncubationList.createSA_IncubationList(builder,
    IncubatorList
  );
}
}

export class CQ_IncubationBuy implements flatbuffers.IUnpackableObject<CQ_IncubationBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_IncubationBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_IncubationBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationBuy):CQ_IncubationBuy {
  return (obj || new CQ_IncubationBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_IncubationBuy(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationBuy):CQ_IncubationBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_IncubationBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IncubatorID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_IncubationBuy';
}

static startCQ_IncubationBuy(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IncubatorID(builder:flatbuffers.Builder, IncubatorID:number) {
  builder.addFieldInt32(0, IncubatorID, 0);
}

static endCQ_IncubationBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_IncubationBuy(builder:flatbuffers.Builder, IncubatorID:number):flatbuffers.Offset {
  CQ_IncubationBuy.startCQ_IncubationBuy(builder);
  CQ_IncubationBuy.add_IncubatorID(builder, IncubatorID);
  return CQ_IncubationBuy.endCQ_IncubationBuy(builder);
}

unpack(): CQ_IncubationBuyT {
  return new CQ_IncubationBuyT(
    this.IncubatorID()
  );
}


unpackTo(_o: CQ_IncubationBuyT): void {
  _o.IncubatorID = this.IncubatorID();
}
}

export class CQ_IncubationBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public IncubatorID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_IncubationBuy.createCQ_IncubationBuy(builder,
    this.IncubatorID
  );
}
}

export class SA_IncubationBuy implements flatbuffers.IUnpackableObject<SA_IncubationBuyT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_IncubationBuy {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_IncubationBuy(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationBuy):SA_IncubationBuy {
  return (obj || new SA_IncubationBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_IncubationBuy(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationBuy):SA_IncubationBuy {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_IncubationBuy()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

Incubation(obj?:IncubationData):IncubationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new IncubationData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_IncubationBuy';
}

static startSA_IncubationBuy(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_Incubation(builder:flatbuffers.Builder, IncubationOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, IncubationOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_IncubationBuy(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_IncubationBuy(builder:flatbuffers.Builder, IncubationOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_IncubationBuy.startSA_IncubationBuy(builder);
  SA_IncubationBuy.add_Incubation(builder, IncubationOffset);
  SA_IncubationBuy.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_IncubationBuy.endSA_IncubationBuy(builder);
}

unpack(): SA_IncubationBuyT {
  return new SA_IncubationBuyT(
    (this.Incubation() !== null ? this.Incubation()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_IncubationBuyT): void {
  _o.Incubation = (this.Incubation() !== null ? this.Incubation()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_IncubationBuyT implements flatbuffers.IGeneratedObject {
constructor(
  public Incubation: IncubationDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_IncubationBuy.start_ChangeAssetList_Vector);

  return SA_IncubationBuy.createSA_IncubationBuy(builder,
    (this.Incubation !== null ? this.Incubation!.pack(builder) : 0),
    ChangeAssetList
  );
}
}

export class CQ_IncubationStart implements flatbuffers.IUnpackableObject<CQ_IncubationStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_IncubationStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_IncubationStart(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationStart):CQ_IncubationStart {
  return (obj || new CQ_IncubationStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_IncubationStart(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationStart):CQ_IncubationStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_IncubationStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IncubatorID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

PetEggID():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_IncubationStart';
}

static startCQ_IncubationStart(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_IncubatorID(builder:flatbuffers.Builder, IncubatorID:number) {
  builder.addFieldInt32(0, IncubatorID, 0);
}

static add_PetEggID(builder:flatbuffers.Builder, PetEggID:number) {
  builder.addFieldInt32(1, PetEggID, 0);
}

static endCQ_IncubationStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_IncubationStart(builder:flatbuffers.Builder, IncubatorID:number, PetEggID:number):flatbuffers.Offset {
  CQ_IncubationStart.startCQ_IncubationStart(builder);
  CQ_IncubationStart.add_IncubatorID(builder, IncubatorID);
  CQ_IncubationStart.add_PetEggID(builder, PetEggID);
  return CQ_IncubationStart.endCQ_IncubationStart(builder);
}

unpack(): CQ_IncubationStartT {
  return new CQ_IncubationStartT(
    this.IncubatorID(),
    this.PetEggID()
  );
}


unpackTo(_o: CQ_IncubationStartT): void {
  _o.IncubatorID = this.IncubatorID();
  _o.PetEggID = this.PetEggID();
}
}

export class CQ_IncubationStartT implements flatbuffers.IGeneratedObject {
constructor(
  public IncubatorID: number = 0,
  public PetEggID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_IncubationStart.createCQ_IncubationStart(builder,
    this.IncubatorID,
    this.PetEggID
  );
}
}

export class SA_IncubationStart implements flatbuffers.IUnpackableObject<SA_IncubationStartT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_IncubationStart {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_IncubationStart(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationStart):SA_IncubationStart {
  return (obj || new SA_IncubationStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_IncubationStart(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationStart):SA_IncubationStart {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_IncubationStart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeIncubation(obj?:IncubationData):IncubationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new IncubationData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeItemList(index: number, obj?:ItemData):ItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ItemData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
}

ChangeItemList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_IncubationStart';
}

static startSA_IncubationStart(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChangeIncubation(builder:flatbuffers.Builder, ChangeIncubationOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, ChangeIncubationOffset, 0);
}

static add_ChangeItemList(builder:flatbuffers.Builder, ChangeItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeItemListOffset, 0);
}

static start_ChangeItemList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 4);
}

static endSA_IncubationStart(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_IncubationStart(builder:flatbuffers.Builder, ChangeIncubationOffset:flatbuffers.Offset, ChangeItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_IncubationStart.startSA_IncubationStart(builder);
  SA_IncubationStart.add_ChangeIncubation(builder, ChangeIncubationOffset);
  SA_IncubationStart.add_ChangeItemList(builder, ChangeItemListOffset);
  return SA_IncubationStart.endSA_IncubationStart(builder);
}

unpack(): SA_IncubationStartT {
  return new SA_IncubationStartT(
    (this.ChangeIncubation() !== null ? this.ChangeIncubation()!.unpack() : null),
    this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length())
  );
}


unpackTo(_o: SA_IncubationStartT): void {
  _o.ChangeIncubation = (this.ChangeIncubation() !== null ? this.ChangeIncubation()!.unpack() : null);
  _o.ChangeItemList = this.bb!.createObjList<ItemData, ItemDataT>(this.ChangeItemList.bind(this), this.ChangeItemList_Length());
}
}

export class SA_IncubationStartT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeIncubation: IncubationDataT|null = null,
  public ChangeItemList: (ItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeItemList = builder.createStructOffsetList(this.ChangeItemList, SA_IncubationStart.start_ChangeItemList_Vector);

  return SA_IncubationStart.createSA_IncubationStart(builder,
    (this.ChangeIncubation !== null ? this.ChangeIncubation!.pack(builder) : 0),
    ChangeItemList
  );
}
}

export class CQ_IncubationReduceTime implements flatbuffers.IUnpackableObject<CQ_IncubationReduceTimeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_IncubationReduceTime {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_IncubationReduceTime(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationReduceTime):CQ_IncubationReduceTime {
  return (obj || new CQ_IncubationReduceTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_IncubationReduceTime(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationReduceTime):CQ_IncubationReduceTime {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_IncubationReduceTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IncubatorID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

AssetType():EUserAssetType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : EUserAssetType.None;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_IncubationReduceTime';
}

static startCQ_IncubationReduceTime(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_IncubatorID(builder:flatbuffers.Builder, IncubatorID:number) {
  builder.addFieldInt32(0, IncubatorID, 0);
}

static add_AssetType(builder:flatbuffers.Builder, AssetType:EUserAssetType) {
  builder.addFieldInt32(1, AssetType, EUserAssetType.None);
}

static endCQ_IncubationReduceTime(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_IncubationReduceTime(builder:flatbuffers.Builder, IncubatorID:number, AssetType:EUserAssetType):flatbuffers.Offset {
  CQ_IncubationReduceTime.startCQ_IncubationReduceTime(builder);
  CQ_IncubationReduceTime.add_IncubatorID(builder, IncubatorID);
  CQ_IncubationReduceTime.add_AssetType(builder, AssetType);
  return CQ_IncubationReduceTime.endCQ_IncubationReduceTime(builder);
}

unpack(): CQ_IncubationReduceTimeT {
  return new CQ_IncubationReduceTimeT(
    this.IncubatorID(),
    this.AssetType()
  );
}


unpackTo(_o: CQ_IncubationReduceTimeT): void {
  _o.IncubatorID = this.IncubatorID();
  _o.AssetType = this.AssetType();
}
}

export class CQ_IncubationReduceTimeT implements flatbuffers.IGeneratedObject {
constructor(
  public IncubatorID: number = 0,
  public AssetType: EUserAssetType = EUserAssetType.None
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_IncubationReduceTime.createCQ_IncubationReduceTime(builder,
    this.IncubatorID,
    this.AssetType
  );
}
}

export class SA_IncubationReduceTime implements flatbuffers.IUnpackableObject<SA_IncubationReduceTimeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_IncubationReduceTime {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_IncubationReduceTime(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationReduceTime):SA_IncubationReduceTime {
  return (obj || new SA_IncubationReduceTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_IncubationReduceTime(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationReduceTime):SA_IncubationReduceTime {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_IncubationReduceTime()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeIncubation(obj?:IncubationData):IncubationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new IncubationData()).__init(this.bb_pos + offset, this.bb!) : null;
}

ChangeAssetList(index: number, obj?:AssetData):AssetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AssetData()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;
}

ChangeAssetList_Length():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_IncubationReduceTime';
}

static startSA_IncubationReduceTime(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static add_ChangeIncubation(builder:flatbuffers.Builder, ChangeIncubationOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, ChangeIncubationOffset, 0);
}

static add_ChangeAssetList(builder:flatbuffers.Builder, ChangeAssetListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ChangeAssetListOffset, 0);
}

static start_ChangeAssetList_Vector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(12, numElems, 4);
}

static endSA_IncubationReduceTime(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSA_IncubationReduceTime(builder:flatbuffers.Builder, ChangeIncubationOffset:flatbuffers.Offset, ChangeAssetListOffset:flatbuffers.Offset):flatbuffers.Offset {
  SA_IncubationReduceTime.startSA_IncubationReduceTime(builder);
  SA_IncubationReduceTime.add_ChangeIncubation(builder, ChangeIncubationOffset);
  SA_IncubationReduceTime.add_ChangeAssetList(builder, ChangeAssetListOffset);
  return SA_IncubationReduceTime.endSA_IncubationReduceTime(builder);
}

unpack(): SA_IncubationReduceTimeT {
  return new SA_IncubationReduceTimeT(
    (this.ChangeIncubation() !== null ? this.ChangeIncubation()!.unpack() : null),
    this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length())
  );
}


unpackTo(_o: SA_IncubationReduceTimeT): void {
  _o.ChangeIncubation = (this.ChangeIncubation() !== null ? this.ChangeIncubation()!.unpack() : null);
  _o.ChangeAssetList = this.bb!.createObjList<AssetData, AssetDataT>(this.ChangeAssetList.bind(this), this.ChangeAssetList_Length());
}
}

export class SA_IncubationReduceTimeT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeIncubation: IncubationDataT|null = null,
  public ChangeAssetList: (AssetDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ChangeAssetList = builder.createStructOffsetList(this.ChangeAssetList, SA_IncubationReduceTime.start_ChangeAssetList_Vector);

  return SA_IncubationReduceTime.createSA_IncubationReduceTime(builder,
    (this.ChangeIncubation !== null ? this.ChangeIncubation!.pack(builder) : 0),
    ChangeAssetList
  );
}
}

export class CQ_IncubationEnd implements flatbuffers.IUnpackableObject<CQ_IncubationEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CQ_IncubationEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCQ_IncubationEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationEnd):CQ_IncubationEnd {
  return (obj || new CQ_IncubationEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCQ_IncubationEnd(bb:flatbuffers.ByteBuffer, obj?:CQ_IncubationEnd):CQ_IncubationEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CQ_IncubationEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

IncubatorID():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static getFullyQualifiedName():string {
  return 'Lobby.CQ_IncubationEnd';
}

static startCQ_IncubationEnd(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_IncubatorID(builder:flatbuffers.Builder, IncubatorID:number) {
  builder.addFieldInt32(0, IncubatorID, 0);
}

static endCQ_IncubationEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCQ_IncubationEnd(builder:flatbuffers.Builder, IncubatorID:number):flatbuffers.Offset {
  CQ_IncubationEnd.startCQ_IncubationEnd(builder);
  CQ_IncubationEnd.add_IncubatorID(builder, IncubatorID);
  return CQ_IncubationEnd.endCQ_IncubationEnd(builder);
}

unpack(): CQ_IncubationEndT {
  return new CQ_IncubationEndT(
    this.IncubatorID()
  );
}


unpackTo(_o: CQ_IncubationEndT): void {
  _o.IncubatorID = this.IncubatorID();
}
}

export class CQ_IncubationEndT implements flatbuffers.IGeneratedObject {
constructor(
  public IncubatorID: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return CQ_IncubationEnd.createCQ_IncubationEnd(builder,
    this.IncubatorID
  );
}
}

export class SA_IncubationEnd implements flatbuffers.IUnpackableObject<SA_IncubationEndT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SA_IncubationEnd {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSA_IncubationEnd(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationEnd):SA_IncubationEnd {
  return (obj || new SA_IncubationEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSA_IncubationEnd(bb:flatbuffers.ByteBuffer, obj?:SA_IncubationEnd):SA_IncubationEnd {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SA_IncubationEnd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ChangeIncubation(obj?:IncubationData):IncubationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new IncubationData()).__init(this.bb_pos + offset, this.bb!) : null;
}

NewPet(obj?:PetData):PetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new PetData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

IsDeleted():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static getFullyQualifiedName():string {
  return 'Lobby.SA_IncubationEnd';
}

static startSA_IncubationEnd(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static add_ChangeIncubation(builder:flatbuffers.Builder, ChangeIncubationOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, ChangeIncubationOffset, 0);
}

static add_NewPet(builder:flatbuffers.Builder, NewPetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NewPetOffset, 0);
}

static add_IsDeleted(builder:flatbuffers.Builder, IsDeleted:boolean) {
  builder.addFieldInt8(2, +IsDeleted, +false);
}

static endSA_IncubationEnd(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): SA_IncubationEndT {
  return new SA_IncubationEndT(
    (this.ChangeIncubation() !== null ? this.ChangeIncubation()!.unpack() : null),
    (this.NewPet() !== null ? this.NewPet()!.unpack() : null),
    this.IsDeleted()
  );
}


unpackTo(_o: SA_IncubationEndT): void {
  _o.ChangeIncubation = (this.ChangeIncubation() !== null ? this.ChangeIncubation()!.unpack() : null);
  _o.NewPet = (this.NewPet() !== null ? this.NewPet()!.unpack() : null);
  _o.IsDeleted = this.IsDeleted();
}
}

export class SA_IncubationEndT implements flatbuffers.IGeneratedObject {
constructor(
  public ChangeIncubation: IncubationDataT|null = null,
  public NewPet: PetDataT|null = null,
  public IsDeleted: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const NewPet = (this.NewPet !== null ? this.NewPet!.pack(builder) : 0);

  SA_IncubationEnd.startSA_IncubationEnd(builder);
  SA_IncubationEnd.add_ChangeIncubation(builder, (this.ChangeIncubation !== null ? this.ChangeIncubation!.pack(builder) : 0));
  SA_IncubationEnd.add_NewPet(builder, NewPet);
  SA_IncubationEnd.add_IsDeleted(builder, this.IsDeleted);

  return SA_IncubationEnd.endSA_IncubationEnd(builder);
}
}

export class SN_TimeSync implements flatbuffers.IUnpackableObject<SN_TimeSyncT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SN_TimeSync {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSN_TimeSync(bb:flatbuffers.ByteBuffer, obj?:SN_TimeSync):SN_TimeSync {
  return (obj || new SN_TimeSync()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSN_TimeSync(bb:flatbuffers.ByteBuffer, obj?:SN_TimeSync):SN_TimeSync {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SN_TimeSync()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getFullyQualifiedName():string {
  return 'Lobby.SN_TimeSync';
}

static startSN_TimeSync(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSN_TimeSync(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSN_TimeSync(builder:flatbuffers.Builder):flatbuffers.Offset {
  SN_TimeSync.startSN_TimeSync(builder);
  return SN_TimeSync.endSN_TimeSync(builder);
}

unpack(): SN_TimeSyncT {
  return new SN_TimeSyncT();
}


unpackTo(_o: SN_TimeSyncT): void {}
}

export class SN_TimeSyncT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SN_TimeSync.createSN_TimeSync(builder);
}
}

