// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_CustomGameInviteUser : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_CustomGameInviteUser GetRootAsSN_CustomGameInviteUser(ByteBuffer _bb) { return GetRootAsSN_CustomGameInviteUser(_bb, new SN_CustomGameInviteUser()); }
  public static SN_CustomGameInviteUser GetRootAsSN_CustomGameInviteUser(ByteBuffer _bb, SN_CustomGameInviteUser obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_CustomGameInviteUser __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string RoomID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoomIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetRoomIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRoomIDArray() { return __p.__vector_as_array<byte>(4); }
  public int MatchingTableID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public sbyte ActiveSlotNoList(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int ActiveSlotNoListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetActiveSlotNoListBytes() { return __p.__vector_as_span<sbyte>(8, 1); }
#else
  public ArraySegment<byte>? GetActiveSlotNoListBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public sbyte[] GetActiveSlotNoListArray() { return __p.__vector_as_array<sbyte>(8); }
  public string InviteCode { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInviteCodeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetInviteCodeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetInviteCodeArray() { return __p.__vector_as_array<byte>(10); }
  public int ExpireAt { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MasterUID { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string MasterNick { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMasterNickBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetMasterNickBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMasterNickArray() { return __p.__vector_as_array<byte>(16); }
  public string GuestNick { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuestNickBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetGuestNickBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetGuestNickArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<Lobby.SN_CustomGameInviteUser> CreateSN_CustomGameInviteUser(FlatBufferBuilder builder,
      StringOffset RoomIDOffset = default(StringOffset),
      int MatchingTableID = 0,
      VectorOffset ActiveSlotNoListOffset = default(VectorOffset),
      StringOffset InviteCodeOffset = default(StringOffset),
      int ExpireAt = 0,
      int MasterUID = 0,
      StringOffset MasterNickOffset = default(StringOffset),
      StringOffset GuestNickOffset = default(StringOffset)) {
    builder.StartTable(8);
    SN_CustomGameInviteUser.AddGuestNick(builder, GuestNickOffset);
    SN_CustomGameInviteUser.AddMasterNick(builder, MasterNickOffset);
    SN_CustomGameInviteUser.AddMasterUID(builder, MasterUID);
    SN_CustomGameInviteUser.AddExpireAt(builder, ExpireAt);
    SN_CustomGameInviteUser.AddInviteCode(builder, InviteCodeOffset);
    SN_CustomGameInviteUser.AddActiveSlotNoList(builder, ActiveSlotNoListOffset);
    SN_CustomGameInviteUser.AddMatchingTableID(builder, MatchingTableID);
    SN_CustomGameInviteUser.AddRoomID(builder, RoomIDOffset);
    return SN_CustomGameInviteUser.EndSN_CustomGameInviteUser(builder);
  }

  public static void StartSN_CustomGameInviteUser(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddRoomID(FlatBufferBuilder builder, StringOffset RoomIDOffset) { builder.AddOffset(0, RoomIDOffset.Value, 0); }
  public static void AddMatchingTableID(FlatBufferBuilder builder, int MatchingTableID) { builder.AddInt(1, MatchingTableID, 0); }
  public static void AddActiveSlotNoList(FlatBufferBuilder builder, VectorOffset ActiveSlotNoListOffset) { builder.AddOffset(2, ActiveSlotNoListOffset.Value, 0); }
  public static VectorOffset CreateActiveSlotNoListVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateActiveSlotNoListVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateActiveSlotNoListVectorBlock(FlatBufferBuilder builder, ArraySegment<sbyte> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateActiveSlotNoListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<sbyte>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartActiveSlotNoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static void AddInviteCode(FlatBufferBuilder builder, StringOffset InviteCodeOffset) { builder.AddOffset(3, InviteCodeOffset.Value, 0); }
  public static void AddExpireAt(FlatBufferBuilder builder, int ExpireAt) { builder.AddInt(4, ExpireAt, 0); }
  public static void AddMasterUID(FlatBufferBuilder builder, int MasterUID) { builder.AddInt(5, MasterUID, 0); }
  public static void AddMasterNick(FlatBufferBuilder builder, StringOffset MasterNickOffset) { builder.AddOffset(6, MasterNickOffset.Value, 0); }
  public static void AddGuestNick(FlatBufferBuilder builder, StringOffset GuestNickOffset) { builder.AddOffset(7, GuestNickOffset.Value, 0); }
  public static Offset<Lobby.SN_CustomGameInviteUser> EndSN_CustomGameInviteUser(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_CustomGameInviteUser>(o);
  }
  public SN_CustomGameInviteUserT UnPack() {
    var _o = new SN_CustomGameInviteUserT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_CustomGameInviteUserT _o) {
    _o.RoomID = this.RoomID;
    _o.MatchingTableID = this.MatchingTableID;
    _o.ActiveSlotNoList = new List<sbyte>();
    for (var _j = 0; _j < this.ActiveSlotNoListLength; ++_j) {_o.ActiveSlotNoList.Add(this.ActiveSlotNoList(_j));}
    _o.InviteCode = this.InviteCode;
    _o.ExpireAt = this.ExpireAt;
    _o.MasterUID = this.MasterUID;
    _o.MasterNick = this.MasterNick;
    _o.GuestNick = this.GuestNick;
  }
  public static Offset<Lobby.SN_CustomGameInviteUser> Pack(FlatBufferBuilder builder, SN_CustomGameInviteUserT _o) {
    if (_o == null) return default(Offset<Lobby.SN_CustomGameInviteUser>);
    var _RoomID = _o.RoomID == null ? default(StringOffset) : builder.CreateString(_o.RoomID);
    var _ActiveSlotNoList = default(VectorOffset);
    if (_o.ActiveSlotNoList != null) {
      var __ActiveSlotNoList = _o.ActiveSlotNoList.ToArray();
      _ActiveSlotNoList = CreateActiveSlotNoListVector(builder, __ActiveSlotNoList);
    }
    var _InviteCode = _o.InviteCode == null ? default(StringOffset) : builder.CreateString(_o.InviteCode);
    var _MasterNick = _o.MasterNick == null ? default(StringOffset) : builder.CreateString(_o.MasterNick);
    var _GuestNick = _o.GuestNick == null ? default(StringOffset) : builder.CreateString(_o.GuestNick);
    return CreateSN_CustomGameInviteUser(
      builder,
      _RoomID,
      _o.MatchingTableID,
      _ActiveSlotNoList,
      _InviteCode,
      _o.ExpireAt,
      _o.MasterUID,
      _MasterNick,
      _GuestNick);
  }
}

public class SN_CustomGameInviteUserT
{
  public string RoomID { get; set; }
  public int MatchingTableID { get; set; }
  public List<sbyte> ActiveSlotNoList { get; set; }
  public string InviteCode { get; set; }
  public int ExpireAt { get; set; }
  public int MasterUID { get; set; }
  public string MasterNick { get; set; }
  public string GuestNick { get; set; }

  public SN_CustomGameInviteUserT() {
    this.RoomID = null;
    this.MatchingTableID = 0;
    this.ActiveSlotNoList = null;
    this.InviteCode = null;
    this.ExpireAt = 0;
    this.MasterUID = 0;
    this.MasterNick = null;
    this.GuestNick = null;
  }
}


}
