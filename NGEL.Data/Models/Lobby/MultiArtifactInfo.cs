// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MultiArtifactInfo : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public MultiArtifactInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ArtifactID { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public int Enhance { get { return __p.bb.GetInt(__p.bb_pos + 4); } }

  public static Offset<Lobby.MultiArtifactInfo> CreateMultiArtifactInfo(FlatBufferBuilder builder, int ArtifactID, int Enhance) {
    builder.Prep(4, 8);
    builder.PutInt(Enhance);
    builder.PutInt(ArtifactID);
    return new Offset<Lobby.MultiArtifactInfo>(builder.Offset);
  }
  public MultiArtifactInfoT UnPack() {
    var _o = new MultiArtifactInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MultiArtifactInfoT _o) {
    _o.ArtifactID = this.ArtifactID;
    _o.Enhance = this.Enhance;
  }
  public static Offset<Lobby.MultiArtifactInfo> Pack(FlatBufferBuilder builder, MultiArtifactInfoT _o) {
    if (_o == null) return default(Offset<Lobby.MultiArtifactInfo>);
    return CreateMultiArtifactInfo(
      builder,
      _o.ArtifactID,
      _o.Enhance);
  }
}

public class MultiArtifactInfoT
{
  public int ArtifactID { get; set; }
  public int Enhance { get; set; }

  public MultiArtifactInfoT() {
    this.ArtifactID = 0;
    this.Enhance = 0;
  }
}


}
