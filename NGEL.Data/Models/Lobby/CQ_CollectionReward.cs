// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_CollectionReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_CollectionReward GetRootAsCQ_CollectionReward(ByteBuffer _bb) { return GetRootAsCQ_CollectionReward(_bb, new CQ_CollectionReward()); }
  public static CQ_CollectionReward GetRootAsCQ_CollectionReward(ByteBuffer _bb, CQ_CollectionReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_CollectionReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.ECollectionType CollectionType { get { int o = __p.__offset(4); return o != 0 ? (Lobby.ECollectionType)__p.bb.Get(o + __p.bb_pos) : Lobby.ECollectionType.None; } }

  public static Offset<Lobby.CQ_CollectionReward> CreateCQ_CollectionReward(FlatBufferBuilder builder,
      Lobby.ECollectionType CollectionType = Lobby.ECollectionType.None) {
    builder.StartTable(1);
    CQ_CollectionReward.AddCollectionType(builder, CollectionType);
    return CQ_CollectionReward.EndCQ_CollectionReward(builder);
  }

  public static void StartCQ_CollectionReward(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddCollectionType(FlatBufferBuilder builder, Lobby.ECollectionType CollectionType) { builder.AddByte(0, (byte)CollectionType, 0); }
  public static Offset<Lobby.CQ_CollectionReward> EndCQ_CollectionReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_CollectionReward>(o);
  }
  public CQ_CollectionRewardT UnPack() {
    var _o = new CQ_CollectionRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_CollectionRewardT _o) {
    _o.CollectionType = this.CollectionType;
  }
  public static Offset<Lobby.CQ_CollectionReward> Pack(FlatBufferBuilder builder, CQ_CollectionRewardT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_CollectionReward>);
    return CreateCQ_CollectionReward(
      builder,
      _o.CollectionType);
  }
}

public class CQ_CollectionRewardT
{
  public Lobby.ECollectionType CollectionType { get; set; }

  public CQ_CollectionRewardT() {
    this.CollectionType = Lobby.ECollectionType.None;
  }
}


}
