// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_InstantGuideList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_InstantGuideList GetRootAsSA_InstantGuideList(ByteBuffer _bb) { return GetRootAsSA_InstantGuideList(_bb, new SA_InstantGuideList()); }
  public static SA_InstantGuideList GetRootAsSA_InstantGuideList(ByteBuffer _bb, SA_InstantGuideList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_InstantGuideList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int InstantGuideList(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int InstantGuideListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetInstantGuideListBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetInstantGuideListBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetInstantGuideListArray() { return __p.__vector_as_array<int>(4); }

  public static Offset<Lobby.SA_InstantGuideList> CreateSA_InstantGuideList(FlatBufferBuilder builder,
      VectorOffset InstantGuideListOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SA_InstantGuideList.AddInstantGuideList(builder, InstantGuideListOffset);
    return SA_InstantGuideList.EndSA_InstantGuideList(builder);
  }

  public static void StartSA_InstantGuideList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddInstantGuideList(FlatBufferBuilder builder, VectorOffset InstantGuideListOffset) { builder.AddOffset(0, InstantGuideListOffset.Value, 0); }
  public static VectorOffset CreateInstantGuideListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateInstantGuideListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInstantGuideListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInstantGuideListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartInstantGuideListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Lobby.SA_InstantGuideList> EndSA_InstantGuideList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_InstantGuideList>(o);
  }
  public SA_InstantGuideListT UnPack() {
    var _o = new SA_InstantGuideListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_InstantGuideListT _o) {
    _o.InstantGuideList = new List<int>();
    for (var _j = 0; _j < this.InstantGuideListLength; ++_j) {_o.InstantGuideList.Add(this.InstantGuideList(_j));}
  }
  public static Offset<Lobby.SA_InstantGuideList> Pack(FlatBufferBuilder builder, SA_InstantGuideListT _o) {
    if (_o == null) return default(Offset<Lobby.SA_InstantGuideList>);
    var _InstantGuideList = default(VectorOffset);
    if (_o.InstantGuideList != null) {
      var __InstantGuideList = _o.InstantGuideList.ToArray();
      _InstantGuideList = CreateInstantGuideListVector(builder, __InstantGuideList);
    }
    return CreateSA_InstantGuideList(
      builder,
      _InstantGuideList);
  }
}

public class SA_InstantGuideListT
{
  public List<int> InstantGuideList { get; set; }

  public SA_InstantGuideListT() {
    this.InstantGuideList = null;
  }
}


}
