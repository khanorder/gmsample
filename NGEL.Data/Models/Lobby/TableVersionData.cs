// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TableVersionData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static TableVersionData GetRootAsTableVersionData(ByteBuffer _bb) { return GetRootAsTableVersionData(_bb, new TableVersionData()); }
  public static TableVersionData GetRootAsTableVersionData(ByteBuffer _bb, TableVersionData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TableVersionData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string TableName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTableNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetTableNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTableNameArray() { return __p.__vector_as_array<byte>(4); }
  public float Version { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<Lobby.TableVersionData> CreateTableVersionData(FlatBufferBuilder builder,
      StringOffset TableNameOffset = default(StringOffset),
      float Version = 0.0f) {
    builder.StartTable(2);
    TableVersionData.AddVersion(builder, Version);
    TableVersionData.AddTableName(builder, TableNameOffset);
    return TableVersionData.EndTableVersionData(builder);
  }

  public static void StartTableVersionData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTableName(FlatBufferBuilder builder, StringOffset TableNameOffset) { builder.AddOffset(0, TableNameOffset.Value, 0); }
  public static void AddVersion(FlatBufferBuilder builder, float Version) { builder.AddFloat(1, Version, 0.0f); }
  public static Offset<Lobby.TableVersionData> EndTableVersionData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.TableVersionData>(o);
  }
  public TableVersionDataT UnPack() {
    var _o = new TableVersionDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TableVersionDataT _o) {
    _o.TableName = this.TableName;
    _o.Version = this.Version;
  }
  public static Offset<Lobby.TableVersionData> Pack(FlatBufferBuilder builder, TableVersionDataT _o) {
    if (_o == null) return default(Offset<Lobby.TableVersionData>);
    var _TableName = _o.TableName == null ? default(StringOffset) : builder.CreateString(_o.TableName);
    return CreateTableVersionData(
      builder,
      _TableName,
      _o.Version);
  }
}

public class TableVersionDataT
{
  public string TableName { get; set; }
  public float Version { get; set; }

  public TableVersionDataT() {
    this.TableName = null;
    this.Version = 0.0f;
  }
}


}
