// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_GuideMissionList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_GuideMissionList GetRootAsSA_GuideMissionList(ByteBuffer _bb) { return GetRootAsSA_GuideMissionList(_bb, new SA_GuideMissionList()); }
  public static SA_GuideMissionList GetRootAsSA_GuideMissionList(ByteBuffer _bb, SA_GuideMissionList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_GuideMissionList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int LastReceiveID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Lobby.GuideMissionData? GuideMissionList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.GuideMissionData?)(new Lobby.GuideMissionData()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int GuideMissionListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.SA_GuideMissionList> CreateSA_GuideMissionList(FlatBufferBuilder builder,
      int LastReceiveID = 0,
      VectorOffset GuideMissionListOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SA_GuideMissionList.AddGuideMissionList(builder, GuideMissionListOffset);
    SA_GuideMissionList.AddLastReceiveID(builder, LastReceiveID);
    return SA_GuideMissionList.EndSA_GuideMissionList(builder);
  }

  public static void StartSA_GuideMissionList(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddLastReceiveID(FlatBufferBuilder builder, int LastReceiveID) { builder.AddInt(0, LastReceiveID, 0); }
  public static void AddGuideMissionList(FlatBufferBuilder builder, VectorOffset GuideMissionListOffset) { builder.AddOffset(1, GuideMissionListOffset.Value, 0); }
  public static void StartGuideMissionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static Offset<Lobby.SA_GuideMissionList> EndSA_GuideMissionList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_GuideMissionList>(o);
  }
  public SA_GuideMissionListT UnPack() {
    var _o = new SA_GuideMissionListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_GuideMissionListT _o) {
    _o.LastReceiveID = this.LastReceiveID;
    _o.GuideMissionList = new List<Lobby.GuideMissionDataT>();
    for (var _j = 0; _j < this.GuideMissionListLength; ++_j) {_o.GuideMissionList.Add(this.GuideMissionList(_j).HasValue ? this.GuideMissionList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.SA_GuideMissionList> Pack(FlatBufferBuilder builder, SA_GuideMissionListT _o) {
    if (_o == null) return default(Offset<Lobby.SA_GuideMissionList>);
    var _GuideMissionList = default(VectorOffset);
    if (_o.GuideMissionList != null) {
      StartGuideMissionListVector(builder, _o.GuideMissionList.Count);
      for (var _j = _o.GuideMissionList.Count - 1; _j >= 0; --_j) { Lobby.GuideMissionData.Pack(builder, _o.GuideMissionList[_j]); }
      _GuideMissionList = builder.EndVector();
    }
    return CreateSA_GuideMissionList(
      builder,
      _o.LastReceiveID,
      _GuideMissionList);
  }
}

public class SA_GuideMissionListT
{
  public int LastReceiveID { get; set; }
  public List<Lobby.GuideMissionDataT> GuideMissionList { get; set; }

  public SA_GuideMissionListT() {
    this.LastReceiveID = 0;
    this.GuideMissionList = null;
  }
}


}
