// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct NoticeBannerData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static NoticeBannerData GetRootAsNoticeBannerData(ByteBuffer _bb) { return GetRootAsNoticeBannerData(_bb, new NoticeBannerData()); }
  public static NoticeBannerData GetRootAsNoticeBannerData(ByteBuffer _bb, NoticeBannerData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public NoticeBannerData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int BannerID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int StartAt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EndAt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Title { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTitleArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<Lobby.NoticeBannerData> CreateNoticeBannerData(FlatBufferBuilder builder,
      int BannerID = 0,
      int StartAt = 0,
      int EndAt = 0,
      StringOffset TitleOffset = default(StringOffset)) {
    builder.StartTable(4);
    NoticeBannerData.AddTitle(builder, TitleOffset);
    NoticeBannerData.AddEndAt(builder, EndAt);
    NoticeBannerData.AddStartAt(builder, StartAt);
    NoticeBannerData.AddBannerID(builder, BannerID);
    return NoticeBannerData.EndNoticeBannerData(builder);
  }

  public static void StartNoticeBannerData(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddBannerID(FlatBufferBuilder builder, int BannerID) { builder.AddInt(0, BannerID, 0); }
  public static void AddStartAt(FlatBufferBuilder builder, int StartAt) { builder.AddInt(1, StartAt, 0); }
  public static void AddEndAt(FlatBufferBuilder builder, int EndAt) { builder.AddInt(2, EndAt, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset TitleOffset) { builder.AddOffset(3, TitleOffset.Value, 0); }
  public static Offset<Lobby.NoticeBannerData> EndNoticeBannerData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.NoticeBannerData>(o);
  }
  public NoticeBannerDataT UnPack() {
    var _o = new NoticeBannerDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(NoticeBannerDataT _o) {
    _o.BannerID = this.BannerID;
    _o.StartAt = this.StartAt;
    _o.EndAt = this.EndAt;
    _o.Title = this.Title;
  }
  public static Offset<Lobby.NoticeBannerData> Pack(FlatBufferBuilder builder, NoticeBannerDataT _o) {
    if (_o == null) return default(Offset<Lobby.NoticeBannerData>);
    var _Title = _o.Title == null ? default(StringOffset) : builder.CreateString(_o.Title);
    return CreateNoticeBannerData(
      builder,
      _o.BannerID,
      _o.StartAt,
      _o.EndAt,
      _Title);
  }
}

public class NoticeBannerDataT
{
  public int BannerID { get; set; }
  public int StartAt { get; set; }
  public int EndAt { get; set; }
  public string Title { get; set; }

  public NoticeBannerDataT() {
    this.BannerID = 0;
    this.StartAt = 0;
    this.EndAt = 0;
    this.Title = null;
  }
}


}
