// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_HeroBattleLevelUp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_HeroBattleLevelUp GetRootAsSN_HeroBattleLevelUp(ByteBuffer _bb) { return GetRootAsSN_HeroBattleLevelUp(_bb, new SN_HeroBattleLevelUp()); }
  public static SN_HeroBattleLevelUp GetRootAsSN_HeroBattleLevelUp(ByteBuffer _bb, SN_HeroBattleLevelUp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_HeroBattleLevelUp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int HeroID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BattleLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Exp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.SN_HeroBattleLevelUp> CreateSN_HeroBattleLevelUp(FlatBufferBuilder builder,
      int HeroID = 0,
      int BattleLevel = 0,
      int Exp = 0) {
    builder.StartTable(3);
    SN_HeroBattleLevelUp.AddExp(builder, Exp);
    SN_HeroBattleLevelUp.AddBattleLevel(builder, BattleLevel);
    SN_HeroBattleLevelUp.AddHeroID(builder, HeroID);
    return SN_HeroBattleLevelUp.EndSN_HeroBattleLevelUp(builder);
  }

  public static void StartSN_HeroBattleLevelUp(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddHeroID(FlatBufferBuilder builder, int HeroID) { builder.AddInt(0, HeroID, 0); }
  public static void AddBattleLevel(FlatBufferBuilder builder, int BattleLevel) { builder.AddInt(1, BattleLevel, 0); }
  public static void AddExp(FlatBufferBuilder builder, int Exp) { builder.AddInt(2, Exp, 0); }
  public static Offset<Lobby.SN_HeroBattleLevelUp> EndSN_HeroBattleLevelUp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_HeroBattleLevelUp>(o);
  }
  public SN_HeroBattleLevelUpT UnPack() {
    var _o = new SN_HeroBattleLevelUpT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_HeroBattleLevelUpT _o) {
    _o.HeroID = this.HeroID;
    _o.BattleLevel = this.BattleLevel;
    _o.Exp = this.Exp;
  }
  public static Offset<Lobby.SN_HeroBattleLevelUp> Pack(FlatBufferBuilder builder, SN_HeroBattleLevelUpT _o) {
    if (_o == null) return default(Offset<Lobby.SN_HeroBattleLevelUp>);
    return CreateSN_HeroBattleLevelUp(
      builder,
      _o.HeroID,
      _o.BattleLevel,
      _o.Exp);
  }
}

public class SN_HeroBattleLevelUpT
{
  public int HeroID { get; set; }
  public int BattleLevel { get; set; }
  public int Exp { get; set; }

  public SN_HeroBattleLevelUpT() {
    this.HeroID = 0;
    this.BattleLevel = 0;
    this.Exp = 0;
  }
}


}
