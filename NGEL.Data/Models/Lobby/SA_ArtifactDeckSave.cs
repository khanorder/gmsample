// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_ArtifactDeckSave : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_ArtifactDeckSave GetRootAsSA_ArtifactDeckSave(ByteBuffer _bb) { return GetRootAsSA_ArtifactDeckSave(_bb, new SA_ArtifactDeckSave()); }
  public static SA_ArtifactDeckSave GetRootAsSA_ArtifactDeckSave(ByteBuffer _bb, SA_ArtifactDeckSave obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_ArtifactDeckSave __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.ArtifactDeckData? ArtifactDeck { get { int o = __p.__offset(4); return o != 0 ? (Lobby.ArtifactDeckData?)(new Lobby.ArtifactDeckData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SA_ArtifactDeckSave> CreateSA_ArtifactDeckSave(FlatBufferBuilder builder,
      Offset<Lobby.ArtifactDeckData> ArtifactDeckOffset = default(Offset<Lobby.ArtifactDeckData>)) {
    builder.StartTable(1);
    SA_ArtifactDeckSave.AddArtifactDeck(builder, ArtifactDeckOffset);
    return SA_ArtifactDeckSave.EndSA_ArtifactDeckSave(builder);
  }

  public static void StartSA_ArtifactDeckSave(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddArtifactDeck(FlatBufferBuilder builder, Offset<Lobby.ArtifactDeckData> ArtifactDeckOffset) { builder.AddOffset(0, ArtifactDeckOffset.Value, 0); }
  public static Offset<Lobby.SA_ArtifactDeckSave> EndSA_ArtifactDeckSave(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_ArtifactDeckSave>(o);
  }
  public SA_ArtifactDeckSaveT UnPack() {
    var _o = new SA_ArtifactDeckSaveT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_ArtifactDeckSaveT _o) {
    _o.ArtifactDeck = this.ArtifactDeck.HasValue ? this.ArtifactDeck.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_ArtifactDeckSave> Pack(FlatBufferBuilder builder, SA_ArtifactDeckSaveT _o) {
    if (_o == null) return default(Offset<Lobby.SA_ArtifactDeckSave>);
    var _ArtifactDeck = _o.ArtifactDeck == null ? default(Offset<Lobby.ArtifactDeckData>) : Lobby.ArtifactDeckData.Pack(builder, _o.ArtifactDeck);
    return CreateSA_ArtifactDeckSave(
      builder,
      _ArtifactDeck);
  }
}

public class SA_ArtifactDeckSaveT
{
  public Lobby.ArtifactDeckDataT ArtifactDeck { get; set; }

  public SA_ArtifactDeckSaveT() {
    this.ArtifactDeck = null;
  }
}


}
