// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_RankingList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_RankingList GetRootAsSA_RankingList(ByteBuffer _bb) { return GetRootAsSA_RankingList(_bb, new SA_RankingList()); }
  public static SA_RankingList GetRootAsSA_RankingList(ByteBuffer _bb, SA_RankingList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_RankingList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.RankingScoreData? MyRankingInfo { get { int o = __p.__offset(4); return o != 0 ? (Lobby.RankingScoreData?)(new Lobby.RankingScoreData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.RankingScoreData? TopRankingList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.RankingScoreData?)(new Lobby.RankingScoreData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TopRankingListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.EContentsType ContentsType { get { int o = __p.__offset(8); return o != 0 ? (Lobby.EContentsType)__p.bb.Get(o + __p.bb_pos) : Lobby.EContentsType.None; } }

  public static Offset<Lobby.SA_RankingList> CreateSA_RankingList(FlatBufferBuilder builder,
      Offset<Lobby.RankingScoreData> MyRankingInfoOffset = default(Offset<Lobby.RankingScoreData>),
      VectorOffset TopRankingListOffset = default(VectorOffset),
      Lobby.EContentsType ContentsType = Lobby.EContentsType.None) {
    builder.StartTable(3);
    SA_RankingList.AddTopRankingList(builder, TopRankingListOffset);
    SA_RankingList.AddMyRankingInfo(builder, MyRankingInfoOffset);
    SA_RankingList.AddContentsType(builder, ContentsType);
    return SA_RankingList.EndSA_RankingList(builder);
  }

  public static void StartSA_RankingList(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddMyRankingInfo(FlatBufferBuilder builder, Offset<Lobby.RankingScoreData> MyRankingInfoOffset) { builder.AddOffset(0, MyRankingInfoOffset.Value, 0); }
  public static void AddTopRankingList(FlatBufferBuilder builder, VectorOffset TopRankingListOffset) { builder.AddOffset(1, TopRankingListOffset.Value, 0); }
  public static VectorOffset CreateTopRankingListVector(FlatBufferBuilder builder, Offset<Lobby.RankingScoreData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTopRankingListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.RankingScoreData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTopRankingListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.RankingScoreData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTopRankingListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.RankingScoreData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTopRankingListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddContentsType(FlatBufferBuilder builder, Lobby.EContentsType ContentsType) { builder.AddByte(2, (byte)ContentsType, 0); }
  public static Offset<Lobby.SA_RankingList> EndSA_RankingList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_RankingList>(o);
  }
  public SA_RankingListT UnPack() {
    var _o = new SA_RankingListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_RankingListT _o) {
    _o.MyRankingInfo = this.MyRankingInfo.HasValue ? this.MyRankingInfo.Value.UnPack() : null;
    _o.TopRankingList = new List<Lobby.RankingScoreDataT>();
    for (var _j = 0; _j < this.TopRankingListLength; ++_j) {_o.TopRankingList.Add(this.TopRankingList(_j).HasValue ? this.TopRankingList(_j).Value.UnPack() : null);}
    _o.ContentsType = this.ContentsType;
  }
  public static Offset<Lobby.SA_RankingList> Pack(FlatBufferBuilder builder, SA_RankingListT _o) {
    if (_o == null) return default(Offset<Lobby.SA_RankingList>);
    var _MyRankingInfo = _o.MyRankingInfo == null ? default(Offset<Lobby.RankingScoreData>) : Lobby.RankingScoreData.Pack(builder, _o.MyRankingInfo);
    var _TopRankingList = default(VectorOffset);
    if (_o.TopRankingList != null) {
      var __TopRankingList = new Offset<Lobby.RankingScoreData>[_o.TopRankingList.Count];
      for (var _j = 0; _j < __TopRankingList.Length; ++_j) { __TopRankingList[_j] = Lobby.RankingScoreData.Pack(builder, _o.TopRankingList[_j]); }
      _TopRankingList = CreateTopRankingListVector(builder, __TopRankingList);
    }
    return CreateSA_RankingList(
      builder,
      _MyRankingInfo,
      _TopRankingList,
      _o.ContentsType);
  }
}

public class SA_RankingListT
{
  public Lobby.RankingScoreDataT MyRankingInfo { get; set; }
  public List<Lobby.RankingScoreDataT> TopRankingList { get; set; }
  public Lobby.EContentsType ContentsType { get; set; }

  public SA_RankingListT() {
    this.MyRankingInfo = null;
    this.TopRankingList = null;
    this.ContentsType = Lobby.EContentsType.None;
  }
}


}
