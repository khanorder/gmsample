// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_NicePlayerOther : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_NicePlayerOther GetRootAsSA_NicePlayerOther(ByteBuffer _bb) { return GetRootAsSA_NicePlayerOther(_bb, new SA_NicePlayerOther()); }
  public static SA_NicePlayerOther GetRootAsSA_NicePlayerOther(ByteBuffer _bb, SA_NicePlayerOther obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_NicePlayerOther __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TargetUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NiceLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NicePoint { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.SA_NicePlayerOther> CreateSA_NicePlayerOther(FlatBufferBuilder builder,
      int TargetUID = 0,
      int NiceLevel = 0,
      int NicePoint = 0) {
    builder.StartTable(3);
    SA_NicePlayerOther.AddNicePoint(builder, NicePoint);
    SA_NicePlayerOther.AddNiceLevel(builder, NiceLevel);
    SA_NicePlayerOther.AddTargetUID(builder, TargetUID);
    return SA_NicePlayerOther.EndSA_NicePlayerOther(builder);
  }

  public static void StartSA_NicePlayerOther(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTargetUID(FlatBufferBuilder builder, int TargetUID) { builder.AddInt(0, TargetUID, 0); }
  public static void AddNiceLevel(FlatBufferBuilder builder, int NiceLevel) { builder.AddInt(1, NiceLevel, 0); }
  public static void AddNicePoint(FlatBufferBuilder builder, int NicePoint) { builder.AddInt(2, NicePoint, 0); }
  public static Offset<Lobby.SA_NicePlayerOther> EndSA_NicePlayerOther(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_NicePlayerOther>(o);
  }
  public SA_NicePlayerOtherT UnPack() {
    var _o = new SA_NicePlayerOtherT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_NicePlayerOtherT _o) {
    _o.TargetUID = this.TargetUID;
    _o.NiceLevel = this.NiceLevel;
    _o.NicePoint = this.NicePoint;
  }
  public static Offset<Lobby.SA_NicePlayerOther> Pack(FlatBufferBuilder builder, SA_NicePlayerOtherT _o) {
    if (_o == null) return default(Offset<Lobby.SA_NicePlayerOther>);
    return CreateSA_NicePlayerOther(
      builder,
      _o.TargetUID,
      _o.NiceLevel,
      _o.NicePoint);
  }
}

public class SA_NicePlayerOtherT
{
  public int TargetUID { get; set; }
  public int NiceLevel { get; set; }
  public int NicePoint { get; set; }

  public SA_NicePlayerOtherT() {
    this.TargetUID = 0;
    this.NiceLevel = 0;
    this.NicePoint = 0;
  }
}


}
