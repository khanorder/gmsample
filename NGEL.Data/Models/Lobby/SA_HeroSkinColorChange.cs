// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_HeroSkinColorChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_HeroSkinColorChange GetRootAsSA_HeroSkinColorChange(ByteBuffer _bb) { return GetRootAsSA_HeroSkinColorChange(_bb, new SA_HeroSkinColorChange()); }
  public static SA_HeroSkinColorChange GetRootAsSA_HeroSkinColorChange(ByteBuffer _bb, SA_HeroSkinColorChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_HeroSkinColorChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.HeroSkinData? ChangeHeroSkinData(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.HeroSkinData?)(new Lobby.HeroSkinData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeHeroSkinDataLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ItemData? ChangeItemList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.ItemData?)(new Lobby.ItemData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeItemListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.SA_HeroSkinColorChange> CreateSA_HeroSkinColorChange(FlatBufferBuilder builder,
      VectorOffset ChangeHeroSkinDataOffset = default(VectorOffset),
      VectorOffset ChangeItemListOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SA_HeroSkinColorChange.AddChangeItemList(builder, ChangeItemListOffset);
    SA_HeroSkinColorChange.AddChangeHeroSkinData(builder, ChangeHeroSkinDataOffset);
    return SA_HeroSkinColorChange.EndSA_HeroSkinColorChange(builder);
  }

  public static void StartSA_HeroSkinColorChange(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddChangeHeroSkinData(FlatBufferBuilder builder, VectorOffset ChangeHeroSkinDataOffset) { builder.AddOffset(0, ChangeHeroSkinDataOffset.Value, 0); }
  public static VectorOffset CreateChangeHeroSkinDataVector(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinDataVectorBlock(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinDataVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.HeroSkinData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinDataVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.HeroSkinData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeHeroSkinDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeItemList(FlatBufferBuilder builder, VectorOffset ChangeItemListOffset) { builder.AddOffset(1, ChangeItemListOffset.Value, 0); }
  public static void StartChangeItemListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static Offset<Lobby.SA_HeroSkinColorChange> EndSA_HeroSkinColorChange(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_HeroSkinColorChange>(o);
  }
  public SA_HeroSkinColorChangeT UnPack() {
    var _o = new SA_HeroSkinColorChangeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_HeroSkinColorChangeT _o) {
    _o.ChangeHeroSkinData = new List<Lobby.HeroSkinDataT>();
    for (var _j = 0; _j < this.ChangeHeroSkinDataLength; ++_j) {_o.ChangeHeroSkinData.Add(this.ChangeHeroSkinData(_j).HasValue ? this.ChangeHeroSkinData(_j).Value.UnPack() : null);}
    _o.ChangeItemList = new List<Lobby.ItemDataT>();
    for (var _j = 0; _j < this.ChangeItemListLength; ++_j) {_o.ChangeItemList.Add(this.ChangeItemList(_j).HasValue ? this.ChangeItemList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.SA_HeroSkinColorChange> Pack(FlatBufferBuilder builder, SA_HeroSkinColorChangeT _o) {
    if (_o == null) return default(Offset<Lobby.SA_HeroSkinColorChange>);
    var _ChangeHeroSkinData = default(VectorOffset);
    if (_o.ChangeHeroSkinData != null) {
      var __ChangeHeroSkinData = new Offset<Lobby.HeroSkinData>[_o.ChangeHeroSkinData.Count];
      for (var _j = 0; _j < __ChangeHeroSkinData.Length; ++_j) { __ChangeHeroSkinData[_j] = Lobby.HeroSkinData.Pack(builder, _o.ChangeHeroSkinData[_j]); }
      _ChangeHeroSkinData = CreateChangeHeroSkinDataVector(builder, __ChangeHeroSkinData);
    }
    var _ChangeItemList = default(VectorOffset);
    if (_o.ChangeItemList != null) {
      StartChangeItemListVector(builder, _o.ChangeItemList.Count);
      for (var _j = _o.ChangeItemList.Count - 1; _j >= 0; --_j) { Lobby.ItemData.Pack(builder, _o.ChangeItemList[_j]); }
      _ChangeItemList = builder.EndVector();
    }
    return CreateSA_HeroSkinColorChange(
      builder,
      _ChangeHeroSkinData,
      _ChangeItemList);
  }
}

public class SA_HeroSkinColorChangeT
{
  public List<Lobby.HeroSkinDataT> ChangeHeroSkinData { get; set; }
  public List<Lobby.ItemDataT> ChangeItemList { get; set; }

  public SA_HeroSkinColorChangeT() {
    this.ChangeHeroSkinData = null;
    this.ChangeItemList = null;
  }
}


}
