// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_BillingComplte : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_BillingComplte GetRootAsSN_BillingComplte(ByteBuffer _bb) { return GetRootAsSN_BillingComplte(_bb, new SN_BillingComplte()); }
  public static SN_BillingComplte GetRootAsSN_BillingComplte(ByteBuffer _bb, SN_BillingComplte obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_BillingComplte __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string TID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetTIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTIDArray() { return __p.__vector_as_array<byte>(4); }
  public string StoveProductID { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStoveProductIDBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetStoveProductIDBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetStoveProductIDArray() { return __p.__vector_as_array<byte>(6); }
  public string OriginalTID { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginalTIDBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetOriginalTIDBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetOriginalTIDArray() { return __p.__vector_as_array<byte>(8); }
  public Lobby.WonderStoreData? WonderStoreInfo { get { int o = __p.__offset(10); return o != 0 ? (Lobby.WonderStoreData?)(new Lobby.WonderStoreData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.SeasonPassData? SeasonPassInfo { get { int o = __p.__offset(12); return o != 0 ? (Lobby.SeasonPassData?)(new Lobby.SeasonPassData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SN_BillingComplte> CreateSN_BillingComplte(FlatBufferBuilder builder,
      StringOffset TIDOffset = default(StringOffset),
      StringOffset StoveProductIDOffset = default(StringOffset),
      StringOffset OriginalTIDOffset = default(StringOffset),
      Offset<Lobby.WonderStoreData> WonderStoreInfoOffset = default(Offset<Lobby.WonderStoreData>),
      Offset<Lobby.SeasonPassData> SeasonPassInfoOffset = default(Offset<Lobby.SeasonPassData>)) {
    builder.StartTable(5);
    SN_BillingComplte.AddSeasonPassInfo(builder, SeasonPassInfoOffset);
    SN_BillingComplte.AddWonderStoreInfo(builder, WonderStoreInfoOffset);
    SN_BillingComplte.AddOriginalTID(builder, OriginalTIDOffset);
    SN_BillingComplte.AddStoveProductID(builder, StoveProductIDOffset);
    SN_BillingComplte.AddTID(builder, TIDOffset);
    return SN_BillingComplte.EndSN_BillingComplte(builder);
  }

  public static void StartSN_BillingComplte(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddTID(FlatBufferBuilder builder, StringOffset TIDOffset) { builder.AddOffset(0, TIDOffset.Value, 0); }
  public static void AddStoveProductID(FlatBufferBuilder builder, StringOffset StoveProductIDOffset) { builder.AddOffset(1, StoveProductIDOffset.Value, 0); }
  public static void AddOriginalTID(FlatBufferBuilder builder, StringOffset OriginalTIDOffset) { builder.AddOffset(2, OriginalTIDOffset.Value, 0); }
  public static void AddWonderStoreInfo(FlatBufferBuilder builder, Offset<Lobby.WonderStoreData> WonderStoreInfoOffset) { builder.AddOffset(3, WonderStoreInfoOffset.Value, 0); }
  public static void AddSeasonPassInfo(FlatBufferBuilder builder, Offset<Lobby.SeasonPassData> SeasonPassInfoOffset) { builder.AddOffset(4, SeasonPassInfoOffset.Value, 0); }
  public static Offset<Lobby.SN_BillingComplte> EndSN_BillingComplte(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_BillingComplte>(o);
  }
  public SN_BillingComplteT UnPack() {
    var _o = new SN_BillingComplteT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_BillingComplteT _o) {
    _o.TID = this.TID;
    _o.StoveProductID = this.StoveProductID;
    _o.OriginalTID = this.OriginalTID;
    _o.WonderStoreInfo = this.WonderStoreInfo.HasValue ? this.WonderStoreInfo.Value.UnPack() : null;
    _o.SeasonPassInfo = this.SeasonPassInfo.HasValue ? this.SeasonPassInfo.Value.UnPack() : null;
  }
  public static Offset<Lobby.SN_BillingComplte> Pack(FlatBufferBuilder builder, SN_BillingComplteT _o) {
    if (_o == null) return default(Offset<Lobby.SN_BillingComplte>);
    var _TID = _o.TID == null ? default(StringOffset) : builder.CreateString(_o.TID);
    var _StoveProductID = _o.StoveProductID == null ? default(StringOffset) : builder.CreateString(_o.StoveProductID);
    var _OriginalTID = _o.OriginalTID == null ? default(StringOffset) : builder.CreateString(_o.OriginalTID);
    var _WonderStoreInfo = _o.WonderStoreInfo == null ? default(Offset<Lobby.WonderStoreData>) : Lobby.WonderStoreData.Pack(builder, _o.WonderStoreInfo);
    var _SeasonPassInfo = _o.SeasonPassInfo == null ? default(Offset<Lobby.SeasonPassData>) : Lobby.SeasonPassData.Pack(builder, _o.SeasonPassInfo);
    return CreateSN_BillingComplte(
      builder,
      _TID,
      _StoveProductID,
      _OriginalTID,
      _WonderStoreInfo,
      _SeasonPassInfo);
  }
}

public class SN_BillingComplteT
{
  public string TID { get; set; }
  public string StoveProductID { get; set; }
  public string OriginalTID { get; set; }
  public Lobby.WonderStoreDataT WonderStoreInfo { get; set; }
  public Lobby.SeasonPassDataT SeasonPassInfo { get; set; }

  public SN_BillingComplteT() {
    this.TID = null;
    this.StoveProductID = null;
    this.OriginalTID = null;
    this.WonderStoreInfo = null;
    this.SeasonPassInfo = null;
  }
}


}
