// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_CheatKey : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_CheatKey GetRootAsSA_CheatKey(ByteBuffer _bb) { return GetRootAsSA_CheatKey(_bb, new SA_CheatKey()); }
  public static SA_CheatKey GetRootAsSA_CheatKey(ByteBuffer _bb, SA_CheatKey obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_CheatKey __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string CheatKey { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCheatKeyBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetCheatKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetCheatKeyArray() { return __p.__vector_as_array<byte>(4); }
  public Lobby.AchievementData? ChangeAchevementList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.AchievementData?)(new Lobby.AchievementData()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int ChangeAchevementListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ArtifactData? ChangeArtifactList(int j) { int o = __p.__offset(8); return o != 0 ? (Lobby.ArtifactData?)(new Lobby.ArtifactData()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int ChangeArtifactListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.AssetData? ChangeAssetList(int j) { int o = __p.__offset(10); return o != 0 ? (Lobby.AssetData?)(new Lobby.AssetData()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int ChangeAssetListLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.AttributeData? ChangeAttributeList(int j) { int o = __p.__offset(12); return o != 0 ? (Lobby.AttributeData?)(new Lobby.AttributeData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeAttributeListLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.CollectionData? ChangeCollectionList(int j) { int o = __p.__offset(14); return o != 0 ? (Lobby.CollectionData?)(new Lobby.CollectionData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeCollectionListLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int ChangeEntitlementList(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChangeEntitlementListLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetChangeEntitlementListBytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetChangeEntitlementListBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetChangeEntitlementListArray() { return __p.__vector_as_array<int>(16); }
  public Lobby.ExpressionData? ChangeExpressionList(int j) { int o = __p.__offset(18); return o != 0 ? (Lobby.ExpressionData?)(new Lobby.ExpressionData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeExpressionListLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ExpressionPresetData? ChangeExpressionPresetList(int j) { int o = __p.__offset(20); return o != 0 ? (Lobby.ExpressionPresetData?)(new Lobby.ExpressionPresetData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeExpressionPresetListLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.HeroData? ChangeHeroList(int j) { int o = __p.__offset(22); return o != 0 ? (Lobby.HeroData?)(new Lobby.HeroData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeHeroListLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.HeroSkinData? ChangeHeroSkinList(int j) { int o = __p.__offset(24); return o != 0 ? (Lobby.HeroSkinData?)(new Lobby.HeroSkinData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeHeroSkinListLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ItemData? ChangeItemList(int j) { int o = __p.__offset(26); return o != 0 ? (Lobby.ItemData?)(new Lobby.ItemData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeItemListLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.PetData? ChangePetList(int j) { int o = __p.__offset(28); return o != 0 ? (Lobby.PetData?)(new Lobby.PetData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangePetListLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ProfileData? ChangeProfileList(int j) { int o = __p.__offset(30); return o != 0 ? (Lobby.ProfileData?)(new Lobby.ProfileData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeProfileListLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.SeasonPassData? ChangeSeasonPassList(int j) { int o = __p.__offset(32); return o != 0 ? (Lobby.SeasonPassData?)(new Lobby.SeasonPassData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeSeasonPassListLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.MissionData? ChangeMissionList(int j) { int o = __p.__offset(34); return o != 0 ? (Lobby.MissionData?)(new Lobby.MissionData()).__assign(__p.__vector(o) + j * 20, __p.bb) : null; }
  public int ChangeMissionListLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.UserAccountData? ChangeUserAccount { get { int o = __p.__offset(36); return o != 0 ? (Lobby.UserAccountData?)(new Lobby.UserAccountData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.GuideMissionData? ChangeGuideMissionList(int j) { int o = __p.__offset(38); return o != 0 ? (Lobby.GuideMissionData?)(new Lobby.GuideMissionData()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int ChangeGuideMissionListLength { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.WonderStoreData? ChangeWonderStoreList(int j) { int o = __p.__offset(40); return o != 0 ? (Lobby.WonderStoreData?)(new Lobby.WonderStoreData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeWonderStoreListLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.WeaponCategoryData? ChangeWeaponCategoryList(int j) { int o = __p.__offset(42); return o != 0 ? (Lobby.WeaponCategoryData?)(new Lobby.WeaponCategoryData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeWeaponCategoryListLength { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.WonderCubeData? ChangeWonderCube { get { int o = __p.__offset(44); return o != 0 ? (Lobby.WonderCubeData?)(new Lobby.WonderCubeData()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public bool DeleteAllAttribute { get { int o = __p.__offset(46); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool DeleteAllPet { get { int o = __p.__offset(48); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool DeleteAllCollection { get { int o = __p.__offset(50); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool DeleteAllWonderCube { get { int o = __p.__offset(52); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Lobby.SA_CheatKey> CreateSA_CheatKey(FlatBufferBuilder builder,
      StringOffset CheatKeyOffset = default(StringOffset),
      VectorOffset ChangeAchevementListOffset = default(VectorOffset),
      VectorOffset ChangeArtifactListOffset = default(VectorOffset),
      VectorOffset ChangeAssetListOffset = default(VectorOffset),
      VectorOffset ChangeAttributeListOffset = default(VectorOffset),
      VectorOffset ChangeCollectionListOffset = default(VectorOffset),
      VectorOffset ChangeEntitlementListOffset = default(VectorOffset),
      VectorOffset ChangeExpressionListOffset = default(VectorOffset),
      VectorOffset ChangeExpressionPresetListOffset = default(VectorOffset),
      VectorOffset ChangeHeroListOffset = default(VectorOffset),
      VectorOffset ChangeHeroSkinListOffset = default(VectorOffset),
      VectorOffset ChangeItemListOffset = default(VectorOffset),
      VectorOffset ChangePetListOffset = default(VectorOffset),
      VectorOffset ChangeProfileListOffset = default(VectorOffset),
      VectorOffset ChangeSeasonPassListOffset = default(VectorOffset),
      VectorOffset ChangeMissionListOffset = default(VectorOffset),
      Offset<Lobby.UserAccountData> ChangeUserAccountOffset = default(Offset<Lobby.UserAccountData>),
      VectorOffset ChangeGuideMissionListOffset = default(VectorOffset),
      VectorOffset ChangeWonderStoreListOffset = default(VectorOffset),
      VectorOffset ChangeWeaponCategoryListOffset = default(VectorOffset),
      Lobby.WonderCubeDataT ChangeWonderCube = null,
      bool DeleteAllAttribute = false,
      bool DeleteAllPet = false,
      bool DeleteAllCollection = false,
      bool DeleteAllWonderCube = false) {
    builder.StartTable(25);
    SA_CheatKey.AddChangeWonderCube(builder, Lobby.WonderCubeData.Pack(builder, ChangeWonderCube));
    SA_CheatKey.AddChangeWeaponCategoryList(builder, ChangeWeaponCategoryListOffset);
    SA_CheatKey.AddChangeWonderStoreList(builder, ChangeWonderStoreListOffset);
    SA_CheatKey.AddChangeGuideMissionList(builder, ChangeGuideMissionListOffset);
    SA_CheatKey.AddChangeUserAccount(builder, ChangeUserAccountOffset);
    SA_CheatKey.AddChangeMissionList(builder, ChangeMissionListOffset);
    SA_CheatKey.AddChangeSeasonPassList(builder, ChangeSeasonPassListOffset);
    SA_CheatKey.AddChangeProfileList(builder, ChangeProfileListOffset);
    SA_CheatKey.AddChangePetList(builder, ChangePetListOffset);
    SA_CheatKey.AddChangeItemList(builder, ChangeItemListOffset);
    SA_CheatKey.AddChangeHeroSkinList(builder, ChangeHeroSkinListOffset);
    SA_CheatKey.AddChangeHeroList(builder, ChangeHeroListOffset);
    SA_CheatKey.AddChangeExpressionPresetList(builder, ChangeExpressionPresetListOffset);
    SA_CheatKey.AddChangeExpressionList(builder, ChangeExpressionListOffset);
    SA_CheatKey.AddChangeEntitlementList(builder, ChangeEntitlementListOffset);
    SA_CheatKey.AddChangeCollectionList(builder, ChangeCollectionListOffset);
    SA_CheatKey.AddChangeAttributeList(builder, ChangeAttributeListOffset);
    SA_CheatKey.AddChangeAssetList(builder, ChangeAssetListOffset);
    SA_CheatKey.AddChangeArtifactList(builder, ChangeArtifactListOffset);
    SA_CheatKey.AddChangeAchevementList(builder, ChangeAchevementListOffset);
    SA_CheatKey.AddCheatKey(builder, CheatKeyOffset);
    SA_CheatKey.AddDeleteAllWonderCube(builder, DeleteAllWonderCube);
    SA_CheatKey.AddDeleteAllCollection(builder, DeleteAllCollection);
    SA_CheatKey.AddDeleteAllPet(builder, DeleteAllPet);
    SA_CheatKey.AddDeleteAllAttribute(builder, DeleteAllAttribute);
    return SA_CheatKey.EndSA_CheatKey(builder);
  }

  public static void StartSA_CheatKey(FlatBufferBuilder builder) { builder.StartTable(25); }
  public static void AddCheatKey(FlatBufferBuilder builder, StringOffset CheatKeyOffset) { builder.AddOffset(0, CheatKeyOffset.Value, 0); }
  public static void AddChangeAchevementList(FlatBufferBuilder builder, VectorOffset ChangeAchevementListOffset) { builder.AddOffset(1, ChangeAchevementListOffset.Value, 0); }
  public static void StartChangeAchevementListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static void AddChangeArtifactList(FlatBufferBuilder builder, VectorOffset ChangeArtifactListOffset) { builder.AddOffset(2, ChangeArtifactListOffset.Value, 0); }
  public static void StartChangeArtifactListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 4); }
  public static void AddChangeAssetList(FlatBufferBuilder builder, VectorOffset ChangeAssetListOffset) { builder.AddOffset(3, ChangeAssetListOffset.Value, 0); }
  public static void StartChangeAssetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static void AddChangeAttributeList(FlatBufferBuilder builder, VectorOffset ChangeAttributeListOffset) { builder.AddOffset(4, ChangeAttributeListOffset.Value, 0); }
  public static void StartChangeAttributeListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeCollectionList(FlatBufferBuilder builder, VectorOffset ChangeCollectionListOffset) { builder.AddOffset(5, ChangeCollectionListOffset.Value, 0); }
  public static void StartChangeCollectionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeEntitlementList(FlatBufferBuilder builder, VectorOffset ChangeEntitlementListOffset) { builder.AddOffset(6, ChangeEntitlementListOffset.Value, 0); }
  public static VectorOffset CreateChangeEntitlementListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateChangeEntitlementListVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeEntitlementListVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeEntitlementListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeEntitlementListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeExpressionList(FlatBufferBuilder builder, VectorOffset ChangeExpressionListOffset) { builder.AddOffset(7, ChangeExpressionListOffset.Value, 0); }
  public static void StartChangeExpressionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeExpressionPresetList(FlatBufferBuilder builder, VectorOffset ChangeExpressionPresetListOffset) { builder.AddOffset(8, ChangeExpressionPresetListOffset.Value, 0); }
  public static VectorOffset CreateChangeExpressionPresetListVector(FlatBufferBuilder builder, Offset<Lobby.ExpressionPresetData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeExpressionPresetListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.ExpressionPresetData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeExpressionPresetListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.ExpressionPresetData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeExpressionPresetListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.ExpressionPresetData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeExpressionPresetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeHeroList(FlatBufferBuilder builder, VectorOffset ChangeHeroListOffset) { builder.AddOffset(9, ChangeHeroListOffset.Value, 0); }
  public static VectorOffset CreateChangeHeroListVector(FlatBufferBuilder builder, Offset<Lobby.HeroData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.HeroData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.HeroData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.HeroData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeHeroListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeHeroSkinList(FlatBufferBuilder builder, VectorOffset ChangeHeroSkinListOffset) { builder.AddOffset(10, ChangeHeroSkinListOffset.Value, 0); }
  public static VectorOffset CreateChangeHeroSkinListVector(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.HeroSkinData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.HeroSkinData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeHeroSkinListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeItemList(FlatBufferBuilder builder, VectorOffset ChangeItemListOffset) { builder.AddOffset(11, ChangeItemListOffset.Value, 0); }
  public static void StartChangeItemListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangePetList(FlatBufferBuilder builder, VectorOffset ChangePetListOffset) { builder.AddOffset(12, ChangePetListOffset.Value, 0); }
  public static VectorOffset CreateChangePetListVector(FlatBufferBuilder builder, Offset<Lobby.PetData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangePetListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.PetData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangePetListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.PetData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangePetListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.PetData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangePetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeProfileList(FlatBufferBuilder builder, VectorOffset ChangeProfileListOffset) { builder.AddOffset(13, ChangeProfileListOffset.Value, 0); }
  public static void StartChangeProfileListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeSeasonPassList(FlatBufferBuilder builder, VectorOffset ChangeSeasonPassListOffset) { builder.AddOffset(14, ChangeSeasonPassListOffset.Value, 0); }
  public static VectorOffset CreateChangeSeasonPassListVector(FlatBufferBuilder builder, Offset<Lobby.SeasonPassData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeSeasonPassListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.SeasonPassData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeSeasonPassListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.SeasonPassData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeSeasonPassListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.SeasonPassData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeSeasonPassListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeMissionList(FlatBufferBuilder builder, VectorOffset ChangeMissionListOffset) { builder.AddOffset(15, ChangeMissionListOffset.Value, 0); }
  public static void StartChangeMissionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(20, numElems, 4); }
  public static void AddChangeUserAccount(FlatBufferBuilder builder, Offset<Lobby.UserAccountData> ChangeUserAccountOffset) { builder.AddOffset(16, ChangeUserAccountOffset.Value, 0); }
  public static void AddChangeGuideMissionList(FlatBufferBuilder builder, VectorOffset ChangeGuideMissionListOffset) { builder.AddOffset(17, ChangeGuideMissionListOffset.Value, 0); }
  public static void StartChangeGuideMissionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static void AddChangeWonderStoreList(FlatBufferBuilder builder, VectorOffset ChangeWonderStoreListOffset) { builder.AddOffset(18, ChangeWonderStoreListOffset.Value, 0); }
  public static VectorOffset CreateChangeWonderStoreListVector(FlatBufferBuilder builder, Offset<Lobby.WonderStoreData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeWonderStoreListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.WonderStoreData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeWonderStoreListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.WonderStoreData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeWonderStoreListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.WonderStoreData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeWonderStoreListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeWeaponCategoryList(FlatBufferBuilder builder, VectorOffset ChangeWeaponCategoryListOffset) { builder.AddOffset(19, ChangeWeaponCategoryListOffset.Value, 0); }
  public static void StartChangeWeaponCategoryListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeWonderCube(FlatBufferBuilder builder, Offset<Lobby.WonderCubeData> ChangeWonderCubeOffset) { builder.AddStruct(20, ChangeWonderCubeOffset.Value, 0); }
  public static void AddDeleteAllAttribute(FlatBufferBuilder builder, bool DeleteAllAttribute) { builder.AddBool(21, DeleteAllAttribute, false); }
  public static void AddDeleteAllPet(FlatBufferBuilder builder, bool DeleteAllPet) { builder.AddBool(22, DeleteAllPet, false); }
  public static void AddDeleteAllCollection(FlatBufferBuilder builder, bool DeleteAllCollection) { builder.AddBool(23, DeleteAllCollection, false); }
  public static void AddDeleteAllWonderCube(FlatBufferBuilder builder, bool DeleteAllWonderCube) { builder.AddBool(24, DeleteAllWonderCube, false); }
  public static Offset<Lobby.SA_CheatKey> EndSA_CheatKey(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_CheatKey>(o);
  }
  public SA_CheatKeyT UnPack() {
    var _o = new SA_CheatKeyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_CheatKeyT _o) {
    _o.CheatKey = this.CheatKey;
    _o.ChangeAchevementList = new List<Lobby.AchievementDataT>();
    for (var _j = 0; _j < this.ChangeAchevementListLength; ++_j) {_o.ChangeAchevementList.Add(this.ChangeAchevementList(_j).HasValue ? this.ChangeAchevementList(_j).Value.UnPack() : null);}
    _o.ChangeArtifactList = new List<Lobby.ArtifactDataT>();
    for (var _j = 0; _j < this.ChangeArtifactListLength; ++_j) {_o.ChangeArtifactList.Add(this.ChangeArtifactList(_j).HasValue ? this.ChangeArtifactList(_j).Value.UnPack() : null);}
    _o.ChangeAssetList = new List<Lobby.AssetDataT>();
    for (var _j = 0; _j < this.ChangeAssetListLength; ++_j) {_o.ChangeAssetList.Add(this.ChangeAssetList(_j).HasValue ? this.ChangeAssetList(_j).Value.UnPack() : null);}
    _o.ChangeAttributeList = new List<Lobby.AttributeDataT>();
    for (var _j = 0; _j < this.ChangeAttributeListLength; ++_j) {_o.ChangeAttributeList.Add(this.ChangeAttributeList(_j).HasValue ? this.ChangeAttributeList(_j).Value.UnPack() : null);}
    _o.ChangeCollectionList = new List<Lobby.CollectionDataT>();
    for (var _j = 0; _j < this.ChangeCollectionListLength; ++_j) {_o.ChangeCollectionList.Add(this.ChangeCollectionList(_j).HasValue ? this.ChangeCollectionList(_j).Value.UnPack() : null);}
    _o.ChangeEntitlementList = new List<int>();
    for (var _j = 0; _j < this.ChangeEntitlementListLength; ++_j) {_o.ChangeEntitlementList.Add(this.ChangeEntitlementList(_j));}
    _o.ChangeExpressionList = new List<Lobby.ExpressionDataT>();
    for (var _j = 0; _j < this.ChangeExpressionListLength; ++_j) {_o.ChangeExpressionList.Add(this.ChangeExpressionList(_j).HasValue ? this.ChangeExpressionList(_j).Value.UnPack() : null);}
    _o.ChangeExpressionPresetList = new List<Lobby.ExpressionPresetDataT>();
    for (var _j = 0; _j < this.ChangeExpressionPresetListLength; ++_j) {_o.ChangeExpressionPresetList.Add(this.ChangeExpressionPresetList(_j).HasValue ? this.ChangeExpressionPresetList(_j).Value.UnPack() : null);}
    _o.ChangeHeroList = new List<Lobby.HeroDataT>();
    for (var _j = 0; _j < this.ChangeHeroListLength; ++_j) {_o.ChangeHeroList.Add(this.ChangeHeroList(_j).HasValue ? this.ChangeHeroList(_j).Value.UnPack() : null);}
    _o.ChangeHeroSkinList = new List<Lobby.HeroSkinDataT>();
    for (var _j = 0; _j < this.ChangeHeroSkinListLength; ++_j) {_o.ChangeHeroSkinList.Add(this.ChangeHeroSkinList(_j).HasValue ? this.ChangeHeroSkinList(_j).Value.UnPack() : null);}
    _o.ChangeItemList = new List<Lobby.ItemDataT>();
    for (var _j = 0; _j < this.ChangeItemListLength; ++_j) {_o.ChangeItemList.Add(this.ChangeItemList(_j).HasValue ? this.ChangeItemList(_j).Value.UnPack() : null);}
    _o.ChangePetList = new List<Lobby.PetDataT>();
    for (var _j = 0; _j < this.ChangePetListLength; ++_j) {_o.ChangePetList.Add(this.ChangePetList(_j).HasValue ? this.ChangePetList(_j).Value.UnPack() : null);}
    _o.ChangeProfileList = new List<Lobby.ProfileDataT>();
    for (var _j = 0; _j < this.ChangeProfileListLength; ++_j) {_o.ChangeProfileList.Add(this.ChangeProfileList(_j).HasValue ? this.ChangeProfileList(_j).Value.UnPack() : null);}
    _o.ChangeSeasonPassList = new List<Lobby.SeasonPassDataT>();
    for (var _j = 0; _j < this.ChangeSeasonPassListLength; ++_j) {_o.ChangeSeasonPassList.Add(this.ChangeSeasonPassList(_j).HasValue ? this.ChangeSeasonPassList(_j).Value.UnPack() : null);}
    _o.ChangeMissionList = new List<Lobby.MissionDataT>();
    for (var _j = 0; _j < this.ChangeMissionListLength; ++_j) {_o.ChangeMissionList.Add(this.ChangeMissionList(_j).HasValue ? this.ChangeMissionList(_j).Value.UnPack() : null);}
    _o.ChangeUserAccount = this.ChangeUserAccount.HasValue ? this.ChangeUserAccount.Value.UnPack() : null;
    _o.ChangeGuideMissionList = new List<Lobby.GuideMissionDataT>();
    for (var _j = 0; _j < this.ChangeGuideMissionListLength; ++_j) {_o.ChangeGuideMissionList.Add(this.ChangeGuideMissionList(_j).HasValue ? this.ChangeGuideMissionList(_j).Value.UnPack() : null);}
    _o.ChangeWonderStoreList = new List<Lobby.WonderStoreDataT>();
    for (var _j = 0; _j < this.ChangeWonderStoreListLength; ++_j) {_o.ChangeWonderStoreList.Add(this.ChangeWonderStoreList(_j).HasValue ? this.ChangeWonderStoreList(_j).Value.UnPack() : null);}
    _o.ChangeWeaponCategoryList = new List<Lobby.WeaponCategoryDataT>();
    for (var _j = 0; _j < this.ChangeWeaponCategoryListLength; ++_j) {_o.ChangeWeaponCategoryList.Add(this.ChangeWeaponCategoryList(_j).HasValue ? this.ChangeWeaponCategoryList(_j).Value.UnPack() : null);}
    _o.ChangeWonderCube = this.ChangeWonderCube.HasValue ? this.ChangeWonderCube.Value.UnPack() : null;
    _o.DeleteAllAttribute = this.DeleteAllAttribute;
    _o.DeleteAllPet = this.DeleteAllPet;
    _o.DeleteAllCollection = this.DeleteAllCollection;
    _o.DeleteAllWonderCube = this.DeleteAllWonderCube;
  }
  public static Offset<Lobby.SA_CheatKey> Pack(FlatBufferBuilder builder, SA_CheatKeyT _o) {
    if (_o == null) return default(Offset<Lobby.SA_CheatKey>);
    var _CheatKey = _o.CheatKey == null ? default(StringOffset) : builder.CreateString(_o.CheatKey);
    var _ChangeAchevementList = default(VectorOffset);
    if (_o.ChangeAchevementList != null) {
      StartChangeAchevementListVector(builder, _o.ChangeAchevementList.Count);
      for (var _j = _o.ChangeAchevementList.Count - 1; _j >= 0; --_j) { Lobby.AchievementData.Pack(builder, _o.ChangeAchevementList[_j]); }
      _ChangeAchevementList = builder.EndVector();
    }
    var _ChangeArtifactList = default(VectorOffset);
    if (_o.ChangeArtifactList != null) {
      StartChangeArtifactListVector(builder, _o.ChangeArtifactList.Count);
      for (var _j = _o.ChangeArtifactList.Count - 1; _j >= 0; --_j) { Lobby.ArtifactData.Pack(builder, _o.ChangeArtifactList[_j]); }
      _ChangeArtifactList = builder.EndVector();
    }
    var _ChangeAssetList = default(VectorOffset);
    if (_o.ChangeAssetList != null) {
      StartChangeAssetListVector(builder, _o.ChangeAssetList.Count);
      for (var _j = _o.ChangeAssetList.Count - 1; _j >= 0; --_j) { Lobby.AssetData.Pack(builder, _o.ChangeAssetList[_j]); }
      _ChangeAssetList = builder.EndVector();
    }
    var _ChangeAttributeList = default(VectorOffset);
    if (_o.ChangeAttributeList != null) {
      StartChangeAttributeListVector(builder, _o.ChangeAttributeList.Count);
      for (var _j = _o.ChangeAttributeList.Count - 1; _j >= 0; --_j) { Lobby.AttributeData.Pack(builder, _o.ChangeAttributeList[_j]); }
      _ChangeAttributeList = builder.EndVector();
    }
    var _ChangeCollectionList = default(VectorOffset);
    if (_o.ChangeCollectionList != null) {
      StartChangeCollectionListVector(builder, _o.ChangeCollectionList.Count);
      for (var _j = _o.ChangeCollectionList.Count - 1; _j >= 0; --_j) { Lobby.CollectionData.Pack(builder, _o.ChangeCollectionList[_j]); }
      _ChangeCollectionList = builder.EndVector();
    }
    var _ChangeEntitlementList = default(VectorOffset);
    if (_o.ChangeEntitlementList != null) {
      var __ChangeEntitlementList = _o.ChangeEntitlementList.ToArray();
      _ChangeEntitlementList = CreateChangeEntitlementListVector(builder, __ChangeEntitlementList);
    }
    var _ChangeExpressionList = default(VectorOffset);
    if (_o.ChangeExpressionList != null) {
      StartChangeExpressionListVector(builder, _o.ChangeExpressionList.Count);
      for (var _j = _o.ChangeExpressionList.Count - 1; _j >= 0; --_j) { Lobby.ExpressionData.Pack(builder, _o.ChangeExpressionList[_j]); }
      _ChangeExpressionList = builder.EndVector();
    }
    var _ChangeExpressionPresetList = default(VectorOffset);
    if (_o.ChangeExpressionPresetList != null) {
      var __ChangeExpressionPresetList = new Offset<Lobby.ExpressionPresetData>[_o.ChangeExpressionPresetList.Count];
      for (var _j = 0; _j < __ChangeExpressionPresetList.Length; ++_j) { __ChangeExpressionPresetList[_j] = Lobby.ExpressionPresetData.Pack(builder, _o.ChangeExpressionPresetList[_j]); }
      _ChangeExpressionPresetList = CreateChangeExpressionPresetListVector(builder, __ChangeExpressionPresetList);
    }
    var _ChangeHeroList = default(VectorOffset);
    if (_o.ChangeHeroList != null) {
      var __ChangeHeroList = new Offset<Lobby.HeroData>[_o.ChangeHeroList.Count];
      for (var _j = 0; _j < __ChangeHeroList.Length; ++_j) { __ChangeHeroList[_j] = Lobby.HeroData.Pack(builder, _o.ChangeHeroList[_j]); }
      _ChangeHeroList = CreateChangeHeroListVector(builder, __ChangeHeroList);
    }
    var _ChangeHeroSkinList = default(VectorOffset);
    if (_o.ChangeHeroSkinList != null) {
      var __ChangeHeroSkinList = new Offset<Lobby.HeroSkinData>[_o.ChangeHeroSkinList.Count];
      for (var _j = 0; _j < __ChangeHeroSkinList.Length; ++_j) { __ChangeHeroSkinList[_j] = Lobby.HeroSkinData.Pack(builder, _o.ChangeHeroSkinList[_j]); }
      _ChangeHeroSkinList = CreateChangeHeroSkinListVector(builder, __ChangeHeroSkinList);
    }
    var _ChangeItemList = default(VectorOffset);
    if (_o.ChangeItemList != null) {
      StartChangeItemListVector(builder, _o.ChangeItemList.Count);
      for (var _j = _o.ChangeItemList.Count - 1; _j >= 0; --_j) { Lobby.ItemData.Pack(builder, _o.ChangeItemList[_j]); }
      _ChangeItemList = builder.EndVector();
    }
    var _ChangePetList = default(VectorOffset);
    if (_o.ChangePetList != null) {
      var __ChangePetList = new Offset<Lobby.PetData>[_o.ChangePetList.Count];
      for (var _j = 0; _j < __ChangePetList.Length; ++_j) { __ChangePetList[_j] = Lobby.PetData.Pack(builder, _o.ChangePetList[_j]); }
      _ChangePetList = CreateChangePetListVector(builder, __ChangePetList);
    }
    var _ChangeProfileList = default(VectorOffset);
    if (_o.ChangeProfileList != null) {
      StartChangeProfileListVector(builder, _o.ChangeProfileList.Count);
      for (var _j = _o.ChangeProfileList.Count - 1; _j >= 0; --_j) { Lobby.ProfileData.Pack(builder, _o.ChangeProfileList[_j]); }
      _ChangeProfileList = builder.EndVector();
    }
    var _ChangeSeasonPassList = default(VectorOffset);
    if (_o.ChangeSeasonPassList != null) {
      var __ChangeSeasonPassList = new Offset<Lobby.SeasonPassData>[_o.ChangeSeasonPassList.Count];
      for (var _j = 0; _j < __ChangeSeasonPassList.Length; ++_j) { __ChangeSeasonPassList[_j] = Lobby.SeasonPassData.Pack(builder, _o.ChangeSeasonPassList[_j]); }
      _ChangeSeasonPassList = CreateChangeSeasonPassListVector(builder, __ChangeSeasonPassList);
    }
    var _ChangeMissionList = default(VectorOffset);
    if (_o.ChangeMissionList != null) {
      StartChangeMissionListVector(builder, _o.ChangeMissionList.Count);
      for (var _j = _o.ChangeMissionList.Count - 1; _j >= 0; --_j) { Lobby.MissionData.Pack(builder, _o.ChangeMissionList[_j]); }
      _ChangeMissionList = builder.EndVector();
    }
    var _ChangeUserAccount = _o.ChangeUserAccount == null ? default(Offset<Lobby.UserAccountData>) : Lobby.UserAccountData.Pack(builder, _o.ChangeUserAccount);
    var _ChangeGuideMissionList = default(VectorOffset);
    if (_o.ChangeGuideMissionList != null) {
      StartChangeGuideMissionListVector(builder, _o.ChangeGuideMissionList.Count);
      for (var _j = _o.ChangeGuideMissionList.Count - 1; _j >= 0; --_j) { Lobby.GuideMissionData.Pack(builder, _o.ChangeGuideMissionList[_j]); }
      _ChangeGuideMissionList = builder.EndVector();
    }
    var _ChangeWonderStoreList = default(VectorOffset);
    if (_o.ChangeWonderStoreList != null) {
      var __ChangeWonderStoreList = new Offset<Lobby.WonderStoreData>[_o.ChangeWonderStoreList.Count];
      for (var _j = 0; _j < __ChangeWonderStoreList.Length; ++_j) { __ChangeWonderStoreList[_j] = Lobby.WonderStoreData.Pack(builder, _o.ChangeWonderStoreList[_j]); }
      _ChangeWonderStoreList = CreateChangeWonderStoreListVector(builder, __ChangeWonderStoreList);
    }
    var _ChangeWeaponCategoryList = default(VectorOffset);
    if (_o.ChangeWeaponCategoryList != null) {
      StartChangeWeaponCategoryListVector(builder, _o.ChangeWeaponCategoryList.Count);
      for (var _j = _o.ChangeWeaponCategoryList.Count - 1; _j >= 0; --_j) { Lobby.WeaponCategoryData.Pack(builder, _o.ChangeWeaponCategoryList[_j]); }
      _ChangeWeaponCategoryList = builder.EndVector();
    }
    return CreateSA_CheatKey(
      builder,
      _CheatKey,
      _ChangeAchevementList,
      _ChangeArtifactList,
      _ChangeAssetList,
      _ChangeAttributeList,
      _ChangeCollectionList,
      _ChangeEntitlementList,
      _ChangeExpressionList,
      _ChangeExpressionPresetList,
      _ChangeHeroList,
      _ChangeHeroSkinList,
      _ChangeItemList,
      _ChangePetList,
      _ChangeProfileList,
      _ChangeSeasonPassList,
      _ChangeMissionList,
      _ChangeUserAccount,
      _ChangeGuideMissionList,
      _ChangeWonderStoreList,
      _ChangeWeaponCategoryList,
      _o.ChangeWonderCube,
      _o.DeleteAllAttribute,
      _o.DeleteAllPet,
      _o.DeleteAllCollection,
      _o.DeleteAllWonderCube);
  }
}

public class SA_CheatKeyT
{
  public string CheatKey { get; set; }
  public List<Lobby.AchievementDataT> ChangeAchevementList { get; set; }
  public List<Lobby.ArtifactDataT> ChangeArtifactList { get; set; }
  public List<Lobby.AssetDataT> ChangeAssetList { get; set; }
  public List<Lobby.AttributeDataT> ChangeAttributeList { get; set; }
  public List<Lobby.CollectionDataT> ChangeCollectionList { get; set; }
  public List<int> ChangeEntitlementList { get; set; }
  public List<Lobby.ExpressionDataT> ChangeExpressionList { get; set; }
  public List<Lobby.ExpressionPresetDataT> ChangeExpressionPresetList { get; set; }
  public List<Lobby.HeroDataT> ChangeHeroList { get; set; }
  public List<Lobby.HeroSkinDataT> ChangeHeroSkinList { get; set; }
  public List<Lobby.ItemDataT> ChangeItemList { get; set; }
  public List<Lobby.PetDataT> ChangePetList { get; set; }
  public List<Lobby.ProfileDataT> ChangeProfileList { get; set; }
  public List<Lobby.SeasonPassDataT> ChangeSeasonPassList { get; set; }
  public List<Lobby.MissionDataT> ChangeMissionList { get; set; }
  public Lobby.UserAccountDataT ChangeUserAccount { get; set; }
  public List<Lobby.GuideMissionDataT> ChangeGuideMissionList { get; set; }
  public List<Lobby.WonderStoreDataT> ChangeWonderStoreList { get; set; }
  public List<Lobby.WeaponCategoryDataT> ChangeWeaponCategoryList { get; set; }
  public Lobby.WonderCubeDataT ChangeWonderCube { get; set; }
  public bool DeleteAllAttribute { get; set; }
  public bool DeleteAllPet { get; set; }
  public bool DeleteAllCollection { get; set; }
  public bool DeleteAllWonderCube { get; set; }

  public SA_CheatKeyT() {
    this.CheatKey = null;
    this.ChangeAchevementList = null;
    this.ChangeArtifactList = null;
    this.ChangeAssetList = null;
    this.ChangeAttributeList = null;
    this.ChangeCollectionList = null;
    this.ChangeEntitlementList = null;
    this.ChangeExpressionList = null;
    this.ChangeExpressionPresetList = null;
    this.ChangeHeroList = null;
    this.ChangeHeroSkinList = null;
    this.ChangeItemList = null;
    this.ChangePetList = null;
    this.ChangeProfileList = null;
    this.ChangeSeasonPassList = null;
    this.ChangeMissionList = null;
    this.ChangeUserAccount = null;
    this.ChangeGuideMissionList = null;
    this.ChangeWonderStoreList = null;
    this.ChangeWeaponCategoryList = null;
    this.ChangeWonderCube = new Lobby.WonderCubeDataT();
    this.DeleteAllAttribute = false;
    this.DeleteAllPet = false;
    this.DeleteAllCollection = false;
    this.DeleteAllWonderCube = false;
  }
}


}
