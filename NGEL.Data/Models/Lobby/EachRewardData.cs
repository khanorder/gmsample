// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EachRewardData : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public EachRewardData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.ERewardType RewardType { get { return (Lobby.ERewardType)__p.bb.Get(__p.bb_pos + 0); } }
  public int RewardID { get { return __p.bb.GetInt(__p.bb_pos + 4); } }
  public int RewardCount { get { return __p.bb.GetInt(__p.bb_pos + 8); } }
  public Lobby.EUserAssetType RefundAssetType { get { return (Lobby.EUserAssetType)__p.bb.GetUint(__p.bb_pos + 12); } }
  public int RefundAssetCount { get { return __p.bb.GetInt(__p.bb_pos + 16); } }

  public static Offset<Lobby.EachRewardData> CreateEachRewardData(FlatBufferBuilder builder, Lobby.ERewardType RewardType, int RewardID, int RewardCount, Lobby.EUserAssetType RefundAssetType, int RefundAssetCount) {
    builder.Prep(4, 20);
    builder.PutInt(RefundAssetCount);
    builder.PutUint((uint)RefundAssetType);
    builder.PutInt(RewardCount);
    builder.PutInt(RewardID);
    builder.Pad(3);
    builder.PutByte((byte)RewardType);
    return new Offset<Lobby.EachRewardData>(builder.Offset);
  }
  public EachRewardDataT UnPack() {
    var _o = new EachRewardDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EachRewardDataT _o) {
    _o.RewardType = this.RewardType;
    _o.RewardID = this.RewardID;
    _o.RewardCount = this.RewardCount;
    _o.RefundAssetType = this.RefundAssetType;
    _o.RefundAssetCount = this.RefundAssetCount;
  }
  public static Offset<Lobby.EachRewardData> Pack(FlatBufferBuilder builder, EachRewardDataT _o) {
    if (_o == null) return default(Offset<Lobby.EachRewardData>);
    return CreateEachRewardData(
      builder,
      _o.RewardType,
      _o.RewardID,
      _o.RewardCount,
      _o.RefundAssetType,
      _o.RefundAssetCount);
  }
}

public class EachRewardDataT
{
  public Lobby.ERewardType RewardType { get; set; }
  public int RewardID { get; set; }
  public int RewardCount { get; set; }
  public Lobby.EUserAssetType RefundAssetType { get; set; }
  public int RefundAssetCount { get; set; }

  public EachRewardDataT() {
    this.RewardType = Lobby.ERewardType.None;
    this.RewardID = 0;
    this.RewardCount = 0;
    this.RefundAssetType = Lobby.EUserAssetType.None;
    this.RefundAssetCount = 0;
  }
}


}
