// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_CheatSetUserAccount : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_CheatSetUserAccount GetRootAsCQ_CheatSetUserAccount(ByteBuffer _bb) { return GetRootAsCQ_CheatSetUserAccount(_bb, new CQ_CheatSetUserAccount()); }
  public static CQ_CheatSetUserAccount GetRootAsCQ_CheatSetUserAccount(ByteBuffer _bb, CQ_CheatSetUserAccount obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_CheatSetUserAccount __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int RanchLevel { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }
  public int FarmLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }
  public int MineLevel { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }

  public static Offset<Lobby.CQ_CheatSetUserAccount> CreateCQ_CheatSetUserAccount(FlatBufferBuilder builder,
      int RanchLevel = -1,
      int FarmLevel = -1,
      int MineLevel = -1) {
    builder.StartTable(3);
    CQ_CheatSetUserAccount.AddMineLevel(builder, MineLevel);
    CQ_CheatSetUserAccount.AddFarmLevel(builder, FarmLevel);
    CQ_CheatSetUserAccount.AddRanchLevel(builder, RanchLevel);
    return CQ_CheatSetUserAccount.EndCQ_CheatSetUserAccount(builder);
  }

  public static void StartCQ_CheatSetUserAccount(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddRanchLevel(FlatBufferBuilder builder, int RanchLevel) { builder.AddInt(0, RanchLevel, -1); }
  public static void AddFarmLevel(FlatBufferBuilder builder, int FarmLevel) { builder.AddInt(1, FarmLevel, -1); }
  public static void AddMineLevel(FlatBufferBuilder builder, int MineLevel) { builder.AddInt(2, MineLevel, -1); }
  public static Offset<Lobby.CQ_CheatSetUserAccount> EndCQ_CheatSetUserAccount(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_CheatSetUserAccount>(o);
  }
  public CQ_CheatSetUserAccountT UnPack() {
    var _o = new CQ_CheatSetUserAccountT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_CheatSetUserAccountT _o) {
    _o.RanchLevel = this.RanchLevel;
    _o.FarmLevel = this.FarmLevel;
    _o.MineLevel = this.MineLevel;
  }
  public static Offset<Lobby.CQ_CheatSetUserAccount> Pack(FlatBufferBuilder builder, CQ_CheatSetUserAccountT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_CheatSetUserAccount>);
    return CreateCQ_CheatSetUserAccount(
      builder,
      _o.RanchLevel,
      _o.FarmLevel,
      _o.MineLevel);
  }
}

public class CQ_CheatSetUserAccountT
{
  public int RanchLevel { get; set; }
  public int FarmLevel { get; set; }
  public int MineLevel { get; set; }

  public CQ_CheatSetUserAccountT() {
    this.RanchLevel = -1;
    this.FarmLevel = -1;
    this.MineLevel = -1;
  }
}


}
