// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_ChattingMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_ChattingMessage GetRootAsSN_ChattingMessage(ByteBuffer _bb) { return GetRootAsSN_ChattingMessage(_bb, new SN_ChattingMessage()); }
  public static SN_ChattingMessage GetRootAsSN_ChattingMessage(ByteBuffer _bb, SN_ChattingMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_ChattingMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string NickName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNickNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNickNameArray() { return __p.__vector_as_array<byte>(6); }
  public int ProfileIconID { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Lobby.EChatType ChatType { get { int o = __p.__offset(10); return o != 0 ? (Lobby.EChatType)__p.bb.Get(o + __p.bb_pos) : Lobby.EChatType.None; } }
  public string Message { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(12); }
  public string Timestamp { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimestampBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetTimestampBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetTimestampArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<Lobby.SN_ChattingMessage> CreateSN_ChattingMessage(FlatBufferBuilder builder,
      int UID = 0,
      StringOffset NickNameOffset = default(StringOffset),
      int ProfileIconID = 0,
      Lobby.EChatType ChatType = Lobby.EChatType.None,
      StringOffset MessageOffset = default(StringOffset),
      StringOffset TimestampOffset = default(StringOffset)) {
    builder.StartTable(6);
    SN_ChattingMessage.AddTimestamp(builder, TimestampOffset);
    SN_ChattingMessage.AddMessage(builder, MessageOffset);
    SN_ChattingMessage.AddProfileIconID(builder, ProfileIconID);
    SN_ChattingMessage.AddNickName(builder, NickNameOffset);
    SN_ChattingMessage.AddUID(builder, UID);
    SN_ChattingMessage.AddChatType(builder, ChatType);
    return SN_ChattingMessage.EndSN_ChattingMessage(builder);
  }

  public static void StartSN_ChattingMessage(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(0, UID, 0); }
  public static void AddNickName(FlatBufferBuilder builder, StringOffset NickNameOffset) { builder.AddOffset(1, NickNameOffset.Value, 0); }
  public static void AddProfileIconID(FlatBufferBuilder builder, int ProfileIconID) { builder.AddInt(2, ProfileIconID, 0); }
  public static void AddChatType(FlatBufferBuilder builder, Lobby.EChatType ChatType) { builder.AddByte(3, (byte)ChatType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset MessageOffset) { builder.AddOffset(4, MessageOffset.Value, 0); }
  public static void AddTimestamp(FlatBufferBuilder builder, StringOffset TimestampOffset) { builder.AddOffset(5, TimestampOffset.Value, 0); }
  public static Offset<Lobby.SN_ChattingMessage> EndSN_ChattingMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_ChattingMessage>(o);
  }
  public SN_ChattingMessageT UnPack() {
    var _o = new SN_ChattingMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_ChattingMessageT _o) {
    _o.UID = this.UID;
    _o.NickName = this.NickName;
    _o.ProfileIconID = this.ProfileIconID;
    _o.ChatType = this.ChatType;
    _o.Message = this.Message;
    _o.Timestamp = this.Timestamp;
  }
  public static Offset<Lobby.SN_ChattingMessage> Pack(FlatBufferBuilder builder, SN_ChattingMessageT _o) {
    if (_o == null) return default(Offset<Lobby.SN_ChattingMessage>);
    var _NickName = _o.NickName == null ? default(StringOffset) : builder.CreateString(_o.NickName);
    var _Message = _o.Message == null ? default(StringOffset) : builder.CreateString(_o.Message);
    var _Timestamp = _o.Timestamp == null ? default(StringOffset) : builder.CreateString(_o.Timestamp);
    return CreateSN_ChattingMessage(
      builder,
      _o.UID,
      _NickName,
      _o.ProfileIconID,
      _o.ChatType,
      _Message,
      _Timestamp);
  }
}

public class SN_ChattingMessageT
{
  public int UID { get; set; }
  public string NickName { get; set; }
  public int ProfileIconID { get; set; }
  public Lobby.EChatType ChatType { get; set; }
  public string Message { get; set; }
  public string Timestamp { get; set; }

  public SN_ChattingMessageT() {
    this.UID = 0;
    this.NickName = null;
    this.ProfileIconID = 0;
    this.ChatType = Lobby.EChatType.None;
    this.Message = null;
    this.Timestamp = null;
  }
}


}
