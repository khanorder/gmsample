// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_NicePlayer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_NicePlayer GetRootAsSA_NicePlayer(ByteBuffer _bb) { return GetRootAsSA_NicePlayer(_bb, new SA_NicePlayer()); }
  public static SA_NicePlayer GetRootAsSA_NicePlayer(ByteBuffer _bb, SA_NicePlayer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_NicePlayer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int NiceLevel { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NicePoint { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsLevelUp { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Lobby.SA_NicePlayer> CreateSA_NicePlayer(FlatBufferBuilder builder,
      int NiceLevel = 0,
      int NicePoint = 0,
      bool IsLevelUp = false) {
    builder.StartTable(3);
    SA_NicePlayer.AddNicePoint(builder, NicePoint);
    SA_NicePlayer.AddNiceLevel(builder, NiceLevel);
    SA_NicePlayer.AddIsLevelUp(builder, IsLevelUp);
    return SA_NicePlayer.EndSA_NicePlayer(builder);
  }

  public static void StartSA_NicePlayer(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddNiceLevel(FlatBufferBuilder builder, int NiceLevel) { builder.AddInt(0, NiceLevel, 0); }
  public static void AddNicePoint(FlatBufferBuilder builder, int NicePoint) { builder.AddInt(1, NicePoint, 0); }
  public static void AddIsLevelUp(FlatBufferBuilder builder, bool IsLevelUp) { builder.AddBool(2, IsLevelUp, false); }
  public static Offset<Lobby.SA_NicePlayer> EndSA_NicePlayer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_NicePlayer>(o);
  }
  public SA_NicePlayerT UnPack() {
    var _o = new SA_NicePlayerT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_NicePlayerT _o) {
    _o.NiceLevel = this.NiceLevel;
    _o.NicePoint = this.NicePoint;
    _o.IsLevelUp = this.IsLevelUp;
  }
  public static Offset<Lobby.SA_NicePlayer> Pack(FlatBufferBuilder builder, SA_NicePlayerT _o) {
    if (_o == null) return default(Offset<Lobby.SA_NicePlayer>);
    return CreateSA_NicePlayer(
      builder,
      _o.NiceLevel,
      _o.NicePoint,
      _o.IsLevelUp);
  }
}

public class SA_NicePlayerT
{
  public int NiceLevel { get; set; }
  public int NicePoint { get; set; }
  public bool IsLevelUp { get; set; }

  public SA_NicePlayerT() {
    this.NiceLevel = 0;
    this.NicePoint = 0;
    this.IsLevelUp = false;
  }
}


}
