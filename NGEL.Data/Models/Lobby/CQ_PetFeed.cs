// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_PetFeed : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_PetFeed GetRootAsCQ_PetFeed(ByteBuffer _bb) { return GetRootAsCQ_PetFeed(_bb, new CQ_PetFeed()); }
  public static CQ_PetFeed GetRootAsCQ_PetFeed(ByteBuffer _bb, CQ_PetFeed obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_PetFeed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long PetUniqueID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Lobby.ItemData? FoodItemList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.ItemData?)(new Lobby.ItemData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int FoodItemListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.CQ_PetFeed> CreateCQ_PetFeed(FlatBufferBuilder builder,
      long PetUniqueID = 0,
      VectorOffset FoodItemListOffset = default(VectorOffset)) {
    builder.StartTable(2);
    CQ_PetFeed.AddPetUniqueID(builder, PetUniqueID);
    CQ_PetFeed.AddFoodItemList(builder, FoodItemListOffset);
    return CQ_PetFeed.EndCQ_PetFeed(builder);
  }

  public static void StartCQ_PetFeed(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPetUniqueID(FlatBufferBuilder builder, long PetUniqueID) { builder.AddLong(0, PetUniqueID, 0); }
  public static void AddFoodItemList(FlatBufferBuilder builder, VectorOffset FoodItemListOffset) { builder.AddOffset(1, FoodItemListOffset.Value, 0); }
  public static void StartFoodItemListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static Offset<Lobby.CQ_PetFeed> EndCQ_PetFeed(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_PetFeed>(o);
  }
  public CQ_PetFeedT UnPack() {
    var _o = new CQ_PetFeedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_PetFeedT _o) {
    _o.PetUniqueID = this.PetUniqueID;
    _o.FoodItemList = new List<Lobby.ItemDataT>();
    for (var _j = 0; _j < this.FoodItemListLength; ++_j) {_o.FoodItemList.Add(this.FoodItemList(_j).HasValue ? this.FoodItemList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.CQ_PetFeed> Pack(FlatBufferBuilder builder, CQ_PetFeedT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_PetFeed>);
    var _FoodItemList = default(VectorOffset);
    if (_o.FoodItemList != null) {
      StartFoodItemListVector(builder, _o.FoodItemList.Count);
      for (var _j = _o.FoodItemList.Count - 1; _j >= 0; --_j) { Lobby.ItemData.Pack(builder, _o.FoodItemList[_j]); }
      _FoodItemList = builder.EndVector();
    }
    return CreateCQ_PetFeed(
      builder,
      _o.PetUniqueID,
      _FoodItemList);
  }
}

public class CQ_PetFeedT
{
  public long PetUniqueID { get; set; }
  public List<Lobby.ItemDataT> FoodItemList { get; set; }

  public CQ_PetFeedT() {
    this.PetUniqueID = 0;
    this.FoodItemList = null;
  }
}


}
