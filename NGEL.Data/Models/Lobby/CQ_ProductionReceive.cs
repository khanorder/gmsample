// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_ProductionReceive : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_ProductionReceive GetRootAsCQ_ProductionReceive(ByteBuffer _bb) { return GetRootAsCQ_ProductionReceive(_bb, new CQ_ProductionReceive()); }
  public static CQ_ProductionReceive GetRootAsCQ_ProductionReceive(ByteBuffer _bb, CQ_ProductionReceive obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_ProductionReceive __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EProductionType ProductionType { get { int o = __p.__offset(4); return o != 0 ? (Lobby.EProductionType)__p.bb.Get(o + __p.bb_pos) : Lobby.EProductionType.None; } }
  public int ProductionLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.CQ_ProductionReceive> CreateCQ_ProductionReceive(FlatBufferBuilder builder,
      Lobby.EProductionType ProductionType = Lobby.EProductionType.None,
      int ProductionLevel = 0) {
    builder.StartTable(2);
    CQ_ProductionReceive.AddProductionLevel(builder, ProductionLevel);
    CQ_ProductionReceive.AddProductionType(builder, ProductionType);
    return CQ_ProductionReceive.EndCQ_ProductionReceive(builder);
  }

  public static void StartCQ_ProductionReceive(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddProductionType(FlatBufferBuilder builder, Lobby.EProductionType ProductionType) { builder.AddByte(0, (byte)ProductionType, 0); }
  public static void AddProductionLevel(FlatBufferBuilder builder, int ProductionLevel) { builder.AddInt(1, ProductionLevel, 0); }
  public static Offset<Lobby.CQ_ProductionReceive> EndCQ_ProductionReceive(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_ProductionReceive>(o);
  }
  public CQ_ProductionReceiveT UnPack() {
    var _o = new CQ_ProductionReceiveT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_ProductionReceiveT _o) {
    _o.ProductionType = this.ProductionType;
    _o.ProductionLevel = this.ProductionLevel;
  }
  public static Offset<Lobby.CQ_ProductionReceive> Pack(FlatBufferBuilder builder, CQ_ProductionReceiveT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_ProductionReceive>);
    return CreateCQ_ProductionReceive(
      builder,
      _o.ProductionType,
      _o.ProductionLevel);
  }
}

public class CQ_ProductionReceiveT
{
  public Lobby.EProductionType ProductionType { get; set; }
  public int ProductionLevel { get; set; }

  public CQ_ProductionReceiveT() {
    this.ProductionType = Lobby.EProductionType.None;
    this.ProductionLevel = 0;
  }
}


}
