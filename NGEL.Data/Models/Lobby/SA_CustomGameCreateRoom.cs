// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_CustomGameCreateRoom : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_CustomGameCreateRoom GetRootAsSA_CustomGameCreateRoom(ByteBuffer _bb) { return GetRootAsSA_CustomGameCreateRoom(_bb, new SA_CustomGameCreateRoom()); }
  public static SA_CustomGameCreateRoom GetRootAsSA_CustomGameCreateRoom(ByteBuffer _bb, SA_CustomGameCreateRoom obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_CustomGameCreateRoom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string RoomID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoomIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetRoomIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRoomIDArray() { return __p.__vector_as_array<byte>(4); }
  public int MatchingTableID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public sbyte ActiveSlotNoList(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int ActiveSlotNoListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetActiveSlotNoListBytes() { return __p.__vector_as_span<sbyte>(8, 1); }
#else
  public ArraySegment<byte>? GetActiveSlotNoListBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public sbyte[] GetActiveSlotNoListArray() { return __p.__vector_as_array<sbyte>(8); }
  public bool IsFollowOn { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Lobby.CustomGameMemberInfo? MasterInfo { get { int o = __p.__offset(12); return o != 0 ? (Lobby.CustomGameMemberInfo?)(new Lobby.CustomGameMemberInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SA_CustomGameCreateRoom> CreateSA_CustomGameCreateRoom(FlatBufferBuilder builder,
      StringOffset RoomIDOffset = default(StringOffset),
      int MatchingTableID = 0,
      VectorOffset ActiveSlotNoListOffset = default(VectorOffset),
      bool IsFollowOn = false,
      Offset<Lobby.CustomGameMemberInfo> MasterInfoOffset = default(Offset<Lobby.CustomGameMemberInfo>)) {
    builder.StartTable(5);
    SA_CustomGameCreateRoom.AddMasterInfo(builder, MasterInfoOffset);
    SA_CustomGameCreateRoom.AddActiveSlotNoList(builder, ActiveSlotNoListOffset);
    SA_CustomGameCreateRoom.AddMatchingTableID(builder, MatchingTableID);
    SA_CustomGameCreateRoom.AddRoomID(builder, RoomIDOffset);
    SA_CustomGameCreateRoom.AddIsFollowOn(builder, IsFollowOn);
    return SA_CustomGameCreateRoom.EndSA_CustomGameCreateRoom(builder);
  }

  public static void StartSA_CustomGameCreateRoom(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddRoomID(FlatBufferBuilder builder, StringOffset RoomIDOffset) { builder.AddOffset(0, RoomIDOffset.Value, 0); }
  public static void AddMatchingTableID(FlatBufferBuilder builder, int MatchingTableID) { builder.AddInt(1, MatchingTableID, 0); }
  public static void AddActiveSlotNoList(FlatBufferBuilder builder, VectorOffset ActiveSlotNoListOffset) { builder.AddOffset(2, ActiveSlotNoListOffset.Value, 0); }
  public static VectorOffset CreateActiveSlotNoListVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateActiveSlotNoListVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateActiveSlotNoListVectorBlock(FlatBufferBuilder builder, ArraySegment<sbyte> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateActiveSlotNoListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<sbyte>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartActiveSlotNoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static void AddIsFollowOn(FlatBufferBuilder builder, bool IsFollowOn) { builder.AddBool(3, IsFollowOn, false); }
  public static void AddMasterInfo(FlatBufferBuilder builder, Offset<Lobby.CustomGameMemberInfo> MasterInfoOffset) { builder.AddOffset(4, MasterInfoOffset.Value, 0); }
  public static Offset<Lobby.SA_CustomGameCreateRoom> EndSA_CustomGameCreateRoom(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_CustomGameCreateRoom>(o);
  }
  public SA_CustomGameCreateRoomT UnPack() {
    var _o = new SA_CustomGameCreateRoomT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_CustomGameCreateRoomT _o) {
    _o.RoomID = this.RoomID;
    _o.MatchingTableID = this.MatchingTableID;
    _o.ActiveSlotNoList = new List<sbyte>();
    for (var _j = 0; _j < this.ActiveSlotNoListLength; ++_j) {_o.ActiveSlotNoList.Add(this.ActiveSlotNoList(_j));}
    _o.IsFollowOn = this.IsFollowOn;
    _o.MasterInfo = this.MasterInfo.HasValue ? this.MasterInfo.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_CustomGameCreateRoom> Pack(FlatBufferBuilder builder, SA_CustomGameCreateRoomT _o) {
    if (_o == null) return default(Offset<Lobby.SA_CustomGameCreateRoom>);
    var _RoomID = _o.RoomID == null ? default(StringOffset) : builder.CreateString(_o.RoomID);
    var _ActiveSlotNoList = default(VectorOffset);
    if (_o.ActiveSlotNoList != null) {
      var __ActiveSlotNoList = _o.ActiveSlotNoList.ToArray();
      _ActiveSlotNoList = CreateActiveSlotNoListVector(builder, __ActiveSlotNoList);
    }
    var _MasterInfo = _o.MasterInfo == null ? default(Offset<Lobby.CustomGameMemberInfo>) : Lobby.CustomGameMemberInfo.Pack(builder, _o.MasterInfo);
    return CreateSA_CustomGameCreateRoom(
      builder,
      _RoomID,
      _o.MatchingTableID,
      _ActiveSlotNoList,
      _o.IsFollowOn,
      _MasterInfo);
  }
}

public class SA_CustomGameCreateRoomT
{
  public string RoomID { get; set; }
  public int MatchingTableID { get; set; }
  public List<sbyte> ActiveSlotNoList { get; set; }
  public bool IsFollowOn { get; set; }
  public Lobby.CustomGameMemberInfoT MasterInfo { get; set; }

  public SA_CustomGameCreateRoomT() {
    this.RoomID = null;
    this.MatchingTableID = 0;
    this.ActiveSlotNoList = null;
    this.IsFollowOn = false;
    this.MasterInfo = null;
  }
}


}
