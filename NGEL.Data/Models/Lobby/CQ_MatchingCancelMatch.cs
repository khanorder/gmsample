// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_MatchingCancelMatch : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_MatchingCancelMatch GetRootAsCQ_MatchingCancelMatch(ByteBuffer _bb) { return GetRootAsCQ_MatchingCancelMatch(_bb, new CQ_MatchingCancelMatch()); }
  public static CQ_MatchingCancelMatch GetRootAsCQ_MatchingCancelMatch(ByteBuffer _bb, CQ_MatchingCancelMatch obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_MatchingCancelMatch __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MatchingTableID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string MatchTicket { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMatchTicketBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMatchTicketBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMatchTicketArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Lobby.CQ_MatchingCancelMatch> CreateCQ_MatchingCancelMatch(FlatBufferBuilder builder,
      int MatchingTableID = 0,
      StringOffset MatchTicketOffset = default(StringOffset)) {
    builder.StartTable(2);
    CQ_MatchingCancelMatch.AddMatchTicket(builder, MatchTicketOffset);
    CQ_MatchingCancelMatch.AddMatchingTableID(builder, MatchingTableID);
    return CQ_MatchingCancelMatch.EndCQ_MatchingCancelMatch(builder);
  }

  public static void StartCQ_MatchingCancelMatch(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMatchingTableID(FlatBufferBuilder builder, int MatchingTableID) { builder.AddInt(0, MatchingTableID, 0); }
  public static void AddMatchTicket(FlatBufferBuilder builder, StringOffset MatchTicketOffset) { builder.AddOffset(1, MatchTicketOffset.Value, 0); }
  public static Offset<Lobby.CQ_MatchingCancelMatch> EndCQ_MatchingCancelMatch(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_MatchingCancelMatch>(o);
  }
  public CQ_MatchingCancelMatchT UnPack() {
    var _o = new CQ_MatchingCancelMatchT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_MatchingCancelMatchT _o) {
    _o.MatchingTableID = this.MatchingTableID;
    _o.MatchTicket = this.MatchTicket;
  }
  public static Offset<Lobby.CQ_MatchingCancelMatch> Pack(FlatBufferBuilder builder, CQ_MatchingCancelMatchT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_MatchingCancelMatch>);
    var _MatchTicket = _o.MatchTicket == null ? default(StringOffset) : builder.CreateString(_o.MatchTicket);
    return CreateCQ_MatchingCancelMatch(
      builder,
      _o.MatchingTableID,
      _MatchTicket);
  }
}

public class CQ_MatchingCancelMatchT
{
  public int MatchingTableID { get; set; }
  public string MatchTicket { get; set; }

  public CQ_MatchingCancelMatchT() {
    this.MatchingTableID = 0;
    this.MatchTicket = null;
  }
}


}
