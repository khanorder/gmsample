// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_HeroAccessoryChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_HeroAccessoryChange GetRootAsSA_HeroAccessoryChange(ByteBuffer _bb) { return GetRootAsSA_HeroAccessoryChange(_bb, new SA_HeroAccessoryChange()); }
  public static SA_HeroAccessoryChange GetRootAsSA_HeroAccessoryChange(ByteBuffer _bb, SA_HeroAccessoryChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_HeroAccessoryChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.HeroData? Hero { get { int o = __p.__offset(4); return o != 0 ? (Lobby.HeroData?)(new Lobby.HeroData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SA_HeroAccessoryChange> CreateSA_HeroAccessoryChange(FlatBufferBuilder builder,
      Offset<Lobby.HeroData> HeroOffset = default(Offset<Lobby.HeroData>)) {
    builder.StartTable(1);
    SA_HeroAccessoryChange.AddHero(builder, HeroOffset);
    return SA_HeroAccessoryChange.EndSA_HeroAccessoryChange(builder);
  }

  public static void StartSA_HeroAccessoryChange(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddHero(FlatBufferBuilder builder, Offset<Lobby.HeroData> HeroOffset) { builder.AddOffset(0, HeroOffset.Value, 0); }
  public static Offset<Lobby.SA_HeroAccessoryChange> EndSA_HeroAccessoryChange(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_HeroAccessoryChange>(o);
  }
  public SA_HeroAccessoryChangeT UnPack() {
    var _o = new SA_HeroAccessoryChangeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_HeroAccessoryChangeT _o) {
    _o.Hero = this.Hero.HasValue ? this.Hero.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_HeroAccessoryChange> Pack(FlatBufferBuilder builder, SA_HeroAccessoryChangeT _o) {
    if (_o == null) return default(Offset<Lobby.SA_HeroAccessoryChange>);
    var _Hero = _o.Hero == null ? default(Offset<Lobby.HeroData>) : Lobby.HeroData.Pack(builder, _o.Hero);
    return CreateSA_HeroAccessoryChange(
      builder,
      _Hero);
  }
}

public class SA_HeroAccessoryChangeT
{
  public Lobby.HeroDataT Hero { get; set; }

  public SA_HeroAccessoryChangeT() {
    this.Hero = null;
  }
}


}
