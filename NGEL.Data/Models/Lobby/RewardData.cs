// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RewardData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static RewardData GetRootAsRewardData(ByteBuffer _bb) { return GetRootAsRewardData(_bb, new RewardData()); }
  public static RewardData GetRootAsRewardData(ByteBuffer _bb, RewardData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RewardData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.NewHeroData? NewHero { get { int o = __p.__offset(4); return o != 0 ? (Lobby.NewHeroData?)(new Lobby.NewHeroData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.HeroSkinData? ChangeHeroSkinList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.HeroSkinData?)(new Lobby.HeroSkinData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangeHeroSkinListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.AssetData? ChangeAssetList(int j) { int o = __p.__offset(8); return o != 0 ? (Lobby.AssetData?)(new Lobby.AssetData()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int ChangeAssetListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ItemData? ChangeItemList(int j) { int o = __p.__offset(10); return o != 0 ? (Lobby.ItemData?)(new Lobby.ItemData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeItemListLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ArtifactData? ChangeArtifactList(int j) { int o = __p.__offset(12); return o != 0 ? (Lobby.ArtifactData?)(new Lobby.ArtifactData()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int ChangeArtifactListLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ExpressionData? ChangeExpressionList(int j) { int o = __p.__offset(14); return o != 0 ? (Lobby.ExpressionData?)(new Lobby.ExpressionData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeExpressionListLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.ProfileData? ChangeProfileList(int j) { int o = __p.__offset(16); return o != 0 ? (Lobby.ProfileData?)(new Lobby.ProfileData()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int ChangeProfileListLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Lobby.EachRewardData? AllRewardList(int j) { int o = __p.__offset(18); return o != 0 ? (Lobby.EachRewardData?)(new Lobby.EachRewardData()).__assign(__p.__vector(o) + j * 20, __p.bb) : null; }
  public int AllRewardListLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.RewardData> CreateRewardData(FlatBufferBuilder builder,
      Offset<Lobby.NewHeroData> NewHeroOffset = default(Offset<Lobby.NewHeroData>),
      VectorOffset ChangeHeroSkinListOffset = default(VectorOffset),
      VectorOffset ChangeAssetListOffset = default(VectorOffset),
      VectorOffset ChangeItemListOffset = default(VectorOffset),
      VectorOffset ChangeArtifactListOffset = default(VectorOffset),
      VectorOffset ChangeExpressionListOffset = default(VectorOffset),
      VectorOffset ChangeProfileListOffset = default(VectorOffset),
      VectorOffset AllRewardListOffset = default(VectorOffset)) {
    builder.StartTable(8);
    RewardData.AddAllRewardList(builder, AllRewardListOffset);
    RewardData.AddChangeProfileList(builder, ChangeProfileListOffset);
    RewardData.AddChangeExpressionList(builder, ChangeExpressionListOffset);
    RewardData.AddChangeArtifactList(builder, ChangeArtifactListOffset);
    RewardData.AddChangeItemList(builder, ChangeItemListOffset);
    RewardData.AddChangeAssetList(builder, ChangeAssetListOffset);
    RewardData.AddChangeHeroSkinList(builder, ChangeHeroSkinListOffset);
    RewardData.AddNewHero(builder, NewHeroOffset);
    return RewardData.EndRewardData(builder);
  }

  public static void StartRewardData(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddNewHero(FlatBufferBuilder builder, Offset<Lobby.NewHeroData> NewHeroOffset) { builder.AddOffset(0, NewHeroOffset.Value, 0); }
  public static void AddChangeHeroSkinList(FlatBufferBuilder builder, VectorOffset ChangeHeroSkinListOffset) { builder.AddOffset(1, ChangeHeroSkinListOffset.Value, 0); }
  public static VectorOffset CreateChangeHeroSkinListVector(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.HeroSkinData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangeHeroSkinListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.HeroSkinData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangeHeroSkinListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeAssetList(FlatBufferBuilder builder, VectorOffset ChangeAssetListOffset) { builder.AddOffset(2, ChangeAssetListOffset.Value, 0); }
  public static void StartChangeAssetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static void AddChangeItemList(FlatBufferBuilder builder, VectorOffset ChangeItemListOffset) { builder.AddOffset(3, ChangeItemListOffset.Value, 0); }
  public static void StartChangeItemListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeArtifactList(FlatBufferBuilder builder, VectorOffset ChangeArtifactListOffset) { builder.AddOffset(4, ChangeArtifactListOffset.Value, 0); }
  public static void StartChangeArtifactListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 4); }
  public static void AddChangeExpressionList(FlatBufferBuilder builder, VectorOffset ChangeExpressionListOffset) { builder.AddOffset(5, ChangeExpressionListOffset.Value, 0); }
  public static void StartChangeExpressionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddChangeProfileList(FlatBufferBuilder builder, VectorOffset ChangeProfileListOffset) { builder.AddOffset(6, ChangeProfileListOffset.Value, 0); }
  public static void StartChangeProfileListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddAllRewardList(FlatBufferBuilder builder, VectorOffset AllRewardListOffset) { builder.AddOffset(7, AllRewardListOffset.Value, 0); }
  public static void StartAllRewardListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(20, numElems, 4); }
  public static Offset<Lobby.RewardData> EndRewardData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.RewardData>(o);
  }
  public RewardDataT UnPack() {
    var _o = new RewardDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RewardDataT _o) {
    _o.NewHero = this.NewHero.HasValue ? this.NewHero.Value.UnPack() : null;
    _o.ChangeHeroSkinList = new List<Lobby.HeroSkinDataT>();
    for (var _j = 0; _j < this.ChangeHeroSkinListLength; ++_j) {_o.ChangeHeroSkinList.Add(this.ChangeHeroSkinList(_j).HasValue ? this.ChangeHeroSkinList(_j).Value.UnPack() : null);}
    _o.ChangeAssetList = new List<Lobby.AssetDataT>();
    for (var _j = 0; _j < this.ChangeAssetListLength; ++_j) {_o.ChangeAssetList.Add(this.ChangeAssetList(_j).HasValue ? this.ChangeAssetList(_j).Value.UnPack() : null);}
    _o.ChangeItemList = new List<Lobby.ItemDataT>();
    for (var _j = 0; _j < this.ChangeItemListLength; ++_j) {_o.ChangeItemList.Add(this.ChangeItemList(_j).HasValue ? this.ChangeItemList(_j).Value.UnPack() : null);}
    _o.ChangeArtifactList = new List<Lobby.ArtifactDataT>();
    for (var _j = 0; _j < this.ChangeArtifactListLength; ++_j) {_o.ChangeArtifactList.Add(this.ChangeArtifactList(_j).HasValue ? this.ChangeArtifactList(_j).Value.UnPack() : null);}
    _o.ChangeExpressionList = new List<Lobby.ExpressionDataT>();
    for (var _j = 0; _j < this.ChangeExpressionListLength; ++_j) {_o.ChangeExpressionList.Add(this.ChangeExpressionList(_j).HasValue ? this.ChangeExpressionList(_j).Value.UnPack() : null);}
    _o.ChangeProfileList = new List<Lobby.ProfileDataT>();
    for (var _j = 0; _j < this.ChangeProfileListLength; ++_j) {_o.ChangeProfileList.Add(this.ChangeProfileList(_j).HasValue ? this.ChangeProfileList(_j).Value.UnPack() : null);}
    _o.AllRewardList = new List<Lobby.EachRewardDataT>();
    for (var _j = 0; _j < this.AllRewardListLength; ++_j) {_o.AllRewardList.Add(this.AllRewardList(_j).HasValue ? this.AllRewardList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.RewardData> Pack(FlatBufferBuilder builder, RewardDataT _o) {
    if (_o == null) return default(Offset<Lobby.RewardData>);
    var _NewHero = _o.NewHero == null ? default(Offset<Lobby.NewHeroData>) : Lobby.NewHeroData.Pack(builder, _o.NewHero);
    var _ChangeHeroSkinList = default(VectorOffset);
    if (_o.ChangeHeroSkinList != null) {
      var __ChangeHeroSkinList = new Offset<Lobby.HeroSkinData>[_o.ChangeHeroSkinList.Count];
      for (var _j = 0; _j < __ChangeHeroSkinList.Length; ++_j) { __ChangeHeroSkinList[_j] = Lobby.HeroSkinData.Pack(builder, _o.ChangeHeroSkinList[_j]); }
      _ChangeHeroSkinList = CreateChangeHeroSkinListVector(builder, __ChangeHeroSkinList);
    }
    var _ChangeAssetList = default(VectorOffset);
    if (_o.ChangeAssetList != null) {
      StartChangeAssetListVector(builder, _o.ChangeAssetList.Count);
      for (var _j = _o.ChangeAssetList.Count - 1; _j >= 0; --_j) { Lobby.AssetData.Pack(builder, _o.ChangeAssetList[_j]); }
      _ChangeAssetList = builder.EndVector();
    }
    var _ChangeItemList = default(VectorOffset);
    if (_o.ChangeItemList != null) {
      StartChangeItemListVector(builder, _o.ChangeItemList.Count);
      for (var _j = _o.ChangeItemList.Count - 1; _j >= 0; --_j) { Lobby.ItemData.Pack(builder, _o.ChangeItemList[_j]); }
      _ChangeItemList = builder.EndVector();
    }
    var _ChangeArtifactList = default(VectorOffset);
    if (_o.ChangeArtifactList != null) {
      StartChangeArtifactListVector(builder, _o.ChangeArtifactList.Count);
      for (var _j = _o.ChangeArtifactList.Count - 1; _j >= 0; --_j) { Lobby.ArtifactData.Pack(builder, _o.ChangeArtifactList[_j]); }
      _ChangeArtifactList = builder.EndVector();
    }
    var _ChangeExpressionList = default(VectorOffset);
    if (_o.ChangeExpressionList != null) {
      StartChangeExpressionListVector(builder, _o.ChangeExpressionList.Count);
      for (var _j = _o.ChangeExpressionList.Count - 1; _j >= 0; --_j) { Lobby.ExpressionData.Pack(builder, _o.ChangeExpressionList[_j]); }
      _ChangeExpressionList = builder.EndVector();
    }
    var _ChangeProfileList = default(VectorOffset);
    if (_o.ChangeProfileList != null) {
      StartChangeProfileListVector(builder, _o.ChangeProfileList.Count);
      for (var _j = _o.ChangeProfileList.Count - 1; _j >= 0; --_j) { Lobby.ProfileData.Pack(builder, _o.ChangeProfileList[_j]); }
      _ChangeProfileList = builder.EndVector();
    }
    var _AllRewardList = default(VectorOffset);
    if (_o.AllRewardList != null) {
      StartAllRewardListVector(builder, _o.AllRewardList.Count);
      for (var _j = _o.AllRewardList.Count - 1; _j >= 0; --_j) { Lobby.EachRewardData.Pack(builder, _o.AllRewardList[_j]); }
      _AllRewardList = builder.EndVector();
    }
    return CreateRewardData(
      builder,
      _NewHero,
      _ChangeHeroSkinList,
      _ChangeAssetList,
      _ChangeItemList,
      _ChangeArtifactList,
      _ChangeExpressionList,
      _ChangeProfileList,
      _AllRewardList);
  }
}

public class RewardDataT
{
  public Lobby.NewHeroDataT NewHero { get; set; }
  public List<Lobby.HeroSkinDataT> ChangeHeroSkinList { get; set; }
  public List<Lobby.AssetDataT> ChangeAssetList { get; set; }
  public List<Lobby.ItemDataT> ChangeItemList { get; set; }
  public List<Lobby.ArtifactDataT> ChangeArtifactList { get; set; }
  public List<Lobby.ExpressionDataT> ChangeExpressionList { get; set; }
  public List<Lobby.ProfileDataT> ChangeProfileList { get; set; }
  public List<Lobby.EachRewardDataT> AllRewardList { get; set; }

  public RewardDataT() {
    this.NewHero = null;
    this.ChangeHeroSkinList = null;
    this.ChangeAssetList = null;
    this.ChangeItemList = null;
    this.ChangeArtifactList = null;
    this.ChangeExpressionList = null;
    this.ChangeProfileList = null;
    this.AllRewardList = null;
  }
}


}
