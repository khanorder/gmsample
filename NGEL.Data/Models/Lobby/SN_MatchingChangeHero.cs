// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_MatchingChangeHero : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_MatchingChangeHero GetRootAsSN_MatchingChangeHero(ByteBuffer _bb) { return GetRootAsSN_MatchingChangeHero(_bb, new SN_MatchingChangeHero()); }
  public static SN_MatchingChangeHero GetRootAsSN_MatchingChangeHero(ByteBuffer _bb, SN_MatchingChangeHero obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_MatchingChangeHero __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string TeamID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTeamIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetTeamIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTeamIDArray() { return __p.__vector_as_array<byte>(4); }
  public int UID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Lobby.HeroData? Hero { get { int o = __p.__offset(8); return o != 0 ? (Lobby.HeroData?)(new Lobby.HeroData()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Lobby.HeroSkinData? HeroSkin { get { int o = __p.__offset(10); return o != 0 ? (Lobby.HeroSkinData?)(new Lobby.HeroSkinData()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<Lobby.SN_MatchingChangeHero> CreateSN_MatchingChangeHero(FlatBufferBuilder builder,
      StringOffset TeamIDOffset = default(StringOffset),
      int UID = 0,
      Lobby.HeroDataT Hero = null,
      Lobby.HeroSkinDataT HeroSkin = null) {
    builder.StartTable(4);
    SN_MatchingChangeHero.AddHeroSkin(builder, Lobby.HeroSkinData.Pack(builder, HeroSkin));
    SN_MatchingChangeHero.AddHero(builder, Lobby.HeroData.Pack(builder, Hero));
    SN_MatchingChangeHero.AddUID(builder, UID);
    SN_MatchingChangeHero.AddTeamID(builder, TeamIDOffset);
    return SN_MatchingChangeHero.EndSN_MatchingChangeHero(builder);
  }

  public static void StartSN_MatchingChangeHero(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddTeamID(FlatBufferBuilder builder, StringOffset TeamIDOffset) { builder.AddOffset(0, TeamIDOffset.Value, 0); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(1, UID, 0); }
  public static void AddHero(FlatBufferBuilder builder, Offset<Lobby.HeroData> HeroOffset) { builder.AddStruct(2, HeroOffset.Value, 0); }
  public static void AddHeroSkin(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData> HeroSkinOffset) { builder.AddStruct(3, HeroSkinOffset.Value, 0); }
  public static Offset<Lobby.SN_MatchingChangeHero> EndSN_MatchingChangeHero(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_MatchingChangeHero>(o);
  }
  public SN_MatchingChangeHeroT UnPack() {
    var _o = new SN_MatchingChangeHeroT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_MatchingChangeHeroT _o) {
    _o.TeamID = this.TeamID;
    _o.UID = this.UID;
    _o.Hero = this.Hero.HasValue ? this.Hero.Value.UnPack() : null;
    _o.HeroSkin = this.HeroSkin.HasValue ? this.HeroSkin.Value.UnPack() : null;
  }
  public static Offset<Lobby.SN_MatchingChangeHero> Pack(FlatBufferBuilder builder, SN_MatchingChangeHeroT _o) {
    if (_o == null) return default(Offset<Lobby.SN_MatchingChangeHero>);
    var _TeamID = _o.TeamID == null ? default(StringOffset) : builder.CreateString(_o.TeamID);
    return CreateSN_MatchingChangeHero(
      builder,
      _TeamID,
      _o.UID,
      _o.Hero,
      _o.HeroSkin);
  }
}

public class SN_MatchingChangeHeroT
{
  public string TeamID { get; set; }
  public int UID { get; set; }
  public Lobby.HeroDataT Hero { get; set; }
  public Lobby.HeroSkinDataT HeroSkin { get; set; }

  public SN_MatchingChangeHeroT() {
    this.TeamID = null;
    this.UID = 0;
    this.Hero = new Lobby.HeroDataT();
    this.HeroSkin = new Lobby.HeroSkinDataT();
  }
}


}
