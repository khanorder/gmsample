// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_GachaShop : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_GachaShop GetRootAsSA_GachaShop(ByteBuffer _bb) { return GetRootAsSA_GachaShop(_bb, new SA_GachaShop()); }
  public static SA_GachaShop GetRootAsSA_GachaShop(ByteBuffer _bb, SA_GachaShop obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_GachaShop __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.RewardData? RewardInfo { get { int o = __p.__offset(4); return o != 0 ? (Lobby.RewardData?)(new Lobby.RewardData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.PetData? ChangePetList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.PetData?)(new Lobby.PetData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChangePetListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.SA_GachaShop> CreateSA_GachaShop(FlatBufferBuilder builder,
      Offset<Lobby.RewardData> RewardInfoOffset = default(Offset<Lobby.RewardData>),
      VectorOffset ChangePetListOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SA_GachaShop.AddChangePetList(builder, ChangePetListOffset);
    SA_GachaShop.AddRewardInfo(builder, RewardInfoOffset);
    return SA_GachaShop.EndSA_GachaShop(builder);
  }

  public static void StartSA_GachaShop(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRewardInfo(FlatBufferBuilder builder, Offset<Lobby.RewardData> RewardInfoOffset) { builder.AddOffset(0, RewardInfoOffset.Value, 0); }
  public static void AddChangePetList(FlatBufferBuilder builder, VectorOffset ChangePetListOffset) { builder.AddOffset(1, ChangePetListOffset.Value, 0); }
  public static VectorOffset CreateChangePetListVector(FlatBufferBuilder builder, Offset<Lobby.PetData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChangePetListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.PetData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangePetListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.PetData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateChangePetListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.PetData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartChangePetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Lobby.SA_GachaShop> EndSA_GachaShop(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_GachaShop>(o);
  }
  public SA_GachaShopT UnPack() {
    var _o = new SA_GachaShopT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_GachaShopT _o) {
    _o.RewardInfo = this.RewardInfo.HasValue ? this.RewardInfo.Value.UnPack() : null;
    _o.ChangePetList = new List<Lobby.PetDataT>();
    for (var _j = 0; _j < this.ChangePetListLength; ++_j) {_o.ChangePetList.Add(this.ChangePetList(_j).HasValue ? this.ChangePetList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.SA_GachaShop> Pack(FlatBufferBuilder builder, SA_GachaShopT _o) {
    if (_o == null) return default(Offset<Lobby.SA_GachaShop>);
    var _RewardInfo = _o.RewardInfo == null ? default(Offset<Lobby.RewardData>) : Lobby.RewardData.Pack(builder, _o.RewardInfo);
    var _ChangePetList = default(VectorOffset);
    if (_o.ChangePetList != null) {
      var __ChangePetList = new Offset<Lobby.PetData>[_o.ChangePetList.Count];
      for (var _j = 0; _j < __ChangePetList.Length; ++_j) { __ChangePetList[_j] = Lobby.PetData.Pack(builder, _o.ChangePetList[_j]); }
      _ChangePetList = CreateChangePetListVector(builder, __ChangePetList);
    }
    return CreateSA_GachaShop(
      builder,
      _RewardInfo,
      _ChangePetList);
  }
}

public class SA_GachaShopT
{
  public Lobby.RewardDataT RewardInfo { get; set; }
  public List<Lobby.PetDataT> ChangePetList { get; set; }

  public SA_GachaShopT() {
    this.RewardInfo = null;
    this.ChangePetList = null;
  }
}


}
