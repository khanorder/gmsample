// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_ProductionStart : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_ProductionStart GetRootAsCQ_ProductionStart(ByteBuffer _bb) { return GetRootAsCQ_ProductionStart(_bb, new CQ_ProductionStart()); }
  public static CQ_ProductionStart GetRootAsCQ_ProductionStart(ByteBuffer _bb, CQ_ProductionStart obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_ProductionStart __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EProductionType ProductionType { get { int o = __p.__offset(4); return o != 0 ? (Lobby.EProductionType)__p.bb.Get(o + __p.bb_pos) : Lobby.EProductionType.None; } }

  public static Offset<Lobby.CQ_ProductionStart> CreateCQ_ProductionStart(FlatBufferBuilder builder,
      Lobby.EProductionType ProductionType = Lobby.EProductionType.None) {
    builder.StartTable(1);
    CQ_ProductionStart.AddProductionType(builder, ProductionType);
    return CQ_ProductionStart.EndCQ_ProductionStart(builder);
  }

  public static void StartCQ_ProductionStart(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddProductionType(FlatBufferBuilder builder, Lobby.EProductionType ProductionType) { builder.AddByte(0, (byte)ProductionType, 0); }
  public static Offset<Lobby.CQ_ProductionStart> EndCQ_ProductionStart(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_ProductionStart>(o);
  }
  public CQ_ProductionStartT UnPack() {
    var _o = new CQ_ProductionStartT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_ProductionStartT _o) {
    _o.ProductionType = this.ProductionType;
  }
  public static Offset<Lobby.CQ_ProductionStart> Pack(FlatBufferBuilder builder, CQ_ProductionStartT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_ProductionStart>);
    return CreateCQ_ProductionStart(
      builder,
      _o.ProductionType);
  }
}

public class CQ_ProductionStartT
{
  public Lobby.EProductionType ProductionType { get; set; }

  public CQ_ProductionStartT() {
    this.ProductionType = Lobby.EProductionType.None;
  }
}


}
