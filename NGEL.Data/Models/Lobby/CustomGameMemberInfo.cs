// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CustomGameMemberInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CustomGameMemberInfo GetRootAsCustomGameMemberInfo(ByteBuffer _bb) { return GetRootAsCustomGameMemberInfo(_bb, new CustomGameMemberInfo()); }
  public static CustomGameMemberInfo GetRootAsCustomGameMemberInfo(ByteBuffer _bb, CustomGameMemberInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CustomGameMemberInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public sbyte SlotNo { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public int UID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public int EntitlementID { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProfileIconID { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProfileBGID { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsMaster { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Lobby.CustomGameMemberInfo> CreateCustomGameMemberInfo(FlatBufferBuilder builder,
      sbyte SlotNo = 0,
      int UID = 0,
      StringOffset NickOffset = default(StringOffset),
      int EntitlementID = 0,
      int ProfileIconID = 0,
      int ProfileBGID = 0,
      bool IsMaster = false) {
    builder.StartTable(7);
    CustomGameMemberInfo.AddProfileBGID(builder, ProfileBGID);
    CustomGameMemberInfo.AddProfileIconID(builder, ProfileIconID);
    CustomGameMemberInfo.AddEntitlementID(builder, EntitlementID);
    CustomGameMemberInfo.AddNick(builder, NickOffset);
    CustomGameMemberInfo.AddUID(builder, UID);
    CustomGameMemberInfo.AddIsMaster(builder, IsMaster);
    CustomGameMemberInfo.AddSlotNo(builder, SlotNo);
    return CustomGameMemberInfo.EndCustomGameMemberInfo(builder);
  }

  public static void StartCustomGameMemberInfo(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddSlotNo(FlatBufferBuilder builder, sbyte SlotNo) { builder.AddSbyte(0, SlotNo, 0); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(1, UID, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset NickOffset) { builder.AddOffset(2, NickOffset.Value, 0); }
  public static void AddEntitlementID(FlatBufferBuilder builder, int EntitlementID) { builder.AddInt(3, EntitlementID, 0); }
  public static void AddProfileIconID(FlatBufferBuilder builder, int ProfileIconID) { builder.AddInt(4, ProfileIconID, 0); }
  public static void AddProfileBGID(FlatBufferBuilder builder, int ProfileBGID) { builder.AddInt(5, ProfileBGID, 0); }
  public static void AddIsMaster(FlatBufferBuilder builder, bool IsMaster) { builder.AddBool(6, IsMaster, false); }
  public static Offset<Lobby.CustomGameMemberInfo> EndCustomGameMemberInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CustomGameMemberInfo>(o);
  }
  public CustomGameMemberInfoT UnPack() {
    var _o = new CustomGameMemberInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CustomGameMemberInfoT _o) {
    _o.SlotNo = this.SlotNo;
    _o.UID = this.UID;
    _o.Nick = this.Nick;
    _o.EntitlementID = this.EntitlementID;
    _o.ProfileIconID = this.ProfileIconID;
    _o.ProfileBGID = this.ProfileBGID;
    _o.IsMaster = this.IsMaster;
  }
  public static Offset<Lobby.CustomGameMemberInfo> Pack(FlatBufferBuilder builder, CustomGameMemberInfoT _o) {
    if (_o == null) return default(Offset<Lobby.CustomGameMemberInfo>);
    var _Nick = _o.Nick == null ? default(StringOffset) : builder.CreateString(_o.Nick);
    return CreateCustomGameMemberInfo(
      builder,
      _o.SlotNo,
      _o.UID,
      _Nick,
      _o.EntitlementID,
      _o.ProfileIconID,
      _o.ProfileBGID,
      _o.IsMaster);
  }
}

public class CustomGameMemberInfoT
{
  public sbyte SlotNo { get; set; }
  public int UID { get; set; }
  public string Nick { get; set; }
  public int EntitlementID { get; set; }
  public int ProfileIconID { get; set; }
  public int ProfileBGID { get; set; }
  public bool IsMaster { get; set; }

  public CustomGameMemberInfoT() {
    this.SlotNo = 0;
    this.UID = 0;
    this.Nick = null;
    this.EntitlementID = 0;
    this.ProfileIconID = 0;
    this.ProfileBGID = 0;
    this.IsMaster = false;
  }
}


}
