// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct HeroSkinPresetSlotData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static HeroSkinPresetSlotData GetRootAsHeroSkinPresetSlotData(ByteBuffer _bb) { return GetRootAsHeroSkinPresetSlotData(_bb, new HeroSkinPresetSlotData()); }
  public static HeroSkinPresetSlotData GetRootAsHeroSkinPresetSlotData(ByteBuffer _bb, HeroSkinPresetSlotData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public HeroSkinPresetSlotData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PresetName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPresetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPresetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPresetNameArray() { return __p.__vector_as_array<byte>(4); }
  public string LeftEyeHexColor { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLeftEyeHexColorBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetLeftEyeHexColorBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetLeftEyeHexColorArray() { return __p.__vector_as_array<byte>(6); }
  public string RightEyeHexColor { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRightEyeHexColorBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetRightEyeHexColorBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetRightEyeHexColorArray() { return __p.__vector_as_array<byte>(8); }
  public int HairSkinID { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string HairHexColor1 { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHairHexColor1Bytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetHairHexColor1Bytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetHairHexColor1Array() { return __p.__vector_as_array<byte>(12); }
  public string HairHexColor2 { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHairHexColor2Bytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetHairHexColor2Bytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetHairHexColor2Array() { return __p.__vector_as_array<byte>(14); }
  public int BodySkinID { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BodyHexColor1 { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBodyHexColor1Bytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetBodyHexColor1Bytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetBodyHexColor1Array() { return __p.__vector_as_array<byte>(18); }
  public string BodyHexColor2 { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBodyHexColor2Bytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetBodyHexColor2Bytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetBodyHexColor2Array() { return __p.__vector_as_array<byte>(20); }
  public string BodyHexColor3 { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBodyHexColor3Bytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetBodyHexColor3Bytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetBodyHexColor3Array() { return __p.__vector_as_array<byte>(22); }
  public string BodyHexColor4 { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBodyHexColor4Bytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetBodyHexColor4Bytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetBodyHexColor4Array() { return __p.__vector_as_array<byte>(24); }
  public int HeadID { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float HeadOffsetX { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HeadOffsetY { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HeadOffsetZ { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HeadOffsetW { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HeadRotateX { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HeadRotateY { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float HeadRotateZ { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int FaceID { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float FaceOffsetX { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FaceOffsetY { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FaceOffsetZ { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FaceOffsetW { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FaceRotateX { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FaceRotateY { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FaceRotateZ { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int BackID { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float BackOffsetX { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float BackOffsetY { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float BackOffsetZ { get { int o = __p.__offset(64); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float BackOffsetW { get { int o = __p.__offset(66); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float BackRotateX { get { int o = __p.__offset(68); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float BackRotateY { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float BackRotateZ { get { int o = __p.__offset(72); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int PelvisID { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float PelvisOffsetX { get { int o = __p.__offset(76); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PelvisOffsetY { get { int o = __p.__offset(78); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PelvisOffsetZ { get { int o = __p.__offset(80); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PelvisOffsetW { get { int o = __p.__offset(82); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PelvisRotateX { get { int o = __p.__offset(84); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PelvisRotateY { get { int o = __p.__offset(86); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PelvisRotateZ { get { int o = __p.__offset(88); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int WeaponID { get { int o = __p.__offset(90); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int WinPoseID { get { int o = __p.__offset(92); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.HeroSkinPresetSlotData> CreateHeroSkinPresetSlotData(FlatBufferBuilder builder,
      StringOffset PresetNameOffset = default(StringOffset),
      StringOffset LeftEyeHexColorOffset = default(StringOffset),
      StringOffset RightEyeHexColorOffset = default(StringOffset),
      int HairSkinID = 0,
      StringOffset HairHexColor1Offset = default(StringOffset),
      StringOffset HairHexColor2Offset = default(StringOffset),
      int BodySkinID = 0,
      StringOffset BodyHexColor1Offset = default(StringOffset),
      StringOffset BodyHexColor2Offset = default(StringOffset),
      StringOffset BodyHexColor3Offset = default(StringOffset),
      StringOffset BodyHexColor4Offset = default(StringOffset),
      int HeadID = 0,
      float HeadOffsetX = 0.0f,
      float HeadOffsetY = 0.0f,
      float HeadOffsetZ = 0.0f,
      float HeadOffsetW = 0.0f,
      float HeadRotateX = 0.0f,
      float HeadRotateY = 0.0f,
      float HeadRotateZ = 0.0f,
      int FaceID = 0,
      float FaceOffsetX = 0.0f,
      float FaceOffsetY = 0.0f,
      float FaceOffsetZ = 0.0f,
      float FaceOffsetW = 0.0f,
      float FaceRotateX = 0.0f,
      float FaceRotateY = 0.0f,
      float FaceRotateZ = 0.0f,
      int BackID = 0,
      float BackOffsetX = 0.0f,
      float BackOffsetY = 0.0f,
      float BackOffsetZ = 0.0f,
      float BackOffsetW = 0.0f,
      float BackRotateX = 0.0f,
      float BackRotateY = 0.0f,
      float BackRotateZ = 0.0f,
      int PelvisID = 0,
      float PelvisOffsetX = 0.0f,
      float PelvisOffsetY = 0.0f,
      float PelvisOffsetZ = 0.0f,
      float PelvisOffsetW = 0.0f,
      float PelvisRotateX = 0.0f,
      float PelvisRotateY = 0.0f,
      float PelvisRotateZ = 0.0f,
      int WeaponID = 0,
      int WinPoseID = 0) {
    builder.StartTable(45);
    HeroSkinPresetSlotData.AddWinPoseID(builder, WinPoseID);
    HeroSkinPresetSlotData.AddWeaponID(builder, WeaponID);
    HeroSkinPresetSlotData.AddPelvisRotateZ(builder, PelvisRotateZ);
    HeroSkinPresetSlotData.AddPelvisRotateY(builder, PelvisRotateY);
    HeroSkinPresetSlotData.AddPelvisRotateX(builder, PelvisRotateX);
    HeroSkinPresetSlotData.AddPelvisOffsetW(builder, PelvisOffsetW);
    HeroSkinPresetSlotData.AddPelvisOffsetZ(builder, PelvisOffsetZ);
    HeroSkinPresetSlotData.AddPelvisOffsetY(builder, PelvisOffsetY);
    HeroSkinPresetSlotData.AddPelvisOffsetX(builder, PelvisOffsetX);
    HeroSkinPresetSlotData.AddPelvisID(builder, PelvisID);
    HeroSkinPresetSlotData.AddBackRotateZ(builder, BackRotateZ);
    HeroSkinPresetSlotData.AddBackRotateY(builder, BackRotateY);
    HeroSkinPresetSlotData.AddBackRotateX(builder, BackRotateX);
    HeroSkinPresetSlotData.AddBackOffsetW(builder, BackOffsetW);
    HeroSkinPresetSlotData.AddBackOffsetZ(builder, BackOffsetZ);
    HeroSkinPresetSlotData.AddBackOffsetY(builder, BackOffsetY);
    HeroSkinPresetSlotData.AddBackOffsetX(builder, BackOffsetX);
    HeroSkinPresetSlotData.AddBackID(builder, BackID);
    HeroSkinPresetSlotData.AddFaceRotateZ(builder, FaceRotateZ);
    HeroSkinPresetSlotData.AddFaceRotateY(builder, FaceRotateY);
    HeroSkinPresetSlotData.AddFaceRotateX(builder, FaceRotateX);
    HeroSkinPresetSlotData.AddFaceOffsetW(builder, FaceOffsetW);
    HeroSkinPresetSlotData.AddFaceOffsetZ(builder, FaceOffsetZ);
    HeroSkinPresetSlotData.AddFaceOffsetY(builder, FaceOffsetY);
    HeroSkinPresetSlotData.AddFaceOffsetX(builder, FaceOffsetX);
    HeroSkinPresetSlotData.AddFaceID(builder, FaceID);
    HeroSkinPresetSlotData.AddHeadRotateZ(builder, HeadRotateZ);
    HeroSkinPresetSlotData.AddHeadRotateY(builder, HeadRotateY);
    HeroSkinPresetSlotData.AddHeadRotateX(builder, HeadRotateX);
    HeroSkinPresetSlotData.AddHeadOffsetW(builder, HeadOffsetW);
    HeroSkinPresetSlotData.AddHeadOffsetZ(builder, HeadOffsetZ);
    HeroSkinPresetSlotData.AddHeadOffsetY(builder, HeadOffsetY);
    HeroSkinPresetSlotData.AddHeadOffsetX(builder, HeadOffsetX);
    HeroSkinPresetSlotData.AddHeadID(builder, HeadID);
    HeroSkinPresetSlotData.AddBodyHexColor4(builder, BodyHexColor4Offset);
    HeroSkinPresetSlotData.AddBodyHexColor3(builder, BodyHexColor3Offset);
    HeroSkinPresetSlotData.AddBodyHexColor2(builder, BodyHexColor2Offset);
    HeroSkinPresetSlotData.AddBodyHexColor1(builder, BodyHexColor1Offset);
    HeroSkinPresetSlotData.AddBodySkinID(builder, BodySkinID);
    HeroSkinPresetSlotData.AddHairHexColor2(builder, HairHexColor2Offset);
    HeroSkinPresetSlotData.AddHairHexColor1(builder, HairHexColor1Offset);
    HeroSkinPresetSlotData.AddHairSkinID(builder, HairSkinID);
    HeroSkinPresetSlotData.AddRightEyeHexColor(builder, RightEyeHexColorOffset);
    HeroSkinPresetSlotData.AddLeftEyeHexColor(builder, LeftEyeHexColorOffset);
    HeroSkinPresetSlotData.AddPresetName(builder, PresetNameOffset);
    return HeroSkinPresetSlotData.EndHeroSkinPresetSlotData(builder);
  }

  public static void StartHeroSkinPresetSlotData(FlatBufferBuilder builder) { builder.StartTable(45); }
  public static void AddPresetName(FlatBufferBuilder builder, StringOffset PresetNameOffset) { builder.AddOffset(0, PresetNameOffset.Value, 0); }
  public static void AddLeftEyeHexColor(FlatBufferBuilder builder, StringOffset LeftEyeHexColorOffset) { builder.AddOffset(1, LeftEyeHexColorOffset.Value, 0); }
  public static void AddRightEyeHexColor(FlatBufferBuilder builder, StringOffset RightEyeHexColorOffset) { builder.AddOffset(2, RightEyeHexColorOffset.Value, 0); }
  public static void AddHairSkinID(FlatBufferBuilder builder, int HairSkinID) { builder.AddInt(3, HairSkinID, 0); }
  public static void AddHairHexColor1(FlatBufferBuilder builder, StringOffset HairHexColor1Offset) { builder.AddOffset(4, HairHexColor1Offset.Value, 0); }
  public static void AddHairHexColor2(FlatBufferBuilder builder, StringOffset HairHexColor2Offset) { builder.AddOffset(5, HairHexColor2Offset.Value, 0); }
  public static void AddBodySkinID(FlatBufferBuilder builder, int BodySkinID) { builder.AddInt(6, BodySkinID, 0); }
  public static void AddBodyHexColor1(FlatBufferBuilder builder, StringOffset BodyHexColor1Offset) { builder.AddOffset(7, BodyHexColor1Offset.Value, 0); }
  public static void AddBodyHexColor2(FlatBufferBuilder builder, StringOffset BodyHexColor2Offset) { builder.AddOffset(8, BodyHexColor2Offset.Value, 0); }
  public static void AddBodyHexColor3(FlatBufferBuilder builder, StringOffset BodyHexColor3Offset) { builder.AddOffset(9, BodyHexColor3Offset.Value, 0); }
  public static void AddBodyHexColor4(FlatBufferBuilder builder, StringOffset BodyHexColor4Offset) { builder.AddOffset(10, BodyHexColor4Offset.Value, 0); }
  public static void AddHeadID(FlatBufferBuilder builder, int HeadID) { builder.AddInt(11, HeadID, 0); }
  public static void AddHeadOffsetX(FlatBufferBuilder builder, float HeadOffsetX) { builder.AddFloat(12, HeadOffsetX, 0.0f); }
  public static void AddHeadOffsetY(FlatBufferBuilder builder, float HeadOffsetY) { builder.AddFloat(13, HeadOffsetY, 0.0f); }
  public static void AddHeadOffsetZ(FlatBufferBuilder builder, float HeadOffsetZ) { builder.AddFloat(14, HeadOffsetZ, 0.0f); }
  public static void AddHeadOffsetW(FlatBufferBuilder builder, float HeadOffsetW) { builder.AddFloat(15, HeadOffsetW, 0.0f); }
  public static void AddHeadRotateX(FlatBufferBuilder builder, float HeadRotateX) { builder.AddFloat(16, HeadRotateX, 0.0f); }
  public static void AddHeadRotateY(FlatBufferBuilder builder, float HeadRotateY) { builder.AddFloat(17, HeadRotateY, 0.0f); }
  public static void AddHeadRotateZ(FlatBufferBuilder builder, float HeadRotateZ) { builder.AddFloat(18, HeadRotateZ, 0.0f); }
  public static void AddFaceID(FlatBufferBuilder builder, int FaceID) { builder.AddInt(19, FaceID, 0); }
  public static void AddFaceOffsetX(FlatBufferBuilder builder, float FaceOffsetX) { builder.AddFloat(20, FaceOffsetX, 0.0f); }
  public static void AddFaceOffsetY(FlatBufferBuilder builder, float FaceOffsetY) { builder.AddFloat(21, FaceOffsetY, 0.0f); }
  public static void AddFaceOffsetZ(FlatBufferBuilder builder, float FaceOffsetZ) { builder.AddFloat(22, FaceOffsetZ, 0.0f); }
  public static void AddFaceOffsetW(FlatBufferBuilder builder, float FaceOffsetW) { builder.AddFloat(23, FaceOffsetW, 0.0f); }
  public static void AddFaceRotateX(FlatBufferBuilder builder, float FaceRotateX) { builder.AddFloat(24, FaceRotateX, 0.0f); }
  public static void AddFaceRotateY(FlatBufferBuilder builder, float FaceRotateY) { builder.AddFloat(25, FaceRotateY, 0.0f); }
  public static void AddFaceRotateZ(FlatBufferBuilder builder, float FaceRotateZ) { builder.AddFloat(26, FaceRotateZ, 0.0f); }
  public static void AddBackID(FlatBufferBuilder builder, int BackID) { builder.AddInt(27, BackID, 0); }
  public static void AddBackOffsetX(FlatBufferBuilder builder, float BackOffsetX) { builder.AddFloat(28, BackOffsetX, 0.0f); }
  public static void AddBackOffsetY(FlatBufferBuilder builder, float BackOffsetY) { builder.AddFloat(29, BackOffsetY, 0.0f); }
  public static void AddBackOffsetZ(FlatBufferBuilder builder, float BackOffsetZ) { builder.AddFloat(30, BackOffsetZ, 0.0f); }
  public static void AddBackOffsetW(FlatBufferBuilder builder, float BackOffsetW) { builder.AddFloat(31, BackOffsetW, 0.0f); }
  public static void AddBackRotateX(FlatBufferBuilder builder, float BackRotateX) { builder.AddFloat(32, BackRotateX, 0.0f); }
  public static void AddBackRotateY(FlatBufferBuilder builder, float BackRotateY) { builder.AddFloat(33, BackRotateY, 0.0f); }
  public static void AddBackRotateZ(FlatBufferBuilder builder, float BackRotateZ) { builder.AddFloat(34, BackRotateZ, 0.0f); }
  public static void AddPelvisID(FlatBufferBuilder builder, int PelvisID) { builder.AddInt(35, PelvisID, 0); }
  public static void AddPelvisOffsetX(FlatBufferBuilder builder, float PelvisOffsetX) { builder.AddFloat(36, PelvisOffsetX, 0.0f); }
  public static void AddPelvisOffsetY(FlatBufferBuilder builder, float PelvisOffsetY) { builder.AddFloat(37, PelvisOffsetY, 0.0f); }
  public static void AddPelvisOffsetZ(FlatBufferBuilder builder, float PelvisOffsetZ) { builder.AddFloat(38, PelvisOffsetZ, 0.0f); }
  public static void AddPelvisOffsetW(FlatBufferBuilder builder, float PelvisOffsetW) { builder.AddFloat(39, PelvisOffsetW, 0.0f); }
  public static void AddPelvisRotateX(FlatBufferBuilder builder, float PelvisRotateX) { builder.AddFloat(40, PelvisRotateX, 0.0f); }
  public static void AddPelvisRotateY(FlatBufferBuilder builder, float PelvisRotateY) { builder.AddFloat(41, PelvisRotateY, 0.0f); }
  public static void AddPelvisRotateZ(FlatBufferBuilder builder, float PelvisRotateZ) { builder.AddFloat(42, PelvisRotateZ, 0.0f); }
  public static void AddWeaponID(FlatBufferBuilder builder, int WeaponID) { builder.AddInt(43, WeaponID, 0); }
  public static void AddWinPoseID(FlatBufferBuilder builder, int WinPoseID) { builder.AddInt(44, WinPoseID, 0); }
  public static Offset<Lobby.HeroSkinPresetSlotData> EndHeroSkinPresetSlotData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.HeroSkinPresetSlotData>(o);
  }
  public HeroSkinPresetSlotDataT UnPack() {
    var _o = new HeroSkinPresetSlotDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(HeroSkinPresetSlotDataT _o) {
    _o.PresetName = this.PresetName;
    _o.LeftEyeHexColor = this.LeftEyeHexColor;
    _o.RightEyeHexColor = this.RightEyeHexColor;
    _o.HairSkinID = this.HairSkinID;
    _o.HairHexColor1 = this.HairHexColor1;
    _o.HairHexColor2 = this.HairHexColor2;
    _o.BodySkinID = this.BodySkinID;
    _o.BodyHexColor1 = this.BodyHexColor1;
    _o.BodyHexColor2 = this.BodyHexColor2;
    _o.BodyHexColor3 = this.BodyHexColor3;
    _o.BodyHexColor4 = this.BodyHexColor4;
    _o.HeadID = this.HeadID;
    _o.HeadOffsetX = this.HeadOffsetX;
    _o.HeadOffsetY = this.HeadOffsetY;
    _o.HeadOffsetZ = this.HeadOffsetZ;
    _o.HeadOffsetW = this.HeadOffsetW;
    _o.HeadRotateX = this.HeadRotateX;
    _o.HeadRotateY = this.HeadRotateY;
    _o.HeadRotateZ = this.HeadRotateZ;
    _o.FaceID = this.FaceID;
    _o.FaceOffsetX = this.FaceOffsetX;
    _o.FaceOffsetY = this.FaceOffsetY;
    _o.FaceOffsetZ = this.FaceOffsetZ;
    _o.FaceOffsetW = this.FaceOffsetW;
    _o.FaceRotateX = this.FaceRotateX;
    _o.FaceRotateY = this.FaceRotateY;
    _o.FaceRotateZ = this.FaceRotateZ;
    _o.BackID = this.BackID;
    _o.BackOffsetX = this.BackOffsetX;
    _o.BackOffsetY = this.BackOffsetY;
    _o.BackOffsetZ = this.BackOffsetZ;
    _o.BackOffsetW = this.BackOffsetW;
    _o.BackRotateX = this.BackRotateX;
    _o.BackRotateY = this.BackRotateY;
    _o.BackRotateZ = this.BackRotateZ;
    _o.PelvisID = this.PelvisID;
    _o.PelvisOffsetX = this.PelvisOffsetX;
    _o.PelvisOffsetY = this.PelvisOffsetY;
    _o.PelvisOffsetZ = this.PelvisOffsetZ;
    _o.PelvisOffsetW = this.PelvisOffsetW;
    _o.PelvisRotateX = this.PelvisRotateX;
    _o.PelvisRotateY = this.PelvisRotateY;
    _o.PelvisRotateZ = this.PelvisRotateZ;
    _o.WeaponID = this.WeaponID;
    _o.WinPoseID = this.WinPoseID;
  }
  public static Offset<Lobby.HeroSkinPresetSlotData> Pack(FlatBufferBuilder builder, HeroSkinPresetSlotDataT _o) {
    if (_o == null) return default(Offset<Lobby.HeroSkinPresetSlotData>);
    var _PresetName = _o.PresetName == null ? default(StringOffset) : builder.CreateString(_o.PresetName);
    var _LeftEyeHexColor = _o.LeftEyeHexColor == null ? default(StringOffset) : builder.CreateString(_o.LeftEyeHexColor);
    var _RightEyeHexColor = _o.RightEyeHexColor == null ? default(StringOffset) : builder.CreateString(_o.RightEyeHexColor);
    var _HairHexColor1 = _o.HairHexColor1 == null ? default(StringOffset) : builder.CreateString(_o.HairHexColor1);
    var _HairHexColor2 = _o.HairHexColor2 == null ? default(StringOffset) : builder.CreateString(_o.HairHexColor2);
    var _BodyHexColor1 = _o.BodyHexColor1 == null ? default(StringOffset) : builder.CreateString(_o.BodyHexColor1);
    var _BodyHexColor2 = _o.BodyHexColor2 == null ? default(StringOffset) : builder.CreateString(_o.BodyHexColor2);
    var _BodyHexColor3 = _o.BodyHexColor3 == null ? default(StringOffset) : builder.CreateString(_o.BodyHexColor3);
    var _BodyHexColor4 = _o.BodyHexColor4 == null ? default(StringOffset) : builder.CreateString(_o.BodyHexColor4);
    return CreateHeroSkinPresetSlotData(
      builder,
      _PresetName,
      _LeftEyeHexColor,
      _RightEyeHexColor,
      _o.HairSkinID,
      _HairHexColor1,
      _HairHexColor2,
      _o.BodySkinID,
      _BodyHexColor1,
      _BodyHexColor2,
      _BodyHexColor3,
      _BodyHexColor4,
      _o.HeadID,
      _o.HeadOffsetX,
      _o.HeadOffsetY,
      _o.HeadOffsetZ,
      _o.HeadOffsetW,
      _o.HeadRotateX,
      _o.HeadRotateY,
      _o.HeadRotateZ,
      _o.FaceID,
      _o.FaceOffsetX,
      _o.FaceOffsetY,
      _o.FaceOffsetZ,
      _o.FaceOffsetW,
      _o.FaceRotateX,
      _o.FaceRotateY,
      _o.FaceRotateZ,
      _o.BackID,
      _o.BackOffsetX,
      _o.BackOffsetY,
      _o.BackOffsetZ,
      _o.BackOffsetW,
      _o.BackRotateX,
      _o.BackRotateY,
      _o.BackRotateZ,
      _o.PelvisID,
      _o.PelvisOffsetX,
      _o.PelvisOffsetY,
      _o.PelvisOffsetZ,
      _o.PelvisOffsetW,
      _o.PelvisRotateX,
      _o.PelvisRotateY,
      _o.PelvisRotateZ,
      _o.WeaponID,
      _o.WinPoseID);
  }
}

public class HeroSkinPresetSlotDataT
{
  public string PresetName { get; set; }
  public string LeftEyeHexColor { get; set; }
  public string RightEyeHexColor { get; set; }
  public int HairSkinID { get; set; }
  public string HairHexColor1 { get; set; }
  public string HairHexColor2 { get; set; }
  public int BodySkinID { get; set; }
  public string BodyHexColor1 { get; set; }
  public string BodyHexColor2 { get; set; }
  public string BodyHexColor3 { get; set; }
  public string BodyHexColor4 { get; set; }
  public int HeadID { get; set; }
  public float HeadOffsetX { get; set; }
  public float HeadOffsetY { get; set; }
  public float HeadOffsetZ { get; set; }
  public float HeadOffsetW { get; set; }
  public float HeadRotateX { get; set; }
  public float HeadRotateY { get; set; }
  public float HeadRotateZ { get; set; }
  public int FaceID { get; set; }
  public float FaceOffsetX { get; set; }
  public float FaceOffsetY { get; set; }
  public float FaceOffsetZ { get; set; }
  public float FaceOffsetW { get; set; }
  public float FaceRotateX { get; set; }
  public float FaceRotateY { get; set; }
  public float FaceRotateZ { get; set; }
  public int BackID { get; set; }
  public float BackOffsetX { get; set; }
  public float BackOffsetY { get; set; }
  public float BackOffsetZ { get; set; }
  public float BackOffsetW { get; set; }
  public float BackRotateX { get; set; }
  public float BackRotateY { get; set; }
  public float BackRotateZ { get; set; }
  public int PelvisID { get; set; }
  public float PelvisOffsetX { get; set; }
  public float PelvisOffsetY { get; set; }
  public float PelvisOffsetZ { get; set; }
  public float PelvisOffsetW { get; set; }
  public float PelvisRotateX { get; set; }
  public float PelvisRotateY { get; set; }
  public float PelvisRotateZ { get; set; }
  public int WeaponID { get; set; }
  public int WinPoseID { get; set; }

  public HeroSkinPresetSlotDataT() {
    this.PresetName = null;
    this.LeftEyeHexColor = null;
    this.RightEyeHexColor = null;
    this.HairSkinID = 0;
    this.HairHexColor1 = null;
    this.HairHexColor2 = null;
    this.BodySkinID = 0;
    this.BodyHexColor1 = null;
    this.BodyHexColor2 = null;
    this.BodyHexColor3 = null;
    this.BodyHexColor4 = null;
    this.HeadID = 0;
    this.HeadOffsetX = 0.0f;
    this.HeadOffsetY = 0.0f;
    this.HeadOffsetZ = 0.0f;
    this.HeadOffsetW = 0.0f;
    this.HeadRotateX = 0.0f;
    this.HeadRotateY = 0.0f;
    this.HeadRotateZ = 0.0f;
    this.FaceID = 0;
    this.FaceOffsetX = 0.0f;
    this.FaceOffsetY = 0.0f;
    this.FaceOffsetZ = 0.0f;
    this.FaceOffsetW = 0.0f;
    this.FaceRotateX = 0.0f;
    this.FaceRotateY = 0.0f;
    this.FaceRotateZ = 0.0f;
    this.BackID = 0;
    this.BackOffsetX = 0.0f;
    this.BackOffsetY = 0.0f;
    this.BackOffsetZ = 0.0f;
    this.BackOffsetW = 0.0f;
    this.BackRotateX = 0.0f;
    this.BackRotateY = 0.0f;
    this.BackRotateZ = 0.0f;
    this.PelvisID = 0;
    this.PelvisOffsetX = 0.0f;
    this.PelvisOffsetY = 0.0f;
    this.PelvisOffsetZ = 0.0f;
    this.PelvisOffsetW = 0.0f;
    this.PelvisRotateX = 0.0f;
    this.PelvisRotateY = 0.0f;
    this.PelvisRotateZ = 0.0f;
    this.WeaponID = 0;
    this.WinPoseID = 0;
  }
}


}
