// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_SeasonPassRecvReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_SeasonPassRecvReward GetRootAsSA_SeasonPassRecvReward(ByteBuffer _bb) { return GetRootAsSA_SeasonPassRecvReward(_bb, new SA_SeasonPassRecvReward()); }
  public static SA_SeasonPassRecvReward GetRootAsSA_SeasonPassRecvReward(ByteBuffer _bb, SA_SeasonPassRecvReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_SeasonPassRecvReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.SeasonPassData? SeasonPass { get { int o = __p.__offset(4); return o != 0 ? (Lobby.SeasonPassData?)(new Lobby.SeasonPassData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.RewardData? SeasonPassReward { get { int o = __p.__offset(6); return o != 0 ? (Lobby.RewardData?)(new Lobby.RewardData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SA_SeasonPassRecvReward> CreateSA_SeasonPassRecvReward(FlatBufferBuilder builder,
      Offset<Lobby.SeasonPassData> SeasonPassOffset = default(Offset<Lobby.SeasonPassData>),
      Offset<Lobby.RewardData> SeasonPassRewardOffset = default(Offset<Lobby.RewardData>)) {
    builder.StartTable(2);
    SA_SeasonPassRecvReward.AddSeasonPassReward(builder, SeasonPassRewardOffset);
    SA_SeasonPassRecvReward.AddSeasonPass(builder, SeasonPassOffset);
    return SA_SeasonPassRecvReward.EndSA_SeasonPassRecvReward(builder);
  }

  public static void StartSA_SeasonPassRecvReward(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddSeasonPass(FlatBufferBuilder builder, Offset<Lobby.SeasonPassData> SeasonPassOffset) { builder.AddOffset(0, SeasonPassOffset.Value, 0); }
  public static void AddSeasonPassReward(FlatBufferBuilder builder, Offset<Lobby.RewardData> SeasonPassRewardOffset) { builder.AddOffset(1, SeasonPassRewardOffset.Value, 0); }
  public static Offset<Lobby.SA_SeasonPassRecvReward> EndSA_SeasonPassRecvReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_SeasonPassRecvReward>(o);
  }
  public SA_SeasonPassRecvRewardT UnPack() {
    var _o = new SA_SeasonPassRecvRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_SeasonPassRecvRewardT _o) {
    _o.SeasonPass = this.SeasonPass.HasValue ? this.SeasonPass.Value.UnPack() : null;
    _o.SeasonPassReward = this.SeasonPassReward.HasValue ? this.SeasonPassReward.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_SeasonPassRecvReward> Pack(FlatBufferBuilder builder, SA_SeasonPassRecvRewardT _o) {
    if (_o == null) return default(Offset<Lobby.SA_SeasonPassRecvReward>);
    var _SeasonPass = _o.SeasonPass == null ? default(Offset<Lobby.SeasonPassData>) : Lobby.SeasonPassData.Pack(builder, _o.SeasonPass);
    var _SeasonPassReward = _o.SeasonPassReward == null ? default(Offset<Lobby.RewardData>) : Lobby.RewardData.Pack(builder, _o.SeasonPassReward);
    return CreateSA_SeasonPassRecvReward(
      builder,
      _SeasonPass,
      _SeasonPassReward);
  }
}

public class SA_SeasonPassRecvRewardT
{
  public Lobby.SeasonPassDataT SeasonPass { get; set; }
  public Lobby.RewardDataT SeasonPassReward { get; set; }

  public SA_SeasonPassRecvRewardT() {
    this.SeasonPass = null;
    this.SeasonPassReward = null;
  }
}


}
