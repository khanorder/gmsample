// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_MailReceiveAll : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_MailReceiveAll GetRootAsSA_MailReceiveAll(ByteBuffer _bb) { return GetRootAsSA_MailReceiveAll(_bb, new SA_MailReceiveAll()); }
  public static SA_MailReceiveAll GetRootAsSA_MailReceiveAll(ByteBuffer _bb, SA_MailReceiveAll obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_MailReceiveAll __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsBM { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long DeleteMailIDList(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int DeleteMailIDListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetDeleteMailIDListBytes() { return __p.__vector_as_span<long>(6, 8); }
#else
  public ArraySegment<byte>? GetDeleteMailIDListBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public long[] GetDeleteMailIDListArray() { return __p.__vector_as_array<long>(6); }
  public Lobby.MailInfo? AddHistoryList(int j) { int o = __p.__offset(8); return o != 0 ? (Lobby.MailInfo?)(new Lobby.MailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AddHistoryListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public long DeleteHistoryIDList(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int DeleteHistoryIDListLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetDeleteHistoryIDListBytes() { return __p.__vector_as_span<long>(10, 8); }
#else
  public ArraySegment<byte>? GetDeleteHistoryIDListBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public long[] GetDeleteHistoryIDListArray() { return __p.__vector_as_array<long>(10); }
  public Lobby.RewardData? Reward { get { int o = __p.__offset(12); return o != 0 ? (Lobby.RewardData?)(new Lobby.RewardData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SA_MailReceiveAll> CreateSA_MailReceiveAll(FlatBufferBuilder builder,
      bool IsBM = false,
      VectorOffset DeleteMailIDListOffset = default(VectorOffset),
      VectorOffset AddHistoryListOffset = default(VectorOffset),
      VectorOffset DeleteHistoryIDListOffset = default(VectorOffset),
      Offset<Lobby.RewardData> RewardOffset = default(Offset<Lobby.RewardData>)) {
    builder.StartTable(5);
    SA_MailReceiveAll.AddReward(builder, RewardOffset);
    SA_MailReceiveAll.AddDeleteHistoryIDList(builder, DeleteHistoryIDListOffset);
    SA_MailReceiveAll.AddAddHistoryList(builder, AddHistoryListOffset);
    SA_MailReceiveAll.AddDeleteMailIDList(builder, DeleteMailIDListOffset);
    SA_MailReceiveAll.AddIsBM(builder, IsBM);
    return SA_MailReceiveAll.EndSA_MailReceiveAll(builder);
  }

  public static void StartSA_MailReceiveAll(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddIsBM(FlatBufferBuilder builder, bool IsBM) { builder.AddBool(0, IsBM, false); }
  public static void AddDeleteMailIDList(FlatBufferBuilder builder, VectorOffset DeleteMailIDListOffset) { builder.AddOffset(1, DeleteMailIDListOffset.Value, 0); }
  public static VectorOffset CreateDeleteMailIDListVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDeleteMailIDListVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDeleteMailIDListVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDeleteMailIDListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDeleteMailIDListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddAddHistoryList(FlatBufferBuilder builder, VectorOffset AddHistoryListOffset) { builder.AddOffset(2, AddHistoryListOffset.Value, 0); }
  public static VectorOffset CreateAddHistoryListVector(FlatBufferBuilder builder, Offset<Lobby.MailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAddHistoryListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.MailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddHistoryListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.MailInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddHistoryListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.MailInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAddHistoryListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDeleteHistoryIDList(FlatBufferBuilder builder, VectorOffset DeleteHistoryIDListOffset) { builder.AddOffset(3, DeleteHistoryIDListOffset.Value, 0); }
  public static VectorOffset CreateDeleteHistoryIDListVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDeleteHistoryIDListVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDeleteHistoryIDListVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDeleteHistoryIDListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDeleteHistoryIDListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddReward(FlatBufferBuilder builder, Offset<Lobby.RewardData> RewardOffset) { builder.AddOffset(4, RewardOffset.Value, 0); }
  public static Offset<Lobby.SA_MailReceiveAll> EndSA_MailReceiveAll(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_MailReceiveAll>(o);
  }
  public SA_MailReceiveAllT UnPack() {
    var _o = new SA_MailReceiveAllT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_MailReceiveAllT _o) {
    _o.IsBM = this.IsBM;
    _o.DeleteMailIDList = new List<long>();
    for (var _j = 0; _j < this.DeleteMailIDListLength; ++_j) {_o.DeleteMailIDList.Add(this.DeleteMailIDList(_j));}
    _o.AddHistoryList = new List<Lobby.MailInfoT>();
    for (var _j = 0; _j < this.AddHistoryListLength; ++_j) {_o.AddHistoryList.Add(this.AddHistoryList(_j).HasValue ? this.AddHistoryList(_j).Value.UnPack() : null);}
    _o.DeleteHistoryIDList = new List<long>();
    for (var _j = 0; _j < this.DeleteHistoryIDListLength; ++_j) {_o.DeleteHistoryIDList.Add(this.DeleteHistoryIDList(_j));}
    _o.Reward = this.Reward.HasValue ? this.Reward.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_MailReceiveAll> Pack(FlatBufferBuilder builder, SA_MailReceiveAllT _o) {
    if (_o == null) return default(Offset<Lobby.SA_MailReceiveAll>);
    var _DeleteMailIDList = default(VectorOffset);
    if (_o.DeleteMailIDList != null) {
      var __DeleteMailIDList = _o.DeleteMailIDList.ToArray();
      _DeleteMailIDList = CreateDeleteMailIDListVector(builder, __DeleteMailIDList);
    }
    var _AddHistoryList = default(VectorOffset);
    if (_o.AddHistoryList != null) {
      var __AddHistoryList = new Offset<Lobby.MailInfo>[_o.AddHistoryList.Count];
      for (var _j = 0; _j < __AddHistoryList.Length; ++_j) { __AddHistoryList[_j] = Lobby.MailInfo.Pack(builder, _o.AddHistoryList[_j]); }
      _AddHistoryList = CreateAddHistoryListVector(builder, __AddHistoryList);
    }
    var _DeleteHistoryIDList = default(VectorOffset);
    if (_o.DeleteHistoryIDList != null) {
      var __DeleteHistoryIDList = _o.DeleteHistoryIDList.ToArray();
      _DeleteHistoryIDList = CreateDeleteHistoryIDListVector(builder, __DeleteHistoryIDList);
    }
    var _Reward = _o.Reward == null ? default(Offset<Lobby.RewardData>) : Lobby.RewardData.Pack(builder, _o.Reward);
    return CreateSA_MailReceiveAll(
      builder,
      _o.IsBM,
      _DeleteMailIDList,
      _AddHistoryList,
      _DeleteHistoryIDList,
      _Reward);
  }
}

public class SA_MailReceiveAllT
{
  public bool IsBM { get; set; }
  public List<long> DeleteMailIDList { get; set; }
  public List<Lobby.MailInfoT> AddHistoryList { get; set; }
  public List<long> DeleteHistoryIDList { get; set; }
  public Lobby.RewardDataT Reward { get; set; }

  public SA_MailReceiveAllT() {
    this.IsBM = false;
    this.DeleteMailIDList = null;
    this.AddHistoryList = null;
    this.DeleteHistoryIDList = null;
    this.Reward = null;
  }
}


}
