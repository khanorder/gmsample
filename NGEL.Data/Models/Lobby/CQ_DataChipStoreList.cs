// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_DataChipStoreList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_DataChipStoreList GetRootAsCQ_DataChipStoreList(ByteBuffer _bb) { return GetRootAsCQ_DataChipStoreList(_bb, new CQ_DataChipStoreList()); }
  public static CQ_DataChipStoreList GetRootAsCQ_DataChipStoreList(ByteBuffer _bb, CQ_DataChipStoreList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_DataChipStoreList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCQ_DataChipStoreList(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<Lobby.CQ_DataChipStoreList> EndCQ_DataChipStoreList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_DataChipStoreList>(o);
  }
  public CQ_DataChipStoreListT UnPack() {
    var _o = new CQ_DataChipStoreListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_DataChipStoreListT _o) {
  }
  public static Offset<Lobby.CQ_DataChipStoreList> Pack(FlatBufferBuilder builder, CQ_DataChipStoreListT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_DataChipStoreList>);
    StartCQ_DataChipStoreList(builder);
    return EndCQ_DataChipStoreList(builder);
  }
}

public class CQ_DataChipStoreListT
{

  public CQ_DataChipStoreListT() {
  }
}


}
