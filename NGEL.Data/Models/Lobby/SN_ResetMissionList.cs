// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_ResetMissionList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_ResetMissionList GetRootAsSN_ResetMissionList(ByteBuffer _bb) { return GetRootAsSN_ResetMissionList(_bb, new SN_ResetMissionList()); }
  public static SN_ResetMissionList GetRootAsSN_ResetMissionList(ByteBuffer _bb, SN_ResetMissionList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_ResetMissionList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.MissionData? MissionList(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.MissionData?)(new Lobby.MissionData()).__assign(__p.__vector(o) + j * 20, __p.bb) : null; }
  public int MissionListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public int DailyMissionResetAt { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SeasonMissionAddAt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.SN_ResetMissionList> CreateSN_ResetMissionList(FlatBufferBuilder builder,
      VectorOffset MissionListOffset = default(VectorOffset),
      int DailyMissionResetAt = 0,
      int SeasonMissionAddAt = 0) {
    builder.StartTable(3);
    SN_ResetMissionList.AddSeasonMissionAddAt(builder, SeasonMissionAddAt);
    SN_ResetMissionList.AddDailyMissionResetAt(builder, DailyMissionResetAt);
    SN_ResetMissionList.AddMissionList(builder, MissionListOffset);
    return SN_ResetMissionList.EndSN_ResetMissionList(builder);
  }

  public static void StartSN_ResetMissionList(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddMissionList(FlatBufferBuilder builder, VectorOffset MissionListOffset) { builder.AddOffset(0, MissionListOffset.Value, 0); }
  public static void StartMissionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(20, numElems, 4); }
  public static void AddDailyMissionResetAt(FlatBufferBuilder builder, int DailyMissionResetAt) { builder.AddInt(1, DailyMissionResetAt, 0); }
  public static void AddSeasonMissionAddAt(FlatBufferBuilder builder, int SeasonMissionAddAt) { builder.AddInt(2, SeasonMissionAddAt, 0); }
  public static Offset<Lobby.SN_ResetMissionList> EndSN_ResetMissionList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_ResetMissionList>(o);
  }
  public SN_ResetMissionListT UnPack() {
    var _o = new SN_ResetMissionListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_ResetMissionListT _o) {
    _o.MissionList = new List<Lobby.MissionDataT>();
    for (var _j = 0; _j < this.MissionListLength; ++_j) {_o.MissionList.Add(this.MissionList(_j).HasValue ? this.MissionList(_j).Value.UnPack() : null);}
    _o.DailyMissionResetAt = this.DailyMissionResetAt;
    _o.SeasonMissionAddAt = this.SeasonMissionAddAt;
  }
  public static Offset<Lobby.SN_ResetMissionList> Pack(FlatBufferBuilder builder, SN_ResetMissionListT _o) {
    if (_o == null) return default(Offset<Lobby.SN_ResetMissionList>);
    var _MissionList = default(VectorOffset);
    if (_o.MissionList != null) {
      StartMissionListVector(builder, _o.MissionList.Count);
      for (var _j = _o.MissionList.Count - 1; _j >= 0; --_j) { Lobby.MissionData.Pack(builder, _o.MissionList[_j]); }
      _MissionList = builder.EndVector();
    }
    return CreateSN_ResetMissionList(
      builder,
      _MissionList,
      _o.DailyMissionResetAt,
      _o.SeasonMissionAddAt);
  }
}

public class SN_ResetMissionListT
{
  public List<Lobby.MissionDataT> MissionList { get; set; }
  public int DailyMissionResetAt { get; set; }
  public int SeasonMissionAddAt { get; set; }

  public SN_ResetMissionListT() {
    this.MissionList = null;
    this.DailyMissionResetAt = 0;
    this.SeasonMissionAddAt = 0;
  }
}


}
