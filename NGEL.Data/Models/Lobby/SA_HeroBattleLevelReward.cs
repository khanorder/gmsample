// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_HeroBattleLevelReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_HeroBattleLevelReward GetRootAsSA_HeroBattleLevelReward(ByteBuffer _bb) { return GetRootAsSA_HeroBattleLevelReward(_bb, new SA_HeroBattleLevelReward()); }
  public static SA_HeroBattleLevelReward GetRootAsSA_HeroBattleLevelReward(ByteBuffer _bb, SA_HeroBattleLevelReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_HeroBattleLevelReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int HeroID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardedLevel { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Lobby.RewardData? BattleLevelReward { get { int o = __p.__offset(8); return o != 0 ? (Lobby.RewardData?)(new Lobby.RewardData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Lobby.SA_HeroBattleLevelReward> CreateSA_HeroBattleLevelReward(FlatBufferBuilder builder,
      int HeroID = 0,
      int RewardedLevel = 0,
      Offset<Lobby.RewardData> BattleLevelRewardOffset = default(Offset<Lobby.RewardData>)) {
    builder.StartTable(3);
    SA_HeroBattleLevelReward.AddBattleLevelReward(builder, BattleLevelRewardOffset);
    SA_HeroBattleLevelReward.AddRewardedLevel(builder, RewardedLevel);
    SA_HeroBattleLevelReward.AddHeroID(builder, HeroID);
    return SA_HeroBattleLevelReward.EndSA_HeroBattleLevelReward(builder);
  }

  public static void StartSA_HeroBattleLevelReward(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddHeroID(FlatBufferBuilder builder, int HeroID) { builder.AddInt(0, HeroID, 0); }
  public static void AddRewardedLevel(FlatBufferBuilder builder, int RewardedLevel) { builder.AddInt(1, RewardedLevel, 0); }
  public static void AddBattleLevelReward(FlatBufferBuilder builder, Offset<Lobby.RewardData> BattleLevelRewardOffset) { builder.AddOffset(2, BattleLevelRewardOffset.Value, 0); }
  public static Offset<Lobby.SA_HeroBattleLevelReward> EndSA_HeroBattleLevelReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_HeroBattleLevelReward>(o);
  }
  public SA_HeroBattleLevelRewardT UnPack() {
    var _o = new SA_HeroBattleLevelRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_HeroBattleLevelRewardT _o) {
    _o.HeroID = this.HeroID;
    _o.RewardedLevel = this.RewardedLevel;
    _o.BattleLevelReward = this.BattleLevelReward.HasValue ? this.BattleLevelReward.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_HeroBattleLevelReward> Pack(FlatBufferBuilder builder, SA_HeroBattleLevelRewardT _o) {
    if (_o == null) return default(Offset<Lobby.SA_HeroBattleLevelReward>);
    var _BattleLevelReward = _o.BattleLevelReward == null ? default(Offset<Lobby.RewardData>) : Lobby.RewardData.Pack(builder, _o.BattleLevelReward);
    return CreateSA_HeroBattleLevelReward(
      builder,
      _o.HeroID,
      _o.RewardedLevel,
      _BattleLevelReward);
  }
}

public class SA_HeroBattleLevelRewardT
{
  public int HeroID { get; set; }
  public int RewardedLevel { get; set; }
  public Lobby.RewardDataT BattleLevelReward { get; set; }

  public SA_HeroBattleLevelRewardT() {
    this.HeroID = 0;
    this.RewardedLevel = 0;
    this.BattleLevelReward = null;
  }
}


}
