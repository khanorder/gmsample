// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UserAccountData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static UserAccountData GetRootAsUserAccountData(ByteBuffer _bb) { return GetRootAsUserAccountData(_bb, new UserAccountData()); }
  public static UserAccountData GetRootAsUserAccountData(ByteBuffer _bb, UserAccountData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UserAccountData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string WUID { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWUIDBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetWUIDBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetWUIDArray() { return __p.__vector_as_array<byte>(6); }
  public string Nick { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNickBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNickArray() { return __p.__vector_as_array<byte>(8); }
  public int HeroID { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProfileIconID { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProfileBGID { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntitlementID { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long PetUniqueID { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int VehicleID { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LastClearChapterID { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsGlitchTutorialComplete { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsGoldClashTutorialComplete { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string LastPosition { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLastPositionBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetLastPositionBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetLastPositionArray() { return __p.__vector_as_array<byte>(28); }
  public int AddArtifactDeckCount { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PenaltyReportCount { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LastPenaltyReportAt { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IntroduceID { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.UserAccountData> CreateUserAccountData(FlatBufferBuilder builder,
      int UID = 0,
      StringOffset WUIDOffset = default(StringOffset),
      StringOffset NickOffset = default(StringOffset),
      int HeroID = 0,
      int ProfileIconID = 0,
      int ProfileBGID = 0,
      int EntitlementID = 0,
      long PetUniqueID = 0,
      int VehicleID = 0,
      int LastClearChapterID = 0,
      bool IsGlitchTutorialComplete = false,
      bool IsGoldClashTutorialComplete = false,
      StringOffset LastPositionOffset = default(StringOffset),
      int AddArtifactDeckCount = 0,
      int PenaltyReportCount = 0,
      int LastPenaltyReportAt = 0,
      int IntroduceID = 0) {
    builder.StartTable(17);
    UserAccountData.AddPetUniqueID(builder, PetUniqueID);
    UserAccountData.AddIntroduceID(builder, IntroduceID);
    UserAccountData.AddLastPenaltyReportAt(builder, LastPenaltyReportAt);
    UserAccountData.AddPenaltyReportCount(builder, PenaltyReportCount);
    UserAccountData.AddAddArtifactDeckCount(builder, AddArtifactDeckCount);
    UserAccountData.AddLastPosition(builder, LastPositionOffset);
    UserAccountData.AddLastClearChapterID(builder, LastClearChapterID);
    UserAccountData.AddVehicleID(builder, VehicleID);
    UserAccountData.AddEntitlementID(builder, EntitlementID);
    UserAccountData.AddProfileBGID(builder, ProfileBGID);
    UserAccountData.AddProfileIconID(builder, ProfileIconID);
    UserAccountData.AddHeroID(builder, HeroID);
    UserAccountData.AddNick(builder, NickOffset);
    UserAccountData.AddWUID(builder, WUIDOffset);
    UserAccountData.AddUID(builder, UID);
    UserAccountData.AddIsGoldClashTutorialComplete(builder, IsGoldClashTutorialComplete);
    UserAccountData.AddIsGlitchTutorialComplete(builder, IsGlitchTutorialComplete);
    return UserAccountData.EndUserAccountData(builder);
  }

  public static void StartUserAccountData(FlatBufferBuilder builder) { builder.StartTable(17); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(0, UID, 0); }
  public static void AddWUID(FlatBufferBuilder builder, StringOffset WUIDOffset) { builder.AddOffset(1, WUIDOffset.Value, 0); }
  public static void AddNick(FlatBufferBuilder builder, StringOffset NickOffset) { builder.AddOffset(2, NickOffset.Value, 0); }
  public static void AddHeroID(FlatBufferBuilder builder, int HeroID) { builder.AddInt(3, HeroID, 0); }
  public static void AddProfileIconID(FlatBufferBuilder builder, int ProfileIconID) { builder.AddInt(4, ProfileIconID, 0); }
  public static void AddProfileBGID(FlatBufferBuilder builder, int ProfileBGID) { builder.AddInt(5, ProfileBGID, 0); }
  public static void AddEntitlementID(FlatBufferBuilder builder, int EntitlementID) { builder.AddInt(6, EntitlementID, 0); }
  public static void AddPetUniqueID(FlatBufferBuilder builder, long PetUniqueID) { builder.AddLong(7, PetUniqueID, 0); }
  public static void AddVehicleID(FlatBufferBuilder builder, int VehicleID) { builder.AddInt(8, VehicleID, 0); }
  public static void AddLastClearChapterID(FlatBufferBuilder builder, int LastClearChapterID) { builder.AddInt(9, LastClearChapterID, 0); }
  public static void AddIsGlitchTutorialComplete(FlatBufferBuilder builder, bool IsGlitchTutorialComplete) { builder.AddBool(10, IsGlitchTutorialComplete, false); }
  public static void AddIsGoldClashTutorialComplete(FlatBufferBuilder builder, bool IsGoldClashTutorialComplete) { builder.AddBool(11, IsGoldClashTutorialComplete, false); }
  public static void AddLastPosition(FlatBufferBuilder builder, StringOffset LastPositionOffset) { builder.AddOffset(12, LastPositionOffset.Value, 0); }
  public static void AddAddArtifactDeckCount(FlatBufferBuilder builder, int AddArtifactDeckCount) { builder.AddInt(13, AddArtifactDeckCount, 0); }
  public static void AddPenaltyReportCount(FlatBufferBuilder builder, int PenaltyReportCount) { builder.AddInt(14, PenaltyReportCount, 0); }
  public static void AddLastPenaltyReportAt(FlatBufferBuilder builder, int LastPenaltyReportAt) { builder.AddInt(15, LastPenaltyReportAt, 0); }
  public static void AddIntroduceID(FlatBufferBuilder builder, int IntroduceID) { builder.AddInt(16, IntroduceID, 0); }
  public static Offset<Lobby.UserAccountData> EndUserAccountData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.UserAccountData>(o);
  }
  public UserAccountDataT UnPack() {
    var _o = new UserAccountDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(UserAccountDataT _o) {
    _o.UID = this.UID;
    _o.WUID = this.WUID;
    _o.Nick = this.Nick;
    _o.HeroID = this.HeroID;
    _o.ProfileIconID = this.ProfileIconID;
    _o.ProfileBGID = this.ProfileBGID;
    _o.EntitlementID = this.EntitlementID;
    _o.PetUniqueID = this.PetUniqueID;
    _o.VehicleID = this.VehicleID;
    _o.LastClearChapterID = this.LastClearChapterID;
    _o.IsGlitchTutorialComplete = this.IsGlitchTutorialComplete;
    _o.IsGoldClashTutorialComplete = this.IsGoldClashTutorialComplete;
    _o.LastPosition = this.LastPosition;
    _o.AddArtifactDeckCount = this.AddArtifactDeckCount;
    _o.PenaltyReportCount = this.PenaltyReportCount;
    _o.LastPenaltyReportAt = this.LastPenaltyReportAt;
    _o.IntroduceID = this.IntroduceID;
  }
  public static Offset<Lobby.UserAccountData> Pack(FlatBufferBuilder builder, UserAccountDataT _o) {
    if (_o == null) return default(Offset<Lobby.UserAccountData>);
    var _WUID = _o.WUID == null ? default(StringOffset) : builder.CreateString(_o.WUID);
    var _Nick = _o.Nick == null ? default(StringOffset) : builder.CreateString(_o.Nick);
    var _LastPosition = _o.LastPosition == null ? default(StringOffset) : builder.CreateString(_o.LastPosition);
    return CreateUserAccountData(
      builder,
      _o.UID,
      _WUID,
      _Nick,
      _o.HeroID,
      _o.ProfileIconID,
      _o.ProfileBGID,
      _o.EntitlementID,
      _o.PetUniqueID,
      _o.VehicleID,
      _o.LastClearChapterID,
      _o.IsGlitchTutorialComplete,
      _o.IsGoldClashTutorialComplete,
      _LastPosition,
      _o.AddArtifactDeckCount,
      _o.PenaltyReportCount,
      _o.LastPenaltyReportAt,
      _o.IntroduceID);
  }
}

public class UserAccountDataT
{
  public int UID { get; set; }
  public string WUID { get; set; }
  public string Nick { get; set; }
  public int HeroID { get; set; }
  public int ProfileIconID { get; set; }
  public int ProfileBGID { get; set; }
  public int EntitlementID { get; set; }
  public long PetUniqueID { get; set; }
  public int VehicleID { get; set; }
  public int LastClearChapterID { get; set; }
  public bool IsGlitchTutorialComplete { get; set; }
  public bool IsGoldClashTutorialComplete { get; set; }
  public string LastPosition { get; set; }
  public int AddArtifactDeckCount { get; set; }
  public int PenaltyReportCount { get; set; }
  public int LastPenaltyReportAt { get; set; }
  public int IntroduceID { get; set; }

  public UserAccountDataT() {
    this.UID = 0;
    this.WUID = null;
    this.Nick = null;
    this.HeroID = 0;
    this.ProfileIconID = 0;
    this.ProfileBGID = 0;
    this.EntitlementID = 0;
    this.PetUniqueID = 0;
    this.VehicleID = 0;
    this.LastClearChapterID = 0;
    this.IsGlitchTutorialComplete = false;
    this.IsGoldClashTutorialComplete = false;
    this.LastPosition = null;
    this.AddArtifactDeckCount = 0;
    this.PenaltyReportCount = 0;
    this.LastPenaltyReportAt = 0;
    this.IntroduceID = 0;
  }
}


}
