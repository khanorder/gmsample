// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_BattleStoreHistory : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_BattleStoreHistory GetRootAsSA_BattleStoreHistory(ByteBuffer _bb) { return GetRootAsSA_BattleStoreHistory(_bb, new SA_BattleStoreHistory()); }
  public static SA_BattleStoreHistory GetRootAsSA_BattleStoreHistory(ByteBuffer _bb, SA_BattleStoreHistory obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_BattleStoreHistory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.BattleStoreHistoryData? HistoryList(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.BattleStoreHistoryData?)(new Lobby.BattleStoreHistoryData()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int HistoryListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.SA_BattleStoreHistory> CreateSA_BattleStoreHistory(FlatBufferBuilder builder,
      VectorOffset HistoryListOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SA_BattleStoreHistory.AddHistoryList(builder, HistoryListOffset);
    return SA_BattleStoreHistory.EndSA_BattleStoreHistory(builder);
  }

  public static void StartSA_BattleStoreHistory(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddHistoryList(FlatBufferBuilder builder, VectorOffset HistoryListOffset) { builder.AddOffset(0, HistoryListOffset.Value, 0); }
  public static void StartHistoryListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static Offset<Lobby.SA_BattleStoreHistory> EndSA_BattleStoreHistory(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_BattleStoreHistory>(o);
  }
  public SA_BattleStoreHistoryT UnPack() {
    var _o = new SA_BattleStoreHistoryT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_BattleStoreHistoryT _o) {
    _o.HistoryList = new List<Lobby.BattleStoreHistoryDataT>();
    for (var _j = 0; _j < this.HistoryListLength; ++_j) {_o.HistoryList.Add(this.HistoryList(_j).HasValue ? this.HistoryList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.SA_BattleStoreHistory> Pack(FlatBufferBuilder builder, SA_BattleStoreHistoryT _o) {
    if (_o == null) return default(Offset<Lobby.SA_BattleStoreHistory>);
    var _HistoryList = default(VectorOffset);
    if (_o.HistoryList != null) {
      StartHistoryListVector(builder, _o.HistoryList.Count);
      for (var _j = _o.HistoryList.Count - 1; _j >= 0; --_j) { Lobby.BattleStoreHistoryData.Pack(builder, _o.HistoryList[_j]); }
      _HistoryList = builder.EndVector();
    }
    return CreateSA_BattleStoreHistory(
      builder,
      _HistoryList);
  }
}

public class SA_BattleStoreHistoryT
{
  public List<Lobby.BattleStoreHistoryDataT> HistoryList { get; set; }

  public SA_BattleStoreHistoryT() {
    this.HistoryList = null;
  }
}


}
