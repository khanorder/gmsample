// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LobbyToLobby_MatchingStartMatch : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static LobbyToLobby_MatchingStartMatch GetRootAsLobbyToLobby_MatchingStartMatch(ByteBuffer _bb) { return GetRootAsLobbyToLobby_MatchingStartMatch(_bb, new LobbyToLobby_MatchingStartMatch()); }
  public static LobbyToLobby_MatchingStartMatch GetRootAsLobbyToLobby_MatchingStartMatch(ByteBuffer _bb, LobbyToLobby_MatchingStartMatch obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LobbyToLobby_MatchingStartMatch __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MatchingTableID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string MatchTicket { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMatchTicketBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMatchTicketBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMatchTicketArray() { return __p.__vector_as_array<byte>(6); }
  public string PlayerIDList(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int PlayerIDListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.LobbyToLobby_MatchingStartMatch> CreateLobbyToLobby_MatchingStartMatch(FlatBufferBuilder builder,
      int MatchingTableID = 0,
      StringOffset MatchTicketOffset = default(StringOffset),
      VectorOffset PlayerIDListOffset = default(VectorOffset)) {
    builder.StartTable(3);
    LobbyToLobby_MatchingStartMatch.AddPlayerIDList(builder, PlayerIDListOffset);
    LobbyToLobby_MatchingStartMatch.AddMatchTicket(builder, MatchTicketOffset);
    LobbyToLobby_MatchingStartMatch.AddMatchingTableID(builder, MatchingTableID);
    return LobbyToLobby_MatchingStartMatch.EndLobbyToLobby_MatchingStartMatch(builder);
  }

  public static void StartLobbyToLobby_MatchingStartMatch(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddMatchingTableID(FlatBufferBuilder builder, int MatchingTableID) { builder.AddInt(0, MatchingTableID, 0); }
  public static void AddMatchTicket(FlatBufferBuilder builder, StringOffset MatchTicketOffset) { builder.AddOffset(1, MatchTicketOffset.Value, 0); }
  public static void AddPlayerIDList(FlatBufferBuilder builder, VectorOffset PlayerIDListOffset) { builder.AddOffset(2, PlayerIDListOffset.Value, 0); }
  public static VectorOffset CreatePlayerIDListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlayerIDListVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerIDListVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerIDListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPlayerIDListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Lobby.LobbyToLobby_MatchingStartMatch> EndLobbyToLobby_MatchingStartMatch(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.LobbyToLobby_MatchingStartMatch>(o);
  }
  public LobbyToLobby_MatchingStartMatchT UnPack() {
    var _o = new LobbyToLobby_MatchingStartMatchT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LobbyToLobby_MatchingStartMatchT _o) {
    _o.MatchingTableID = this.MatchingTableID;
    _o.MatchTicket = this.MatchTicket;
    _o.PlayerIDList = new List<string>();
    for (var _j = 0; _j < this.PlayerIDListLength; ++_j) {_o.PlayerIDList.Add(this.PlayerIDList(_j));}
  }
  public static Offset<Lobby.LobbyToLobby_MatchingStartMatch> Pack(FlatBufferBuilder builder, LobbyToLobby_MatchingStartMatchT _o) {
    if (_o == null) return default(Offset<Lobby.LobbyToLobby_MatchingStartMatch>);
    var _MatchTicket = _o.MatchTicket == null ? default(StringOffset) : builder.CreateString(_o.MatchTicket);
    var _PlayerIDList = default(VectorOffset);
    if (_o.PlayerIDList != null) {
      var __PlayerIDList = new StringOffset[_o.PlayerIDList.Count];
      for (var _j = 0; _j < __PlayerIDList.Length; ++_j) { __PlayerIDList[_j] = builder.CreateString(_o.PlayerIDList[_j]); }
      _PlayerIDList = CreatePlayerIDListVector(builder, __PlayerIDList);
    }
    return CreateLobbyToLobby_MatchingStartMatch(
      builder,
      _o.MatchingTableID,
      _MatchTicket,
      _PlayerIDList);
  }
}

public class LobbyToLobby_MatchingStartMatchT
{
  public int MatchingTableID { get; set; }
  public string MatchTicket { get; set; }
  public List<string> PlayerIDList { get; set; }

  public LobbyToLobby_MatchingStartMatchT() {
    this.MatchingTableID = 0;
    this.MatchTicket = null;
    this.PlayerIDList = null;
  }
}


}
