// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_HeroSkinColorChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_HeroSkinColorChange GetRootAsCQ_HeroSkinColorChange(ByteBuffer _bb) { return GetRootAsCQ_HeroSkinColorChange(_bb, new CQ_HeroSkinColorChange()); }
  public static CQ_HeroSkinColorChange GetRootAsCQ_HeroSkinColorChange(ByteBuffer _bb, CQ_HeroSkinColorChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_HeroSkinColorChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.HeroSkinColorChangeData? ColorChangeSkinList(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.HeroSkinColorChangeData?)(new Lobby.HeroSkinColorChangeData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ColorChangeSkinListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.CQ_HeroSkinColorChange> CreateCQ_HeroSkinColorChange(FlatBufferBuilder builder,
      VectorOffset ColorChangeSkinListOffset = default(VectorOffset)) {
    builder.StartTable(1);
    CQ_HeroSkinColorChange.AddColorChangeSkinList(builder, ColorChangeSkinListOffset);
    return CQ_HeroSkinColorChange.EndCQ_HeroSkinColorChange(builder);
  }

  public static void StartCQ_HeroSkinColorChange(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddColorChangeSkinList(FlatBufferBuilder builder, VectorOffset ColorChangeSkinListOffset) { builder.AddOffset(0, ColorChangeSkinListOffset.Value, 0); }
  public static VectorOffset CreateColorChangeSkinListVector(FlatBufferBuilder builder, Offset<Lobby.HeroSkinColorChangeData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateColorChangeSkinListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.HeroSkinColorChangeData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateColorChangeSkinListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.HeroSkinColorChangeData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateColorChangeSkinListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.HeroSkinColorChangeData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartColorChangeSkinListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Lobby.CQ_HeroSkinColorChange> EndCQ_HeroSkinColorChange(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_HeroSkinColorChange>(o);
  }
  public CQ_HeroSkinColorChangeT UnPack() {
    var _o = new CQ_HeroSkinColorChangeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_HeroSkinColorChangeT _o) {
    _o.ColorChangeSkinList = new List<Lobby.HeroSkinColorChangeDataT>();
    for (var _j = 0; _j < this.ColorChangeSkinListLength; ++_j) {_o.ColorChangeSkinList.Add(this.ColorChangeSkinList(_j).HasValue ? this.ColorChangeSkinList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.CQ_HeroSkinColorChange> Pack(FlatBufferBuilder builder, CQ_HeroSkinColorChangeT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_HeroSkinColorChange>);
    var _ColorChangeSkinList = default(VectorOffset);
    if (_o.ColorChangeSkinList != null) {
      var __ColorChangeSkinList = new Offset<Lobby.HeroSkinColorChangeData>[_o.ColorChangeSkinList.Count];
      for (var _j = 0; _j < __ColorChangeSkinList.Length; ++_j) { __ColorChangeSkinList[_j] = Lobby.HeroSkinColorChangeData.Pack(builder, _o.ColorChangeSkinList[_j]); }
      _ColorChangeSkinList = CreateColorChangeSkinListVector(builder, __ColorChangeSkinList);
    }
    return CreateCQ_HeroSkinColorChange(
      builder,
      _ColorChangeSkinList);
  }
}

public class CQ_HeroSkinColorChangeT
{
  public List<Lobby.HeroSkinColorChangeDataT> ColorChangeSkinList { get; set; }

  public CQ_HeroSkinColorChangeT() {
    this.ColorChangeSkinList = null;
  }
}


}
