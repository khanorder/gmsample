// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_BillingCheck : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_BillingCheck GetRootAsSA_BillingCheck(ByteBuffer _bb) { return GetRootAsSA_BillingCheck(_bb, new SA_BillingCheck()); }
  public static SA_BillingCheck GetRootAsSA_BillingCheck(ByteBuffer _bb, SA_BillingCheck obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_BillingCheck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string StoveProductID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStoveProductIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetStoveProductIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetStoveProductIDArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Lobby.SA_BillingCheck> CreateSA_BillingCheck(FlatBufferBuilder builder,
      StringOffset StoveProductIDOffset = default(StringOffset)) {
    builder.StartTable(1);
    SA_BillingCheck.AddStoveProductID(builder, StoveProductIDOffset);
    return SA_BillingCheck.EndSA_BillingCheck(builder);
  }

  public static void StartSA_BillingCheck(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddStoveProductID(FlatBufferBuilder builder, StringOffset StoveProductIDOffset) { builder.AddOffset(0, StoveProductIDOffset.Value, 0); }
  public static Offset<Lobby.SA_BillingCheck> EndSA_BillingCheck(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_BillingCheck>(o);
  }
  public SA_BillingCheckT UnPack() {
    var _o = new SA_BillingCheckT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_BillingCheckT _o) {
    _o.StoveProductID = this.StoveProductID;
  }
  public static Offset<Lobby.SA_BillingCheck> Pack(FlatBufferBuilder builder, SA_BillingCheckT _o) {
    if (_o == null) return default(Offset<Lobby.SA_BillingCheck>);
    var _StoveProductID = _o.StoveProductID == null ? default(StringOffset) : builder.CreateString(_o.StoveProductID);
    return CreateSA_BillingCheck(
      builder,
      _StoveProductID);
  }
}

public class SA_BillingCheckT
{
  public string StoveProductID { get; set; }

  public SA_BillingCheckT() {
    this.StoveProductID = null;
  }
}


}
