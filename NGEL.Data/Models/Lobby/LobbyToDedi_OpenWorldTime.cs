// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LobbyToDedi_OpenWorldTime : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static LobbyToDedi_OpenWorldTime GetRootAsLobbyToDedi_OpenWorldTime(ByteBuffer _bb) { return GetRootAsLobbyToDedi_OpenWorldTime(_bb, new LobbyToDedi_OpenWorldTime()); }
  public static LobbyToDedi_OpenWorldTime GetRootAsLobbyToDedi_OpenWorldTime(ByteBuffer _bb, LobbyToDedi_OpenWorldTime obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LobbyToDedi_OpenWorldTime __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int StartAt { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Minutes { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float Multiply { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<Lobby.LobbyToDedi_OpenWorldTime> CreateLobbyToDedi_OpenWorldTime(FlatBufferBuilder builder,
      int StartAt = 0,
      int Minutes = 0,
      float Multiply = 0.0f) {
    builder.StartTable(3);
    LobbyToDedi_OpenWorldTime.AddMultiply(builder, Multiply);
    LobbyToDedi_OpenWorldTime.AddMinutes(builder, Minutes);
    LobbyToDedi_OpenWorldTime.AddStartAt(builder, StartAt);
    return LobbyToDedi_OpenWorldTime.EndLobbyToDedi_OpenWorldTime(builder);
  }

  public static void StartLobbyToDedi_OpenWorldTime(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddStartAt(FlatBufferBuilder builder, int StartAt) { builder.AddInt(0, StartAt, 0); }
  public static void AddMinutes(FlatBufferBuilder builder, int Minutes) { builder.AddInt(1, Minutes, 0); }
  public static void AddMultiply(FlatBufferBuilder builder, float Multiply) { builder.AddFloat(2, Multiply, 0.0f); }
  public static Offset<Lobby.LobbyToDedi_OpenWorldTime> EndLobbyToDedi_OpenWorldTime(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.LobbyToDedi_OpenWorldTime>(o);
  }
  public LobbyToDedi_OpenWorldTimeT UnPack() {
    var _o = new LobbyToDedi_OpenWorldTimeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LobbyToDedi_OpenWorldTimeT _o) {
    _o.StartAt = this.StartAt;
    _o.Minutes = this.Minutes;
    _o.Multiply = this.Multiply;
  }
  public static Offset<Lobby.LobbyToDedi_OpenWorldTime> Pack(FlatBufferBuilder builder, LobbyToDedi_OpenWorldTimeT _o) {
    if (_o == null) return default(Offset<Lobby.LobbyToDedi_OpenWorldTime>);
    return CreateLobbyToDedi_OpenWorldTime(
      builder,
      _o.StartAt,
      _o.Minutes,
      _o.Multiply);
  }
}

public class LobbyToDedi_OpenWorldTimeT
{
  public int StartAt { get; set; }
  public int Minutes { get; set; }
  public float Multiply { get; set; }

  public LobbyToDedi_OpenWorldTimeT() {
    this.StartAt = 0;
    this.Minutes = 0;
    this.Multiply = 0.0f;
  }
}


}
