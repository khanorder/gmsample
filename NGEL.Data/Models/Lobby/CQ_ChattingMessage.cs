// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_ChattingMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_ChattingMessage GetRootAsCQ_ChattingMessage(ByteBuffer _bb) { return GetRootAsCQ_ChattingMessage(_bb, new CQ_ChattingMessage()); }
  public static CQ_ChattingMessage GetRootAsCQ_ChattingMessage(ByteBuffer _bb, CQ_ChattingMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_ChattingMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EChatType ChatType { get { int o = __p.__offset(4); return o != 0 ? (Lobby.EChatType)__p.bb.Get(o + __p.bb_pos) : Lobby.EChatType.None; } }
  public int ProfileIconID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Message { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<Lobby.CQ_ChattingMessage> CreateCQ_ChattingMessage(FlatBufferBuilder builder,
      Lobby.EChatType ChatType = Lobby.EChatType.None,
      int ProfileIconID = 0,
      StringOffset MessageOffset = default(StringOffset)) {
    builder.StartTable(3);
    CQ_ChattingMessage.AddMessage(builder, MessageOffset);
    CQ_ChattingMessage.AddProfileIconID(builder, ProfileIconID);
    CQ_ChattingMessage.AddChatType(builder, ChatType);
    return CQ_ChattingMessage.EndCQ_ChattingMessage(builder);
  }

  public static void StartCQ_ChattingMessage(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddChatType(FlatBufferBuilder builder, Lobby.EChatType ChatType) { builder.AddByte(0, (byte)ChatType, 0); }
  public static void AddProfileIconID(FlatBufferBuilder builder, int ProfileIconID) { builder.AddInt(1, ProfileIconID, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset MessageOffset) { builder.AddOffset(2, MessageOffset.Value, 0); }
  public static Offset<Lobby.CQ_ChattingMessage> EndCQ_ChattingMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_ChattingMessage>(o);
  }
  public CQ_ChattingMessageT UnPack() {
    var _o = new CQ_ChattingMessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_ChattingMessageT _o) {
    _o.ChatType = this.ChatType;
    _o.ProfileIconID = this.ProfileIconID;
    _o.Message = this.Message;
  }
  public static Offset<Lobby.CQ_ChattingMessage> Pack(FlatBufferBuilder builder, CQ_ChattingMessageT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_ChattingMessage>);
    var _Message = _o.Message == null ? default(StringOffset) : builder.CreateString(_o.Message);
    return CreateCQ_ChattingMessage(
      builder,
      _o.ChatType,
      _o.ProfileIconID,
      _Message);
  }
}

public class CQ_ChattingMessageT
{
  public Lobby.EChatType ChatType { get; set; }
  public int ProfileIconID { get; set; }
  public string Message { get; set; }

  public CQ_ChattingMessageT() {
    this.ChatType = Lobby.EChatType.None;
    this.ProfileIconID = 0;
    this.Message = null;
  }
}


}
