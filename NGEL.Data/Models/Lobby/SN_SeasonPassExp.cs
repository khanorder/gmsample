// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_SeasonPassExp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_SeasonPassExp GetRootAsSN_SeasonPassExp(ByteBuffer _bb) { return GetRootAsSN_SeasonPassExp(_bb, new SN_SeasonPassExp()); }
  public static SN_SeasonPassExp GetRootAsSN_SeasonPassExp(ByteBuffer _bb, SN_SeasonPassExp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_SeasonPassExp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int SeasonPassID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Exp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.SN_SeasonPassExp> CreateSN_SeasonPassExp(FlatBufferBuilder builder,
      int SeasonPassID = 0,
      int Level = 0,
      int Exp = 0) {
    builder.StartTable(3);
    SN_SeasonPassExp.AddExp(builder, Exp);
    SN_SeasonPassExp.AddLevel(builder, Level);
    SN_SeasonPassExp.AddSeasonPassID(builder, SeasonPassID);
    return SN_SeasonPassExp.EndSN_SeasonPassExp(builder);
  }

  public static void StartSN_SeasonPassExp(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSeasonPassID(FlatBufferBuilder builder, int SeasonPassID) { builder.AddInt(0, SeasonPassID, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(1, Level, 0); }
  public static void AddExp(FlatBufferBuilder builder, int Exp) { builder.AddInt(2, Exp, 0); }
  public static Offset<Lobby.SN_SeasonPassExp> EndSN_SeasonPassExp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_SeasonPassExp>(o);
  }
  public SN_SeasonPassExpT UnPack() {
    var _o = new SN_SeasonPassExpT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_SeasonPassExpT _o) {
    _o.SeasonPassID = this.SeasonPassID;
    _o.Level = this.Level;
    _o.Exp = this.Exp;
  }
  public static Offset<Lobby.SN_SeasonPassExp> Pack(FlatBufferBuilder builder, SN_SeasonPassExpT _o) {
    if (_o == null) return default(Offset<Lobby.SN_SeasonPassExp>);
    return CreateSN_SeasonPassExp(
      builder,
      _o.SeasonPassID,
      _o.Level,
      _o.Exp);
  }
}

public class SN_SeasonPassExpT
{
  public int SeasonPassID { get; set; }
  public int Level { get; set; }
  public int Exp { get; set; }

  public SN_SeasonPassExpT() {
    this.SeasonPassID = 0;
    this.Level = 0;
    this.Exp = 0;
  }
}


}
