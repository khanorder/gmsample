// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_MatchingChangeHero : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_MatchingChangeHero GetRootAsCQ_MatchingChangeHero(ByteBuffer _bb) { return GetRootAsCQ_MatchingChangeHero(_bb, new CQ_MatchingChangeHero()); }
  public static CQ_MatchingChangeHero GetRootAsCQ_MatchingChangeHero(ByteBuffer _bb, CQ_MatchingChangeHero obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_MatchingChangeHero __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MatchingTableID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string MatchID { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMatchIDBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMatchIDBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMatchIDArray() { return __p.__vector_as_array<byte>(6); }
  public string TeamID { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTeamIDBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTeamIDBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTeamIDArray() { return __p.__vector_as_array<byte>(8); }
  public int HeroID { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroSkinID { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.CQ_MatchingChangeHero> CreateCQ_MatchingChangeHero(FlatBufferBuilder builder,
      int MatchingTableID = 0,
      StringOffset MatchIDOffset = default(StringOffset),
      StringOffset TeamIDOffset = default(StringOffset),
      int HeroID = 0,
      int HeroSkinID = 0) {
    builder.StartTable(5);
    CQ_MatchingChangeHero.AddHeroSkinID(builder, HeroSkinID);
    CQ_MatchingChangeHero.AddHeroID(builder, HeroID);
    CQ_MatchingChangeHero.AddTeamID(builder, TeamIDOffset);
    CQ_MatchingChangeHero.AddMatchID(builder, MatchIDOffset);
    CQ_MatchingChangeHero.AddMatchingTableID(builder, MatchingTableID);
    return CQ_MatchingChangeHero.EndCQ_MatchingChangeHero(builder);
  }

  public static void StartCQ_MatchingChangeHero(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddMatchingTableID(FlatBufferBuilder builder, int MatchingTableID) { builder.AddInt(0, MatchingTableID, 0); }
  public static void AddMatchID(FlatBufferBuilder builder, StringOffset MatchIDOffset) { builder.AddOffset(1, MatchIDOffset.Value, 0); }
  public static void AddTeamID(FlatBufferBuilder builder, StringOffset TeamIDOffset) { builder.AddOffset(2, TeamIDOffset.Value, 0); }
  public static void AddHeroID(FlatBufferBuilder builder, int HeroID) { builder.AddInt(3, HeroID, 0); }
  public static void AddHeroSkinID(FlatBufferBuilder builder, int HeroSkinID) { builder.AddInt(4, HeroSkinID, 0); }
  public static Offset<Lobby.CQ_MatchingChangeHero> EndCQ_MatchingChangeHero(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_MatchingChangeHero>(o);
  }
  public CQ_MatchingChangeHeroT UnPack() {
    var _o = new CQ_MatchingChangeHeroT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_MatchingChangeHeroT _o) {
    _o.MatchingTableID = this.MatchingTableID;
    _o.MatchID = this.MatchID;
    _o.TeamID = this.TeamID;
    _o.HeroID = this.HeroID;
    _o.HeroSkinID = this.HeroSkinID;
  }
  public static Offset<Lobby.CQ_MatchingChangeHero> Pack(FlatBufferBuilder builder, CQ_MatchingChangeHeroT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_MatchingChangeHero>);
    var _MatchID = _o.MatchID == null ? default(StringOffset) : builder.CreateString(_o.MatchID);
    var _TeamID = _o.TeamID == null ? default(StringOffset) : builder.CreateString(_o.TeamID);
    return CreateCQ_MatchingChangeHero(
      builder,
      _o.MatchingTableID,
      _MatchID,
      _TeamID,
      _o.HeroID,
      _o.HeroSkinID);
  }
}

public class CQ_MatchingChangeHeroT
{
  public int MatchingTableID { get; set; }
  public string MatchID { get; set; }
  public string TeamID { get; set; }
  public int HeroID { get; set; }
  public int HeroSkinID { get; set; }

  public CQ_MatchingChangeHeroT() {
    this.MatchingTableID = 0;
    this.MatchID = null;
    this.TeamID = null;
    this.HeroID = 0;
    this.HeroSkinID = 0;
  }
}


}
