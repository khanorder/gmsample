// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_CheatAddSkin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_CheatAddSkin GetRootAsSA_CheatAddSkin(ByteBuffer _bb) { return GetRootAsSA_CheatAddSkin(_bb, new SA_CheatAddSkin()); }
  public static SA_CheatAddSkin GetRootAsSA_CheatAddSkin(ByteBuffer _bb, SA_CheatAddSkin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_CheatAddSkin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.HeroSkinData? NewHeroSkin { get { int o = __p.__offset(4); return o != 0 ? (Lobby.HeroSkinData?)(new Lobby.HeroSkinData()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartSA_CheatAddSkin(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddNewHeroSkin(FlatBufferBuilder builder, Offset<Lobby.HeroSkinData> newHeroSkinOffset) { builder.AddStruct(0, newHeroSkinOffset.Value, 0); }
  public static Offset<Lobby.SA_CheatAddSkin> EndSA_CheatAddSkin(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_CheatAddSkin>(o);
  }
  public SA_CheatAddSkinT UnPack() {
    var _o = new SA_CheatAddSkinT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_CheatAddSkinT _o) {
    _o.NewHeroSkin = this.NewHeroSkin.HasValue ? this.NewHeroSkin.Value.UnPack() : null;
  }
  public static Offset<Lobby.SA_CheatAddSkin> Pack(FlatBufferBuilder builder, SA_CheatAddSkinT _o) {
    if (_o == null) return default(Offset<Lobby.SA_CheatAddSkin>);
    StartSA_CheatAddSkin(builder);
    AddNewHeroSkin(builder, Lobby.HeroSkinData.Pack(builder, _o.NewHeroSkin));
    return EndSA_CheatAddSkin(builder);
  }
}

public class SA_CheatAddSkinT
{
  public Lobby.HeroSkinDataT NewHeroSkin { get; set; }

  public SA_CheatAddSkinT() {
    this.NewHeroSkin = new Lobby.HeroSkinDataT();
  }
}


}
