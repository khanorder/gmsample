// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_CustomGameAddAI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_CustomGameAddAI GetRootAsCQ_CustomGameAddAI(ByteBuffer _bb) { return GetRootAsCQ_CustomGameAddAI(_bb, new CQ_CustomGameAddAI()); }
  public static CQ_CustomGameAddAI GetRootAsCQ_CustomGameAddAI(ByteBuffer _bb, CQ_CustomGameAddAI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_CustomGameAddAI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string RoomID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoomIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetRoomIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRoomIDArray() { return __p.__vector_as_array<byte>(4); }
  public int SlotNo { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.CQ_CustomGameAddAI> CreateCQ_CustomGameAddAI(FlatBufferBuilder builder,
      StringOffset RoomIDOffset = default(StringOffset),
      int SlotNo = 0) {
    builder.StartTable(2);
    CQ_CustomGameAddAI.AddSlotNo(builder, SlotNo);
    CQ_CustomGameAddAI.AddRoomID(builder, RoomIDOffset);
    return CQ_CustomGameAddAI.EndCQ_CustomGameAddAI(builder);
  }

  public static void StartCQ_CustomGameAddAI(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRoomID(FlatBufferBuilder builder, StringOffset RoomIDOffset) { builder.AddOffset(0, RoomIDOffset.Value, 0); }
  public static void AddSlotNo(FlatBufferBuilder builder, int SlotNo) { builder.AddInt(1, SlotNo, 0); }
  public static Offset<Lobby.CQ_CustomGameAddAI> EndCQ_CustomGameAddAI(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_CustomGameAddAI>(o);
  }
  public CQ_CustomGameAddAIT UnPack() {
    var _o = new CQ_CustomGameAddAIT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_CustomGameAddAIT _o) {
    _o.RoomID = this.RoomID;
    _o.SlotNo = this.SlotNo;
  }
  public static Offset<Lobby.CQ_CustomGameAddAI> Pack(FlatBufferBuilder builder, CQ_CustomGameAddAIT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_CustomGameAddAI>);
    var _RoomID = _o.RoomID == null ? default(StringOffset) : builder.CreateString(_o.RoomID);
    return CreateCQ_CustomGameAddAI(
      builder,
      _RoomID,
      _o.SlotNo);
  }
}

public class CQ_CustomGameAddAIT
{
  public string RoomID { get; set; }
  public int SlotNo { get; set; }

  public CQ_CustomGameAddAIT() {
    this.RoomID = null;
    this.SlotNo = 0;
  }
}


}
