// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_UserDeviceProviderChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_UserDeviceProviderChange GetRootAsCQ_UserDeviceProviderChange(ByteBuffer _bb) { return GetRootAsCQ_UserDeviceProviderChange(_bb, new CQ_UserDeviceProviderChange()); }
  public static CQ_UserDeviceProviderChange GetRootAsCQ_UserDeviceProviderChange(ByteBuffer _bb, CQ_UserDeviceProviderChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_UserDeviceProviderChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EProvider ProviderList(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.EProvider)__p.bb.Get(__p.__vector(o) + j * 1) : (Lobby.EProvider)0; }
  public int ProviderListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<Lobby.EProvider> GetProviderListBytes() { return __p.__vector_as_span<Lobby.EProvider>(4, 1); }
#else
  public ArraySegment<byte>? GetProviderListBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public Lobby.EProvider[] GetProviderListArray() { int o = __p.__offset(4); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); Lobby.EProvider[] a = new Lobby.EProvider[l]; for (int i = 0; i < l; i++) { a[i] = (Lobby.EProvider)__p.bb.Get(p + i * 1); } return a; }

  public static Offset<Lobby.CQ_UserDeviceProviderChange> CreateCQ_UserDeviceProviderChange(FlatBufferBuilder builder,
      VectorOffset ProviderListOffset = default(VectorOffset)) {
    builder.StartTable(1);
    CQ_UserDeviceProviderChange.AddProviderList(builder, ProviderListOffset);
    return CQ_UserDeviceProviderChange.EndCQ_UserDeviceProviderChange(builder);
  }

  public static void StartCQ_UserDeviceProviderChange(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddProviderList(FlatBufferBuilder builder, VectorOffset ProviderListOffset) { builder.AddOffset(0, ProviderListOffset.Value, 0); }
  public static VectorOffset CreateProviderListVector(FlatBufferBuilder builder, Lobby.EProvider[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte((byte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateProviderListVectorBlock(FlatBufferBuilder builder, Lobby.EProvider[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateProviderListVectorBlock(FlatBufferBuilder builder, ArraySegment<Lobby.EProvider> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateProviderListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Lobby.EProvider>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartProviderListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<Lobby.CQ_UserDeviceProviderChange> EndCQ_UserDeviceProviderChange(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_UserDeviceProviderChange>(o);
  }
  public CQ_UserDeviceProviderChangeT UnPack() {
    var _o = new CQ_UserDeviceProviderChangeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_UserDeviceProviderChangeT _o) {
    _o.ProviderList = new List<Lobby.EProvider>();
    for (var _j = 0; _j < this.ProviderListLength; ++_j) {_o.ProviderList.Add(this.ProviderList(_j));}
  }
  public static Offset<Lobby.CQ_UserDeviceProviderChange> Pack(FlatBufferBuilder builder, CQ_UserDeviceProviderChangeT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_UserDeviceProviderChange>);
    var _ProviderList = default(VectorOffset);
    if (_o.ProviderList != null) {
      var __ProviderList = _o.ProviderList.ToArray();
      _ProviderList = CreateProviderListVector(builder, __ProviderList);
    }
    return CreateCQ_UserDeviceProviderChange(
      builder,
      _ProviderList);
  }
}

public class CQ_UserDeviceProviderChangeT
{
  public List<Lobby.EProvider> ProviderList { get; set; }

  public CQ_UserDeviceProviderChangeT() {
    this.ProviderList = null;
  }
}


}
