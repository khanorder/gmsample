// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_FriendState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_FriendState GetRootAsSN_FriendState(ByteBuffer _bb) { return GetRootAsSN_FriendState(_bb, new SN_FriendState()); }
  public static SN_FriendState GetRootAsSN_FriendState(ByteBuffer _bb, SN_FriendState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_FriendState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Lobby.EUserState UserState { get { int o = __p.__offset(6); return o != 0 ? (Lobby.EUserState)__p.bb.Get(o + __p.bb_pos) : Lobby.EUserState.None; } }
  public bool IsActive { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int LogoutAt { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.SN_FriendState> CreateSN_FriendState(FlatBufferBuilder builder,
      int UID = 0,
      Lobby.EUserState UserState = Lobby.EUserState.None,
      bool IsActive = false,
      int LogoutAt = 0) {
    builder.StartTable(4);
    SN_FriendState.AddLogoutAt(builder, LogoutAt);
    SN_FriendState.AddUID(builder, UID);
    SN_FriendState.AddIsActive(builder, IsActive);
    SN_FriendState.AddUserState(builder, UserState);
    return SN_FriendState.EndSN_FriendState(builder);
  }

  public static void StartSN_FriendState(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(0, UID, 0); }
  public static void AddUserState(FlatBufferBuilder builder, Lobby.EUserState UserState) { builder.AddByte(1, (byte)UserState, 0); }
  public static void AddIsActive(FlatBufferBuilder builder, bool IsActive) { builder.AddBool(2, IsActive, false); }
  public static void AddLogoutAt(FlatBufferBuilder builder, int LogoutAt) { builder.AddInt(3, LogoutAt, 0); }
  public static Offset<Lobby.SN_FriendState> EndSN_FriendState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_FriendState>(o);
  }
  public SN_FriendStateT UnPack() {
    var _o = new SN_FriendStateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_FriendStateT _o) {
    _o.UID = this.UID;
    _o.UserState = this.UserState;
    _o.IsActive = this.IsActive;
    _o.LogoutAt = this.LogoutAt;
  }
  public static Offset<Lobby.SN_FriendState> Pack(FlatBufferBuilder builder, SN_FriendStateT _o) {
    if (_o == null) return default(Offset<Lobby.SN_FriendState>);
    return CreateSN_FriendState(
      builder,
      _o.UID,
      _o.UserState,
      _o.IsActive,
      _o.LogoutAt);
  }
}

public class SN_FriendStateT
{
  public int UID { get; set; }
  public Lobby.EUserState UserState { get; set; }
  public bool IsActive { get; set; }
  public int LogoutAt { get; set; }

  public SN_FriendStateT() {
    this.UID = 0;
    this.UserState = Lobby.EUserState.None;
    this.IsActive = false;
    this.LogoutAt = 0;
  }
}


}
