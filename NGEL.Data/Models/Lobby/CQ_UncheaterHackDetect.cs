// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_UncheaterHackDetect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_UncheaterHackDetect GetRootAsCQ_UncheaterHackDetect(ByteBuffer _bb) { return GetRootAsCQ_UncheaterHackDetect(_bb, new CQ_UncheaterHackDetect()); }
  public static CQ_UncheaterHackDetect GetRootAsCQ_UncheaterHackDetect(ByteBuffer _bb, CQ_UncheaterHackDetect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_UncheaterHackDetect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EUncheaterReportType Type { get { int o = __p.__offset(4); return o != 0 ? (Lobby.EUncheaterReportType)__p.bb.Get(o + __p.bb_pos) : Lobby.EUncheaterReportType.None; } }
  public uint MajorCode { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint MinorCode { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Log { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetLogBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetLogArray() { return __p.__vector_as_array<byte>(10); }
  public string Path { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPathBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetPathBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetPathArray() { return __p.__vector_as_array<byte>(12); }
  public string Extra { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExtraBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetExtraBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetExtraArray() { return __p.__vector_as_array<byte>(14); }
  public string MemberNo { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMemberNoBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetMemberNoBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetMemberNoArray() { return __p.__vector_as_array<byte>(16); }
  public string NicknameNo { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicknameNoBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetNicknameNoBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetNicknameNoArray() { return __p.__vector_as_array<byte>(18); }
  public string TimeStamp { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimeStampBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetTimeStampBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetTimeStampArray() { return __p.__vector_as_array<byte>(20); }
  public uint Time { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<Lobby.CQ_UncheaterHackDetect> CreateCQ_UncheaterHackDetect(FlatBufferBuilder builder,
      Lobby.EUncheaterReportType Type = Lobby.EUncheaterReportType.None,
      uint MajorCode = 0,
      uint MinorCode = 0,
      StringOffset LogOffset = default(StringOffset),
      StringOffset PathOffset = default(StringOffset),
      StringOffset ExtraOffset = default(StringOffset),
      StringOffset MemberNoOffset = default(StringOffset),
      StringOffset NicknameNoOffset = default(StringOffset),
      StringOffset TimeStampOffset = default(StringOffset),
      uint Time = 0) {
    builder.StartTable(10);
    CQ_UncheaterHackDetect.AddTime(builder, Time);
    CQ_UncheaterHackDetect.AddTimeStamp(builder, TimeStampOffset);
    CQ_UncheaterHackDetect.AddNicknameNo(builder, NicknameNoOffset);
    CQ_UncheaterHackDetect.AddMemberNo(builder, MemberNoOffset);
    CQ_UncheaterHackDetect.AddExtra(builder, ExtraOffset);
    CQ_UncheaterHackDetect.AddPath(builder, PathOffset);
    CQ_UncheaterHackDetect.AddLog(builder, LogOffset);
    CQ_UncheaterHackDetect.AddMinorCode(builder, MinorCode);
    CQ_UncheaterHackDetect.AddMajorCode(builder, MajorCode);
    CQ_UncheaterHackDetect.AddType(builder, Type);
    return CQ_UncheaterHackDetect.EndCQ_UncheaterHackDetect(builder);
  }

  public static void StartCQ_UncheaterHackDetect(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddType(FlatBufferBuilder builder, Lobby.EUncheaterReportType Type) { builder.AddByte(0, (byte)Type, 0); }
  public static void AddMajorCode(FlatBufferBuilder builder, uint MajorCode) { builder.AddUint(1, MajorCode, 0); }
  public static void AddMinorCode(FlatBufferBuilder builder, uint MinorCode) { builder.AddUint(2, MinorCode, 0); }
  public static void AddLog(FlatBufferBuilder builder, StringOffset LogOffset) { builder.AddOffset(3, LogOffset.Value, 0); }
  public static void AddPath(FlatBufferBuilder builder, StringOffset PathOffset) { builder.AddOffset(4, PathOffset.Value, 0); }
  public static void AddExtra(FlatBufferBuilder builder, StringOffset ExtraOffset) { builder.AddOffset(5, ExtraOffset.Value, 0); }
  public static void AddMemberNo(FlatBufferBuilder builder, StringOffset MemberNoOffset) { builder.AddOffset(6, MemberNoOffset.Value, 0); }
  public static void AddNicknameNo(FlatBufferBuilder builder, StringOffset NicknameNoOffset) { builder.AddOffset(7, NicknameNoOffset.Value, 0); }
  public static void AddTimeStamp(FlatBufferBuilder builder, StringOffset TimeStampOffset) { builder.AddOffset(8, TimeStampOffset.Value, 0); }
  public static void AddTime(FlatBufferBuilder builder, uint Time) { builder.AddUint(9, Time, 0); }
  public static Offset<Lobby.CQ_UncheaterHackDetect> EndCQ_UncheaterHackDetect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_UncheaterHackDetect>(o);
  }
  public CQ_UncheaterHackDetectT UnPack() {
    var _o = new CQ_UncheaterHackDetectT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_UncheaterHackDetectT _o) {
    _o.Type = this.Type;
    _o.MajorCode = this.MajorCode;
    _o.MinorCode = this.MinorCode;
    _o.Log = this.Log;
    _o.Path = this.Path;
    _o.Extra = this.Extra;
    _o.MemberNo = this.MemberNo;
    _o.NicknameNo = this.NicknameNo;
    _o.TimeStamp = this.TimeStamp;
    _o.Time = this.Time;
  }
  public static Offset<Lobby.CQ_UncheaterHackDetect> Pack(FlatBufferBuilder builder, CQ_UncheaterHackDetectT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_UncheaterHackDetect>);
    var _Log = _o.Log == null ? default(StringOffset) : builder.CreateString(_o.Log);
    var _Path = _o.Path == null ? default(StringOffset) : builder.CreateString(_o.Path);
    var _Extra = _o.Extra == null ? default(StringOffset) : builder.CreateString(_o.Extra);
    var _MemberNo = _o.MemberNo == null ? default(StringOffset) : builder.CreateString(_o.MemberNo);
    var _NicknameNo = _o.NicknameNo == null ? default(StringOffset) : builder.CreateString(_o.NicknameNo);
    var _TimeStamp = _o.TimeStamp == null ? default(StringOffset) : builder.CreateString(_o.TimeStamp);
    return CreateCQ_UncheaterHackDetect(
      builder,
      _o.Type,
      _o.MajorCode,
      _o.MinorCode,
      _Log,
      _Path,
      _Extra,
      _MemberNo,
      _NicknameNo,
      _TimeStamp,
      _o.Time);
  }
}

public class CQ_UncheaterHackDetectT
{
  public Lobby.EUncheaterReportType Type { get; set; }
  public uint MajorCode { get; set; }
  public uint MinorCode { get; set; }
  public string Log { get; set; }
  public string Path { get; set; }
  public string Extra { get; set; }
  public string MemberNo { get; set; }
  public string NicknameNo { get; set; }
  public string TimeStamp { get; set; }
  public uint Time { get; set; }

  public CQ_UncheaterHackDetectT() {
    this.Type = Lobby.EUncheaterReportType.None;
    this.MajorCode = 0;
    this.MinorCode = 0;
    this.Log = null;
    this.Path = null;
    this.Extra = null;
    this.MemberNo = null;
    this.NicknameNo = null;
    this.TimeStamp = null;
    this.Time = 0;
  }
}


}
