// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_AttendanceRecvReward : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_AttendanceRecvReward GetRootAsCQ_AttendanceRecvReward(ByteBuffer _bb) { return GetRootAsCQ_AttendanceRecvReward(_bb, new CQ_AttendanceRecvReward()); }
  public static CQ_AttendanceRecvReward GetRootAsCQ_AttendanceRecvReward(ByteBuffer _bb, CQ_AttendanceRecvReward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_AttendanceRecvReward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int AttendanceID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.CQ_AttendanceRecvReward> CreateCQ_AttendanceRecvReward(FlatBufferBuilder builder,
      int AttendanceID = 0,
      int RewardID = 0) {
    builder.StartTable(2);
    CQ_AttendanceRecvReward.AddRewardID(builder, RewardID);
    CQ_AttendanceRecvReward.AddAttendanceID(builder, AttendanceID);
    return CQ_AttendanceRecvReward.EndCQ_AttendanceRecvReward(builder);
  }

  public static void StartCQ_AttendanceRecvReward(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddAttendanceID(FlatBufferBuilder builder, int AttendanceID) { builder.AddInt(0, AttendanceID, 0); }
  public static void AddRewardID(FlatBufferBuilder builder, int RewardID) { builder.AddInt(1, RewardID, 0); }
  public static Offset<Lobby.CQ_AttendanceRecvReward> EndCQ_AttendanceRecvReward(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_AttendanceRecvReward>(o);
  }
  public CQ_AttendanceRecvRewardT UnPack() {
    var _o = new CQ_AttendanceRecvRewardT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_AttendanceRecvRewardT _o) {
    _o.AttendanceID = this.AttendanceID;
    _o.RewardID = this.RewardID;
  }
  public static Offset<Lobby.CQ_AttendanceRecvReward> Pack(FlatBufferBuilder builder, CQ_AttendanceRecvRewardT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_AttendanceRecvReward>);
    return CreateCQ_AttendanceRecvReward(
      builder,
      _o.AttendanceID,
      _o.RewardID);
  }
}

public class CQ_AttendanceRecvRewardT
{
  public int AttendanceID { get; set; }
  public int RewardID { get; set; }

  public CQ_AttendanceRecvRewardT() {
    this.AttendanceID = 0;
    this.RewardID = 0;
  }
}


}
