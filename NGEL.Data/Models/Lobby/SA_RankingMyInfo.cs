// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_RankingMyInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_RankingMyInfo GetRootAsSA_RankingMyInfo(ByteBuffer _bb) { return GetRootAsSA_RankingMyInfo(_bb, new SA_RankingMyInfo()); }
  public static SA_RankingMyInfo GetRootAsSA_RankingMyInfo(ByteBuffer _bb, SA_RankingMyInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_RankingMyInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.MyRankingData? MyRankingList(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.MyRankingData?)(new Lobby.MyRankingData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MyRankingListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.SA_RankingMyInfo> CreateSA_RankingMyInfo(FlatBufferBuilder builder,
      VectorOffset MyRankingListOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SA_RankingMyInfo.AddMyRankingList(builder, MyRankingListOffset);
    return SA_RankingMyInfo.EndSA_RankingMyInfo(builder);
  }

  public static void StartSA_RankingMyInfo(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddMyRankingList(FlatBufferBuilder builder, VectorOffset MyRankingListOffset) { builder.AddOffset(0, MyRankingListOffset.Value, 0); }
  public static VectorOffset CreateMyRankingListVector(FlatBufferBuilder builder, Offset<Lobby.MyRankingData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMyRankingListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.MyRankingData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMyRankingListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.MyRankingData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMyRankingListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.MyRankingData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMyRankingListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Lobby.SA_RankingMyInfo> EndSA_RankingMyInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_RankingMyInfo>(o);
  }
  public SA_RankingMyInfoT UnPack() {
    var _o = new SA_RankingMyInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_RankingMyInfoT _o) {
    _o.MyRankingList = new List<Lobby.MyRankingDataT>();
    for (var _j = 0; _j < this.MyRankingListLength; ++_j) {_o.MyRankingList.Add(this.MyRankingList(_j).HasValue ? this.MyRankingList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.SA_RankingMyInfo> Pack(FlatBufferBuilder builder, SA_RankingMyInfoT _o) {
    if (_o == null) return default(Offset<Lobby.SA_RankingMyInfo>);
    var _MyRankingList = default(VectorOffset);
    if (_o.MyRankingList != null) {
      var __MyRankingList = new Offset<Lobby.MyRankingData>[_o.MyRankingList.Count];
      for (var _j = 0; _j < __MyRankingList.Length; ++_j) { __MyRankingList[_j] = Lobby.MyRankingData.Pack(builder, _o.MyRankingList[_j]); }
      _MyRankingList = CreateMyRankingListVector(builder, __MyRankingList);
    }
    return CreateSA_RankingMyInfo(
      builder,
      _MyRankingList);
  }
}

public class SA_RankingMyInfoT
{
  public List<Lobby.MyRankingDataT> MyRankingList { get; set; }

  public SA_RankingMyInfoT() {
    this.MyRankingList = null;
  }
}


}
