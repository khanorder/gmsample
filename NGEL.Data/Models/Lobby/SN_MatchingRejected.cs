// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_MatchingRejected : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_MatchingRejected GetRootAsSN_MatchingRejected(ByteBuffer _bb) { return GetRootAsSN_MatchingRejected(_bb, new SN_MatchingRejected()); }
  public static SN_MatchingRejected GetRootAsSN_MatchingRejected(ByteBuffer _bb, SN_MatchingRejected obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_MatchingRejected __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string MatchTicket { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMatchTicketBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetMatchTicketBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetMatchTicketArray() { return __p.__vector_as_array<byte>(4); }
  public string MatchID { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMatchIDBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMatchIDBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMatchIDArray() { return __p.__vector_as_array<byte>(6); }
  public int RejectUID { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string RejectNickName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRejectNickNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetRejectNickNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetRejectNickNameArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<Lobby.SN_MatchingRejected> CreateSN_MatchingRejected(FlatBufferBuilder builder,
      StringOffset MatchTicketOffset = default(StringOffset),
      StringOffset MatchIDOffset = default(StringOffset),
      int RejectUID = 0,
      StringOffset RejectNickNameOffset = default(StringOffset)) {
    builder.StartTable(4);
    SN_MatchingRejected.AddRejectNickName(builder, RejectNickNameOffset);
    SN_MatchingRejected.AddRejectUID(builder, RejectUID);
    SN_MatchingRejected.AddMatchID(builder, MatchIDOffset);
    SN_MatchingRejected.AddMatchTicket(builder, MatchTicketOffset);
    return SN_MatchingRejected.EndSN_MatchingRejected(builder);
  }

  public static void StartSN_MatchingRejected(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddMatchTicket(FlatBufferBuilder builder, StringOffset MatchTicketOffset) { builder.AddOffset(0, MatchTicketOffset.Value, 0); }
  public static void AddMatchID(FlatBufferBuilder builder, StringOffset MatchIDOffset) { builder.AddOffset(1, MatchIDOffset.Value, 0); }
  public static void AddRejectUID(FlatBufferBuilder builder, int RejectUID) { builder.AddInt(2, RejectUID, 0); }
  public static void AddRejectNickName(FlatBufferBuilder builder, StringOffset RejectNickNameOffset) { builder.AddOffset(3, RejectNickNameOffset.Value, 0); }
  public static Offset<Lobby.SN_MatchingRejected> EndSN_MatchingRejected(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_MatchingRejected>(o);
  }
  public SN_MatchingRejectedT UnPack() {
    var _o = new SN_MatchingRejectedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_MatchingRejectedT _o) {
    _o.MatchTicket = this.MatchTicket;
    _o.MatchID = this.MatchID;
    _o.RejectUID = this.RejectUID;
    _o.RejectNickName = this.RejectNickName;
  }
  public static Offset<Lobby.SN_MatchingRejected> Pack(FlatBufferBuilder builder, SN_MatchingRejectedT _o) {
    if (_o == null) return default(Offset<Lobby.SN_MatchingRejected>);
    var _MatchTicket = _o.MatchTicket == null ? default(StringOffset) : builder.CreateString(_o.MatchTicket);
    var _MatchID = _o.MatchID == null ? default(StringOffset) : builder.CreateString(_o.MatchID);
    var _RejectNickName = _o.RejectNickName == null ? default(StringOffset) : builder.CreateString(_o.RejectNickName);
    return CreateSN_MatchingRejected(
      builder,
      _MatchTicket,
      _MatchID,
      _o.RejectUID,
      _RejectNickName);
  }
}

public class SN_MatchingRejectedT
{
  public string MatchTicket { get; set; }
  public string MatchID { get; set; }
  public int RejectUID { get; set; }
  public string RejectNickName { get; set; }

  public SN_MatchingRejectedT() {
    this.MatchTicket = null;
    this.MatchID = null;
    this.RejectUID = 0;
    this.RejectNickName = null;
  }
}


}
