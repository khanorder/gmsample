// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_UserAccountLogin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_UserAccountLogin GetRootAsCQ_UserAccountLogin(ByteBuffer _bb) { return GetRootAsCQ_UserAccountLogin(_bb, new CQ_UserAccountLogin()); }
  public static CQ_UserAccountLogin GetRootAsCQ_UserAccountLogin(ByteBuffer _bb, CQ_UserAccountLogin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_UserAccountLogin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string NickNameNo { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickNameNoBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNickNameNoBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNickNameNoArray() { return __p.__vector_as_array<byte>(4); }
  public Lobby.EMarketCode MarketCode { get { int o = __p.__offset(6); return o != 0 ? (Lobby.EMarketCode)__p.bb.Get(o + __p.bb_pos) : Lobby.EMarketCode.None; } }
  public string DeviceId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeviceIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetDeviceIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDeviceIdArray() { return __p.__vector_as_array<byte>(8); }
  public string DeviceType { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeviceTypeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDeviceTypeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDeviceTypeArray() { return __p.__vector_as_array<byte>(10); }
  public string DeviceModel { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeviceModelBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDeviceModelBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDeviceModelArray() { return __p.__vector_as_array<byte>(12); }
  public string Os { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOsBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetOsBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetOsArray() { return __p.__vector_as_array<byte>(14); }
  public Lobby.EProvider ProviderList(int j) { int o = __p.__offset(16); return o != 0 ? (Lobby.EProvider)__p.bb.Get(__p.__vector(o) + j * 1) : (Lobby.EProvider)0; }
  public int ProviderListLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<Lobby.EProvider> GetProviderListBytes() { return __p.__vector_as_span<Lobby.EProvider>(16, 1); }
#else
  public ArraySegment<byte>? GetProviderListBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public Lobby.EProvider[] GetProviderListArray() { int o = __p.__offset(16); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); Lobby.EProvider[] a = new Lobby.EProvider[l]; for (int i = 0; i < l; i++) { a[i] = (Lobby.EProvider)__p.bb.Get(p + i * 1); } return a; }
  public Lobby.EPlatform Platform { get { int o = __p.__offset(18); return o != 0 ? (Lobby.EPlatform)__p.bb.Get(o + __p.bb_pos) : Lobby.EPlatform.None; } }
  public string GAID { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGAIDBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetGAIDBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGAIDArray() { return __p.__vector_as_array<byte>(20); }
  public string IDFA { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIDFABytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetIDFABytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetIDFAArray() { return __p.__vector_as_array<byte>(22); }
  public string IDFV { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIDFVBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetIDFVBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetIDFVArray() { return __p.__vector_as_array<byte>(24); }
  public string PackageName { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPackageNameBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetPackageNameBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetPackageNameArray() { return __p.__vector_as_array<byte>(26); }
  public string GameVersion { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGameVersionBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetGameVersionBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetGameVersionArray() { return __p.__vector_as_array<byte>(28); }
  public string ChecksumData { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChecksumDataBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetChecksumDataBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetChecksumDataArray() { return __p.__vector_as_array<byte>(30); }

  public static Offset<Lobby.CQ_UserAccountLogin> CreateCQ_UserAccountLogin(FlatBufferBuilder builder,
      StringOffset nickNameNoOffset = default(StringOffset),
      Lobby.EMarketCode marketCode = Lobby.EMarketCode.None,
      StringOffset deviceIdOffset = default(StringOffset),
      StringOffset deviceTypeOffset = default(StringOffset),
      StringOffset deviceModelOffset = default(StringOffset),
      StringOffset osOffset = default(StringOffset),
      VectorOffset providerListOffset = default(VectorOffset),
      Lobby.EPlatform platform = Lobby.EPlatform.None,
      StringOffset GAIDOffset = default(StringOffset),
      StringOffset IDFAOffset = default(StringOffset),
      StringOffset IDFVOffset = default(StringOffset),
      StringOffset packageNameOffset = default(StringOffset),
      StringOffset gameVersionOffset = default(StringOffset),
      StringOffset checksumDataOffset = default(StringOffset)) {
    builder.StartTable(14);
    CQ_UserAccountLogin.AddChecksumData(builder, checksumDataOffset);
    CQ_UserAccountLogin.AddGameVersion(builder, gameVersionOffset);
    CQ_UserAccountLogin.AddPackageName(builder, packageNameOffset);
    CQ_UserAccountLogin.AddIDFV(builder, IDFVOffset);
    CQ_UserAccountLogin.AddIDFA(builder, IDFAOffset);
    CQ_UserAccountLogin.AddGAID(builder, GAIDOffset);
    CQ_UserAccountLogin.AddProviderList(builder, providerListOffset);
    CQ_UserAccountLogin.AddOs(builder, osOffset);
    CQ_UserAccountLogin.AddDeviceModel(builder, deviceModelOffset);
    CQ_UserAccountLogin.AddDeviceType(builder, deviceTypeOffset);
    CQ_UserAccountLogin.AddDeviceId(builder, deviceIdOffset);
    CQ_UserAccountLogin.AddNickNameNo(builder, nickNameNoOffset);
    CQ_UserAccountLogin.AddPlatform(builder, platform);
    CQ_UserAccountLogin.AddMarketCode(builder, marketCode);
    return CQ_UserAccountLogin.EndCQ_UserAccountLogin(builder);
  }

  public static void StartCQ_UserAccountLogin(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddNickNameNo(FlatBufferBuilder builder, StringOffset nickNameNoOffset) { builder.AddOffset(0, nickNameNoOffset.Value, 0); }
  public static void AddMarketCode(FlatBufferBuilder builder, Lobby.EMarketCode marketCode) { builder.AddByte(1, (byte)marketCode, 0); }
  public static void AddDeviceId(FlatBufferBuilder builder, StringOffset deviceIdOffset) { builder.AddOffset(2, deviceIdOffset.Value, 0); }
  public static void AddDeviceType(FlatBufferBuilder builder, StringOffset deviceTypeOffset) { builder.AddOffset(3, deviceTypeOffset.Value, 0); }
  public static void AddDeviceModel(FlatBufferBuilder builder, StringOffset deviceModelOffset) { builder.AddOffset(4, deviceModelOffset.Value, 0); }
  public static void AddOs(FlatBufferBuilder builder, StringOffset osOffset) { builder.AddOffset(5, osOffset.Value, 0); }
  public static void AddProviderList(FlatBufferBuilder builder, VectorOffset providerListOffset) { builder.AddOffset(6, providerListOffset.Value, 0); }
  public static VectorOffset CreateProviderListVector(FlatBufferBuilder builder, Lobby.EProvider[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte((byte)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateProviderListVectorBlock(FlatBufferBuilder builder, Lobby.EProvider[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateProviderListVectorBlock(FlatBufferBuilder builder, ArraySegment<Lobby.EProvider> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateProviderListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Lobby.EProvider>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartProviderListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static void AddPlatform(FlatBufferBuilder builder, Lobby.EPlatform platform) { builder.AddByte(7, (byte)platform, 0); }
  public static void AddGAID(FlatBufferBuilder builder, StringOffset GAIDOffset) { builder.AddOffset(8, GAIDOffset.Value, 0); }
  public static void AddIDFA(FlatBufferBuilder builder, StringOffset IDFAOffset) { builder.AddOffset(9, IDFAOffset.Value, 0); }
  public static void AddIDFV(FlatBufferBuilder builder, StringOffset IDFVOffset) { builder.AddOffset(10, IDFVOffset.Value, 0); }
  public static void AddPackageName(FlatBufferBuilder builder, StringOffset packageNameOffset) { builder.AddOffset(11, packageNameOffset.Value, 0); }
  public static void AddGameVersion(FlatBufferBuilder builder, StringOffset gameVersionOffset) { builder.AddOffset(12, gameVersionOffset.Value, 0); }
  public static void AddChecksumData(FlatBufferBuilder builder, StringOffset checksumDataOffset) { builder.AddOffset(13, checksumDataOffset.Value, 0); }
  public static Offset<Lobby.CQ_UserAccountLogin> EndCQ_UserAccountLogin(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_UserAccountLogin>(o);
  }
  public CQ_UserAccountLoginT UnPack() {
    var _o = new CQ_UserAccountLoginT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_UserAccountLoginT _o) {
    _o.NickNameNo = this.NickNameNo;
    _o.MarketCode = this.MarketCode;
    _o.DeviceId = this.DeviceId;
    _o.DeviceType = this.DeviceType;
    _o.DeviceModel = this.DeviceModel;
    _o.Os = this.Os;
    _o.ProviderList = new List<Lobby.EProvider>();
    for (var _j = 0; _j < this.ProviderListLength; ++_j) {_o.ProviderList.Add(this.ProviderList(_j));}
    _o.Platform = this.Platform;
    _o.GAID = this.GAID;
    _o.IDFA = this.IDFA;
    _o.IDFV = this.IDFV;
    _o.PackageName = this.PackageName;
    _o.GameVersion = this.GameVersion;
    _o.ChecksumData = this.ChecksumData;
  }
  public static Offset<Lobby.CQ_UserAccountLogin> Pack(FlatBufferBuilder builder, CQ_UserAccountLoginT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_UserAccountLogin>);
    var _nickNameNo = _o.NickNameNo == null ? default(StringOffset) : builder.CreateString(_o.NickNameNo);
    var _deviceId = _o.DeviceId == null ? default(StringOffset) : builder.CreateString(_o.DeviceId);
    var _deviceType = _o.DeviceType == null ? default(StringOffset) : builder.CreateString(_o.DeviceType);
    var _deviceModel = _o.DeviceModel == null ? default(StringOffset) : builder.CreateString(_o.DeviceModel);
    var _os = _o.Os == null ? default(StringOffset) : builder.CreateString(_o.Os);
    var _providerList = default(VectorOffset);
    if (_o.ProviderList != null) {
      var __providerList = _o.ProviderList.ToArray();
      _providerList = CreateProviderListVector(builder, __providerList);
    }
    var _GAID = _o.GAID == null ? default(StringOffset) : builder.CreateString(_o.GAID);
    var _IDFA = _o.IDFA == null ? default(StringOffset) : builder.CreateString(_o.IDFA);
    var _IDFV = _o.IDFV == null ? default(StringOffset) : builder.CreateString(_o.IDFV);
    var _packageName = _o.PackageName == null ? default(StringOffset) : builder.CreateString(_o.PackageName);
    var _gameVersion = _o.GameVersion == null ? default(StringOffset) : builder.CreateString(_o.GameVersion);
    var _checksumData = _o.ChecksumData == null ? default(StringOffset) : builder.CreateString(_o.ChecksumData);
    return CreateCQ_UserAccountLogin(
      builder,
      _nickNameNo,
      _o.MarketCode,
      _deviceId,
      _deviceType,
      _deviceModel,
      _os,
      _providerList,
      _o.Platform,
      _GAID,
      _IDFA,
      _IDFV,
      _packageName,
      _gameVersion,
      _checksumData);
  }
}

public class CQ_UserAccountLoginT
{
  public string NickNameNo { get; set; }
  public Lobby.EMarketCode MarketCode { get; set; }
  public string DeviceId { get; set; }
  public string DeviceType { get; set; }
  public string DeviceModel { get; set; }
  public string Os { get; set; }
  public List<Lobby.EProvider> ProviderList { get; set; }
  public Lobby.EPlatform Platform { get; set; }
  public string GAID { get; set; }
  public string IDFA { get; set; }
  public string IDFV { get; set; }
  public string PackageName { get; set; }
  public string GameVersion { get; set; }
  public string ChecksumData { get; set; }

  public CQ_UserAccountLoginT() {
    this.NickNameNo = null;
    this.MarketCode = Lobby.EMarketCode.None;
    this.DeviceId = null;
    this.DeviceType = null;
    this.DeviceModel = null;
    this.Os = null;
    this.ProviderList = null;
    this.Platform = Lobby.EPlatform.None;
    this.GAID = null;
    this.IDFA = null;
    this.IDFV = null;
    this.PackageName = null;
    this.GameVersion = null;
    this.ChecksumData = null;
  }
}


}
