// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_TradeEnd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_TradeEnd GetRootAsCQ_TradeEnd(ByteBuffer _bb) { return GetRootAsCQ_TradeEnd(_bb, new CQ_TradeEnd()); }
  public static CQ_TradeEnd GetRootAsCQ_TradeEnd(ByteBuffer _bb, CQ_TradeEnd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_TradeEnd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.ETradeType TradeType { get { int o = __p.__offset(4); return o != 0 ? (Lobby.ETradeType)__p.bb.Get(o + __p.bb_pos) : Lobby.ETradeType.None; } }

  public static Offset<Lobby.CQ_TradeEnd> CreateCQ_TradeEnd(FlatBufferBuilder builder,
      Lobby.ETradeType TradeType = Lobby.ETradeType.None) {
    builder.StartTable(1);
    CQ_TradeEnd.AddTradeType(builder, TradeType);
    return CQ_TradeEnd.EndCQ_TradeEnd(builder);
  }

  public static void StartCQ_TradeEnd(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTradeType(FlatBufferBuilder builder, Lobby.ETradeType TradeType) { builder.AddByte(0, (byte)TradeType, 0); }
  public static Offset<Lobby.CQ_TradeEnd> EndCQ_TradeEnd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_TradeEnd>(o);
  }
  public CQ_TradeEndT UnPack() {
    var _o = new CQ_TradeEndT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_TradeEndT _o) {
    _o.TradeType = this.TradeType;
  }
  public static Offset<Lobby.CQ_TradeEnd> Pack(FlatBufferBuilder builder, CQ_TradeEndT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_TradeEnd>);
    return CreateCQ_TradeEnd(
      builder,
      _o.TradeType);
  }
}

public class CQ_TradeEndT
{
  public Lobby.ETradeType TradeType { get; set; }

  public CQ_TradeEndT() {
    this.TradeType = Lobby.ETradeType.None;
  }
}


}
