// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PlayRecordRpgData : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public PlayRecordRpgData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ChapterID { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public int HeroID { get { return __p.bb.GetInt(__p.bb_pos + 4); } }
  public int BossClear { get { return __p.bb.GetInt(__p.bb_pos + 8); } }
  public int TopPoint { get { return __p.bb.GetInt(__p.bb_pos + 12); } }
  public int ShortestPlayTime { get { return __p.bb.GetInt(__p.bb_pos + 16); } }
  public int AvgFragment { get { return __p.bb.GetInt(__p.bb_pos + 20); } }
  public int AvgArtifact { get { return __p.bb.GetInt(__p.bb_pos + 24); } }
  public int AvgLevel { get { return __p.bb.GetInt(__p.bb_pos + 28); } }

  public static Offset<Lobby.PlayRecordRpgData> CreatePlayRecordRpgData(FlatBufferBuilder builder, int ChapterID, int HeroID, int BossClear, int TopPoint, int ShortestPlayTime, int AvgFragment, int AvgArtifact, int AvgLevel) {
    builder.Prep(4, 32);
    builder.PutInt(AvgLevel);
    builder.PutInt(AvgArtifact);
    builder.PutInt(AvgFragment);
    builder.PutInt(ShortestPlayTime);
    builder.PutInt(TopPoint);
    builder.PutInt(BossClear);
    builder.PutInt(HeroID);
    builder.PutInt(ChapterID);
    return new Offset<Lobby.PlayRecordRpgData>(builder.Offset);
  }
  public PlayRecordRpgDataT UnPack() {
    var _o = new PlayRecordRpgDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PlayRecordRpgDataT _o) {
    _o.ChapterID = this.ChapterID;
    _o.HeroID = this.HeroID;
    _o.BossClear = this.BossClear;
    _o.TopPoint = this.TopPoint;
    _o.ShortestPlayTime = this.ShortestPlayTime;
    _o.AvgFragment = this.AvgFragment;
    _o.AvgArtifact = this.AvgArtifact;
    _o.AvgLevel = this.AvgLevel;
  }
  public static Offset<Lobby.PlayRecordRpgData> Pack(FlatBufferBuilder builder, PlayRecordRpgDataT _o) {
    if (_o == null) return default(Offset<Lobby.PlayRecordRpgData>);
    return CreatePlayRecordRpgData(
      builder,
      _o.ChapterID,
      _o.HeroID,
      _o.BossClear,
      _o.TopPoint,
      _o.ShortestPlayTime,
      _o.AvgFragment,
      _o.AvgArtifact,
      _o.AvgLevel);
  }
}

public class PlayRecordRpgDataT
{
  public int ChapterID { get; set; }
  public int HeroID { get; set; }
  public int BossClear { get; set; }
  public int TopPoint { get; set; }
  public int ShortestPlayTime { get; set; }
  public int AvgFragment { get; set; }
  public int AvgArtifact { get; set; }
  public int AvgLevel { get; set; }

  public PlayRecordRpgDataT() {
    this.ChapterID = 0;
    this.HeroID = 0;
    this.BossClear = 0;
    this.TopPoint = 0;
    this.ShortestPlayTime = 0;
    this.AvgFragment = 0;
    this.AvgArtifact = 0;
    this.AvgLevel = 0;
  }
}


}
