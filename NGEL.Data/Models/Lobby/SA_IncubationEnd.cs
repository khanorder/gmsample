// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_IncubationEnd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_IncubationEnd GetRootAsSA_IncubationEnd(ByteBuffer _bb) { return GetRootAsSA_IncubationEnd(_bb, new SA_IncubationEnd()); }
  public static SA_IncubationEnd GetRootAsSA_IncubationEnd(ByteBuffer _bb, SA_IncubationEnd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_IncubationEnd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.IncubationData? ChangeIncubation { get { int o = __p.__offset(4); return o != 0 ? (Lobby.IncubationData?)(new Lobby.IncubationData()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Lobby.PetData? NewPet { get { int o = __p.__offset(6); return o != 0 ? (Lobby.PetData?)(new Lobby.PetData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public bool IsDeleted { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Lobby.SA_IncubationEnd> CreateSA_IncubationEnd(FlatBufferBuilder builder,
      Lobby.IncubationDataT ChangeIncubation = null,
      Offset<Lobby.PetData> NewPetOffset = default(Offset<Lobby.PetData>),
      bool IsDeleted = false) {
    builder.StartTable(3);
    SA_IncubationEnd.AddNewPet(builder, NewPetOffset);
    SA_IncubationEnd.AddChangeIncubation(builder, Lobby.IncubationData.Pack(builder, ChangeIncubation));
    SA_IncubationEnd.AddIsDeleted(builder, IsDeleted);
    return SA_IncubationEnd.EndSA_IncubationEnd(builder);
  }

  public static void StartSA_IncubationEnd(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddChangeIncubation(FlatBufferBuilder builder, Offset<Lobby.IncubationData> ChangeIncubationOffset) { builder.AddStruct(0, ChangeIncubationOffset.Value, 0); }
  public static void AddNewPet(FlatBufferBuilder builder, Offset<Lobby.PetData> NewPetOffset) { builder.AddOffset(1, NewPetOffset.Value, 0); }
  public static void AddIsDeleted(FlatBufferBuilder builder, bool IsDeleted) { builder.AddBool(2, IsDeleted, false); }
  public static Offset<Lobby.SA_IncubationEnd> EndSA_IncubationEnd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_IncubationEnd>(o);
  }
  public SA_IncubationEndT UnPack() {
    var _o = new SA_IncubationEndT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_IncubationEndT _o) {
    _o.ChangeIncubation = this.ChangeIncubation.HasValue ? this.ChangeIncubation.Value.UnPack() : null;
    _o.NewPet = this.NewPet.HasValue ? this.NewPet.Value.UnPack() : null;
    _o.IsDeleted = this.IsDeleted;
  }
  public static Offset<Lobby.SA_IncubationEnd> Pack(FlatBufferBuilder builder, SA_IncubationEndT _o) {
    if (_o == null) return default(Offset<Lobby.SA_IncubationEnd>);
    var _NewPet = _o.NewPet == null ? default(Offset<Lobby.PetData>) : Lobby.PetData.Pack(builder, _o.NewPet);
    return CreateSA_IncubationEnd(
      builder,
      _o.ChangeIncubation,
      _NewPet,
      _o.IsDeleted);
  }
}

public class SA_IncubationEndT
{
  public Lobby.IncubationDataT ChangeIncubation { get; set; }
  public Lobby.PetDataT NewPet { get; set; }
  public bool IsDeleted { get; set; }

  public SA_IncubationEndT() {
    this.ChangeIncubation = new Lobby.IncubationDataT();
    this.NewPet = null;
    this.IsDeleted = false;
  }
}


}
