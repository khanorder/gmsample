// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MissionData : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public MissionData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int SeasonPassID { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public Lobby.EMissionGroup MissionGroup { get { return (Lobby.EMissionGroup)__p.bb.Get(__p.bb_pos + 4); } }
  public int MissionID { get { return __p.bb.GetInt(__p.bb_pos + 8); } }
  public int Count { get { return __p.bb.GetInt(__p.bb_pos + 12); } }
  public bool IsComplete { get { return 0!=__p.bb.Get(__p.bb_pos + 16); } }

  public static Offset<Lobby.MissionData> CreateMissionData(FlatBufferBuilder builder, int SeasonPassID, Lobby.EMissionGroup MissionGroup, int MissionID, int Count, bool IsComplete) {
    builder.Prep(4, 20);
    builder.Pad(3);
    builder.PutBool(IsComplete);
    builder.PutInt(Count);
    builder.PutInt(MissionID);
    builder.Pad(3);
    builder.PutByte((byte)MissionGroup);
    builder.PutInt(SeasonPassID);
    return new Offset<Lobby.MissionData>(builder.Offset);
  }
  public MissionDataT UnPack() {
    var _o = new MissionDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MissionDataT _o) {
    _o.SeasonPassID = this.SeasonPassID;
    _o.MissionGroup = this.MissionGroup;
    _o.MissionID = this.MissionID;
    _o.Count = this.Count;
    _o.IsComplete = this.IsComplete;
  }
  public static Offset<Lobby.MissionData> Pack(FlatBufferBuilder builder, MissionDataT _o) {
    if (_o == null) return default(Offset<Lobby.MissionData>);
    return CreateMissionData(
      builder,
      _o.SeasonPassID,
      _o.MissionGroup,
      _o.MissionID,
      _o.Count,
      _o.IsComplete);
  }
}

public class MissionDataT
{
  public int SeasonPassID { get; set; }
  public Lobby.EMissionGroup MissionGroup { get; set; }
  public int MissionID { get; set; }
  public int Count { get; set; }
  public bool IsComplete { get; set; }

  public MissionDataT() {
    this.SeasonPassID = 0;
    this.MissionGroup = Lobby.EMissionGroup.None;
    this.MissionID = 0;
    this.Count = 0;
    this.IsComplete = false;
  }
}


}
