// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_RpgEnd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_RpgEnd GetRootAsCQ_RpgEnd(ByteBuffer _bb) { return GetRootAsCQ_RpgEnd(_bb, new CQ_RpgEnd()); }
  public static CQ_RpgEnd GetRootAsCQ_RpgEnd(ByteBuffer _bb, CQ_RpgEnd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_RpgEnd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsClear { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsQuit { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int DieObjectID { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DieMonsterID { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PlayTime { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.CQ_RpgEnd> CreateCQ_RpgEnd(FlatBufferBuilder builder,
      bool IsClear = false,
      bool IsQuit = false,
      int DieObjectID = 0,
      int DieMonsterID = 0,
      int PlayTime = 0) {
    builder.StartTable(5);
    CQ_RpgEnd.AddPlayTime(builder, PlayTime);
    CQ_RpgEnd.AddDieMonsterID(builder, DieMonsterID);
    CQ_RpgEnd.AddDieObjectID(builder, DieObjectID);
    CQ_RpgEnd.AddIsQuit(builder, IsQuit);
    CQ_RpgEnd.AddIsClear(builder, IsClear);
    return CQ_RpgEnd.EndCQ_RpgEnd(builder);
  }

  public static void StartCQ_RpgEnd(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddIsClear(FlatBufferBuilder builder, bool IsClear) { builder.AddBool(0, IsClear, false); }
  public static void AddIsQuit(FlatBufferBuilder builder, bool IsQuit) { builder.AddBool(1, IsQuit, false); }
  public static void AddDieObjectID(FlatBufferBuilder builder, int DieObjectID) { builder.AddInt(2, DieObjectID, 0); }
  public static void AddDieMonsterID(FlatBufferBuilder builder, int DieMonsterID) { builder.AddInt(3, DieMonsterID, 0); }
  public static void AddPlayTime(FlatBufferBuilder builder, int PlayTime) { builder.AddInt(4, PlayTime, 0); }
  public static Offset<Lobby.CQ_RpgEnd> EndCQ_RpgEnd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_RpgEnd>(o);
  }
  public CQ_RpgEndT UnPack() {
    var _o = new CQ_RpgEndT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_RpgEndT _o) {
    _o.IsClear = this.IsClear;
    _o.IsQuit = this.IsQuit;
    _o.DieObjectID = this.DieObjectID;
    _o.DieMonsterID = this.DieMonsterID;
    _o.PlayTime = this.PlayTime;
  }
  public static Offset<Lobby.CQ_RpgEnd> Pack(FlatBufferBuilder builder, CQ_RpgEndT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_RpgEnd>);
    return CreateCQ_RpgEnd(
      builder,
      _o.IsClear,
      _o.IsQuit,
      _o.DieObjectID,
      _o.DieMonsterID,
      _o.PlayTime);
  }
}

public class CQ_RpgEndT
{
  public bool IsClear { get; set; }
  public bool IsQuit { get; set; }
  public int DieObjectID { get; set; }
  public int DieMonsterID { get; set; }
  public int PlayTime { get; set; }

  public CQ_RpgEndT() {
    this.IsClear = false;
    this.IsQuit = false;
    this.DieObjectID = 0;
    this.DieMonsterID = 0;
    this.PlayTime = 0;
  }
}


}
