// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SN_ModifyNickName : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SN_ModifyNickName GetRootAsSN_ModifyNickName(ByteBuffer _bb) { return GetRootAsSN_ModifyNickName(_bb, new SN_ModifyNickName()); }
  public static SN_ModifyNickName GetRootAsSN_ModifyNickName(ByteBuffer _bb, SN_ModifyNickName obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SN_ModifyNickName __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string NickName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNickNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNickNameArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Lobby.SN_ModifyNickName> CreateSN_ModifyNickName(FlatBufferBuilder builder,
      int UID = 0,
      StringOffset NickNameOffset = default(StringOffset)) {
    builder.StartTable(2);
    SN_ModifyNickName.AddNickName(builder, NickNameOffset);
    SN_ModifyNickName.AddUID(builder, UID);
    return SN_ModifyNickName.EndSN_ModifyNickName(builder);
  }

  public static void StartSN_ModifyNickName(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(0, UID, 0); }
  public static void AddNickName(FlatBufferBuilder builder, StringOffset NickNameOffset) { builder.AddOffset(1, NickNameOffset.Value, 0); }
  public static Offset<Lobby.SN_ModifyNickName> EndSN_ModifyNickName(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SN_ModifyNickName>(o);
  }
  public SN_ModifyNickNameT UnPack() {
    var _o = new SN_ModifyNickNameT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SN_ModifyNickNameT _o) {
    _o.UID = this.UID;
    _o.NickName = this.NickName;
  }
  public static Offset<Lobby.SN_ModifyNickName> Pack(FlatBufferBuilder builder, SN_ModifyNickNameT _o) {
    if (_o == null) return default(Offset<Lobby.SN_ModifyNickName>);
    var _NickName = _o.NickName == null ? default(StringOffset) : builder.CreateString(_o.NickName);
    return CreateSN_ModifyNickName(
      builder,
      _o.UID,
      _NickName);
  }
}

public class SN_ModifyNickNameT
{
  public int UID { get; set; }
  public string NickName { get; set; }

  public SN_ModifyNickNameT() {
    this.UID = 0;
    this.NickName = null;
  }
}


}
