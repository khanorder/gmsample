// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Header : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Header __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EMessageType Message { get { return (Lobby.EMessageType)__p.bb.GetUshort(__p.bb_pos + 0); } }
  public Lobby.EResultType Result { get { return (Lobby.EResultType)__p.bb.GetUshort(__p.bb_pos + 2); } }
  public int Timestamp { get { return __p.bb.GetInt(__p.bb_pos + 4); } }

  public static Offset<Lobby.Header> CreateHeader(FlatBufferBuilder builder, Lobby.EMessageType Message, Lobby.EResultType Result, int Timestamp) {
    builder.Prep(4, 8);
    builder.PutInt(Timestamp);
    builder.PutUshort((ushort)Result);
    builder.PutUshort((ushort)Message);
    return new Offset<Lobby.Header>(builder.Offset);
  }
  public HeaderT UnPack() {
    var _o = new HeaderT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(HeaderT _o) {
    _o.Message = this.Message;
    _o.Result = this.Result;
    _o.Timestamp = this.Timestamp;
  }
  public static Offset<Lobby.Header> Pack(FlatBufferBuilder builder, HeaderT _o) {
    if (_o == null) return default(Offset<Lobby.Header>);
    return CreateHeader(
      builder,
      _o.Message,
      _o.Result,
      _o.Timestamp);
  }
}

public class HeaderT
{
  public Lobby.EMessageType Message { get; set; }
  public Lobby.EResultType Result { get; set; }
  public int Timestamp { get; set; }

  public HeaderT() {
    this.Message = Lobby.EMessageType.None;
    this.Result = Lobby.EResultType.Success;
    this.Timestamp = 0;
  }
}


}
