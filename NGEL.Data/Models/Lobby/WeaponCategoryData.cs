// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct WeaponCategoryData : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public WeaponCategoryData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int WeaponCategoryID { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public int Exp { get { return __p.bb.GetInt(__p.bb_pos + 4); } }

  public static Offset<Lobby.WeaponCategoryData> CreateWeaponCategoryData(FlatBufferBuilder builder, int WeaponCategoryID, int Exp) {
    builder.Prep(4, 8);
    builder.PutInt(Exp);
    builder.PutInt(WeaponCategoryID);
    return new Offset<Lobby.WeaponCategoryData>(builder.Offset);
  }
  public WeaponCategoryDataT UnPack() {
    var _o = new WeaponCategoryDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(WeaponCategoryDataT _o) {
    _o.WeaponCategoryID = this.WeaponCategoryID;
    _o.Exp = this.Exp;
  }
  public static Offset<Lobby.WeaponCategoryData> Pack(FlatBufferBuilder builder, WeaponCategoryDataT _o) {
    if (_o == null) return default(Offset<Lobby.WeaponCategoryData>);
    return CreateWeaponCategoryData(
      builder,
      _o.WeaponCategoryID,
      _o.Exp);
  }
}

public class WeaponCategoryDataT
{
  public int WeaponCategoryID { get; set; }
  public int Exp { get; set; }

  public WeaponCategoryDataT() {
    this.WeaponCategoryID = 0;
    this.Exp = 0;
  }
}


}
