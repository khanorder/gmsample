// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TreasureBoxData : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public TreasureBoxData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int BoxID { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public bool IsOpened { get { return 0!=__p.bb.Get(__p.bb_pos + 4); } }
  public Lobby.Vector3 Location { get { return (new Lobby.Vector3()).__assign(__p.bb_pos + 8, __p.bb); } }
  public Lobby.Vector3 Rotation { get { return (new Lobby.Vector3()).__assign(__p.bb_pos + 20, __p.bb); } }
  public Lobby.Vector3 Scale { get { return (new Lobby.Vector3()).__assign(__p.bb_pos + 32, __p.bb); } }

  public static Offset<Lobby.TreasureBoxData> CreateTreasureBoxData(FlatBufferBuilder builder, int BoxID, bool IsOpened, float Location_X, float Location_Y, float Location_Z, float Rotation_X, float Rotation_Y, float Rotation_Z, float Scale_X, float Scale_Y, float Scale_Z) {
    builder.Prep(4, 44);
    builder.Prep(4, 12);
    builder.PutFloat(Scale_Z);
    builder.PutFloat(Scale_Y);
    builder.PutFloat(Scale_X);
    builder.Prep(4, 12);
    builder.PutFloat(Rotation_Z);
    builder.PutFloat(Rotation_Y);
    builder.PutFloat(Rotation_X);
    builder.Prep(4, 12);
    builder.PutFloat(Location_Z);
    builder.PutFloat(Location_Y);
    builder.PutFloat(Location_X);
    builder.Pad(3);
    builder.PutBool(IsOpened);
    builder.PutInt(BoxID);
    return new Offset<Lobby.TreasureBoxData>(builder.Offset);
  }
  public TreasureBoxDataT UnPack() {
    var _o = new TreasureBoxDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TreasureBoxDataT _o) {
    _o.BoxID = this.BoxID;
    _o.IsOpened = this.IsOpened;
    _o.Location = this.Location.UnPack();
    _o.Rotation = this.Rotation.UnPack();
    _o.Scale = this.Scale.UnPack();
  }
  public static Offset<Lobby.TreasureBoxData> Pack(FlatBufferBuilder builder, TreasureBoxDataT _o) {
    if (_o == null) return default(Offset<Lobby.TreasureBoxData>);
    var _Location_X = _o.Location.X;
    var _Location_Y = _o.Location.Y;
    var _Location_Z = _o.Location.Z;
    var _Rotation_X = _o.Rotation.X;
    var _Rotation_Y = _o.Rotation.Y;
    var _Rotation_Z = _o.Rotation.Z;
    var _Scale_X = _o.Scale.X;
    var _Scale_Y = _o.Scale.Y;
    var _Scale_Z = _o.Scale.Z;
    return CreateTreasureBoxData(
      builder,
      _o.BoxID,
      _o.IsOpened,
      _Location_X,
      _Location_Y,
      _Location_Z,
      _Rotation_X,
      _Rotation_Y,
      _Rotation_Z,
      _Scale_X,
      _Scale_Y,
      _Scale_Z);
  }
}

public class TreasureBoxDataT
{
  public int BoxID { get; set; }
  public bool IsOpened { get; set; }
  public Lobby.Vector3T Location { get; set; }
  public Lobby.Vector3T Rotation { get; set; }
  public Lobby.Vector3T Scale { get; set; }

  public TreasureBoxDataT() {
    this.BoxID = 0;
    this.IsOpened = false;
    this.Location = new Lobby.Vector3T();
    this.Rotation = new Lobby.Vector3T();
    this.Scale = new Lobby.Vector3T();
  }
}


}
