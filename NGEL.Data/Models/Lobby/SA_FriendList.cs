// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_FriendList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_FriendList GetRootAsSA_FriendList(ByteBuffer _bb) { return GetRootAsSA_FriendList(_bb, new SA_FriendList()); }
  public static SA_FriendList GetRootAsSA_FriendList(ByteBuffer _bb, SA_FriendList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_FriendList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.FriendData? FriendList(int j) { int o = __p.__offset(4); return o != 0 ? (Lobby.FriendData?)(new Lobby.FriendData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FriendListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Lobby.SA_FriendList> CreateSA_FriendList(FlatBufferBuilder builder,
      VectorOffset FriendListOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SA_FriendList.AddFriendList(builder, FriendListOffset);
    return SA_FriendList.EndSA_FriendList(builder);
  }

  public static void StartSA_FriendList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddFriendList(FlatBufferBuilder builder, VectorOffset FriendListOffset) { builder.AddOffset(0, FriendListOffset.Value, 0); }
  public static VectorOffset CreateFriendListVector(FlatBufferBuilder builder, Offset<Lobby.FriendData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFriendListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.FriendData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFriendListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.FriendData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFriendListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.FriendData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFriendListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Lobby.SA_FriendList> EndSA_FriendList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_FriendList>(o);
  }
  public SA_FriendListT UnPack() {
    var _o = new SA_FriendListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_FriendListT _o) {
    _o.FriendList = new List<Lobby.FriendDataT>();
    for (var _j = 0; _j < this.FriendListLength; ++_j) {_o.FriendList.Add(this.FriendList(_j).HasValue ? this.FriendList(_j).Value.UnPack() : null);}
  }
  public static Offset<Lobby.SA_FriendList> Pack(FlatBufferBuilder builder, SA_FriendListT _o) {
    if (_o == null) return default(Offset<Lobby.SA_FriendList>);
    var _FriendList = default(VectorOffset);
    if (_o.FriendList != null) {
      var __FriendList = new Offset<Lobby.FriendData>[_o.FriendList.Count];
      for (var _j = 0; _j < __FriendList.Length; ++_j) { __FriendList[_j] = Lobby.FriendData.Pack(builder, _o.FriendList[_j]); }
      _FriendList = CreateFriendListVector(builder, __FriendList);
    }
    return CreateSA_FriendList(
      builder,
      _FriendList);
  }
}

public class SA_FriendListT
{
  public List<Lobby.FriendDataT> FriendList { get; set; }

  public SA_FriendListT() {
    this.FriendList = null;
  }
}


}
