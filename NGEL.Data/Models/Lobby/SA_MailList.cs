// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_MailList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_MailList GetRootAsSA_MailList(ByteBuffer _bb) { return GetRootAsSA_MailList(_bb, new SA_MailList()); }
  public static SA_MailList GetRootAsSA_MailList(ByteBuffer _bb, SA_MailList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_MailList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsBM { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Lobby.MailInfo? AddMailList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.MailInfo?)(new Lobby.MailInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int AddMailListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public long DeletedMailIDList(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int DeletedMailIDListLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetDeletedMailIDListBytes() { return __p.__vector_as_span<long>(8, 8); }
#else
  public ArraySegment<byte>? GetDeletedMailIDListBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public long[] GetDeletedMailIDListArray() { return __p.__vector_as_array<long>(8); }

  public static Offset<Lobby.SA_MailList> CreateSA_MailList(FlatBufferBuilder builder,
      bool IsBM = false,
      VectorOffset AddMailListOffset = default(VectorOffset),
      VectorOffset DeletedMailIDListOffset = default(VectorOffset)) {
    builder.StartTable(3);
    SA_MailList.AddDeletedMailIDList(builder, DeletedMailIDListOffset);
    SA_MailList.AddAddMailList(builder, AddMailListOffset);
    SA_MailList.AddIsBM(builder, IsBM);
    return SA_MailList.EndSA_MailList(builder);
  }

  public static void StartSA_MailList(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddIsBM(FlatBufferBuilder builder, bool IsBM) { builder.AddBool(0, IsBM, false); }
  public static void AddAddMailList(FlatBufferBuilder builder, VectorOffset AddMailListOffset) { builder.AddOffset(1, AddMailListOffset.Value, 0); }
  public static VectorOffset CreateAddMailListVector(FlatBufferBuilder builder, Offset<Lobby.MailInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAddMailListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.MailInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddMailListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.MailInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAddMailListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.MailInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAddMailListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDeletedMailIDList(FlatBufferBuilder builder, VectorOffset DeletedMailIDListOffset) { builder.AddOffset(2, DeletedMailIDListOffset.Value, 0); }
  public static VectorOffset CreateDeletedMailIDListVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDeletedMailIDListVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDeletedMailIDListVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDeletedMailIDListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDeletedMailIDListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<Lobby.SA_MailList> EndSA_MailList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_MailList>(o);
  }
  public SA_MailListT UnPack() {
    var _o = new SA_MailListT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_MailListT _o) {
    _o.IsBM = this.IsBM;
    _o.AddMailList = new List<Lobby.MailInfoT>();
    for (var _j = 0; _j < this.AddMailListLength; ++_j) {_o.AddMailList.Add(this.AddMailList(_j).HasValue ? this.AddMailList(_j).Value.UnPack() : null);}
    _o.DeletedMailIDList = new List<long>();
    for (var _j = 0; _j < this.DeletedMailIDListLength; ++_j) {_o.DeletedMailIDList.Add(this.DeletedMailIDList(_j));}
  }
  public static Offset<Lobby.SA_MailList> Pack(FlatBufferBuilder builder, SA_MailListT _o) {
    if (_o == null) return default(Offset<Lobby.SA_MailList>);
    var _AddMailList = default(VectorOffset);
    if (_o.AddMailList != null) {
      var __AddMailList = new Offset<Lobby.MailInfo>[_o.AddMailList.Count];
      for (var _j = 0; _j < __AddMailList.Length; ++_j) { __AddMailList[_j] = Lobby.MailInfo.Pack(builder, _o.AddMailList[_j]); }
      _AddMailList = CreateAddMailListVector(builder, __AddMailList);
    }
    var _DeletedMailIDList = default(VectorOffset);
    if (_o.DeletedMailIDList != null) {
      var __DeletedMailIDList = _o.DeletedMailIDList.ToArray();
      _DeletedMailIDList = CreateDeletedMailIDListVector(builder, __DeletedMailIDList);
    }
    return CreateSA_MailList(
      builder,
      _o.IsBM,
      _AddMailList,
      _DeletedMailIDList);
  }
}

public class SA_MailListT
{
  public bool IsBM { get; set; }
  public List<Lobby.MailInfoT> AddMailList { get; set; }
  public List<long> DeletedMailIDList { get; set; }

  public SA_MailListT() {
    this.IsBM = false;
    this.AddMailList = null;
    this.DeletedMailIDList = null;
  }
}


}
