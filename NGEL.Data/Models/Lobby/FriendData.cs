// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FriendData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static FriendData GetRootAsFriendData(ByteBuffer _bb) { return GetRootAsFriendData(_bb, new FriendData()); }
  public static FriendData GetRootAsFriendData(ByteBuffer _bb, FriendData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FriendData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string NickName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNickNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNickNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNickNameArray() { return __p.__vector_as_array<byte>(6); }
  public int ProfileIconID { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProfileBGID { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EntitlementID { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Lobby.EUserState UserState { get { int o = __p.__offset(14); return o != 0 ? (Lobby.EUserState)__p.bb.Get(o + __p.bb_pos) : Lobby.EUserState.None; } }
  public bool IsActive { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int LogoutAt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.FriendData> CreateFriendData(FlatBufferBuilder builder,
      int UID = 0,
      StringOffset NickNameOffset = default(StringOffset),
      int ProfileIconID = 0,
      int ProfileBGID = 0,
      int EntitlementID = 0,
      Lobby.EUserState UserState = Lobby.EUserState.None,
      bool IsActive = false,
      int LogoutAt = 0) {
    builder.StartTable(8);
    FriendData.AddLogoutAt(builder, LogoutAt);
    FriendData.AddEntitlementID(builder, EntitlementID);
    FriendData.AddProfileBGID(builder, ProfileBGID);
    FriendData.AddProfileIconID(builder, ProfileIconID);
    FriendData.AddNickName(builder, NickNameOffset);
    FriendData.AddUID(builder, UID);
    FriendData.AddIsActive(builder, IsActive);
    FriendData.AddUserState(builder, UserState);
    return FriendData.EndFriendData(builder);
  }

  public static void StartFriendData(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddUID(FlatBufferBuilder builder, int UID) { builder.AddInt(0, UID, 0); }
  public static void AddNickName(FlatBufferBuilder builder, StringOffset NickNameOffset) { builder.AddOffset(1, NickNameOffset.Value, 0); }
  public static void AddProfileIconID(FlatBufferBuilder builder, int ProfileIconID) { builder.AddInt(2, ProfileIconID, 0); }
  public static void AddProfileBGID(FlatBufferBuilder builder, int ProfileBGID) { builder.AddInt(3, ProfileBGID, 0); }
  public static void AddEntitlementID(FlatBufferBuilder builder, int EntitlementID) { builder.AddInt(4, EntitlementID, 0); }
  public static void AddUserState(FlatBufferBuilder builder, Lobby.EUserState UserState) { builder.AddByte(5, (byte)UserState, 0); }
  public static void AddIsActive(FlatBufferBuilder builder, bool IsActive) { builder.AddBool(6, IsActive, false); }
  public static void AddLogoutAt(FlatBufferBuilder builder, int LogoutAt) { builder.AddInt(7, LogoutAt, 0); }
  public static Offset<Lobby.FriendData> EndFriendData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.FriendData>(o);
  }
  public FriendDataT UnPack() {
    var _o = new FriendDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FriendDataT _o) {
    _o.UID = this.UID;
    _o.NickName = this.NickName;
    _o.ProfileIconID = this.ProfileIconID;
    _o.ProfileBGID = this.ProfileBGID;
    _o.EntitlementID = this.EntitlementID;
    _o.UserState = this.UserState;
    _o.IsActive = this.IsActive;
    _o.LogoutAt = this.LogoutAt;
  }
  public static Offset<Lobby.FriendData> Pack(FlatBufferBuilder builder, FriendDataT _o) {
    if (_o == null) return default(Offset<Lobby.FriendData>);
    var _NickName = _o.NickName == null ? default(StringOffset) : builder.CreateString(_o.NickName);
    return CreateFriendData(
      builder,
      _o.UID,
      _NickName,
      _o.ProfileIconID,
      _o.ProfileBGID,
      _o.EntitlementID,
      _o.UserState,
      _o.IsActive,
      _o.LogoutAt);
  }
}

public class FriendDataT
{
  public int UID { get; set; }
  public string NickName { get; set; }
  public int ProfileIconID { get; set; }
  public int ProfileBGID { get; set; }
  public int EntitlementID { get; set; }
  public Lobby.EUserState UserState { get; set; }
  public bool IsActive { get; set; }
  public int LogoutAt { get; set; }

  public FriendDataT() {
    this.UID = 0;
    this.NickName = null;
    this.ProfileIconID = 0;
    this.ProfileBGID = 0;
    this.EntitlementID = 0;
    this.UserState = Lobby.EUserState.None;
    this.IsActive = false;
    this.LogoutAt = 0;
  }
}


}
