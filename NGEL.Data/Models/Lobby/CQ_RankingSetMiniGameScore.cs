// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CQ_RankingSetMiniGameScore : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static CQ_RankingSetMiniGameScore GetRootAsCQ_RankingSetMiniGameScore(ByteBuffer _bb) { return GetRootAsCQ_RankingSetMiniGameScore(_bb, new CQ_RankingSetMiniGameScore()); }
  public static CQ_RankingSetMiniGameScore GetRootAsCQ_RankingSetMiniGameScore(ByteBuffer _bb, CQ_RankingSetMiniGameScore obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CQ_RankingSetMiniGameScore __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.EContentsType ContentsType { get { int o = __p.__offset(4); return o != 0 ? (Lobby.EContentsType)__p.bb.Get(o + __p.bb_pos) : Lobby.EContentsType.None; } }
  public int Score { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExtraValue { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Lobby.CQ_RankingSetMiniGameScore> CreateCQ_RankingSetMiniGameScore(FlatBufferBuilder builder,
      Lobby.EContentsType ContentsType = Lobby.EContentsType.None,
      int Score = 0,
      int ExtraValue = 0) {
    builder.StartTable(3);
    CQ_RankingSetMiniGameScore.AddExtraValue(builder, ExtraValue);
    CQ_RankingSetMiniGameScore.AddScore(builder, Score);
    CQ_RankingSetMiniGameScore.AddContentsType(builder, ContentsType);
    return CQ_RankingSetMiniGameScore.EndCQ_RankingSetMiniGameScore(builder);
  }

  public static void StartCQ_RankingSetMiniGameScore(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddContentsType(FlatBufferBuilder builder, Lobby.EContentsType ContentsType) { builder.AddByte(0, (byte)ContentsType, 0); }
  public static void AddScore(FlatBufferBuilder builder, int Score) { builder.AddInt(1, Score, 0); }
  public static void AddExtraValue(FlatBufferBuilder builder, int ExtraValue) { builder.AddInt(2, ExtraValue, 0); }
  public static Offset<Lobby.CQ_RankingSetMiniGameScore> EndCQ_RankingSetMiniGameScore(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.CQ_RankingSetMiniGameScore>(o);
  }
  public CQ_RankingSetMiniGameScoreT UnPack() {
    var _o = new CQ_RankingSetMiniGameScoreT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CQ_RankingSetMiniGameScoreT _o) {
    _o.ContentsType = this.ContentsType;
    _o.Score = this.Score;
    _o.ExtraValue = this.ExtraValue;
  }
  public static Offset<Lobby.CQ_RankingSetMiniGameScore> Pack(FlatBufferBuilder builder, CQ_RankingSetMiniGameScoreT _o) {
    if (_o == null) return default(Offset<Lobby.CQ_RankingSetMiniGameScore>);
    return CreateCQ_RankingSetMiniGameScore(
      builder,
      _o.ContentsType,
      _o.Score,
      _o.ExtraValue);
  }
}

public class CQ_RankingSetMiniGameScoreT
{
  public Lobby.EContentsType ContentsType { get; set; }
  public int Score { get; set; }
  public int ExtraValue { get; set; }

  public CQ_RankingSetMiniGameScoreT() {
    this.ContentsType = Lobby.EContentsType.None;
    this.Score = 0;
    this.ExtraValue = 0;
  }
}


}
