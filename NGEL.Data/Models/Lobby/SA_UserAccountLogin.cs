// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Lobby
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SA_UserAccountLogin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_1_20(); }
  public static SA_UserAccountLogin GetRootAsSA_UserAccountLogin(ByteBuffer _bb) { return GetRootAsSA_UserAccountLogin(_bb, new SA_UserAccountLogin()); }
  public static SA_UserAccountLogin GetRootAsSA_UserAccountLogin(ByteBuffer _bb, SA_UserAccountLogin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SA_UserAccountLogin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Lobby.UserAccountData? UserAccount { get { int o = __p.__offset(4); return o != 0 ? (Lobby.UserAccountData?)(new Lobby.UserAccountData()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Lobby.TableVersionData? TableVersionList(int j) { int o = __p.__offset(6); return o != 0 ? (Lobby.TableVersionData?)(new Lobby.TableVersionData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TableVersionListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string LobbyID { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLobbyIDBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetLobbyIDBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetLobbyIDArray() { return __p.__vector_as_array<byte>(8); }
  public string AccountID { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAccountIDBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetAccountIDBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAccountIDArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<Lobby.SA_UserAccountLogin> CreateSA_UserAccountLogin(FlatBufferBuilder builder,
      Offset<Lobby.UserAccountData> UserAccountOffset = default(Offset<Lobby.UserAccountData>),
      VectorOffset TableVersionListOffset = default(VectorOffset),
      StringOffset LobbyIDOffset = default(StringOffset),
      StringOffset AccountIDOffset = default(StringOffset)) {
    builder.StartTable(4);
    SA_UserAccountLogin.AddAccountID(builder, AccountIDOffset);
    SA_UserAccountLogin.AddLobbyID(builder, LobbyIDOffset);
    SA_UserAccountLogin.AddTableVersionList(builder, TableVersionListOffset);
    SA_UserAccountLogin.AddUserAccount(builder, UserAccountOffset);
    return SA_UserAccountLogin.EndSA_UserAccountLogin(builder);
  }

  public static void StartSA_UserAccountLogin(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddUserAccount(FlatBufferBuilder builder, Offset<Lobby.UserAccountData> UserAccountOffset) { builder.AddOffset(0, UserAccountOffset.Value, 0); }
  public static void AddTableVersionList(FlatBufferBuilder builder, VectorOffset TableVersionListOffset) { builder.AddOffset(1, TableVersionListOffset.Value, 0); }
  public static VectorOffset CreateTableVersionListVector(FlatBufferBuilder builder, Offset<Lobby.TableVersionData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTableVersionListVectorBlock(FlatBufferBuilder builder, Offset<Lobby.TableVersionData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTableVersionListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Lobby.TableVersionData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTableVersionListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Lobby.TableVersionData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTableVersionListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLobbyID(FlatBufferBuilder builder, StringOffset LobbyIDOffset) { builder.AddOffset(2, LobbyIDOffset.Value, 0); }
  public static void AddAccountID(FlatBufferBuilder builder, StringOffset AccountIDOffset) { builder.AddOffset(3, AccountIDOffset.Value, 0); }
  public static Offset<Lobby.SA_UserAccountLogin> EndSA_UserAccountLogin(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Lobby.SA_UserAccountLogin>(o);
  }
  public SA_UserAccountLoginT UnPack() {
    var _o = new SA_UserAccountLoginT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SA_UserAccountLoginT _o) {
    _o.UserAccount = this.UserAccount.HasValue ? this.UserAccount.Value.UnPack() : null;
    _o.TableVersionList = new List<Lobby.TableVersionDataT>();
    for (var _j = 0; _j < this.TableVersionListLength; ++_j) {_o.TableVersionList.Add(this.TableVersionList(_j).HasValue ? this.TableVersionList(_j).Value.UnPack() : null);}
    _o.LobbyID = this.LobbyID;
    _o.AccountID = this.AccountID;
  }
  public static Offset<Lobby.SA_UserAccountLogin> Pack(FlatBufferBuilder builder, SA_UserAccountLoginT _o) {
    if (_o == null) return default(Offset<Lobby.SA_UserAccountLogin>);
    var _UserAccount = _o.UserAccount == null ? default(Offset<Lobby.UserAccountData>) : Lobby.UserAccountData.Pack(builder, _o.UserAccount);
    var _TableVersionList = default(VectorOffset);
    if (_o.TableVersionList != null) {
      var __TableVersionList = new Offset<Lobby.TableVersionData>[_o.TableVersionList.Count];
      for (var _j = 0; _j < __TableVersionList.Length; ++_j) { __TableVersionList[_j] = Lobby.TableVersionData.Pack(builder, _o.TableVersionList[_j]); }
      _TableVersionList = CreateTableVersionListVector(builder, __TableVersionList);
    }
    var _LobbyID = _o.LobbyID == null ? default(StringOffset) : builder.CreateString(_o.LobbyID);
    var _AccountID = _o.AccountID == null ? default(StringOffset) : builder.CreateString(_o.AccountID);
    return CreateSA_UserAccountLogin(
      builder,
      _UserAccount,
      _TableVersionList,
      _LobbyID,
      _AccountID);
  }
}

public class SA_UserAccountLoginT
{
  public Lobby.UserAccountDataT UserAccount { get; set; }
  public List<Lobby.TableVersionDataT> TableVersionList { get; set; }
  public string LobbyID { get; set; }
  public string AccountID { get; set; }

  public SA_UserAccountLoginT() {
    this.UserAccount = null;
    this.TableVersionList = null;
    this.LobbyID = null;
    this.AccountID = null;
  }
}


}
